

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Dec 13 17:19:45 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    77                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    78                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    79   000000                     
    80                           ; Version 2.35
    81                           ; Generated 05/05/2021 GMT
    82                           ; 
    83                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution. Publication is not required when
    97                           ;        this file is used in an embedded application.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F67K40 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115   000000                     _TX4REG	set	3812
   116   000000                     _RC4STAbits	set	3815
   117   000000                     _SP4BRGH	set	3814
   118   000000                     _TRISEbits	set	3973
   119   000000                     _TRISGbits	set	3975
   120   000000                     _LATEbits	set	3965
   121   000000                     _LATGbits	set	3967
   122   000000                     _TRISFbits	set	3974
   123   000000                     _LATFbits	set	3966
   124   000000                     _TRISHbits	set	3976
   125   000000                     _LATHbits	set	3968
   126   000000                     _TRISDbits	set	3972
   127   000000                     _SSP2CON2bits	set	3802
   128   000000                     _RX4PPS	set	3605
   129   000000                     _SSP2CLKPPS	set	3612
   130   000000                     _SSP2DATPPS	set	3613
   131   000000                     _ANSELDbits	set	3751
   132   000000                     _SSP2ADD	set	3798
   133   000000                     _SSP2CON1bits	set	3801
   134   000000                     _LATDbits	set	3964
   135   000000                     _RC4REG	set	3811
   136   000000                     _SP4BRGL	set	3813
   137   000000                     _TX4STAbits	set	3816
   138   000000                     _BAUD4CONbits	set	3817
   139   000000                     _LATAbits	set	3961
   140   000000                     _SSP2CON2	set	3802
   141   000000                     _CCPR4H	set	3873
   142   000000                     _CCPR3H	set	3877
   143   000000                     _SSP2STAT	set	3800
   144   000000                     _ANSELFbits	set	3764
   145   000000                     _SSP2BUF	set	3797
   146   000000                     _IPR4bits	set	3619
   147   000000                     _PIE4bits	set	3629
   148   000000                     _RC0PPS	set	3682
   149   000000                     _RC7PPS	set	3689
   150   000000                     _RD5PPS	set	3695
   151   000000                     _RE2PPS	set	3700
   152   000000                     _RD6PPS	set	3696
   153   000000                     _TRISCbits	set	3971
   154   000000                     _TRISAbits	set	3969
   155   000000                     _PORTFbits	set	3982
   156   000000                     _LATCbits	set	3963
   157   000000                     _T2PR	set	4028
   158   000000                     _T2CONbits	set	4029
   159   000000                     _CCPR2H	set	4006
   160   000000                     _CCPR1H	set	4010
   161   000000                     _RE4PPS	set	3702
   162   000000                     _RG6PPS	set	3720
   163   000000                     _INTCONbits	set	4082
   164   000000                     _T2CLKCONbits	set	4031
   165   000000                     _T2HLTbits	set	4030
   166   000000                     _CCP1CONbits	set	4011
   167   000000                     _CCPTMRS0bits	set	4013
   168   000000                     _CCP2CONbits	set	4007
   169   000000                     _CCP3CONbits	set	3878
   170   000000                     _CCP4CONbits	set	3874
   171   000000                     _PIR4bits	set	3639
   172                           
   173                           	psect	smallconst
   174   000E00                     __psmallconst:
   175                           	callstack 0
   176   000E00  00                 	db	0
   177   000E01                     STR_1:
   178   000E01  20                 	db	32
   179   000E02  20                 	db	32
   180   000E03  43                 	db	67	;'C'
   181   000E04  3A                 	db	58	;':'
   182   000E05  20                 	db	32
   183   000E06  25                 	db	37
   184   000E07  64                 	db	100	;'d'
   185   000E08  20                 	db	32
   186   000E09  20                 	db	32
   187   000E0A  25                 	db	37
   188   000E0B  64                 	db	100	;'d'
   189   000E0C  20                 	db	32
   190   000E0D  20                 	db	32
   191   000E0E  25                 	db	37
   192   000E0F  66                 	db	102	;'f'
   193   000E10  20                 	db	32
   194   000E11  0D                 	db	13
   195   000E12  00                 	db	0
   196   000E13  25                 	db	37
   197   000E14  64                 	db	100	;'d'
   198   000E15  2C                 	db	44
   199   000E16  25                 	db	37
   200   000E17  64                 	db	100	;'d'
   201   000E18  2C                 	db	44
   202   000E19  25                 	db	37
   203   000E1A  64                 	db	100	;'d'
   204   000E1B  2C                 	db	44
   205   000E1C  25                 	db	37
   206   000E1D  64                 	db	100	;'d'
   207   000E1E  20                 	db	32
   208   000E1F  0D                 	db	13
   209   000E20  0A                 	db	10
   210   000E21  00                 	db	0
   211   000E22                     STR_3:
   212   000E22  69                 	db	105	;'i'
   213   000E23  6E                 	db	110	;'n'
   214   000E24  66                 	db	102	;'f'
   215   000E25  00                 	db	0
   216   000E26                     STR_6:
   217   000E26  6E                 	db	110	;'n'
   218   000E27  61                 	db	97	;'a'
   219   000E28  6E                 	db	110	;'n'
   220   000E29  00                 	db	0
   221   000E2A  00                 	db	0	; dummy byte at the end
   222   000000                     
   223                           ; #config settings
   224                           
   225                           	psect	cinit
   226   004F18                     __pcinit:
   227                           	callstack 0
   228   004F18                     start_initialization:
   229                           	callstack 0
   230   004F18                     __initialization:
   231                           	callstack 0
   232                           
   233                           ; Clear objects allocated to BANK1 (140 bytes)
   234   004F18  EE01  F000         	lfsr	0,__pbssBANK1
   235   004F1C  0E8C               	movlw	140
   236   004F1E                     clear_0:
   237   004F1E  6AEE               	clrf	postinc0,c
   238   004F20  06E8               	decf	wreg,f,c
   239   004F22  E1FD               	bnz	clear_0
   240                           
   241                           ; Clear objects allocated to BANK0 (33 bytes)
   242   004F24  EE00  F0D7         	lfsr	0,__pbssBANK0
   243   004F28  0E21               	movlw	33
   244   004F2A                     clear_1:
   245   004F2A  6AEE               	clrf	postinc0,c
   246   004F2C  06E8               	decf	wreg,f,c
   247   004F2E  E1FD               	bnz	clear_1
   248                           
   249                           ; Clear objects allocated to COMRAM (4 bytes)
   250   004F30  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   251   004F32  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   252   004F34  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   253   004F36  6A57               	clrf	__pbssCOMRAM& (0+255),c
   254   004F38                     end_of_initialization:
   255                           	callstack 0
   256   004F38                     __end_of__initialization:
   257                           	callstack 0
   258   004F38  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   259   004F3A  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   260   004F3C  0100               	movlb	0
   261   004F3E  EF6C  F01A         	goto	_main	;jump to C main() function
   262                           
   263                           	psect	bssCOMRAM
   264   000057                     __pbssCOMRAM:
   265                           	callstack 0
   266   000057                     _TxBufReadCnt:
   267                           	callstack 0
   268   000057                     	ds	1
   269   000058                     _TxBufWriteCnt:
   270                           	callstack 0
   271   000058                     	ds	1
   272   000059                     _RxBufReadCnt:
   273                           	callstack 0
   274   000059                     	ds	1
   275   00005A                     _RxBufWriteCnt:
   276                           	callstack 0
   277   00005A                     	ds	1
   278                           
   279                           	psect	bssBANK0
   280   0000D7                     __pbssBANK0:
   281                           	callstack 0
   282   0000D7                     _EUSART4RXbuf:
   283                           	callstack 0
   284   0000D7                     	ds	20
   285   0000EB                     floorf@F526:
   286                           	callstack 0
   287   0000EB                     	ds	4
   288   0000EF                     ___fpclassifyf@F465:
   289                           	callstack 0
   290   0000EF                     	ds	4
   291   0000F3                     _width:
   292                           	callstack 0
   293   0000F3                     	ds	2
   294   0000F5                     _prec:
   295                           	callstack 0
   296   0000F5                     	ds	2
   297   0000F7                     _flags:
   298                           	callstack 0
   299   0000F7                     	ds	1
   300                           
   301                           	psect	bssBANK1
   302   000100                     __pbssBANK1:
   303                           	callstack 0
   304   000100                     _EUSART4TXbuf:
   305                           	callstack 0
   306   000100                     	ds	60
   307   00013C                     _dbuf:
   308                           	callstack 0
   309   00013C                     	ds	80
   310                           
   311                           	psect	cstackBANK1
   312   00018C                     __pcstackBANK1:
   313                           	callstack 0
   314   00018C                     main@string4:
   315                           	callstack 0
   316                           
   317                           ; 20 bytes @ 0x0
   318   00018C                     	ds	20
   319   0001A0                     main@whiteC:
   320                           	callstack 0
   321                           
   322                           ; 4 bytes @ 0x14
   323   0001A0                     	ds	4
   324   0001A4                     main@clearRef:
   325                           	callstack 0
   326                           
   327                           ; 4 bytes @ 0x18
   328   0001A4                     	ds	4
   329   0001A8                     main@ambientRGBVal:
   330                           	callstack 0
   331                           
   332                           ; 8 bytes @ 0x1C
   333   0001A8                     	ds	8
   334   0001B0                     main@RGBVal:
   335                           	callstack 0
   336                           
   337                           ; 8 bytes @ 0x24
   338   0001B0                     	ds	8
   339   0001B8                     main@whiteRGBVal:
   340                           	callstack 0
   341                           
   342                           ; 8 bytes @ 0x2C
   343   0001B8                     	ds	8
   344   0001C0                     main@motorRight:
   345                           	callstack 0
   346                           
   347                           ; 9 bytes @ 0x34
   348   0001C0                     	ds	9
   349   0001C9                     main@motorLeft:
   350                           	callstack 0
   351                           
   352                           ; 9 bytes @ 0x3D
   353   0001C9                     	ds	9
   354                           
   355                           	psect	cstackBANK0
   356   000060                     __pcstackBANK0:
   357                           	callstack 0
   358   000060                     ??_floorf:
   359   000060                     colorDetect@clearRef:
   360                           	callstack 0
   361                           
   362                           ; 4 bytes @ 0x0
   363   000060                     	ds	4
   364   000064                     colorDetect@ambientRGBVal:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x4
   368   000064                     	ds	2
   369   000066                     colorDetect@whiteRGBVal:
   370                           	callstack 0
   371   000066                     floorf@m:
   372                           	callstack 0
   373                           
   374                           ; 4 bytes @ 0x6
   375   000066                     	ds	2
   376   000068                     colorDetect@mL:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x8
   380   000068                     	ds	2
   381   00006A                     colorDetect@mR:
   382                           	callstack 0
   383   00006A                     floorf@e:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0xA
   387   00006A                     	ds	2
   388   00006C                     colorDetect@whiteR:
   389                           	callstack 0
   390   00006C                     floorf@u:
   391                           	callstack 0
   392                           
   393                           ; 4 bytes @ 0xC
   394   00006C                     	ds	4
   395   000070                     efgtoa@fp:
   396                           	callstack 0
   397   000070                     colorDetect@whiteG:
   398                           	callstack 0
   399                           
   400                           ; 4 bytes @ 0x10
   401   000070                     	ds	2
   402   000072                     efgtoa@f:
   403                           	callstack 0
   404                           
   405                           ; 4 bytes @ 0x12
   406   000072                     	ds	2
   407   000074                     colorDetect@whiteB:
   408                           	callstack 0
   409                           
   410                           ; 4 bytes @ 0x14
   411   000074                     	ds	2
   412   000076                     efgtoa@c:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0x16
   416   000076                     	ds	1
   417   000077                     efgtoa@ne:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x17
   421   000077                     	ds	1
   422   000078                     colorDetect@ambientR:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x18
   426   000078                     	ds	1
   427   000079                     efgtoa@p:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x19
   431   000079                     	ds	1
   432   00007A                     colorDetect@ambientG:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x1A
   436   00007A                     	ds	1
   437   00007B                     efgtoa@t:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x1B
   441   00007B                     	ds	1
   442   00007C                     colorDetect@ambientB:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x1C
   446   00007C                     	ds	1
   447   00007D                     _efgtoa$2533:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x1D
   451   00007D                     	ds	1
   452   00007E                     colorDetect@RGBVal:
   453                           	callstack 0
   454                           
   455                           ; 8 bytes @ 0x1E
   456   00007E                     	ds	1
   457   00007F                     efgtoa@pp:
   458                           	callstack 0
   459                           
   460                           ; 1 bytes @ 0x1F
   461   00007F                     	ds	1
   462   000080                     efgtoa@mode:
   463                           	callstack 0
   464                           
   465                           ; 1 bytes @ 0x20
   466   000080                     	ds	1
   467   000081                     efgtoa@nmode:
   468                           	callstack 0
   469                           
   470                           ; 1 bytes @ 0x21
   471   000081                     	ds	1
   472   000082                     efgtoa@d:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x22
   476   000082                     	ds	2
   477   000084                     efgtoa@m:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x24
   481   000084                     	ds	2
   482   000086                     efgtoa@e:
   483                           	callstack 0
   484   000086                     colorDetect@redPrint:
   485                           	callstack 0
   486                           
   487                           ; 4 bytes @ 0x26
   488   000086                     	ds	2
   489   000088                     efgtoa@w:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x28
   493   000088                     	ds	2
   494   00008A                     colorDetect@greenPrint:
   495                           	callstack 0
   496   00008A                     efgtoa@ou:
   497                           	callstack 0
   498                           
   499                           ; 4 bytes @ 0x2A
   500   00008A                     	ds	4
   501   00008E                     efgtoa@i:
   502                           	callstack 0
   503   00008E                     colorDetect@bluePrint:
   504                           	callstack 0
   505                           
   506                           ; 4 bytes @ 0x2E
   507   00008E                     	ds	2
   508   000090                     efgtoa@h:
   509                           	callstack 0
   510                           
   511                           ; 4 bytes @ 0x30
   512   000090                     	ds	4
   513   000094                     efgtoa@l:
   514                           	callstack 0
   515                           
   516                           ; 4 bytes @ 0x34
   517   000094                     	ds	4
   518   000098                     efgtoa@sign:
   519                           	callstack 0
   520                           
   521                           ; 1 bytes @ 0x38
   522   000098                     	ds	1
   523   000099                     efgtoa@g:
   524                           	callstack 0
   525                           
   526                           ; 4 bytes @ 0x39
   527   000099                     	ds	4
   528   00009D                     efgtoa@n:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x3D
   532   00009D                     	ds	2
   533   00009F                     efgtoa@u:
   534                           	callstack 0
   535                           
   536                           ; 4 bytes @ 0x3F
   537   00009F                     	ds	4
   538   0000A3                     vfpfcnvrt@fp:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x43
   542   0000A3                     	ds	2
   543   0000A5                     vfpfcnvrt@fmt:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x45
   547   0000A5                     	ds	2
   548   0000A7                     vfpfcnvrt@ap:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x47
   552   0000A7                     	ds	2
   553   0000A9                     vfpfcnvrt@convarg:
   554                           	callstack 0
   555                           
   556                           ; 8 bytes @ 0x49
   557   0000A9                     	ds	8
   558   0000B1                     vfpfcnvrt@c:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0x51
   562   0000B1                     	ds	1
   563   0000B2                     vfpfcnvrt@cp:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x52
   567   0000B2                     	ds	2
   568   0000B4                     ?_vfprintf:
   569                           	callstack 0
   570   0000B4                     vfprintf@fp:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x54
   574   0000B4                     	ds	2
   575   0000B6                     vfprintf@fmt:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x56
   579   0000B6                     	ds	2
   580   0000B8                     vfprintf@ap:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0x58
   584   0000B8                     	ds	2
   585   0000BA                     vfprintf@cfmt:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x5A
   589   0000BA                     	ds	2
   590   0000BC                     ?_sprintf:
   591                           	callstack 0
   592   0000BC                     sprintf@s:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x5C
   596   0000BC                     	ds	2
   597   0000BE                     sprintf@fmt:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x5E
   601   0000BE                     	ds	10
   602   0000C8                     sprintf@ap:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x68
   606   0000C8                     	ds	2
   607   0000CA                     sprintf@f:
   608                           	callstack 0
   609                           
   610                           ; 11 bytes @ 0x6A
   611   0000CA                     	ds	11
   612   0000D5                     ??_main:
   613                           
   614                           ; 1 bytes @ 0x75
   615   0000D5                     	ds	2
   616                           
   617                           	psect	cstackCOMRAM
   618   000001                     __pcstackCOMRAM:
   619                           	callstack 0
   620   000001                     ??_getCharFromTxBuf:
   621   000001                     putCharToRxBuf@byte:
   622                           	callstack 0
   623   000001                     
   624                           ; 1 bytes @ 0x0
   625   000001                     	ds	2
   626   000003                     ??_HighISR:
   627                           
   628                           ; 1 bytes @ 0x2
   629   000003                     	ds	2
   630   000005                     ??_I2C_2_Master_Idle:
   631   000005                     ?___fpclassifyf:
   632                           	callstack 0
   633   000005                     ?___wmul:
   634                           	callstack 0
   635   000005                     ?___fladd:
   636                           	callstack 0
   637   000005                     ?_labs:
   638                           	callstack 0
   639   000005                     ?___flneg:
   640                           	callstack 0
   641   000005                     ?___fltol:
   642                           	callstack 0
   643   000005                     ?___xxtofl:
   644                           	callstack 0
   645   000005                     ?___aodiv:
   646                           	callstack 0
   647   000005                     ?___aomod:
   648                           	callstack 0
   649   000005                     putCharToTxBuf@byte:
   650                           	callstack 0
   651   000005                     initDCmotorsPWM@PWMperiod:
   652                           	callstack 0
   653   000005                     DCmotorsInit@mL:
   654                           	callstack 0
   655   000005                     ___wmul@multiplier:
   656                           	callstack 0
   657   000005                     memcpy@d1:
   658                           	callstack 0
   659   000005                     fputc@c:
   660                           	callstack 0
   661   000005                     strcpy@dest:
   662                           	callstack 0
   663   000005                     ___fleq@ff1:
   664                           	callstack 0
   665   000005                     ___flneg@f1:
   666                           	callstack 0
   667   000005                     ___fltol@f1:
   668                           	callstack 0
   669   000005                     ___fladd@b:
   670                           	callstack 0
   671   000005                     ___xxtofl@val:
   672                           	callstack 0
   673   000005                     ___fpclassifyf@x:
   674                           	callstack 0
   675   000005                     labs@a:
   676                           	callstack 0
   677   000005                     ___aodiv@dividend:
   678                           	callstack 0
   679   000005                     ___aomod@dividend:
   680                           	callstack 0
   681                           
   682                           ; 8 bytes @ 0x4
   683   000005                     	ds	1
   684   000006                     ??_I2C_2_Master_Read:
   685   000006                     I2C_2_Master_Write@data_byte:
   686                           	callstack 0
   687   000006                     TxBufferedString@string:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x5
   691   000006                     	ds	1
   692   000007                     color_writetoaddr@value:
   693                           	callstack 0
   694   000007                     I2C_2_Master_Read@ack:
   695                           	callstack 0
   696   000007                     DCmotorsInit@mR:
   697                           	callstack 0
   698   000007                     ___wmul@multiplicand:
   699                           	callstack 0
   700   000007                     memcpy@s1:
   701                           	callstack 0
   702   000007                     fputc@fp:
   703                           	callstack 0
   704   000007                     strcpy@src:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x6
   708   000007                     	ds	1
   709   000008                     color_writetoaddr@address:
   710                           	callstack 0
   711   000008                     I2C_2_Master_Read@tmp:
   712                           	callstack 0
   713                           
   714                           ; 1 bytes @ 0x7
   715   000008                     	ds	1
   716   000009                     ??_fputc:
   717   000009                     ??___fpclassifyf:
   718   000009                     ??_labs:
   719   000009                     ??_color_click_init:
   720   000009                     ??___fltol:
   721   000009                     ??___xxtofl:
   722   000009                     ?_color_read_Red:
   723                           	callstack 0
   724   000009                     ?_color_read_Green:
   725                           	callstack 0
   726   000009                     ?_color_read_Blue:
   727                           	callstack 0
   728   000009                     ?_color_read_Clear:
   729                           	callstack 0
   730   000009                     ___wmul@product:
   731                           	callstack 0
   732   000009                     memcpy@n:
   733                           	callstack 0
   734   000009                     strcpy@s:
   735                           	callstack 0
   736   000009                     ___fleq@ff2:
   737                           	callstack 0
   738   000009                     ___fladd@a:
   739                           	callstack 0
   740                           
   741                           ; 4 bytes @ 0x8
   742   000009                     	ds	2
   743   00000B                     ??_color_read_Red:
   744   00000B                     ??_color_read_Green:
   745   00000B                     ??_color_read_Blue:
   746   00000B                     ??_color_read_Clear:
   747   00000B                     ?___lwdiv:
   748                           	callstack 0
   749   00000B                     ___lwdiv@dividend:
   750                           	callstack 0
   751   00000B                     memcpy@d:
   752                           	callstack 0
   753   00000B                     strcpy@d:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0xA
   757   00000B                     	ds	2
   758   00000D                     ??___fladd:
   759   00000D                     ??___fleq:
   760   00000D                     ___fltol@sign1:
   761                           	callstack 0
   762   00000D                     ___xxtofl@sign:
   763                           	callstack 0
   764   00000D                     ___lwdiv@divisor:
   765                           	callstack 0
   766   00000D                     ___fpclassifyf@e:
   767                           	callstack 0
   768   00000D                     memcpy@s:
   769                           	callstack 0
   770   00000D                     ___aodiv@divisor:
   771                           	callstack 0
   772   00000D                     ___aomod@divisor:
   773                           	callstack 0
   774                           
   775                           ; 8 bytes @ 0xC
   776   00000D                     	ds	1
   777   00000E                     ___fltol@exp1:
   778                           	callstack 0
   779   00000E                     ___xxtofl@exp:
   780                           	callstack 0
   781   00000E                     color_read_Red@tmp:
   782                           	callstack 0
   783   00000E                     color_read_Green@tmp:
   784                           	callstack 0
   785   00000E                     color_read_Blue@tmp:
   786                           	callstack 0
   787   00000E                     color_read_Clear@tmp:
   788                           	callstack 0
   789   00000E                     fputs@s:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0xD
   793   00000E                     	ds	1
   794   00000F                     memcpy@tmp:
   795                           	callstack 0
   796   00000F                     ___lwdiv@quotient:
   797                           	callstack 0
   798   00000F                     ___xxtofl@arg:
   799                           	callstack 0
   800   00000F                     ___fpclassifyf@u:
   801                           	callstack 0
   802                           
   803                           ; 4 bytes @ 0xE
   804   00000F                     	ds	1
   805   000010                     getColor@v:
   806                           	callstack 0
   807   000010                     fputs@fp:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0xF
   811   000010                     	ds	1
   812   000011                     ___lwdiv@counter:
   813                           	callstack 0
   814   000011                     ___fladd@signs:
   815                           	callstack 0
   816                           
   817                           ; 1 bytes @ 0x10
   818   000011                     	ds	1
   819   000012                     ___fladd@aexp:
   820                           	callstack 0
   821   000012                     fputs@c:
   822                           	callstack 0
   823   000012                     ambientCal@v:
   824                           	callstack 0
   825   000012                     whiteCal@v:
   826                           	callstack 0
   827   000012                     setMotorPWM@m:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x11
   831   000012                     	ds	1
   832   000013                     ___fladd@bexp:
   833                           	callstack 0
   834   000013                     fputs@i:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x12
   838   000013                     	ds	1
   839   000014                     ??_ambientCal:
   840   000014                     ??_whiteCal:
   841   000014                     ??_setMotorPWM:
   842   000014                     ___fladd@grs:
   843                           	callstack 0
   844                           
   845                           ; 1 bytes @ 0x13
   846   000014                     	ds	1
   847   000015                     ?___flmul:
   848                           	callstack 0
   849   000015                     ___aodiv@counter:
   850                           	callstack 0
   851   000015                     ___aomod@counter:
   852                           	callstack 0
   853   000015                     pad@fp:
   854                           	callstack 0
   855   000015                     ___flmul@b:
   856                           	callstack 0
   857                           
   858                           ; 4 bytes @ 0x14
   859   000015                     	ds	1
   860   000016                     setMotorPWM@posDuty:
   861                           	callstack 0
   862   000016                     ___aodiv@sign:
   863                           	callstack 0
   864   000016                     ___aomod@sign:
   865                           	callstack 0
   866   000016                     ambientCal@i:
   867                           	callstack 0
   868   000016                     whiteCal@i:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x15
   872   000016                     	ds	1
   873   000017                     ?_abs:
   874                           	callstack 0
   875   000017                     setMotorPWM@negDuty:
   876                           	callstack 0
   877   000017                     pad@buf:
   878                           	callstack 0
   879   000017                     abs@a:
   880                           	callstack 0
   881   000017                     ___aodiv@quotient:
   882                           	callstack 0
   883                           
   884                           ; 8 bytes @ 0x16
   885   000017                     	ds	1
   886   000018                     stop@mL:
   887                           	callstack 0
   888   000018                     right45@mL:
   889                           	callstack 0
   890   000018                     fullSpeedAhead@mL:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0x17
   894   000018                     	ds	1
   895   000019                     ??_abs:
   896   000019                     pad@p:
   897                           	callstack 0
   898   000019                     ___flmul@a:
   899                           	callstack 0
   900                           
   901                           ; 4 bytes @ 0x18
   902   000019                     	ds	1
   903   00001A                     stop@mR:
   904                           	callstack 0
   905   00001A                     right45@mR:
   906                           	callstack 0
   907   00001A                     fullSpeedAhead@mR:
   908                           	callstack 0
   909                           
   910                           ; 2 bytes @ 0x19
   911   00001A                     	ds	1
   912   00001B                     ??_pad:
   913                           
   914                           ; 1 bytes @ 0x1A
   915   00001B                     	ds	1
   916   00001C                     ??_right45:
   917   00001C                     pad@i:
   918                           	callstack 0
   919                           
   920                           ; 2 bytes @ 0x1B
   921   00001C                     	ds	1
   922   00001D                     ??___flmul:
   923                           
   924                           ; 1 bytes @ 0x1C
   925   00001D                     	ds	1
   926   00001E                     pad@w:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x1D
   930   00001E                     	ds	2
   931   000020                     dtoa@fp:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0x1F
   935   000020                     	ds	1
   936   000021                     ___flmul@sign:
   937                           	callstack 0
   938                           
   939                           ; 1 bytes @ 0x20
   940   000021                     	ds	1
   941   000022                     ___flmul@grs:
   942                           	callstack 0
   943   000022                     dtoa@d:
   944                           	callstack 0
   945                           
   946                           ; 8 bytes @ 0x21
   947   000022                     	ds	4
   948   000026                     ___flmul@aexp:
   949                           	callstack 0
   950                           
   951                           ; 1 bytes @ 0x25
   952   000026                     	ds	1
   953   000027                     ___flmul@bexp:
   954                           	callstack 0
   955                           
   956                           ; 1 bytes @ 0x26
   957   000027                     	ds	1
   958   000028                     ___flmul@prod:
   959                           	callstack 0
   960                           
   961                           ; 4 bytes @ 0x27
   962   000028                     	ds	2
   963   00002A                     ??_dtoa:
   964                           
   965                           ; 1 bytes @ 0x29
   966   00002A                     	ds	2
   967   00002C                     ___flmul@temp:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x2B
   971   00002C                     	ds	2
   972   00002E                     ?___flsub:
   973                           	callstack 0
   974   00002E                     ___flsub@b:
   975                           	callstack 0
   976                           
   977                           ; 4 bytes @ 0x2D
   978   00002E                     	ds	4
   979   000032                     _dtoa$2502:
   980                           	callstack 0
   981   000032                     ___flsub@a:
   982                           	callstack 0
   983                           
   984                           ; 4 bytes @ 0x31
   985   000032                     	ds	2
   986   000034                     dtoa@p:
   987                           	callstack 0
   988                           
   989                           ; 2 bytes @ 0x33
   990   000034                     	ds	2
   991   000036                     ?___fldiv:
   992                           	callstack 0
   993   000036                     dtoa@w:
   994                           	callstack 0
   995   000036                     ___flge@ff1:
   996                           	callstack 0
   997   000036                     ___fldiv@b:
   998                           	callstack 0
   999                           
  1000                           ; 4 bytes @ 0x35
  1001   000036                     	ds	2
  1002   000038                     dtoa@n:
  1003                           	callstack 0
  1004                           
  1005                           ; 8 bytes @ 0x37
  1006   000038                     	ds	2
  1007   00003A                     ___flge@ff2:
  1008                           	callstack 0
  1009   00003A                     ___fldiv@a:
  1010                           	callstack 0
  1011                           
  1012                           ; 4 bytes @ 0x39
  1013   00003A                     	ds	4
  1014   00003E                     ??___fldiv:
  1015   00003E                     ??___flge:
  1016                           
  1017                           ; 1 bytes @ 0x3D
  1018   00003E                     	ds	2
  1019   000040                     dtoa@i:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x3F
  1023   000040                     	ds	2
  1024   000042                     dtoa@s:
  1025                           	callstack 0
  1026   000042                     ___fldiv@rem:
  1027                           	callstack 0
  1028                           
  1029                           ; 4 bytes @ 0x41
  1030   000042                     	ds	4
  1031   000046                     ___fldiv@sign:
  1032                           	callstack 0
  1033                           
  1034                           ; 1 bytes @ 0x45
  1035   000046                     	ds	1
  1036   000047                     ___fldiv@new_exp:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x46
  1040   000047                     	ds	2
  1041   000049                     ___fldiv@grs:
  1042                           	callstack 0
  1043                           
  1044                           ; 4 bytes @ 0x48
  1045   000049                     	ds	4
  1046   00004D                     ___fldiv@bexp:
  1047                           	callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x4C
  1050   00004D                     	ds	1
  1051   00004E                     ___fldiv@aexp:
  1052                           	callstack 0
  1053                           
  1054                           ; 1 bytes @ 0x4D
  1055   00004E                     	ds	1
  1056   00004F                     ??_colorDetect:
  1057   00004F                     ?_floorf:
  1058                           	callstack 0
  1059   00004F                     floorf@x:
  1060                           	callstack 0
  1061                           
  1062                           ; 4 bytes @ 0x4E
  1063   00004F                     	ds	4
  1064   000053                     ??_efgtoa:
  1065                           
  1066                           ; 1 bytes @ 0x52
  1067   000053                     	ds	2
  1068   000055                     ??_vfpfcnvrt:
  1069                           
  1070                           ; 1 bytes @ 0x54
  1071   000055                     	ds	2
  1072   000057                     
  1073                           ; 1 bytes @ 0x56
  1074 ;;
  1075 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1076 ;;
  1077 ;; *************** function _main *****************
  1078 ;; Defined at:
  1079 ;;		line 22 in file "newmain.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;  string4        20    0[BANK1 ] unsigned char [20]
  1084 ;;  string5        20    0        unsigned char [20]
  1085 ;;  string3        20    0        unsigned char [20]
  1086 ;;  string2        20    0        unsigned char [20]
  1087 ;;  string1        20    0        unsigned char [20]
  1088 ;;  testString     20    0        unsigned char [20]
  1089 ;;  motorLeft       9   61[BANK1 ] struct DC_motor
  1090 ;;  motorRight      9   52[BANK1 ] struct DC_motor
  1091 ;;  whiteRGBVal     8   44[BANK1 ] struct RGB
  1092 ;;  RGBVal          8   36[BANK1 ] struct RGB
  1093 ;;  ambientRGBVa    8   28[BANK1 ] struct RGB
  1094 ;;  clearRef        4   24[BANK1 ] struct RGB
  1095 ;;  whiteC          4   20[BANK1 ] struct RGB
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  1    wreg      void 
  1098 ;; Registers used:
  1099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1106 ;;      Locals:         0       0      70       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1107 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1108 ;;      Totals:         0       2      70       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1109 ;;Total ram usage:       72 bytes
  1110 ;; Hardware stack levels required when called: 10
  1111 ;; This function calls:
  1112 ;;		_DCmotorsInit
  1113 ;;		_TxBufferedString
  1114 ;;		___fldiv
  1115 ;;		___flge
  1116 ;;		___xxtofl
  1117 ;;		_ambientCal
  1118 ;;		_colorDetect
  1119 ;;		_color_click_init
  1120 ;;		_getColor
  1121 ;;		_initDCmotorsPWM
  1122 ;;		_initUSART4
  1123 ;;		_sendTxBuf
  1124 ;;		_sprintf
  1125 ;;		_stop
  1126 ;;		_whiteCal
  1127 ;; This function is called by:
  1128 ;;		Startup code after reset
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           	psect	text0
  1133   0034D8                     __ptext0:
  1134                           	callstack 0
  1135   0034D8                     _main:
  1136                           	callstack 21
  1137   0034D8                     
  1138                           ;newmain.c: 24:     color_click_init();
  1139   0034D8  EC2D  F027         	call	_color_click_init	;wreg free
  1140   0034DC                     
  1141                           ;newmain.c: 25:     initUSART4();
  1142   0034DC  EC5F  F027         	call	_initUSART4	;wreg free
  1143   0034E0                     
  1144                           ;newmain.c: 26:     initDCmotorsPWM(199);
  1145   0034E0  0E00               	movlw	0
  1146   0034E2  6E06               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1147   0034E4  0EC7               	movlw	199
  1148   0034E6  6E05               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1149   0034E8  ECAE  F023         	call	_initDCmotorsPWM	;wreg free
  1150   0034EC                     
  1151                           ;newmain.c: 33:     LATDbits.LATD7=0;
  1152   0034EC  9E7C               	bcf	124,7,c	;volatile
  1153   0034EE                     
  1154                           ;newmain.c: 34:     TRISDbits.TRISD7=0;
  1155   0034EE  9E84               	bcf	132,7,c	;volatile
  1156   0034F0                     
  1157                           ;newmain.c: 36:     LATHbits.LATH3=0;
  1158   0034F0  9680               	bcf	128,3,c	;volatile
  1159   0034F2                     
  1160                           ;newmain.c: 37:     TRISHbits.TRISH3=0;
  1161   0034F2  9688               	bcf	136,3,c	;volatile
  1162   0034F4                     
  1163                           ;newmain.c: 39:     LATDbits.LATD4 = 0;
  1164   0034F4  987C               	bcf	124,4,c	;volatile
  1165   0034F6                     
  1166                           ;newmain.c: 40:     TRISDbits.TRISD4 = 0;
  1167   0034F6  9884               	bcf	132,4,c	;volatile
  1168   0034F8                     
  1169                           ;newmain.c: 42:     LATHbits.LATH0 = 0;
  1170   0034F8  9080               	bcf	128,0,c	;volatile
  1171   0034FA                     
  1172                           ;newmain.c: 43:     TRISHbits.TRISH0 = 0;
  1173   0034FA  9088               	bcf	136,0,c	;volatile
  1174   0034FC                     
  1175                           ;newmain.c: 45:     LATFbits.LATF0 = 0;
  1176   0034FC  907E               	bcf	126,0,c	;volatile
  1177   0034FE                     
  1178                           ;newmain.c: 46:     TRISFbits.TRISF0 = 0;
  1179   0034FE  9086               	bcf	134,0,c	;volatile
  1180   003500                     
  1181                           ;newmain.c: 48:     LATHbits.LATH1 = 0;
  1182   003500  9280               	bcf	128,1,c	;volatile
  1183   003502                     
  1184                           ;newmain.c: 49:     TRISHbits.TRISH1 = 0;
  1185   003502  9288               	bcf	136,1,c	;volatile
  1186   003504                     
  1187                           ;newmain.c: 51:     LATDbits.LATD3 = 0;
  1188   003504  967C               	bcf	124,3,c	;volatile
  1189   003506                     
  1190                           ;newmain.c: 52:     TRISDbits.TRISD3 = 0;
  1191   003506  9684               	bcf	132,3,c	;volatile
  1192   003508                     
  1193                           ;newmain.c: 55:     LATDbits.LATD4 = 1;
  1194   003508  887C               	bsf	124,4,c	;volatile
  1195   00350A                     
  1196                           ;newmain.c: 56:     LATFbits.LATF0 = 1;
  1197   00350A  807E               	bsf	126,0,c	;volatile
  1198   00350C                     
  1199                           ;newmain.c: 57:     LATHbits.LATH0 = 1;
  1200   00350C  8080               	bsf	128,0,c	;volatile
  1201   00350E                     
  1202                           ;newmain.c: 58:     LATFbits.LATF0 = 1;
  1203   00350E  807E               	bsf	126,0,c	;volatile
  1204   003510                     
  1205                           ;newmain.c: 59:     LATDbits.LATD3 = 1;
  1206   003510  867C               	bsf	124,3,c	;volatile
  1207   003512                     
  1208                           ;newmain.c: 64:     LATGbits.LATG0=1;
  1209   003512  807F               	bsf	127,0,c	;volatile
  1210   003514                     
  1211                           ;newmain.c: 65:     LATEbits.LATE7=1;
  1212   003514  8E7D               	bsf	125,7,c	;volatile
  1213   003516                     
  1214                           ;newmain.c: 66:     LATAbits.LATA3=1;
  1215   003516  8679               	bsf	121,3,c	;volatile
  1216   003518                     
  1217                           ;newmain.c: 68:     TRISGbits.TRISG0=0;
  1218   003518  9087               	bcf	135,0,c	;volatile
  1219   00351A                     
  1220                           ;newmain.c: 69:     TRISEbits.TRISE7=0;
  1221   00351A  9E85               	bcf	133,7,c	;volatile
  1222   00351C                     
  1223                           ;newmain.c: 70:     TRISAbits.TRISA3=0;
  1224   00351C  9681               	bcf	129,3,c	;volatile
  1225   00351E                     
  1226                           ;newmain.c: 73:     TRISFbits.TRISF2=1;
  1227   00351E  8486               	bsf	134,2,c	;volatile
  1228   003520                     
  1229                           ;newmain.c: 74:     ANSELFbits.ANSELF2=0;
  1230   003520  010E               	movlb	14	; () banked
  1231   003522  95B4               	bcf	180,2,b	;volatile
  1232   003524                     
  1233                           ; BSR set to: 14
  1234                           ;newmain.c: 76:     TRISFbits.TRISF3=1;
  1235   003524  8686               	bsf	134,3,c	;volatile
  1236   003526                     
  1237                           ; BSR set to: 14
  1238                           ;newmain.c: 77:     ANSELFbits.ANSELF3=0;
  1239   003526  97B4               	bcf	180,3,b	;volatile
  1240   003528                     
  1241                           ; BSR set to: 14
  1242                           ;newmain.c: 93:     DC_motor motorLeft,motorRight;;newmain.c: 94:     DCmotorsInit(&moto
      +                          rLeft,&motorRight);
  1243   003528  0EC9               	movlw	low main@motorLeft
  1244   00352A  6E05               	movwf	DCmotorsInit@mL^0,c
  1245   00352C  0E01               	movlw	high main@motorLeft
  1246   00352E  6E06               	movwf	(DCmotorsInit@mL+1)^0,c
  1247   003530  0EC0               	movlw	low main@motorRight
  1248   003532  6E07               	movwf	DCmotorsInit@mR^0,c
  1249   003534  0E01               	movlw	high main@motorRight
  1250   003536  6E08               	movwf	(DCmotorsInit@mR+1)^0,c
  1251   003538  EC8B  F022         	call	_DCmotorsInit	;wreg free
  1252   00353C                     l5517:
  1253                           
  1254                           ;newmain.c: 115:         getColor(&RGBVal);
  1255   00353C  0EB0               	movlw	low main@RGBVal
  1256   00353E  6E10               	movwf	getColor@v^0,c
  1257   003540  0E01               	movlw	high main@RGBVal
  1258   003542  6E11               	movwf	(getColor@v+1)^0,c
  1259   003544  EC1E  F025         	call	_getColor	;wreg free
  1260   003548                     
  1261                           ;newmain.c: 118:         if (!PORTFbits.RF2){
  1262   003548  B48E               	btfsc	142,2,c	;volatile
  1263   00354A  EFA9  F01A         	goto	u6251
  1264   00354E  EFAB  F01A         	goto	u6250
  1265   003552                     u6251:
  1266   003552  EFB1  F01A         	goto	l5523
  1267   003556                     u6250:
  1268   003556                     
  1269                           ;newmain.c: 119:             ambientCal (&ambientRGBVal);
  1270   003556  0EA8               	movlw	low main@ambientRGBVal
  1271   003558  6E12               	movwf	ambientCal@v^0,c
  1272   00355A  0E01               	movlw	high main@ambientRGBVal
  1273   00355C  6E13               	movwf	(ambientCal@v+1)^0,c
  1274   00355E  EC19  F022         	call	_ambientCal	;wreg free
  1275   003562                     l5523:
  1276                           
  1277                           ;newmain.c: 122:         if (!PORTFbits.RF3){
  1278   003562  B68E               	btfsc	142,3,c	;volatile
  1279   003564  EFB6  F01A         	goto	u6261
  1280   003568  EFB8  F01A         	goto	u6260
  1281   00356C                     u6261:
  1282   00356C  EFBE  F01A         	goto	l5527
  1283   003570                     u6260:
  1284   003570                     
  1285                           ;newmain.c: 123:             whiteCal (&whiteRGBVal);
  1286   003570  0EB8               	movlw	low main@whiteRGBVal
  1287   003572  6E12               	movwf	whiteCal@v^0,c
  1288   003574  0E01               	movlw	high main@whiteRGBVal
  1289   003576  6E13               	movwf	(whiteCal@v+1)^0,c
  1290   003578  ECA7  F021         	call	_whiteCal	;wreg free
  1291   00357C                     l5527:
  1292                           
  1293                           ;newmain.c: 127:         LATHbits.LATH3=!LATHbits.LATH3;
  1294   00357C  A680               	btfss	128,3,c	;volatile
  1295   00357E  EFC3  F01A         	goto	u6271
  1296   003582  EFC8  F01A         	goto	u6270
  1297   003586                     u6271:
  1298   003586  0100               	movlb	0	; () banked
  1299   003588  6BD5               	clrf	??_main& (0+255),b
  1300   00358A  2BD5               	incf	??_main& (0+255),f,b
  1301   00358C  EFCA  F01A         	goto	u6288
  1302   003590                     u6270:
  1303   003590  0100               	movlb	0	; () banked
  1304   003592  6BD5               	clrf	??_main& (0+255),b
  1305   003594                     u6288:
  1306   003594  47D5               	rlncf	??_main& (0+255),f,b
  1307   003596  47D5               	rlncf	??_main& (0+255),f,b
  1308   003598  47D5               	rlncf	??_main& (0+255),f,b
  1309   00359A  5080               	movf	128,w,c	;volatile
  1310   00359C  19D5               	xorwf	??_main& (0+255),w,b
  1311   00359E  0BF7               	andlw	-9
  1312   0035A0  19D5               	xorwf	??_main& (0+255),w,b
  1313   0035A2  6E80               	movwf	128,c	;volatile
  1314   0035A4                     
  1315                           ; BSR set to: 0
  1316                           ;newmain.c: 130:         whiteC = whiteRGBVal.C;
  1317   0035A4  C1BE  F005         	movff	main@whiteRGBVal+6,___xxtofl@val
  1318   0035A8  C1BF  F006         	movff	main@whiteRGBVal+7,___xxtofl@val+1
  1319   0035AC  6A07               	clrf	(___xxtofl@val+2)^0,c
  1320   0035AE  6A08               	clrf	(___xxtofl@val+3)^0,c
  1321   0035B0  0E00               	movlw	0
  1322   0035B2  EC9A  F01C         	call	___xxtofl
  1323   0035B6  C005  F1A0         	movff	?___xxtofl,main@whiteC
  1324   0035BA  C006  F1A1         	movff	?___xxtofl+1,main@whiteC+1
  1325   0035BE  C007  F1A2         	movff	?___xxtofl+2,main@whiteC+2
  1326   0035C2  C008  F1A3         	movff	?___xxtofl+3,main@whiteC+3
  1327   0035C6                     
  1328                           ;newmain.c: 131:         clearRef = RGBVal.C/whiteC;
  1329   0035C6  C1B6  F005         	movff	main@RGBVal+6,___xxtofl@val
  1330   0035CA  C1B7  F006         	movff	main@RGBVal+7,___xxtofl@val+1
  1331   0035CE  6A07               	clrf	(___xxtofl@val+2)^0,c
  1332   0035D0  6A08               	clrf	(___xxtofl@val+3)^0,c
  1333   0035D2  0E00               	movlw	0
  1334   0035D4  EC9A  F01C         	call	___xxtofl
  1335   0035D8  C005  F036         	movff	?___xxtofl,___fldiv@b
  1336   0035DC  C006  F037         	movff	?___xxtofl+1,___fldiv@b+1
  1337   0035E0  C007  F038         	movff	?___xxtofl+2,___fldiv@b+2
  1338   0035E4  C008  F039         	movff	?___xxtofl+3,___fldiv@b+3
  1339   0035E8  C1A0  F03A         	movff	main@whiteC,___fldiv@a
  1340   0035EC  C1A1  F03B         	movff	main@whiteC+1,___fldiv@a+1
  1341   0035F0  C1A2  F03C         	movff	main@whiteC+2,___fldiv@a+2
  1342   0035F4  C1A3  F03D         	movff	main@whiteC+3,___fldiv@a+3
  1343   0035F8  ECDD  F015         	call	___fldiv	;wreg free
  1344   0035FC  C036  F1A4         	movff	?___fldiv,main@clearRef
  1345   003600  C037  F1A5         	movff	?___fldiv+1,main@clearRef+1
  1346   003604  C038  F1A6         	movff	?___fldiv+2,main@clearRef+2
  1347   003608  C039  F1A7         	movff	?___fldiv+3,main@clearRef+3
  1348   00360C                     
  1349                           ;newmain.c: 133:         if (clearRef > 0.12){
  1350   00360C  0E8F               	movlw	143
  1351   00360E  6E36               	movwf	___flge@ff1^0,c
  1352   003610  0EC2               	movlw	194
  1353   003612  6E37               	movwf	(___flge@ff1+1)^0,c
  1354   003614  0EF5               	movlw	245
  1355   003616  6E38               	movwf	(___flge@ff1+2)^0,c
  1356   003618  0E3D               	movlw	61
  1357   00361A  6E39               	movwf	(___flge@ff1+3)^0,c
  1358   00361C  C1A4  F03A         	movff	main@clearRef,___flge@ff2
  1359   003620  C1A5  F03B         	movff	main@clearRef+1,___flge@ff2+1
  1360   003624  C1A6  F03C         	movff	main@clearRef+2,___flge@ff2+2
  1361   003628  C1A7  F03D         	movff	main@clearRef+3,___flge@ff2+3
  1362   00362C  ECA6  F020         	call	___flge	;wreg free
  1363   003630  B0D8               	btfsc	status,0,c
  1364   003632  EF1D  F01B         	goto	u6291
  1365   003636  EF1F  F01B         	goto	u6290
  1366   00363A                     u6291:
  1367   00363A  EF48  F01B         	goto	l5539
  1368   00363E                     u6290:
  1369   00363E                     
  1370                           ;newmain.c: 134:             colorDetect (clearRef,&ambientRGBVal,&whiteRGBVal,&motorLef
      +                          t,&motorRight);
  1371   00363E  C1A4  F060         	movff	main@clearRef,colorDetect@clearRef
  1372   003642  C1A5  F061         	movff	main@clearRef+1,colorDetect@clearRef+1
  1373   003646  C1A6  F062         	movff	main@clearRef+2,colorDetect@clearRef+2
  1374   00364A  C1A7  F063         	movff	main@clearRef+3,colorDetect@clearRef+3
  1375   00364E  0EA8               	movlw	low main@ambientRGBVal
  1376   003650  0100               	movlb	0	; () banked
  1377   003652  6F64               	movwf	colorDetect@ambientRGBVal& (0+255),b
  1378   003654  0E01               	movlw	high main@ambientRGBVal
  1379   003656  6F65               	movwf	(colorDetect@ambientRGBVal+1)& (0+255),b
  1380   003658  0EB8               	movlw	low main@whiteRGBVal
  1381   00365A  6F66               	movwf	colorDetect@whiteRGBVal& (0+255),b
  1382   00365C  0E01               	movlw	high main@whiteRGBVal
  1383   00365E  6F67               	movwf	(colorDetect@whiteRGBVal+1)& (0+255),b
  1384   003660  0EC9               	movlw	low main@motorLeft
  1385   003662  6F68               	movwf	colorDetect@mL& (0+255),b
  1386   003664  0E01               	movlw	high main@motorLeft
  1387   003666  6F69               	movwf	(colorDetect@mL+1)& (0+255),b
  1388   003668  0EC0               	movlw	low main@motorRight
  1389   00366A  6F6A               	movwf	colorDetect@mR& (0+255),b
  1390   00366C  0E01               	movlw	high main@motorRight
  1391   00366E  6F6B               	movwf	(colorDetect@mR+1)& (0+255),b
  1392   003670  EC16  F007         	call	_colorDetect	;wreg free
  1393   003674                     
  1394                           ;newmain.c: 136:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1395   003674  0E29               	movlw	41
  1396   003676  0100               	movlb	0	; () banked
  1397   003678  6FD6               	movwf	(??_main+1)& (0+255),b
  1398   00367A  0E96               	movlw	150
  1399   00367C  6FD5               	movwf	??_main& (0+255),b
  1400   00367E  0E7F               	movlw	127
  1401   003680                     u6307:
  1402   003680  2EE8               	decfsz	wreg,f,c
  1403   003682  D7FE               	bra	u6307
  1404   003684  2FD5               	decfsz	??_main& (0+255),f,b
  1405   003686  D7FC               	bra	u6307
  1406   003688  2FD6               	decfsz	(??_main+1)& (0+255),f,b
  1407   00368A  D7FA               	bra	u6307
  1408                           
  1409                           ;newmain.c: 137:         }
  1410   00368C  EF52  F01B         	goto	l5541
  1411   003690                     l5539:
  1412   003690  0EC9               	movlw	low main@motorLeft
  1413   003692  6E18               	movwf	stop@mL^0,c
  1414   003694  0E01               	movlw	high main@motorLeft
  1415   003696  6E19               	movwf	(stop@mL+1)^0,c
  1416   003698  0EC0               	movlw	low main@motorRight
  1417   00369A  6E1A               	movwf	stop@mR^0,c
  1418   00369C  0E01               	movlw	high main@motorRight
  1419   00369E  6E1B               	movwf	(stop@mR+1)^0,c
  1420   0036A0  ECF6  F023         	call	_stop	;wreg free
  1421   0036A4                     l5541:
  1422                           
  1423                           ;newmain.c: 140:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1424   0036A4  0E09               	movlw	9
  1425   0036A6  0100               	movlb	0	; () banked
  1426   0036A8  6FD6               	movwf	(??_main+1)& (0+255),b
  1427   0036AA  0E1E               	movlw	30
  1428   0036AC  6FD5               	movwf	??_main& (0+255),b
  1429   0036AE  0EE4               	movlw	228
  1430   0036B0                     u6317:
  1431   0036B0  2EE8               	decfsz	wreg,f,c
  1432   0036B2  D7FE               	bra	u6317
  1433   0036B4  2FD5               	decfsz	??_main& (0+255),f,b
  1434   0036B6  D7FC               	bra	u6317
  1435   0036B8  2FD6               	decfsz	(??_main+1)& (0+255),f,b
  1436   0036BA  D7FA               	bra	u6317
  1437   0036BC  F000               	nop	
  1438   0036BE                     
  1439                           ;newmain.c: 143:         sprintf(string4,"  C: %d  %d  %f \r",RGBVal.C, whiteRGBVal.C, c
      +                          learRef);
  1440   0036BE  0E8C               	movlw	low main@string4
  1441   0036C0  0100               	movlb	0	; () banked
  1442   0036C2  6FBC               	movwf	sprintf@s& (0+255),b
  1443   0036C4  0E01               	movlw	high main@string4
  1444   0036C6  6FBD               	movwf	(sprintf@s+1)& (0+255),b
  1445   0036C8  0E01               	movlw	low STR_1
  1446   0036CA  6FBE               	movwf	sprintf@fmt& (0+255),b
  1447   0036CC  0E0E               	movlw	high STR_1
  1448   0036CE  6FBF               	movwf	(sprintf@fmt+1)& (0+255),b
  1449   0036D0  C1B6  F0C0         	movff	main@RGBVal+6,?_sprintf+4
  1450   0036D4  C1B7  F0C1         	movff	main@RGBVal+7,?_sprintf+5
  1451   0036D8  C1BE  F0C2         	movff	main@whiteRGBVal+6,?_sprintf+6
  1452   0036DC  C1BF  F0C3         	movff	main@whiteRGBVal+7,?_sprintf+7
  1453   0036E0  C1A4  F0C4         	movff	main@clearRef,?_sprintf+8
  1454   0036E4  C1A5  F0C5         	movff	main@clearRef+1,?_sprintf+9
  1455   0036E8  C1A6  F0C6         	movff	main@clearRef+2,?_sprintf+10
  1456   0036EC  C1A7  F0C7         	movff	main@clearRef+3,?_sprintf+11
  1457   0036F0  EC78  F025         	call	_sprintf	;wreg free
  1458   0036F4                     
  1459                           ;newmain.c: 144:         TxBufferedString(string4);
  1460   0036F4  0E8C               	movlw	low main@string4
  1461   0036F6  6E06               	movwf	TxBufferedString@string^0,c
  1462   0036F8  0E01               	movlw	high main@string4
  1463   0036FA  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1464   0036FC  EC47  F027         	call	_TxBufferedString	;wreg free
  1465   003700                     
  1466                           ;newmain.c: 145:         sendTxBuf();
  1467   003700  EC17  F028         	call	_sendTxBuf	;wreg free
  1468   003704                     
  1469                           ;newmain.c: 146:         _delay((unsigned long)((2)*(64000000/4000.0)));
  1470   003704  0E2A               	movlw	42
  1471   003706  0100               	movlb	0	; () banked
  1472   003708  6FD5               	movwf	??_main& (0+255),b
  1473   00370A  0E8D               	movlw	141
  1474   00370C                     u6327:
  1475   00370C  2EE8               	decfsz	wreg,f,c
  1476   00370E  D7FE               	bra	u6327
  1477   003710  2FD5               	decfsz	??_main& (0+255),f,b
  1478   003712  D7FC               	bra	u6327
  1479   003714  D000               	nop2	
  1480   003716  EF9E  F01A         	goto	l5517
  1481   00371A  EF3B  F000         	goto	start
  1482   00371E                     __end_of_main:
  1483                           	callstack 0
  1484                           
  1485 ;; *************** function _whiteCal *****************
  1486 ;; Defined at:
  1487 ;;		line 114 in file "color.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;  v               2   17[COMRAM] PTR struct RGB
  1490 ;;		 -> main@whiteRGBVal(8), 
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  i               2   21[COMRAM] int 
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      void 
  1495 ;; Registers used:
  1496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1502 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1503 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1504 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1505 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1506 ;;Total ram usage:        6 bytes
  1507 ;; Hardware stack levels used: 1
  1508 ;; Hardware stack levels required when called: 6
  1509 ;; This function calls:
  1510 ;;		_getColor
  1511 ;; This function is called by:
  1512 ;;		_main
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           	psect	text1
  1517   00434E                     __ptext1:
  1518                           	callstack 0
  1519   00434E                     _whiteCal:
  1520                           	callstack 24
  1521   00434E                     
  1522                           ;color.c: 116:     for(int i = 0;i<20;i++){
  1523   00434E  0E00               	movlw	0
  1524   004350  6E17               	movwf	(whiteCal@i+1)^0,c
  1525   004352  0E00               	movlw	0
  1526   004354  6E16               	movwf	whiteCal@i^0,c
  1527   004356                     l4515:
  1528                           
  1529                           ;color.c: 117:             LATDbits.LATD7 = !LATDbits.LATD7;
  1530   004356  AE7C               	btfss	124,7,c	;volatile
  1531   004358  EFB0  F021         	goto	u4921
  1532   00435C  EFB4  F021         	goto	u4920
  1533   004360                     u4921:
  1534   004360  6A14               	clrf	??_whiteCal^0,c
  1535   004362  2A14               	incf	??_whiteCal^0,f,c
  1536   004364  EFB5  F021         	goto	u4938
  1537   004368                     u4920:
  1538   004368  6A14               	clrf	??_whiteCal^0,c
  1539   00436A                     u4938:
  1540   00436A  3214               	rrcf	??_whiteCal^0,f,c
  1541   00436C  3214               	rrcf	??_whiteCal^0,f,c
  1542   00436E  507C               	movf	124,w,c	;volatile
  1543   004370  1814               	xorwf	??_whiteCal^0,w,c
  1544   004372  0B7F               	andlw	-129
  1545   004374  1814               	xorwf	??_whiteCal^0,w,c
  1546   004376  6E7C               	movwf	124,c	;volatile
  1547   004378                     
  1548                           ;color.c: 118:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1549   004378  0E09               	movlw	9
  1550   00437A  6E15               	movwf	(??_whiteCal+1)^0,c
  1551   00437C  0E1E               	movlw	30
  1552   00437E  6E14               	movwf	??_whiteCal^0,c
  1553   004380  0EE4               	movlw	228
  1554   004382                     u6337:
  1555   004382  2EE8               	decfsz	wreg,f,c
  1556   004384  D7FE               	bra	u6337
  1557   004386  2E14               	decfsz	??_whiteCal^0,f,c
  1558   004388  D7FC               	bra	u6337
  1559   00438A  2E15               	decfsz	(??_whiteCal+1)^0,f,c
  1560   00438C  D7FA               	bra	u6337
  1561   00438E  D000               	nop2	
  1562                           
  1563                           ;color.c: 119:             }
  1564   004390  4A16               	infsnz	whiteCal@i^0,f,c
  1565   004392  2A17               	incf	(whiteCal@i+1)^0,f,c
  1566   004394  BE17               	btfsc	(whiteCal@i+1)^0,7,c
  1567   004396  EFD6  F021         	goto	u4941
  1568   00439A  5017               	movf	(whiteCal@i+1)^0,w,c
  1569   00439C  E109               	bnz	u4940
  1570   00439E  0E14               	movlw	20
  1571   0043A0  5C16               	subwf	whiteCal@i^0,w,c
  1572   0043A2  A0D8               	btfss	status,0,c
  1573   0043A4  EFD6  F021         	goto	u4941
  1574   0043A8  EFD8  F021         	goto	u4940
  1575   0043AC                     u4941:
  1576   0043AC  EFAB  F021         	goto	l4515
  1577   0043B0                     u4940:
  1578   0043B0                     
  1579                           ;color.c: 120:             LATDbits.LATD7 = !LATDbits.LATD7;
  1580   0043B0  AE7C               	btfss	124,7,c	;volatile
  1581   0043B2  EFDD  F021         	goto	u4951
  1582   0043B6  EFE1  F021         	goto	u4950
  1583   0043BA                     u4951:
  1584   0043BA  6A14               	clrf	??_whiteCal^0,c
  1585   0043BC  2A14               	incf	??_whiteCal^0,f,c
  1586   0043BE  EFE2  F021         	goto	u4968
  1587   0043C2                     u4950:
  1588   0043C2  6A14               	clrf	??_whiteCal^0,c
  1589   0043C4                     u4968:
  1590   0043C4  3214               	rrcf	??_whiteCal^0,f,c
  1591   0043C6  3214               	rrcf	??_whiteCal^0,f,c
  1592   0043C8  507C               	movf	124,w,c	;volatile
  1593   0043CA  1814               	xorwf	??_whiteCal^0,w,c
  1594   0043CC  0B7F               	andlw	-129
  1595   0043CE  1814               	xorwf	??_whiteCal^0,w,c
  1596   0043D0  6E7C               	movwf	124,c	;volatile
  1597   0043D2                     
  1598                           ;color.c: 121:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1599   0043D2  0E29               	movlw	41
  1600   0043D4  6E15               	movwf	(??_whiteCal+1)^0,c
  1601   0043D6  0E96               	movlw	150
  1602   0043D8  6E14               	movwf	??_whiteCal^0,c
  1603   0043DA  0E7F               	movlw	127
  1604   0043DC                     u6347:
  1605   0043DC  2EE8               	decfsz	wreg,f,c
  1606   0043DE  D7FE               	bra	u6347
  1607   0043E0  2E14               	decfsz	??_whiteCal^0,f,c
  1608   0043E2  D7FC               	bra	u6347
  1609   0043E4  2E15               	decfsz	(??_whiteCal+1)^0,f,c
  1610   0043E6  D7FA               	bra	u6347
  1611   0043E8  F000               	nop	
  1612   0043EA                     
  1613                           ;color.c: 122:             getColor(v);
  1614   0043EA  C012  F010         	movff	whiteCal@v,getColor@v
  1615   0043EE  C013  F011         	movff	whiteCal@v+1,getColor@v+1
  1616   0043F2  EC1E  F025         	call	_getColor	;wreg free
  1617   0043F6                     
  1618                           ;color.c: 123:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1619   0043F6  0E29               	movlw	41
  1620   0043F8  6E15               	movwf	(??_whiteCal+1)^0,c
  1621   0043FA  0E96               	movlw	150
  1622   0043FC  6E14               	movwf	??_whiteCal^0,c
  1623   0043FE  0E7F               	movlw	127
  1624   004400                     u6357:
  1625   004400  2EE8               	decfsz	wreg,f,c
  1626   004402  D7FE               	bra	u6357
  1627   004404  2E14               	decfsz	??_whiteCal^0,f,c
  1628   004406  D7FC               	bra	u6357
  1629   004408  2E15               	decfsz	(??_whiteCal+1)^0,f,c
  1630   00440A  D7FA               	bra	u6357
  1631   00440C  F000               	nop	
  1632   00440E                     
  1633                           ;color.c: 124:             LATDbits.LATD7 = !LATDbits.LATD7;
  1634   00440E  AE7C               	btfss	124,7,c	;volatile
  1635   004410  EF0C  F022         	goto	u4971
  1636   004414  EF10  F022         	goto	u4970
  1637   004418                     u4971:
  1638   004418  6A14               	clrf	??_whiteCal^0,c
  1639   00441A  2A14               	incf	??_whiteCal^0,f,c
  1640   00441C  EF11  F022         	goto	u4988
  1641   004420                     u4970:
  1642   004420  6A14               	clrf	??_whiteCal^0,c
  1643   004422                     u4988:
  1644   004422  3214               	rrcf	??_whiteCal^0,f,c
  1645   004424  3214               	rrcf	??_whiteCal^0,f,c
  1646   004426  507C               	movf	124,w,c	;volatile
  1647   004428  1814               	xorwf	??_whiteCal^0,w,c
  1648   00442A  0B7F               	andlw	-129
  1649   00442C  1814               	xorwf	??_whiteCal^0,w,c
  1650   00442E  6E7C               	movwf	124,c	;volatile
  1651   004430  0012               	return		;funcret
  1652   004432                     __end_of_whiteCal:
  1653                           	callstack 0
  1654                           
  1655 ;; *************** function _stop *****************
  1656 ;; Defined at:
  1657 ;;		line 109 in file "dc_motor.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;  mL              2   23[COMRAM] PTR struct DC_motor
  1660 ;;		 -> main@motorLeft(9), 
  1661 ;;  mR              2   25[COMRAM] PTR struct DC_motor
  1662 ;;		 -> main@motorRight(9), 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;		None
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      void 
  1667 ;; Registers used:
  1668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1674 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1677 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1678 ;;Total ram usage:        4 bytes
  1679 ;; Hardware stack levels used: 1
  1680 ;; Hardware stack levels required when called: 4
  1681 ;; This function calls:
  1682 ;;		_setMotorPWM
  1683 ;; This function is called by:
  1684 ;;		_main
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           	psect	text2
  1689   0047EC                     __ptext2:
  1690                           	callstack 0
  1691   0047EC                     _stop:
  1692                           	callstack 26
  1693   0047EC                     
  1694                           ;dc_motor.c: 109: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 110: {;dc_motor.c: 1
      +                          12:     mL->direction = 1;
  1695   0047EC  EE20 F001          	lfsr	2,1
  1696   0047F0  5018               	movf	stop@mL^0,w,c
  1697   0047F2  26D9               	addwf	fsr2l,f,c
  1698   0047F4  5019               	movf	(stop@mL+1)^0,w,c
  1699   0047F6  22DA               	addwfc	fsr2h,f,c
  1700   0047F8  0E01               	movlw	1
  1701   0047FA  6EDF               	movwf	indf2,c
  1702                           
  1703                           ;dc_motor.c: 113:     mR->direction = 1;
  1704   0047FC  EE20 F001          	lfsr	2,1
  1705   004800  501A               	movf	stop@mR^0,w,c
  1706   004802  26D9               	addwf	fsr2l,f,c
  1707   004804  501B               	movf	(stop@mR+1)^0,w,c
  1708   004806  22DA               	addwfc	fsr2h,f,c
  1709   004808  0E01               	movlw	1
  1710   00480A  6EDF               	movwf	indf2,c
  1711                           
  1712                           ;dc_motor.c: 115:     mL->brakemode = 0;
  1713   00480C  EE20 F002          	lfsr	2,2
  1714   004810  5018               	movf	stop@mL^0,w,c
  1715   004812  26D9               	addwf	fsr2l,f,c
  1716   004814  5019               	movf	(stop@mL+1)^0,w,c
  1717   004816  22DA               	addwfc	fsr2h,f,c
  1718   004818  0E00               	movlw	0
  1719   00481A  6EDF               	movwf	indf2,c
  1720                           
  1721                           ;dc_motor.c: 116:     mL->brakemode = 0;
  1722   00481C  EE20 F002          	lfsr	2,2
  1723   004820  5018               	movf	stop@mL^0,w,c
  1724   004822  26D9               	addwf	fsr2l,f,c
  1725   004824  5019               	movf	(stop@mL+1)^0,w,c
  1726   004826  22DA               	addwfc	fsr2h,f,c
  1727   004828  0E00               	movlw	0
  1728   00482A  6EDF               	movwf	indf2,c
  1729                           
  1730                           ;dc_motor.c: 119:     while (mL-> power > 0){
  1731   00482C  EF22  F024         	goto	l4711
  1732   004830                     l4709:
  1733                           
  1734                           ;dc_motor.c: 120:     mL->power -= 1;
  1735   004830  C018  FFD9         	movff	stop@mL,fsr2l
  1736   004834  C019  FFDA         	movff	stop@mL+1,fsr2h
  1737   004838  06DF               	decf	indf2,f,c
  1738                           
  1739                           ;dc_motor.c: 121:     mR->power -= 1;
  1740   00483A  C01A  FFD9         	movff	stop@mR,fsr2l
  1741   00483E  C01B  FFDA         	movff	stop@mR+1,fsr2h
  1742   004842  06DF               	decf	indf2,f,c
  1743   004844                     l4711:
  1744                           
  1745                           ;dc_motor.c: 119:     while (mL-> power > 0){
  1746   004844  C018  FFD9         	movff	stop@mL,fsr2l
  1747   004848  C019  FFDA         	movff	stop@mL+1,fsr2h
  1748   00484C  50DF               	movf	indf2,w,c
  1749   00484E  A4D8               	btfss	status,2,c
  1750   004850  EF2C  F024         	goto	u5311
  1751   004854  EF2E  F024         	goto	u5310
  1752   004858                     u5311:
  1753   004858  EF18  F024         	goto	l4709
  1754   00485C                     u5310:
  1755   00485C                     
  1756                           ;dc_motor.c: 125:     setMotorPWM(mL);
  1757   00485C  C018  F012         	movff	stop@mL,setMotorPWM@m
  1758   004860  C019  F013         	movff	stop@mL+1,setMotorPWM@m+1
  1759   004864  EC38  F01E         	call	_setMotorPWM	;wreg free
  1760                           
  1761                           ;dc_motor.c: 126:     setMotorPWM(mR);
  1762   004868  C01A  F012         	movff	stop@mR,setMotorPWM@m
  1763   00486C  C01B  F013         	movff	stop@mR+1,setMotorPWM@m+1
  1764   004870  EC38  F01E         	call	_setMotorPWM	;wreg free
  1765   004874  0012               	return		;funcret
  1766   004876                     __end_of_stop:
  1767                           	callstack 0
  1768                           
  1769 ;; *************** function _sprintf *****************
  1770 ;; Defined at:
  1771 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  s               2   92[BANK0 ] PTR unsigned char 
  1774 ;;		 -> ADC2String@buf(40), main@string4(20), 
  1775 ;;  fmt             2   94[BANK0 ] PTR const unsigned char 
  1776 ;;		 -> STR_2(15), STR_1(18), 
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;  f              11  106[BANK0 ] struct _IO_FILE
  1779 ;;  ap              2  104[BANK0 ] PTR void [1]
  1780 ;;		 -> ?_sprintf(2), 
  1781 ;;  ret             2    0        int 
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  2   92[BANK0 ] int 
  1784 ;; Registers used:
  1785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1791 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1792 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1794 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1795 ;;Total ram usage:       25 bytes
  1796 ;; Hardware stack levels used: 1
  1797 ;; Hardware stack levels required when called: 9
  1798 ;; This function calls:
  1799 ;;		_vfprintf
  1800 ;; This function is called by:
  1801 ;;		_main
  1802 ;;		_ADC2String
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           	psect	text3
  1807   004AF0                     __ptext3:
  1808                           	callstack 0
  1809   004AF0                     _sprintf:
  1810                           	callstack 21
  1811   004AF0  0EC0               	movlw	low (?_sprintf+4)
  1812   004AF2  0100               	movlb	0	; () banked
  1813   004AF4  6FC8               	movwf	sprintf@ap& (0+255),b
  1814   004AF6  0E00               	movlw	high (?_sprintf+4)
  1815   004AF8  6FC9               	movwf	(sprintf@ap+1)& (0+255),b
  1816   004AFA  C0BC  F0CA         	movff	sprintf@s,sprintf@f
  1817   004AFE  C0BD  F0CB         	movff	sprintf@s+1,sprintf@f+1
  1818   004B02                     
  1819                           ; BSR set to: 0
  1820   004B02  0E00               	movlw	0
  1821   004B04  6FCE               	movwf	(sprintf@f+4)& (0+255),b
  1822   004B06  0E00               	movlw	0
  1823   004B08  6FCD               	movwf	(sprintf@f+3)& (0+255),b
  1824   004B0A                     
  1825                           ; BSR set to: 0
  1826   004B0A  0E00               	movlw	0
  1827   004B0C  6FD4               	movwf	(sprintf@f+10)& (0+255),b
  1828   004B0E  0E00               	movlw	0
  1829   004B10  6FD3               	movwf	(sprintf@f+9)& (0+255),b
  1830   004B12                     
  1831                           ; BSR set to: 0
  1832   004B12  0ECA               	movlw	low sprintf@f
  1833   004B14  6FB4               	movwf	vfprintf@fp& (0+255),b
  1834   004B16  0E00               	movlw	high sprintf@f
  1835   004B18  6FB5               	movwf	(vfprintf@fp+1)& (0+255),b
  1836   004B1A  C0BE  F0B6         	movff	sprintf@fmt,vfprintf@fmt
  1837   004B1E  C0BF  F0B7         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1838   004B22  0EC8               	movlw	low sprintf@ap
  1839   004B24  6FB8               	movwf	vfprintf@ap& (0+255),b
  1840   004B26  0E00               	movlw	high sprintf@ap
  1841   004B28  6FB9               	movwf	(vfprintf@ap+1)& (0+255),b
  1842   004B2A  EC4D  F025         	call	_vfprintf	;wreg free
  1843   004B2E  0100               	movlb	0	; () banked
  1844   004B30  51CD               	movf	(sprintf@f+3)& (0+255),w,b
  1845   004B32  25BC               	addwf	sprintf@s& (0+255),w,b
  1846   004B34  6ED9               	movwf	fsr2l,c
  1847   004B36  51CE               	movf	(sprintf@f+4)& (0+255),w,b
  1848   004B38  21BD               	addwfc	(sprintf@s+1)& (0+255),w,b
  1849   004B3A  6EDA               	movwf	fsr2h,c
  1850   004B3C  0E00               	movlw	0
  1851   004B3E  6EDF               	movwf	indf2,c
  1852   004B40                     
  1853                           ; BSR set to: 0
  1854   004B40  0012               	return		;funcret
  1855   004B42                     __end_of_sprintf:
  1856                           	callstack 0
  1857                           
  1858 ;; *************** function _vfprintf *****************
  1859 ;; Defined at:
  1860 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;  fp              2   84[BANK0 ] PTR struct _IO_FILE
  1863 ;;		 -> sprintf@f(11), 
  1864 ;;  fmt             2   86[BANK0 ] PTR const unsigned char 
  1865 ;;		 -> STR_2(15), STR_1(18), 
  1866 ;;  ap              2   88[BANK0 ] PTR PTR void 
  1867 ;;		 -> sprintf@ap(2), 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;  cfmt            2   90[BANK0 ] PTR unsigned char 
  1870 ;;		 -> STR_2(15), STR_1(18), 
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  2   84[BANK0 ] int 
  1873 ;; Registers used:
  1874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1880 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1881 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1883 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1884 ;;Total ram usage:        8 bytes
  1885 ;; Hardware stack levels used: 1
  1886 ;; Hardware stack levels required when called: 8
  1887 ;; This function calls:
  1888 ;;		_vfpfcnvrt
  1889 ;; This function is called by:
  1890 ;;		_sprintf
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           	psect	text4
  1895   004A9A                     __ptext4:
  1896                           	callstack 0
  1897   004A9A                     _vfprintf:
  1898                           	callstack 21
  1899   004A9A                     
  1900                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1901   004A9A  C0B6  F0BA         	movff	vfprintf@fmt,vfprintf@cfmt
  1902   004A9E  C0B7  F0BB         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1903                           
  1904                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1905   004AA2  EF62  F025         	goto	l5315
  1906   004AA6                     l5313:
  1907                           
  1908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1909   004AA6  C0B4  F0A3         	movff	vfprintf@fp,vfpfcnvrt@fp
  1910   004AAA  C0B5  F0A4         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1911   004AAE  0EBA               	movlw	low vfprintf@cfmt
  1912   004AB0  0100               	movlb	0	; () banked
  1913   004AB2  6FA5               	movwf	vfpfcnvrt@fmt& (0+255),b
  1914   004AB4  0E00               	movlw	high vfprintf@cfmt
  1915   004AB6  6FA6               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1916   004AB8  C0B8  F0A7         	movff	vfprintf@ap,vfpfcnvrt@ap
  1917   004ABC  C0B9  F0A8         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1918   004AC0  ECAA  F017         	call	_vfpfcnvrt	;wreg free
  1919   004AC4                     l5315:
  1920                           
  1921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1922   004AC4  C0BA  FFF6         	movff	vfprintf@cfmt,tblptrl
  1923   004AC8  C0BB  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1924   004ACC                     	if	0	;tblptru may be non-zero
  1925   004ACC                     	endif
  1926   004ACC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1927   004ACC  0E00               	movlw	low (__mediumconst shr (0+16))
  1928   004ACE  6EF8               	movwf	tblptru,c
  1929   004AD0                     	endif
  1930   004AD0  0008               	tblrd		*
  1931   004AD2  50F5               	movf	tablat,w,c
  1932   004AD4  0900               	iorlw	0
  1933   004AD6  A4D8               	btfss	status,2,c
  1934   004AD8  EF70  F025         	goto	u5921
  1935   004ADC  EF72  F025         	goto	u5920
  1936   004AE0                     u5921:
  1937   004AE0  EF53  F025         	goto	l5313
  1938   004AE4                     u5920:
  1939   004AE4                     
  1940                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1941   004AE4  0E00               	movlw	0
  1942   004AE6  0100               	movlb	0	; () banked
  1943   004AE8  6FB5               	movwf	(?_vfprintf+1)& (0+255),b
  1944   004AEA  0E00               	movlw	0
  1945   004AEC  6FB4               	movwf	?_vfprintf& (0+255),b
  1946   004AEE                     
  1947                           ; BSR set to: 0
  1948   004AEE  0012               	return		;funcret
  1949   004AF0                     __end_of_vfprintf:
  1950                           	callstack 0
  1951                           
  1952 ;; *************** function _vfpfcnvrt *****************
  1953 ;; Defined at:
  1954 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;  fp              2   67[BANK0 ] PTR struct _IO_FILE
  1957 ;;		 -> sprintf@f(11), 
  1958 ;;  fmt             2   69[BANK0 ] PTR PTR unsigned char 
  1959 ;;		 -> vfprintf@cfmt(2), 
  1960 ;;  ap              2   71[BANK0 ] PTR PTR void 
  1961 ;;		 -> sprintf@ap(2), 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;  convarg         8   73[BANK0 ] struct .
  1964 ;;  cp              2   82[BANK0 ] PTR unsigned char 
  1965 ;;		 -> STR_2(15), STR_1(18), 
  1966 ;;  i               2    0        int 
  1967 ;;  done            2    0        int 
  1968 ;;  c               1   81[BANK0 ] unsigned char 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1978 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1979 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1980 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1981 ;;      Totals:         2      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1982 ;;Total ram usage:       19 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; Hardware stack levels required when called: 7
  1985 ;; This function calls:
  1986 ;;		_dtoa
  1987 ;;		_efgtoa
  1988 ;;		_fputc
  1989 ;; This function is called by:
  1990 ;;		_vfprintf
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           	psect	text5
  1995   002F54                     __ptext5:
  1996                           	callstack 0
  1997   002F54                     _vfpfcnvrt:
  1998                           	callstack 21
  1999   002F54                     
  2000                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2001   002F54  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2002   002F58  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2003   002F5C  CFDE FFF6          	movff	postinc2,tblptrl
  2004   002F60  CFDD FFF7          	movff	postdec2,tblptrh
  2005   002F64                     	if	0	;tblptru may be non-zero
  2006   002F64                     	endif
  2007   002F64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2008   002F64  0E00               	movlw	low (__mediumconst shr (0+16))
  2009   002F66  6EF8               	movwf	tblptru,c
  2010   002F68                     	endif
  2011   002F68  0008               	tblrd		*
  2012   002F6A  50F5               	movf	tablat,w,c
  2013   002F6C  0A25               	xorlw	37
  2014   002F6E  A4D8               	btfss	status,2,c
  2015   002F70  EFBC  F017         	goto	u5881
  2016   002F74  EFBE  F017         	goto	u5880
  2017   002F78                     u5881:
  2018   002F78  EF16  F019         	goto	l5287
  2019   002F7C                     u5880:
  2020   002F7C                     
  2021                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2022   002F7C  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2023   002F80  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2024   002F84  2ADE               	incf	postinc2,f,c
  2025   002F86  0E00               	movlw	0
  2026   002F88  22DD               	addwfc	postdec2,f,c
  2027   002F8A                     
  2028                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2029   002F8A  0E00               	movlw	0
  2030   002F8C  0100               	movlb	0	; () banked
  2031   002F8E  6FF4               	movwf	(_width+1)& (0+255),b
  2032   002F90  0E00               	movlw	0
  2033   002F92  6FF3               	movwf	_width& (0+255),b
  2034   002F94  C0F3  F0F7         	movff	_width,_flags
  2035   002F98                     
  2036                           ; BSR set to: 0
  2037                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2038   002F98  69F5               	setf	_prec& (0+255),b
  2039   002F9A  69F6               	setf	(_prec+1)& (0+255),b
  2040   002F9C                     
  2041                           ; BSR set to: 0
  2042                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2043   002F9C  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2044   002FA0  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2045   002FA4  CFDE F0B2          	movff	postinc2,vfpfcnvrt@cp
  2046   002FA8  CFDD F0B3          	movff	postdec2,vfpfcnvrt@cp+1
  2047   002FAC                     
  2048                           ; BSR set to: 0
  2049                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2050   002FAC  C0B2  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2051   002FB0  C0B3  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2052   002FB4                     	if	0	;tblptru may be non-zero
  2053   002FB4                     	endif
  2054   002FB4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2055   002FB4  0E00               	movlw	low (__mediumconst shr (0+16))
  2056   002FB6  6EF8               	movwf	tblptru,c
  2057   002FB8                     	endif
  2058   002FB8  0008               	tblrd		*
  2059   002FBA  50F5               	movf	tablat,w,c
  2060   002FBC  0A64               	xorlw	100
  2061   002FBE  B4D8               	btfsc	status,2,c
  2062   002FC0  EFE4  F017         	goto	u5891
  2063   002FC4  EFE6  F017         	goto	u5890
  2064   002FC8                     u5891:
  2065   002FC8  EFF6  F017         	goto	l5243
  2066   002FCC                     u5890:
  2067   002FCC                     
  2068                           ; BSR set to: 0
  2069   002FCC  C0B2  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2070   002FD0  C0B3  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2071   002FD4                     	if	0	;tblptru may be non-zero
  2072   002FD4                     	endif
  2073   002FD4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2074   002FD4  0E00               	movlw	low (__mediumconst shr (0+16))
  2075   002FD6  6EF8               	movwf	tblptru,c
  2076   002FD8                     	endif
  2077   002FD8  0008               	tblrd		*
  2078   002FDA  50F5               	movf	tablat,w,c
  2079   002FDC  0A69               	xorlw	105
  2080   002FDE  A4D8               	btfss	status,2,c
  2081   002FE0  EFF4  F017         	goto	u5901
  2082   002FE4  EFF6  F017         	goto	u5900
  2083   002FE8                     u5901:
  2084   002FE8  EF39  F018         	goto	l5249
  2085   002FEC                     u5900:
  2086   002FEC                     l5243:
  2087                           
  2088                           ; BSR set to: 0
  2089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2090   002FEC  C0A7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2091   002FF0  C0A8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2092   002FF4  CFDF F055          	movff	indf2,??_vfpfcnvrt
  2093   002FF8  0E02               	movlw	2
  2094   002FFA  26DE               	addwf	postinc2,f,c
  2095   002FFC  CFDF F056          	movff	indf2,??_vfpfcnvrt+1
  2096   003000  0E00               	movlw	0
  2097   003002  22DD               	addwfc	postdec2,f,c
  2098   003004  C055  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2099   003008  C056  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2100   00300C  CFDE F0A9          	movff	postinc2,vfpfcnvrt@convarg
  2101   003010  CFDD F0AA          	movff	postdec2,vfpfcnvrt@convarg+1
  2102   003014  0E00               	movlw	0
  2103   003016  BFAA               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2104   003018  0EFF               	movlw	-1
  2105   00301A  6FAB               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2106   00301C  6FAC               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2107   00301E  6FAD               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2108   003020  6FAE               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2109   003022  6FAF               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2110   003024  6FB0               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2111                           
  2112                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2113   003026  0E01               	movlw	1
  2114   003028  25B2               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2115   00302A  6E55               	movwf	??_vfpfcnvrt^0,c
  2116   00302C  0E00               	movlw	0
  2117   00302E  21B3               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2118   003030  6E56               	movwf	(??_vfpfcnvrt+1)^0,c
  2119   003032  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2120   003036  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2121   00303A  C055  FFDE         	movff	??_vfpfcnvrt,postinc2
  2122   00303E  C056  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2123   003042                     
  2124                           ; BSR set to: 0
  2125                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2126   003042  C0A3  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  2127   003046  C0A4  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2128   00304A  C0A9  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  2129   00304E  C0AA  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2130   003052  C0AB  F024         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2131   003056  C0AC  F025         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2132   00305A  C0AD  F026         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2133   00305E  C0AE  F027         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2134   003062  C0AF  F028         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2135   003066  C0B0  F029         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2136   00306A  EC2D  F019         	call	_dtoa	;wreg free
  2137   00306E  EF2C  F019         	goto	l1186
  2138   003072                     l5249:
  2139                           
  2140                           ; BSR set to: 0
  2141                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  2142   003072  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2143   003076  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2144   00307A  CFDE F0B2          	movff	postinc2,vfpfcnvrt@cp
  2145   00307E  CFDD F0B3          	movff	postdec2,vfpfcnvrt@cp+1
  2146   003082                     
  2147                           ; BSR set to: 0
  2148                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  2149   003082  C0B2  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2150   003086  C0B3  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2151   00308A                     	if	0	;tblptru may be non-zero
  2152   00308A                     	endif
  2153   00308A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2154   00308A  0E00               	movlw	low (__mediumconst shr (0+16))
  2155   00308C  6EF8               	movwf	tblptru,c
  2156   00308E                     	endif
  2157   00308E  0008               	tblrd		*
  2158   003090  CFF5 F0B1          	movff	tablat,vfpfcnvrt@c
  2159                           
  2160                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  2161   003094  EF58  F018         	goto	l5261
  2162   003098                     l5253:
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  2166   003098  4BB2               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  2167   00309A  2BB3               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  2168                           
  2169                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  2170   00309C  EF71  F018         	goto	l5263
  2171   0030A0                     l5255:
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  2175   0030A0  0E6C               	movlw	108
  2176   0030A2  6FB1               	movwf	vfpfcnvrt@c& (0+255),b
  2177                           
  2178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  2179   0030A4  EF71  F018         	goto	l5263
  2180   0030A8                     l5257:
  2181                           
  2182                           ; BSR set to: 0
  2183                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  2184   0030A8  0E00               	movlw	0
  2185   0030AA  6FB1               	movwf	vfpfcnvrt@c& (0+255),b
  2186                           
  2187                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  2188   0030AC  EF71  F018         	goto	l5263
  2189   0030B0                     l5261:
  2190                           
  2191                           ; BSR set to: 0
  2192   0030B0  51B1               	movf	vfpfcnvrt@c& (0+255),w,b
  2193   0030B2  6E55               	movwf	??_vfpfcnvrt^0,c
  2194   0030B4  6A56               	clrf	(??_vfpfcnvrt+1)^0,c
  2195                           
  2196                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2197                           ; Switch size 1, requested type "simple"
  2198                           ; Number of cases is 1, Range of values is 0 to 0
  2199                           ; switch strategies available:
  2200                           ; Name         Instructions Cycles
  2201                           ; simple_byte            4     3 (average)
  2202                           ;	Chosen strategy is simple_byte
  2203   0030B6  5056               	movf	(??_vfpfcnvrt+1)^0,w,c
  2204   0030B8  0A00               	xorlw	0	; case 0
  2205   0030BA  B4D8               	btfsc	status,2,c
  2206   0030BC  EF62  F018         	goto	l5645
  2207   0030C0  EF54  F018         	goto	l5257
  2208   0030C4                     l5645:
  2209                           
  2210                           ; BSR set to: 0
  2211                           ; Switch size 1, requested type "simple"
  2212                           ; Number of cases is 3, Range of values is 76 to 108
  2213                           ; switch strategies available:
  2214                           ; Name         Instructions Cycles
  2215                           ; simple_byte           10     6 (average)
  2216                           ;	Chosen strategy is simple_byte
  2217   0030C4  5055               	movf	??_vfpfcnvrt^0,w,c
  2218   0030C6  0A4C               	xorlw	76	; case 76
  2219   0030C8  B4D8               	btfsc	status,2,c
  2220   0030CA  EF4C  F018         	goto	l5253
  2221   0030CE  0A2A               	xorlw	42	; case 102
  2222   0030D0  B4D8               	btfsc	status,2,c
  2223   0030D2  EF50  F018         	goto	l5255
  2224   0030D6  0A0A               	xorlw	10	; case 108
  2225   0030D8  B4D8               	btfsc	status,2,c
  2226   0030DA  EF4C  F018         	goto	l5253
  2227   0030DE  EF54  F018         	goto	l5257
  2228   0030E2                     l5263:
  2229                           
  2230                           ; BSR set to: 0
  2231   0030E2  C0B2  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2232   0030E6  C0B3  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2233   0030EA                     	if	0	;tblptru may be non-zero
  2234   0030EA                     	endif
  2235   0030EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2236   0030EA  0E00               	movlw	low (__mediumconst shr (0+16))
  2237   0030EC  6EF8               	movwf	tblptru,c
  2238   0030EE                     	endif
  2239   0030EE  0008               	tblrd		*
  2240   0030F0  50F5               	movf	tablat,w,c
  2241   0030F2  0A66               	xorlw	102
  2242   0030F4  A4D8               	btfss	status,2,c
  2243   0030F6  EF7F  F018         	goto	u5911
  2244   0030FA  EF81  F018         	goto	u5910
  2245   0030FE                     u5911:
  2246   0030FE  EF0D  F019         	goto	l5283
  2247   003102                     u5910:
  2248   003102  EFB7  F018         	goto	l5271
  2249   003106                     l5265:
  2250                           
  2251                           ; BSR set to: 0
  2252                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2253   003106  C0A7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2254   00310A  C0A8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2255   00310E  CFDF F055          	movff	indf2,??_vfpfcnvrt
  2256   003112  0E04               	movlw	4
  2257   003114  26DE               	addwf	postinc2,f,c
  2258   003116  CFDF F056          	movff	indf2,??_vfpfcnvrt+1
  2259   00311A  0E00               	movlw	0
  2260   00311C  22DD               	addwfc	postdec2,f,c
  2261   00311E  C055  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2262   003122  C056  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2263   003126  CFDE F0A9          	movff	postinc2,vfpfcnvrt@convarg
  2264   00312A  CFDE F0AA          	movff	postinc2,vfpfcnvrt@convarg+1
  2265   00312E  CFDE F0AB          	movff	postinc2,vfpfcnvrt@convarg+2
  2266   003132  CFDE F0AC          	movff	postinc2,vfpfcnvrt@convarg+3
  2267                           
  2268                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  2269   003136  EFCC  F018         	goto	l5273
  2270   00313A                     l5267:
  2271                           
  2272                           ; BSR set to: 0
  2273                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2274   00313A  C0A7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2275   00313E  C0A8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2276   003142  CFDF F055          	movff	indf2,??_vfpfcnvrt
  2277   003146  0E04               	movlw	4
  2278   003148  26DE               	addwf	postinc2,f,c
  2279   00314A  CFDF F056          	movff	indf2,??_vfpfcnvrt+1
  2280   00314E  0E00               	movlw	0
  2281   003150  22DD               	addwfc	postdec2,f,c
  2282   003152  C055  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2283   003156  C056  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2284   00315A  CFDE F0A9          	movff	postinc2,vfpfcnvrt@convarg
  2285   00315E  CFDE F0AA          	movff	postinc2,vfpfcnvrt@convarg+1
  2286   003162  CFDE F0AB          	movff	postinc2,vfpfcnvrt@convarg+2
  2287   003166  CFDE F0AC          	movff	postinc2,vfpfcnvrt@convarg+3
  2288                           
  2289                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  2290   00316A  EFCC  F018         	goto	l5273
  2291   00316E                     l5271:
  2292                           
  2293                           ; BSR set to: 0
  2294   00316E  51B1               	movf	vfpfcnvrt@c& (0+255),w,b
  2295   003170  6E55               	movwf	??_vfpfcnvrt^0,c
  2296   003172  6A56               	clrf	(??_vfpfcnvrt+1)^0,c
  2297                           
  2298                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2299                           ; Switch size 1, requested type "simple"
  2300                           ; Number of cases is 1, Range of values is 0 to 0
  2301                           ; switch strategies available:
  2302                           ; Name         Instructions Cycles
  2303                           ; simple_byte            4     3 (average)
  2304                           ;	Chosen strategy is simple_byte
  2305   003174  5056               	movf	(??_vfpfcnvrt+1)^0,w,c
  2306   003176  0A00               	xorlw	0	; case 0
  2307   003178  B4D8               	btfsc	status,2,c
  2308   00317A  EFC1  F018         	goto	l5647
  2309   00317E  EFCC  F018         	goto	l5273
  2310   003182                     l5647:
  2311                           
  2312                           ; BSR set to: 0
  2313                           ; Switch size 1, requested type "simple"
  2314                           ; Number of cases is 2, Range of values is 76 to 108
  2315                           ; switch strategies available:
  2316                           ; Name         Instructions Cycles
  2317                           ; simple_byte            7     4 (average)
  2318                           ;	Chosen strategy is simple_byte
  2319   003182  5055               	movf	??_vfpfcnvrt^0,w,c
  2320   003184  0A4C               	xorlw	76	; case 76
  2321   003186  B4D8               	btfsc	status,2,c
  2322   003188  EF9D  F018         	goto	l5267
  2323   00318C  0A20               	xorlw	32	; case 108
  2324   00318E  B4D8               	btfsc	status,2,c
  2325   003190  EF83  F018         	goto	l5265
  2326   003194  EFCC  F018         	goto	l5273
  2327   003198                     l5273:
  2328                           
  2329                           ; BSR set to: 0
  2330                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  2331   003198  0E01               	movlw	1
  2332   00319A  25B2               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2333   00319C  6E55               	movwf	??_vfpfcnvrt^0,c
  2334   00319E  0E00               	movlw	0
  2335   0031A0  21B3               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2336   0031A2  6E56               	movwf	(??_vfpfcnvrt+1)^0,c
  2337   0031A4  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2338   0031A8  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2339   0031AC  C055  FFDE         	movff	??_vfpfcnvrt,postinc2
  2340   0031B0  C056  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2341                           
  2342                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  2343   0031B4  EFF5  F018         	goto	l5281
  2344   0031B8                     l5275:
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2348   0031B8  C0A3  F070         	movff	vfpfcnvrt@fp,efgtoa@fp
  2349   0031BC  C0A4  F071         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2350   0031C0  C0A9  F072         	movff	vfpfcnvrt@convarg,efgtoa@f
  2351   0031C4  C0AA  F073         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2352   0031C8  C0AB  F074         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2353   0031CC  C0AC  F075         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2354   0031D0  C0B2  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2355   0031D4  C0B3  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2356   0031D8                     	if	0	;tblptru may be non-zero
  2357   0031D8                     	endif
  2358   0031D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2359   0031D8  0E00               	movlw	low (__mediumconst shr (0+16))
  2360   0031DA  6EF8               	movwf	tblptru,c
  2361   0031DC                     	endif
  2362   0031DC  0008               	tblrd		*
  2363   0031DE  CFF5 F076          	movff	tablat,efgtoa@c
  2364   0031E2  EC6B  F00C         	call	_efgtoa	;wreg free
  2365   0031E6  EF2C  F019         	goto	l1186
  2366   0031EA                     l5281:
  2367                           
  2368                           ; BSR set to: 0
  2369   0031EA  C0B2  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2370   0031EE  C0B3  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2371   0031F2                     	if	0	;tblptru may be non-zero
  2372   0031F2                     	endif
  2373   0031F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2374   0031F2  0E00               	movlw	low (__mediumconst shr (0+16))
  2375   0031F4  6EF8               	movwf	tblptru,c
  2376   0031F6                     	endif
  2377   0031F6  0008               	tblrd		*
  2378   0031F8  50F5               	movf	tablat,w,c
  2379   0031FA  6E55               	movwf	??_vfpfcnvrt^0,c
  2380   0031FC  6A56               	clrf	(??_vfpfcnvrt+1)^0,c
  2381                           
  2382                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2383                           ; Switch size 1, requested type "simple"
  2384                           ; Number of cases is 1, Range of values is 0 to 0
  2385                           ; switch strategies available:
  2386                           ; Name         Instructions Cycles
  2387                           ; simple_byte            4     3 (average)
  2388                           ;	Chosen strategy is simple_byte
  2389   0031FE  5056               	movf	(??_vfpfcnvrt+1)^0,w,c
  2390   003200  0A00               	xorlw	0	; case 0
  2391   003202  B4D8               	btfsc	status,2,c
  2392   003204  EF06  F019         	goto	l5649
  2393   003208  EF0D  F019         	goto	l5283
  2394   00320C                     l5649:
  2395                           
  2396                           ; BSR set to: 0
  2397                           ; Switch size 1, requested type "simple"
  2398                           ; Number of cases is 1, Range of values is 102 to 102
  2399                           ; switch strategies available:
  2400                           ; Name         Instructions Cycles
  2401                           ; simple_byte            4     3 (average)
  2402                           ;	Chosen strategy is simple_byte
  2403   00320C  5055               	movf	??_vfpfcnvrt^0,w,c
  2404   00320E  0A66               	xorlw	102	; case 102
  2405   003210  B4D8               	btfsc	status,2,c
  2406   003212  EFDC  F018         	goto	l5275
  2407   003216  EF0D  F019         	goto	l5283
  2408   00321A                     l5283:
  2409                           
  2410                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2411   00321A  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2412   00321E  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2413   003222  2ADE               	incf	postinc2,f,c
  2414   003224  0E00               	movlw	0
  2415   003226  22DD               	addwfc	postdec2,f,c
  2416   003228  EF2C  F019         	goto	l1186
  2417   00322C                     l5287:
  2418                           
  2419                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2420   00322C  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2421   003230  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2422   003234  CFDE FFF6          	movff	postinc2,tblptrl
  2423   003238  CFDD FFF7          	movff	postdec2,tblptrh
  2424   00323C                     	if	0	;tblptru may be non-zero
  2425   00323C                     	endif
  2426   00323C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2427   00323C  0E00               	movlw	low (__mediumconst shr (0+16))
  2428   00323E  6EF8               	movwf	tblptru,c
  2429   003240                     	endif
  2430   003240  0008               	tblrd		*
  2431   003242  50F5               	movf	tablat,w,c
  2432   003244  6E05               	movwf	fputc@c^0,c
  2433   003246  6A06               	clrf	(fputc@c+1)^0,c
  2434   003248  C0A3  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2435   00324C  C0A4  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2436   003250  ECF4  F022         	call	_fputc	;wreg free
  2437   003254  EF0D  F019         	goto	l5283
  2438   003258                     l1186:
  2439   003258  0012               	return		;funcret
  2440   00325A                     __end_of_vfpfcnvrt:
  2441                           	callstack 0
  2442                           
  2443 ;; *************** function _efgtoa *****************
  2444 ;; Defined at:
  2445 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  2448 ;;		 -> sprintf@f(11), 
  2449 ;;  f               4   18[BANK0 ] PTR struct _IO_FILE
  2450 ;;  c               1   22[BANK0 ] unsigned char 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;  u               4   63[BANK0 ] struct flui
  2453 ;;  g               4   57[BANK0 ] struct flui
  2454 ;;  l               4   52[BANK0 ] struct flui
  2455 ;;  h               4   48[BANK0 ] struct flui
  2456 ;;  ou              4   42[BANK0 ] struct flui
  2457 ;;  n               2   61[BANK0 ] int 
  2458 ;;  i               2   46[BANK0 ] int 
  2459 ;;  w               2   40[BANK0 ] int 
  2460 ;;  e               2   38[BANK0 ] int 
  2461 ;;  m               2   36[BANK0 ] int 
  2462 ;;  d               2   34[BANK0 ] int 
  2463 ;;  t               2   27[BANK0 ] int 
  2464 ;;  p               2   25[BANK0 ] int 
  2465 ;;  ne              2   23[BANK0 ] int 
  2466 ;;  sign            1   56[BANK0 ] unsigned char 
  2467 ;;  nmode           1   33[BANK0 ] unsigned char 
  2468 ;;  mode            1   32[BANK0 ] unsigned char 
  2469 ;;  pp              1   31[BANK0 ] unsigned char 
  2470 ;;  esign           1    0        unsigned char 
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      void 
  2473 ;; Registers used:
  2474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2480 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2481 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2482 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2483 ;;      Totals:         2      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2484 ;;Total ram usage:       53 bytes
  2485 ;; Hardware stack levels used: 1
  2486 ;; Hardware stack levels required when called: 6
  2487 ;; This function calls:
  2488 ;;		___fladd
  2489 ;;		___fldiv
  2490 ;;		___fleq
  2491 ;;		___flge
  2492 ;;		___flmul
  2493 ;;		___flneg
  2494 ;;		___flsub
  2495 ;;		___fltol
  2496 ;;		___fpclassifyf
  2497 ;;		_floorf
  2498 ;;		_labs
  2499 ;;		_memcpy
  2500 ;;		_pad
  2501 ;;		_strcpy
  2502 ;; This function is called by:
  2503 ;;		_vfpfcnvrt
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           	psect	text6
  2508   0018D6                     __ptext6:
  2509                           	callstack 0
  2510   0018D6                     _efgtoa:
  2511                           	callstack 21
  2512   0018D6                     
  2513                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  2514   0018D6  0E00               	movlw	0
  2515   0018D8  0100               	movlb	0	; () banked
  2516   0018DA  6F98               	movwf	efgtoa@sign& (0+255),b
  2517   0018DC                     
  2518                           ; BSR set to: 0
  2519                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  2520   0018DC  C072  F099         	movff	efgtoa@f,efgtoa@g
  2521   0018E0  C073  F09A         	movff	efgtoa@f+1,efgtoa@g+1
  2522   0018E4  C074  F09B         	movff	efgtoa@f+2,efgtoa@g+2
  2523   0018E8  C075  F09C         	movff	efgtoa@f+3,efgtoa@g+3
  2524   0018EC                     
  2525                           ; BSR set to: 0
  2526                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  2527   0018EC  BF9C               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2528   0018EE  EF7D  F00C         	goto	u5560
  2529   0018F2  EF7B  F00C         	goto	u5561
  2530   0018F6                     u5561:
  2531   0018F6  EF91  F00C         	goto	l5017
  2532   0018FA                     u5560:
  2533   0018FA                     
  2534                           ; BSR set to: 0
  2535                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  2536   0018FA  0E01               	movlw	1
  2537   0018FC  6F98               	movwf	efgtoa@sign& (0+255),b
  2538   0018FE                     
  2539                           ; BSR set to: 0
  2540                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  2541   0018FE  C099  F005         	movff	efgtoa@g,___flneg@f1
  2542   001902  C09A  F006         	movff	efgtoa@g+1,___flneg@f1+1
  2543   001906  C09B  F007         	movff	efgtoa@g+2,___flneg@f1+2
  2544   00190A  C09C  F008         	movff	efgtoa@g+3,___flneg@f1+3
  2545   00190E  EC11  F027         	call	___flneg	;wreg free
  2546   001912  C005  F099         	movff	?___flneg,efgtoa@g
  2547   001916  C006  F09A         	movff	?___flneg+1,efgtoa@g+1
  2548   00191A  C007  F09B         	movff	?___flneg+2,efgtoa@g+2
  2549   00191E  C008  F09C         	movff	?___flneg+3,efgtoa@g+3
  2550   001922                     l5017:
  2551                           
  2552                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  2553   001922  0E00               	movlw	0
  2554   001924  0100               	movlb	0	; () banked
  2555   001926  6F9E               	movwf	(efgtoa@n+1)& (0+255),b
  2556   001928  0E00               	movlw	0
  2557   00192A  6F9D               	movwf	efgtoa@n& (0+255),b
  2558   00192C                     
  2559                           ; BSR set to: 0
  2560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  2561   00192C  C0F3  F088         	movff	_width,efgtoa@w
  2562   001930  C0F4  F089         	movff	_width+1,efgtoa@w+1
  2563   001934                     
  2564                           ; BSR set to: 0
  2565                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  2566   001934  5198               	movf	efgtoa@sign& (0+255),w,b
  2567   001936  B4D8               	btfsc	status,2,c
  2568   001938  EFA0  F00C         	goto	u5571
  2569   00193C  EFA2  F00C         	goto	u5570
  2570   001940                     u5571:
  2571   001940  EFB6  F00C         	goto	l5031
  2572   001944                     u5570:
  2573   001944                     
  2574                           ; BSR set to: 0
  2575                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  2576   001944  5198               	movf	efgtoa@sign& (0+255),w,b
  2577   001946  A4D8               	btfss	status,2,c
  2578   001948  EFA8  F00C         	goto	u5581
  2579   00194C  EFAA  F00C         	goto	u5580
  2580   001950                     u5581:
  2581   001950  EFB0  F00C         	goto	l5027
  2582   001954                     u5580:
  2583   001954                     
  2584                           ; BSR set to: 0
  2585   001954  0E00               	movlw	0
  2586   001956  6F7E               	movwf	(_efgtoa$2533+1)& (0+255),b
  2587   001958  0E2B               	movlw	43
  2588   00195A  6F7D               	movwf	_efgtoa$2533& (0+255),b
  2589   00195C  EFB4  F00C         	goto	l5029
  2590   001960                     l5027:
  2591                           
  2592                           ; BSR set to: 0
  2593   001960  0E00               	movlw	0
  2594   001962  6F7E               	movwf	(_efgtoa$2533+1)& (0+255),b
  2595   001964  0E2D               	movlw	45
  2596   001966  6F7D               	movwf	_efgtoa$2533& (0+255),b
  2597   001968                     l5029:
  2598                           
  2599                           ; BSR set to: 0
  2600   001968  C07D  F098         	movff	_efgtoa$2533,efgtoa@sign
  2601   00196C                     l5031:
  2602                           
  2603                           ; BSR set to: 0
  2604                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2605   00196C  C099  F005         	movff	efgtoa@g,___fpclassifyf@x
  2606   001970  C09A  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2607   001974  C09B  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2608   001978  C09C  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2609   00197C  EC28  F021         	call	___fpclassifyf	;wreg free
  2610   001980  0405               	decf	?___fpclassifyf^0,w,c
  2611   001982  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2612   001984  A4D8               	btfss	status,2,c
  2613   001986  EFC7  F00C         	goto	u5591
  2614   00198A  EFC9  F00C         	goto	u5590
  2615   00198E                     u5591:
  2616   00198E  EFFC  F00C         	goto	l5049
  2617   001992                     u5590:
  2618   001992                     
  2619                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  2620   001992  0100               	movlb	0	; () banked
  2621   001994  5198               	movf	efgtoa@sign& (0+255),w,b
  2622   001996  B4D8               	btfsc	status,2,c
  2623   001998  EFD0  F00C         	goto	u5601
  2624   00199C  EFD2  F00C         	goto	u5600
  2625   0019A0                     u5601:
  2626   0019A0  EFDB  F00C         	goto	l5041
  2627   0019A4                     u5600:
  2628   0019A4                     
  2629                           ; BSR set to: 0
  2630                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  2631   0019A4  C098  F13C         	movff	efgtoa@sign,_dbuf
  2632   0019A8                     
  2633                           ; BSR set to: 0
  2634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  2635   0019A8  0788               	decf	efgtoa@w& (0+255),f,b
  2636   0019AA  A0D8               	btfss	status,0,c
  2637   0019AC  0789               	decf	(efgtoa@w+1)& (0+255),f,b
  2638   0019AE                     
  2639                           ; BSR set to: 0
  2640                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  2641   0019AE  0E00               	movlw	0
  2642   0019B0  6F9E               	movwf	(efgtoa@n+1)& (0+255),b
  2643   0019B2  0E01               	movlw	1
  2644   0019B4  6F9D               	movwf	efgtoa@n& (0+255),b
  2645   0019B6                     l5041:
  2646                           
  2647                           ; BSR set to: 0
  2648                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  2649   0019B6  0E3C               	movlw	low _dbuf
  2650   0019B8  259D               	addwf	efgtoa@n& (0+255),w,b
  2651   0019BA  6E05               	movwf	strcpy@dest^0,c
  2652   0019BC  0E01               	movlw	high _dbuf
  2653   0019BE  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2654   0019C0  6E06               	movwf	(strcpy@dest+1)^0,c
  2655   0019C2  0E22               	movlw	low STR_3
  2656   0019C4  6E07               	movwf	strcpy@src^0,c
  2657   0019C6  0E0E               	movlw	high STR_3
  2658   0019C8  6E08               	movwf	(strcpy@src+1)^0,c
  2659   0019CA  EC8C  F026         	call	_strcpy	;wreg free
  2660   0019CE                     l5043:
  2661                           
  2662                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2663   0019CE  0100               	movlb	0	; () banked
  2664   0019D0  0EFD               	movlw	253
  2665   0019D2  2788               	addwf	efgtoa@w& (0+255),f,b
  2666   0019D4  0EFF               	movlw	255
  2667   0019D6  2389               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2668   0019D8                     
  2669                           ; BSR set to: 0
  2670                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2671   0019D8  C070  F015         	movff	efgtoa@fp,pad@fp
  2672   0019DC  C071  F016         	movff	efgtoa@fp+1,pad@fp+1
  2673   0019E0  0E3C               	movlw	low _dbuf
  2674   0019E2  6E17               	movwf	pad@buf^0,c
  2675   0019E4  0E01               	movlw	high _dbuf
  2676   0019E6  6E18               	movwf	(pad@buf+1)^0,c
  2677   0019E8  C088  F019         	movff	efgtoa@w,pad@p
  2678   0019EC  C089  F01A         	movff	efgtoa@w+1,pad@p+1
  2679   0019F0  EC3B  F024         	call	_pad	;wreg free
  2680   0019F4  EF67  F011         	goto	l1138
  2681   0019F8                     l5049:
  2682                           
  2683                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2684   0019F8  C099  F005         	movff	efgtoa@g,___fpclassifyf@x
  2685   0019FC  C09A  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2686   001A00  C09B  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2687   001A04  C09C  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2688   001A08  EC28  F021         	call	___fpclassifyf	;wreg free
  2689   001A0C  5005               	movf	?___fpclassifyf^0,w,c
  2690   001A0E  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2691   001A10  A4D8               	btfss	status,2,c
  2692   001A12  EF0D  F00D         	goto	u5611
  2693   001A16  EF0F  F00D         	goto	u5610
  2694   001A1A                     u5611:
  2695   001A1A  EF2F  F00D         	goto	l5067
  2696   001A1E                     u5610:
  2697   001A1E                     
  2698                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  2699   001A1E  0100               	movlb	0	; () banked
  2700   001A20  5198               	movf	efgtoa@sign& (0+255),w,b
  2701   001A22  B4D8               	btfsc	status,2,c
  2702   001A24  EF16  F00D         	goto	u5621
  2703   001A28  EF18  F00D         	goto	u5620
  2704   001A2C                     u5621:
  2705   001A2C  EF21  F00D         	goto	l5059
  2706   001A30                     u5620:
  2707   001A30                     
  2708                           ; BSR set to: 0
  2709                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  2710   001A30  C098  F13C         	movff	efgtoa@sign,_dbuf
  2711   001A34                     
  2712                           ; BSR set to: 0
  2713                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  2714   001A34  0788               	decf	efgtoa@w& (0+255),f,b
  2715   001A36  A0D8               	btfss	status,0,c
  2716   001A38  0789               	decf	(efgtoa@w+1)& (0+255),f,b
  2717   001A3A                     
  2718                           ; BSR set to: 0
  2719                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  2720   001A3A  0E00               	movlw	0
  2721   001A3C  6F9E               	movwf	(efgtoa@n+1)& (0+255),b
  2722   001A3E  0E01               	movlw	1
  2723   001A40  6F9D               	movwf	efgtoa@n& (0+255),b
  2724   001A42                     l5059:
  2725                           
  2726                           ; BSR set to: 0
  2727                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  2728   001A42  0E3C               	movlw	low _dbuf
  2729   001A44  259D               	addwf	efgtoa@n& (0+255),w,b
  2730   001A46  6E05               	movwf	strcpy@dest^0,c
  2731   001A48  0E01               	movlw	high _dbuf
  2732   001A4A  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2733   001A4C  6E06               	movwf	(strcpy@dest+1)^0,c
  2734   001A4E  0E26               	movlw	low STR_6
  2735   001A50  6E07               	movwf	strcpy@src^0,c
  2736   001A52  0E0E               	movlw	high STR_6
  2737   001A54  6E08               	movwf	(strcpy@src+1)^0,c
  2738   001A56  EC8C  F026         	call	_strcpy	;wreg free
  2739   001A5A  EFE7  F00C         	goto	l5043
  2740   001A5E                     l5067:
  2741                           
  2742                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  2743   001A5E  0E00               	movlw	0
  2744   001A60  0100               	movlb	0	; () banked
  2745   001A62  6F9F               	movwf	efgtoa@u& (0+255),b
  2746   001A64  0E00               	movlw	0
  2747   001A66  6FA0               	movwf	(efgtoa@u+1)& (0+255),b
  2748   001A68  0E80               	movlw	128
  2749   001A6A  6FA1               	movwf	(efgtoa@u+2)& (0+255),b
  2750   001A6C  0E3F               	movlw	63
  2751   001A6E  6FA2               	movwf	(efgtoa@u+3)& (0+255),b
  2752                           
  2753                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  2754   001A70  0E00               	movlw	0
  2755   001A72  6F87               	movwf	(efgtoa@e+1)& (0+255),b
  2756   001A74  0E00               	movlw	0
  2757   001A76  6F86               	movwf	efgtoa@e& (0+255),b
  2758   001A78                     
  2759                           ; BSR set to: 0
  2760                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  2761   001A78  C099  F005         	movff	efgtoa@g,___fleq@ff1
  2762   001A7C  C09A  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  2763   001A80  C09B  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  2764   001A84  C09C  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  2765   001A88  0E00               	movlw	0
  2766   001A8A  6E09               	movwf	___fleq@ff2^0,c
  2767   001A8C  0E00               	movlw	0
  2768   001A8E  6E0A               	movwf	(___fleq@ff2+1)^0,c
  2769   001A90  0E00               	movlw	0
  2770   001A92  6E0B               	movwf	(___fleq@ff2+2)^0,c
  2771   001A94  0E00               	movlw	0
  2772   001A96  6E0C               	movwf	(___fleq@ff2+3)^0,c
  2773   001A98  EC59  F023         	call	___fleq	;wreg free
  2774   001A9C  B0D8               	btfsc	status,0,c
  2775   001A9E  EF53  F00D         	goto	u5631
  2776   001AA2  EF55  F00D         	goto	u5630
  2777   001AA6                     u5631:
  2778   001AA6  EF34  F00E         	goto	l1141
  2779   001AAA                     u5630:
  2780   001AAA  EF62  F00D         	goto	l5075
  2781   001AAE                     l1143:
  2782                           
  2783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  2784   001AAE  C08A  F09F         	movff	efgtoa@ou,efgtoa@u
  2785   001AB2  C08B  F0A0         	movff	efgtoa@ou+1,efgtoa@u+1
  2786   001AB6  C08C  F0A1         	movff	efgtoa@ou+2,efgtoa@u+2
  2787   001ABA  C08D  F0A2         	movff	efgtoa@ou+3,efgtoa@u+3
  2788   001ABE                     
  2789                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  2790   001ABE  0100               	movlb	0	; () banked
  2791   001AC0  4B86               	infsnz	efgtoa@e& (0+255),f,b
  2792   001AC2  2B87               	incf	(efgtoa@e+1)& (0+255),f,b
  2793   001AC4                     l5075:
  2794                           
  2795                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2796   001AC4  C09F  F015         	movff	efgtoa@u,___flmul@b
  2797   001AC8  C0A0  F016         	movff	efgtoa@u+1,___flmul@b+1
  2798   001ACC  C0A1  F017         	movff	efgtoa@u+2,___flmul@b+2
  2799   001AD0  C0A2  F018         	movff	efgtoa@u+3,___flmul@b+3
  2800   001AD4  0E00               	movlw	0
  2801   001AD6  6E19               	movwf	___flmul@a^0,c
  2802   001AD8  0E00               	movlw	0
  2803   001ADA  6E1A               	movwf	(___flmul@a+1)^0,c
  2804   001ADC  0E20               	movlw	32
  2805   001ADE  6E1B               	movwf	(___flmul@a+2)^0,c
  2806   001AE0  0E41               	movlw	65
  2807   001AE2  6E1C               	movwf	(___flmul@a+3)^0,c
  2808   001AE4  ECC8  F013         	call	___flmul	;wreg free
  2809   001AE8  C015  F08A         	movff	?___flmul,efgtoa@ou
  2810   001AEC  C016  F08B         	movff	?___flmul+1,efgtoa@ou+1
  2811   001AF0  C017  F08C         	movff	?___flmul+2,efgtoa@ou+2
  2812   001AF4  C018  F08D         	movff	?___flmul+3,efgtoa@ou+3
  2813   001AF8  0100               	movlb	0	; () banked
  2814   001AFA  518A               	movf	efgtoa@ou& (0+255),w,b
  2815   001AFC  5D99               	subwf	efgtoa@g& (0+255),w,b
  2816   001AFE  6E05               	movwf	labs@a^0,c
  2817   001B00  518B               	movf	(efgtoa@ou+1)& (0+255),w,b
  2818   001B02  599A               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2819   001B04  6E06               	movwf	(labs@a+1)^0,c
  2820   001B06  518C               	movf	(efgtoa@ou+2)& (0+255),w,b
  2821   001B08  599B               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2822   001B0A  6E07               	movwf	(labs@a+2)^0,c
  2823   001B0C  518D               	movf	(efgtoa@ou+3)& (0+255),w,b
  2824   001B0E  599C               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2825   001B10  6E08               	movwf	(labs@a+3)^0,c
  2826   001B12  ECEB  F024         	call	_labs	;wreg free
  2827   001B16  BE08               	btfsc	(?_labs+3)^0,7,c
  2828   001B18  EF99  F00D         	goto	u5641
  2829   001B1C  5008               	movf	(?_labs+3)^0,w,c
  2830   001B1E  1007               	iorwf	(?_labs+2)^0,w,c
  2831   001B20  1006               	iorwf	(?_labs+1)^0,w,c
  2832   001B22  E109               	bnz	u5640
  2833   001B24  0E02               	movlw	2
  2834   001B26  5C05               	subwf	?_labs^0,w,c
  2835   001B28  A0D8               	btfss	status,0,c
  2836   001B2A  EF99  F00D         	goto	u5641
  2837   001B2E  EF9B  F00D         	goto	u5640
  2838   001B32                     u5641:
  2839   001B32  EF57  F00D         	goto	l1143
  2840   001B36                     u5640:
  2841   001B36  C08A  F036         	movff	efgtoa@ou,___flge@ff1
  2842   001B3A  C08B  F037         	movff	efgtoa@ou+1,___flge@ff1+1
  2843   001B3E  C08C  F038         	movff	efgtoa@ou+2,___flge@ff1+2
  2844   001B42  C08D  F039         	movff	efgtoa@ou+3,___flge@ff1+3
  2845   001B46  C099  F03A         	movff	efgtoa@g,___flge@ff2
  2846   001B4A  C09A  F03B         	movff	efgtoa@g+1,___flge@ff2+1
  2847   001B4E  C09B  F03C         	movff	efgtoa@g+2,___flge@ff2+2
  2848   001B52  C09C  F03D         	movff	efgtoa@g+3,___flge@ff2+3
  2849   001B56  ECA6  F020         	call	___flge	;wreg free
  2850   001B5A  A0D8               	btfss	status,0,c
  2851   001B5C  EFB2  F00D         	goto	u5651
  2852   001B60  EFB4  F00D         	goto	u5650
  2853   001B64                     u5651:
  2854   001B64  EF57  F00D         	goto	l1143
  2855   001B68                     u5650:
  2856   001B68                     
  2857                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2858   001B68  0100               	movlb	0	; () banked
  2859   001B6A  519F               	movf	efgtoa@u& (0+255),w,b
  2860   001B6C  5D99               	subwf	efgtoa@g& (0+255),w,b
  2861   001B6E  6E05               	movwf	labs@a^0,c
  2862   001B70  51A0               	movf	(efgtoa@u+1)& (0+255),w,b
  2863   001B72  599A               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2864   001B74  6E06               	movwf	(labs@a+1)^0,c
  2865   001B76  51A1               	movf	(efgtoa@u+2)& (0+255),w,b
  2866   001B78  599B               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2867   001B7A  6E07               	movwf	(labs@a+2)^0,c
  2868   001B7C  51A2               	movf	(efgtoa@u+3)& (0+255),w,b
  2869   001B7E  599C               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2870   001B80  6E08               	movwf	(labs@a+3)^0,c
  2871   001B82  ECEB  F024         	call	_labs	;wreg free
  2872   001B86  BE08               	btfsc	(?_labs+3)^0,7,c
  2873   001B88  EFD3  F00D         	goto	u5660
  2874   001B8C  5008               	movf	(?_labs+3)^0,w,c
  2875   001B8E  1007               	iorwf	(?_labs+2)^0,w,c
  2876   001B90  1006               	iorwf	(?_labs+1)^0,w,c
  2877   001B92  E107               	bnz	u5661
  2878   001B94  0E02               	movlw	2
  2879   001B96  5C05               	subwf	?_labs^0,w,c
  2880   001B98  B0D8               	btfsc	status,0,c
  2881   001B9A  EFD1  F00D         	goto	u5661
  2882   001B9E  EFD3  F00D         	goto	u5660
  2883   001BA2                     u5661:
  2884   001BA2  EF1B  F00E         	goto	l5093
  2885   001BA6                     u5660:
  2886   001BA6                     l5083:
  2887                           
  2888                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  2889   001BA6  C09F  F099         	movff	efgtoa@u,efgtoa@g
  2890   001BAA  C0A0  F09A         	movff	efgtoa@u+1,efgtoa@g+1
  2891   001BAE  C0A1  F09B         	movff	efgtoa@u+2,efgtoa@g+2
  2892   001BB2  C0A2  F09C         	movff	efgtoa@u+3,efgtoa@g+3
  2893                           
  2894                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  2895   001BB6  EF34  F00E         	goto	l1141
  2896   001BBA                     l5085:
  2897                           
  2898                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  2899   001BBA  C09F  F036         	movff	efgtoa@u,___fldiv@b
  2900   001BBE  C0A0  F037         	movff	efgtoa@u+1,___fldiv@b+1
  2901   001BC2  C0A1  F038         	movff	efgtoa@u+2,___fldiv@b+2
  2902   001BC6  C0A2  F039         	movff	efgtoa@u+3,___fldiv@b+3
  2903   001BCA  0E00               	movlw	0
  2904   001BCC  6E3A               	movwf	___fldiv@a^0,c
  2905   001BCE  0E00               	movlw	0
  2906   001BD0  6E3B               	movwf	(___fldiv@a+1)^0,c
  2907   001BD2  0E20               	movlw	32
  2908   001BD4  6E3C               	movwf	(___fldiv@a+2)^0,c
  2909   001BD6  0E41               	movlw	65
  2910   001BD8  6E3D               	movwf	(___fldiv@a+3)^0,c
  2911   001BDA  ECDD  F015         	call	___fldiv	;wreg free
  2912   001BDE  C036  F09F         	movff	?___fldiv,efgtoa@u
  2913   001BE2  C037  F0A0         	movff	?___fldiv+1,efgtoa@u+1
  2914   001BE6  C038  F0A1         	movff	?___fldiv+2,efgtoa@u+2
  2915   001BEA  C039  F0A2         	movff	?___fldiv+3,efgtoa@u+3
  2916   001BEE                     
  2917                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  2918   001BEE  0100               	movlb	0	; () banked
  2919   001BF0  0786               	decf	efgtoa@e& (0+255),f,b
  2920   001BF2  A0D8               	btfss	status,0,c
  2921   001BF4  0787               	decf	(efgtoa@e+1)& (0+255),f,b
  2922   001BF6                     
  2923                           ; BSR set to: 0
  2924                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2925   001BF6  519F               	movf	efgtoa@u& (0+255),w,b
  2926   001BF8  5D99               	subwf	efgtoa@g& (0+255),w,b
  2927   001BFA  6E05               	movwf	labs@a^0,c
  2928   001BFC  51A0               	movf	(efgtoa@u+1)& (0+255),w,b
  2929   001BFE  599A               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2930   001C00  6E06               	movwf	(labs@a+1)^0,c
  2931   001C02  51A1               	movf	(efgtoa@u+2)& (0+255),w,b
  2932   001C04  599B               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2933   001C06  6E07               	movwf	(labs@a+2)^0,c
  2934   001C08  51A2               	movf	(efgtoa@u+3)& (0+255),w,b
  2935   001C0A  599C               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2936   001C0C  6E08               	movwf	(labs@a+3)^0,c
  2937   001C0E  ECEB  F024         	call	_labs	;wreg free
  2938   001C12  BE08               	btfsc	(?_labs+3)^0,7,c
  2939   001C14  EF19  F00E         	goto	u5670
  2940   001C18  5008               	movf	(?_labs+3)^0,w,c
  2941   001C1A  1007               	iorwf	(?_labs+2)^0,w,c
  2942   001C1C  1006               	iorwf	(?_labs+1)^0,w,c
  2943   001C1E  E107               	bnz	u5671
  2944   001C20  0E02               	movlw	2
  2945   001C22  5C05               	subwf	?_labs^0,w,c
  2946   001C24  B0D8               	btfsc	status,0,c
  2947   001C26  EF17  F00E         	goto	u5671
  2948   001C2A  EF19  F00E         	goto	u5670
  2949   001C2E                     u5671:
  2950   001C2E  EF1B  F00E         	goto	l5093
  2951   001C32                     u5670:
  2952   001C32  EFD3  F00D         	goto	l5083
  2953   001C36                     l5093:
  2954                           
  2955                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  2956   001C36  C099  F036         	movff	efgtoa@g,___flge@ff1
  2957   001C3A  C09A  F037         	movff	efgtoa@g+1,___flge@ff1+1
  2958   001C3E  C09B  F038         	movff	efgtoa@g+2,___flge@ff1+2
  2959   001C42  C09C  F039         	movff	efgtoa@g+3,___flge@ff1+3
  2960   001C46  C09F  F03A         	movff	efgtoa@u,___flge@ff2
  2961   001C4A  C0A0  F03B         	movff	efgtoa@u+1,___flge@ff2+1
  2962   001C4E  C0A1  F03C         	movff	efgtoa@u+2,___flge@ff2+2
  2963   001C52  C0A2  F03D         	movff	efgtoa@u+3,___flge@ff2+3
  2964   001C56  ECA6  F020         	call	___flge	;wreg free
  2965   001C5A  A0D8               	btfss	status,0,c
  2966   001C5C  EF32  F00E         	goto	u5681
  2967   001C60  EF34  F00E         	goto	u5680
  2968   001C64                     u5681:
  2969   001C64  EFDD  F00D         	goto	l5085
  2970   001C68                     u5680:
  2971   001C68                     l1141:
  2972                           
  2973                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  2974   001C68  C076  F080         	movff	efgtoa@c,efgtoa@mode
  2975                           
  2976                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  2977   001C6C  C080  F081         	movff	efgtoa@mode,efgtoa@nmode
  2978   001C70                     
  2979                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  2980   001C70  0100               	movlb	0	; () banked
  2981   001C72  BFF6               	btfsc	(_prec+1)& (0+255),7,b
  2982   001C74  EF3E  F00E         	goto	u5691
  2983   001C78  EF40  F00E         	goto	u5690
  2984   001C7C                     u5691:
  2985   001C7C  EF46  F00E         	goto	l5099
  2986   001C80                     u5690:
  2987   001C80                     
  2988                           ; BSR set to: 0
  2989   001C80  C0F5  F079         	movff	_prec,efgtoa@p
  2990   001C84  C0F6  F07A         	movff	_prec+1,efgtoa@p+1
  2991   001C88  EF4A  F00E         	goto	l5101
  2992   001C8C                     l5099:
  2993                           
  2994                           ; BSR set to: 0
  2995   001C8C  0E00               	movlw	0
  2996   001C8E  6F7A               	movwf	(efgtoa@p+1)& (0+255),b
  2997   001C90  0E06               	movlw	6
  2998   001C92  6F79               	movwf	efgtoa@p& (0+255),b
  2999   001C94                     l5101:
  3000                           
  3001                           ; BSR set to: 0
  3002                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3003   001C94  C079  F084         	movff	efgtoa@p,efgtoa@m
  3004   001C98  C07A  F085         	movff	efgtoa@p+1,efgtoa@m+1
  3005   001C9C                     
  3006                           ; BSR set to: 0
  3007                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  3008   001C9C  4B84               	infsnz	efgtoa@m& (0+255),f,b
  3009   001C9E  2B85               	incf	(efgtoa@m+1)& (0+255),f,b
  3010   001CA0                     
  3011                           ; BSR set to: 0
  3012                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  3013   001CA0  0E66               	movlw	102
  3014   001CA2  1981               	xorwf	efgtoa@nmode& (0+255),w,b
  3015   001CA4  A4D8               	btfss	status,2,c
  3016   001CA6  EF57  F00E         	goto	u5701
  3017   001CAA  EF59  F00E         	goto	u5700
  3018   001CAE                     u5701:
  3019   001CAE  EF79  F00E         	goto	l5115
  3020   001CB2                     u5700:
  3021   001CB2                     
  3022                           ; BSR set to: 0
  3023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  3024   001CB2  BF87               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3025   001CB4  EF60  F00E         	goto	u5710
  3026   001CB8  EF5E  F00E         	goto	u5711
  3027   001CBC                     u5711:
  3028   001CBC  EF6C  F00E         	goto	l5111
  3029   001CC0                     u5710:
  3030   001CC0                     
  3031                           ; BSR set to: 0
  3032                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  3033   001CC0  0E00               	movlw	0
  3034   001CC2  6F9F               	movwf	efgtoa@u& (0+255),b
  3035   001CC4  0E00               	movlw	0
  3036   001CC6  6FA0               	movwf	(efgtoa@u+1)& (0+255),b
  3037   001CC8  0E80               	movlw	128
  3038   001CCA  6FA1               	movwf	(efgtoa@u+2)& (0+255),b
  3039   001CCC  0E3F               	movlw	63
  3040   001CCE  6FA2               	movwf	(efgtoa@u+3)& (0+255),b
  3041                           
  3042                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  3043   001CD0  0E00               	movlw	0
  3044   001CD2  6F87               	movwf	(efgtoa@e+1)& (0+255),b
  3045   001CD4  0E00               	movlw	0
  3046   001CD6  6F86               	movwf	efgtoa@e& (0+255),b
  3047   001CD8                     l5111:
  3048                           
  3049                           ; BSR set to: 0
  3050                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  3051   001CD8  0E67               	movlw	103
  3052   001CDA  1980               	xorwf	efgtoa@mode& (0+255),w,b
  3053   001CDC  B4D8               	btfsc	status,2,c
  3054   001CDE  EF73  F00E         	goto	u5721
  3055   001CE2  EF75  F00E         	goto	u5720
  3056   001CE6                     u5721:
  3057   001CE6  EF79  F00E         	goto	l5115
  3058   001CEA                     u5720:
  3059   001CEA                     
  3060                           ; BSR set to: 0
  3061                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  3062   001CEA  5186               	movf	efgtoa@e& (0+255),w,b
  3063   001CEC  2784               	addwf	efgtoa@m& (0+255),f,b
  3064   001CEE  5187               	movf	(efgtoa@e+1)& (0+255),w,b
  3065   001CF0  2385               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3066   001CF2                     l5115:
  3067                           
  3068                           ; BSR set to: 0
  3069                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  3070   001CF2  0E00               	movlw	0
  3071   001CF4  6F8F               	movwf	(efgtoa@i+1)& (0+255),b
  3072   001CF6  0E00               	movlw	0
  3073   001CF8  6F8E               	movwf	efgtoa@i& (0+255),b
  3074   001CFA                     
  3075                           ; BSR set to: 0
  3076                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  3077   001CFA  C099  F090         	movff	efgtoa@g,efgtoa@h
  3078   001CFE  C09A  F091         	movff	efgtoa@g+1,efgtoa@h+1
  3079   001D02  C09B  F092         	movff	efgtoa@g+2,efgtoa@h+2
  3080   001D06  C09C  F093         	movff	efgtoa@g+3,efgtoa@h+3
  3081   001D0A                     
  3082                           ; BSR set to: 0
  3083                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  3084   001D0A  C09F  F08A         	movff	efgtoa@u,efgtoa@ou
  3085   001D0E  C0A0  F08B         	movff	efgtoa@u+1,efgtoa@ou+1
  3086   001D12  C0A1  F08C         	movff	efgtoa@u+2,efgtoa@ou+2
  3087   001D16  C0A2  F08D         	movff	efgtoa@u+3,efgtoa@ou+3
  3088                           
  3089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3090   001D1A  EF0A  F00F         	goto	l5129
  3091   001D1E                     l5121:
  3092                           
  3093                           ; BSR set to: 0
  3094                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  3095   001D1E  C090  F036         	movff	efgtoa@h,___fldiv@b
  3096   001D22  C091  F037         	movff	efgtoa@h+1,___fldiv@b+1
  3097   001D26  C092  F038         	movff	efgtoa@h+2,___fldiv@b+2
  3098   001D2A  C093  F039         	movff	efgtoa@h+3,___fldiv@b+3
  3099   001D2E  C09F  F03A         	movff	efgtoa@u,___fldiv@a
  3100   001D32  C0A0  F03B         	movff	efgtoa@u+1,___fldiv@a+1
  3101   001D36  C0A1  F03C         	movff	efgtoa@u+2,___fldiv@a+2
  3102   001D3A  C0A2  F03D         	movff	efgtoa@u+3,___fldiv@a+3
  3103   001D3E  ECDD  F015         	call	___fldiv	;wreg free
  3104   001D42  C036  F04F         	movff	?___fldiv,floorf@x
  3105   001D46  C037  F050         	movff	?___fldiv+1,floorf@x+1
  3106   001D4A  C038  F051         	movff	?___fldiv+2,floorf@x+2
  3107   001D4E  C039  F052         	movff	?___fldiv+3,floorf@x+3
  3108   001D52  EC8F  F01B         	call	_floorf	;wreg free
  3109   001D56  C04F  F094         	movff	?_floorf,efgtoa@l
  3110   001D5A  C050  F095         	movff	?_floorf+1,efgtoa@l+1
  3111   001D5E  C051  F096         	movff	?_floorf+2,efgtoa@l+2
  3112   001D62  C052  F097         	movff	?_floorf+3,efgtoa@l+3
  3113                           
  3114                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  3115   001D66  C094  F005         	movff	efgtoa@l,___fltol@f1
  3116   001D6A  C095  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3117   001D6E  C096  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3118   001D72  C097  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3119   001D76  ECA0  F01F         	call	___fltol	;wreg free
  3120   001D7A  C005  F082         	movff	?___fltol,efgtoa@d
  3121   001D7E  C006  F083         	movff	?___fltol+1,efgtoa@d+1
  3122   001D82                     
  3123                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  3124   001D82  C090  F02E         	movff	efgtoa@h,___flsub@b
  3125   001D86  C091  F02F         	movff	efgtoa@h+1,___flsub@b+1
  3126   001D8A  C092  F030         	movff	efgtoa@h+2,___flsub@b+2
  3127   001D8E  C093  F031         	movff	efgtoa@h+3,___flsub@b+3
  3128   001D92  C094  F019         	movff	efgtoa@l,___flmul@a
  3129   001D96  C095  F01A         	movff	efgtoa@l+1,___flmul@a+1
  3130   001D9A  C096  F01B         	movff	efgtoa@l+2,___flmul@a+2
  3131   001D9E  C097  F01C         	movff	efgtoa@l+3,___flmul@a+3
  3132   001DA2  C09F  F015         	movff	efgtoa@u,___flmul@b
  3133   001DA6  C0A0  F016         	movff	efgtoa@u+1,___flmul@b+1
  3134   001DAA  C0A1  F017         	movff	efgtoa@u+2,___flmul@b+2
  3135   001DAE  C0A2  F018         	movff	efgtoa@u+3,___flmul@b+3
  3136   001DB2  ECC8  F013         	call	___flmul	;wreg free
  3137   001DB6  C015  F032         	movff	?___flmul,___flsub@a
  3138   001DBA  C016  F033         	movff	?___flmul+1,___flsub@a+1
  3139   001DBE  C017  F034         	movff	?___flmul+2,___flsub@a+2
  3140   001DC2  C018  F035         	movff	?___flmul+3,___flsub@a+3
  3141   001DC6  EC69  F026         	call	___flsub	;wreg free
  3142   001DCA  C02E  F090         	movff	?___flsub,efgtoa@h
  3143   001DCE  C02F  F091         	movff	?___flsub+1,efgtoa@h+1
  3144   001DD2  C030  F092         	movff	?___flsub+2,efgtoa@h+2
  3145   001DD6  C031  F093         	movff	?___flsub+3,efgtoa@h+3
  3146   001DDA                     
  3147                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  3148   001DDA  C09F  F036         	movff	efgtoa@u,___fldiv@b
  3149   001DDE  C0A0  F037         	movff	efgtoa@u+1,___fldiv@b+1
  3150   001DE2  C0A1  F038         	movff	efgtoa@u+2,___fldiv@b+2
  3151   001DE6  C0A2  F039         	movff	efgtoa@u+3,___fldiv@b+3
  3152   001DEA  0E00               	movlw	0
  3153   001DEC  6E3A               	movwf	___fldiv@a^0,c
  3154   001DEE  0E00               	movlw	0
  3155   001DF0  6E3B               	movwf	(___fldiv@a+1)^0,c
  3156   001DF2  0E20               	movlw	32
  3157   001DF4  6E3C               	movwf	(___fldiv@a+2)^0,c
  3158   001DF6  0E41               	movlw	65
  3159   001DF8  6E3D               	movwf	(___fldiv@a+3)^0,c
  3160   001DFA  ECDD  F015         	call	___fldiv	;wreg free
  3161   001DFE  C036  F09F         	movff	?___fldiv,efgtoa@u
  3162   001E02  C037  F0A0         	movff	?___fldiv+1,efgtoa@u+1
  3163   001E06  C038  F0A1         	movff	?___fldiv+2,efgtoa@u+2
  3164   001E0A  C039  F0A2         	movff	?___fldiv+3,efgtoa@u+3
  3165   001E0E                     
  3166                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  3167   001E0E  0100               	movlb	0	; () banked
  3168   001E10  4B8E               	infsnz	efgtoa@i& (0+255),f,b
  3169   001E12  2B8F               	incf	(efgtoa@i+1)& (0+255),f,b
  3170   001E14                     l5129:
  3171                           
  3172                           ; BSR set to: 0
  3173                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3174   001E14  5184               	movf	efgtoa@m& (0+255),w,b
  3175   001E16  5D8E               	subwf	efgtoa@i& (0+255),w,b
  3176   001E18  518F               	movf	(efgtoa@i+1)& (0+255),w,b
  3177   001E1A  0A80               	xorlw	128
  3178   001E1C  6E53               	movwf	??_efgtoa^0,c
  3179   001E1E  5185               	movf	(efgtoa@m+1)& (0+255),w,b
  3180   001E20  0A80               	xorlw	128
  3181   001E22  5853               	subwfb	??_efgtoa^0,w,c
  3182   001E24  A0D8               	btfss	status,0,c
  3183   001E26  EF17  F00F         	goto	u5731
  3184   001E2A  EF19  F00F         	goto	u5730
  3185   001E2E                     u5731:
  3186   001E2E  EF8F  F00E         	goto	l5121
  3187   001E32                     u5730:
  3188   001E32                     
  3189                           ; BSR set to: 0
  3190                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  3191   001E32  C09F  F015         	movff	efgtoa@u,___flmul@b
  3192   001E36  C0A0  F016         	movff	efgtoa@u+1,___flmul@b+1
  3193   001E3A  C0A1  F017         	movff	efgtoa@u+2,___flmul@b+2
  3194   001E3E  C0A2  F018         	movff	efgtoa@u+3,___flmul@b+3
  3195   001E42  0E00               	movlw	0
  3196   001E44  6E19               	movwf	___flmul@a^0,c
  3197   001E46  0E00               	movlw	0
  3198   001E48  6E1A               	movwf	(___flmul@a+1)^0,c
  3199   001E4A  0EA0               	movlw	160
  3200   001E4C  6E1B               	movwf	(___flmul@a+2)^0,c
  3201   001E4E  0E40               	movlw	64
  3202   001E50  6E1C               	movwf	(___flmul@a+3)^0,c
  3203   001E52  ECC8  F013         	call	___flmul	;wreg free
  3204   001E56  C015  F094         	movff	?___flmul,efgtoa@l
  3205   001E5A  C016  F095         	movff	?___flmul+1,efgtoa@l+1
  3206   001E5E  C017  F096         	movff	?___flmul+2,efgtoa@l+2
  3207   001E62  C018  F097         	movff	?___flmul+3,efgtoa@l+3
  3208   001E66                     
  3209                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  3210   001E66  C090  F036         	movff	efgtoa@h,___flge@ff1
  3211   001E6A  C091  F037         	movff	efgtoa@h+1,___flge@ff1+1
  3212   001E6E  C092  F038         	movff	efgtoa@h+2,___flge@ff1+2
  3213   001E72  C093  F039         	movff	efgtoa@h+3,___flge@ff1+3
  3214   001E76  C094  F03A         	movff	efgtoa@l,___flge@ff2
  3215   001E7A  C095  F03B         	movff	efgtoa@l+1,___flge@ff2+1
  3216   001E7E  C096  F03C         	movff	efgtoa@l+2,___flge@ff2+2
  3217   001E82  C097  F03D         	movff	efgtoa@l+3,___flge@ff2+3
  3218   001E86  ECA6  F020         	call	___flge	;wreg free
  3219   001E8A  B0D8               	btfsc	status,0,c
  3220   001E8C  EF4A  F00F         	goto	u5741
  3221   001E90  EF4C  F00F         	goto	u5740
  3222   001E94                     u5741:
  3223   001E94  EF57  F00F         	goto	l5137
  3224   001E98                     u5740:
  3225   001E98                     
  3226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  3227   001E98  0E00               	movlw	0
  3228   001E9A  0100               	movlb	0	; () banked
  3229   001E9C  6F94               	movwf	efgtoa@l& (0+255),b
  3230   001E9E  0E00               	movlw	0
  3231   001EA0  6F95               	movwf	(efgtoa@l+1)& (0+255),b
  3232   001EA2  0E00               	movlw	0
  3233   001EA4  6F96               	movwf	(efgtoa@l+2)& (0+255),b
  3234   001EA6  0E00               	movlw	0
  3235   001EA8  6F97               	movwf	(efgtoa@l+3)& (0+255),b
  3236                           
  3237                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  3238   001EAA  EF80  F00F         	goto	l5143
  3239   001EAE                     l5137:
  3240                           
  3241                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  3242   001EAE  C090  F005         	movff	efgtoa@h,___fleq@ff1
  3243   001EB2  C091  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  3244   001EB6  C092  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  3245   001EBA  C093  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  3246   001EBE  C094  F009         	movff	efgtoa@l,___fleq@ff2
  3247   001EC2  C095  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  3248   001EC6  C096  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  3249   001ECA  C097  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  3250   001ECE  EC59  F023         	call	___fleq	;wreg free
  3251   001ED2  A0D8               	btfss	status,0,c
  3252   001ED4  EF6E  F00F         	goto	u5751
  3253   001ED8  EF70  F00F         	goto	u5750
  3254   001EDC                     u5751:
  3255   001EDC  EF80  F00F         	goto	l5143
  3256   001EE0                     u5750:
  3257   001EE0  0100               	movlb	0	; () banked
  3258   001EE2  B182               	btfsc	efgtoa@d& (0+255),0,b
  3259   001EE4  EF76  F00F         	goto	u5761
  3260   001EE8  EF78  F00F         	goto	u5760
  3261   001EEC                     u5761:
  3262   001EEC  EF80  F00F         	goto	l5143
  3263   001EF0                     u5760:
  3264   001EF0                     
  3265                           ; BSR set to: 0
  3266                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  3267   001EF0  0E00               	movlw	0
  3268   001EF2  6F94               	movwf	efgtoa@l& (0+255),b
  3269   001EF4  0E00               	movlw	0
  3270   001EF6  6F95               	movwf	(efgtoa@l+1)& (0+255),b
  3271   001EF8  0E00               	movlw	0
  3272   001EFA  6F96               	movwf	(efgtoa@l+2)& (0+255),b
  3273   001EFC  0E00               	movlw	0
  3274   001EFE  6F97               	movwf	(efgtoa@l+3)& (0+255),b
  3275   001F00                     l5143:
  3276                           
  3277                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  3278   001F00  C099  F005         	movff	efgtoa@g,___fladd@b
  3279   001F04  C09A  F006         	movff	efgtoa@g+1,___fladd@b+1
  3280   001F08  C09B  F007         	movff	efgtoa@g+2,___fladd@b+2
  3281   001F0C  C09C  F008         	movff	efgtoa@g+3,___fladd@b+3
  3282   001F10  C094  F009         	movff	efgtoa@l,___fladd@a
  3283   001F14  C095  F00A         	movff	efgtoa@l+1,___fladd@a+1
  3284   001F18  C096  F00B         	movff	efgtoa@l+2,___fladd@a+2
  3285   001F1C  C097  F00C         	movff	efgtoa@l+3,___fladd@a+3
  3286   001F20  EC68  F011         	call	___fladd	;wreg free
  3287   001F24  C005  F090         	movff	?___fladd,efgtoa@h
  3288   001F28  C006  F091         	movff	?___fladd+1,efgtoa@h+1
  3289   001F2C  C007  F092         	movff	?___fladd+2,efgtoa@h+2
  3290   001F30  C008  F093         	movff	?___fladd+3,efgtoa@h+3
  3291   001F34                     
  3292                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  3293   001F34  C090  F036         	movff	efgtoa@h,___flge@ff1
  3294   001F38  C091  F037         	movff	efgtoa@h+1,___flge@ff1+1
  3295   001F3C  C092  F038         	movff	efgtoa@h+2,___flge@ff1+2
  3296   001F40  C093  F039         	movff	efgtoa@h+3,___flge@ff1+3
  3297   001F44  0E00               	movlw	0
  3298   001F46  6E19               	movwf	___flmul@a^0,c
  3299   001F48  0E00               	movlw	0
  3300   001F4A  6E1A               	movwf	(___flmul@a+1)^0,c
  3301   001F4C  0E20               	movlw	32
  3302   001F4E  6E1B               	movwf	(___flmul@a+2)^0,c
  3303   001F50  0E41               	movlw	65
  3304   001F52  6E1C               	movwf	(___flmul@a+3)^0,c
  3305   001F54  C08A  F015         	movff	efgtoa@ou,___flmul@b
  3306   001F58  C08B  F016         	movff	efgtoa@ou+1,___flmul@b+1
  3307   001F5C  C08C  F017         	movff	efgtoa@ou+2,___flmul@b+2
  3308   001F60  C08D  F018         	movff	efgtoa@ou+3,___flmul@b+3
  3309   001F64  ECC8  F013         	call	___flmul	;wreg free
  3310   001F68  C015  F03A         	movff	?___flmul,___flge@ff2
  3311   001F6C  C016  F03B         	movff	?___flmul+1,___flge@ff2+1
  3312   001F70  C017  F03C         	movff	?___flmul+2,___flge@ff2+2
  3313   001F74  C018  F03D         	movff	?___flmul+3,___flge@ff2+3
  3314   001F78  ECA6  F020         	call	___flge	;wreg free
  3315   001F7C  A0D8               	btfss	status,0,c
  3316   001F7E  EFC3  F00F         	goto	u5771
  3317   001F82  EFC5  F00F         	goto	u5770
  3318   001F86                     u5771:
  3319   001F86  EFEE  F00F         	goto	l5155
  3320   001F8A                     u5770:
  3321   001F8A                     
  3322                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  3323   001F8A  0100               	movlb	0	; () banked
  3324   001F8C  4B86               	infsnz	efgtoa@e& (0+255),f,b
  3325   001F8E  2B87               	incf	(efgtoa@e+1)& (0+255),f,b
  3326   001F90                     
  3327                           ; BSR set to: 0
  3328                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  3329   001F90  C08A  F015         	movff	efgtoa@ou,___flmul@b
  3330   001F94  C08B  F016         	movff	efgtoa@ou+1,___flmul@b+1
  3331   001F98  C08C  F017         	movff	efgtoa@ou+2,___flmul@b+2
  3332   001F9C  C08D  F018         	movff	efgtoa@ou+3,___flmul@b+3
  3333   001FA0  0E00               	movlw	0
  3334   001FA2  6E19               	movwf	___flmul@a^0,c
  3335   001FA4  0E00               	movlw	0
  3336   001FA6  6E1A               	movwf	(___flmul@a+1)^0,c
  3337   001FA8  0E20               	movlw	32
  3338   001FAA  6E1B               	movwf	(___flmul@a+2)^0,c
  3339   001FAC  0E41               	movlw	65
  3340   001FAE  6E1C               	movwf	(___flmul@a+3)^0,c
  3341   001FB0  ECC8  F013         	call	___flmul	;wreg free
  3342   001FB4  C015  F08A         	movff	?___flmul,efgtoa@ou
  3343   001FB8  C016  F08B         	movff	?___flmul+1,efgtoa@ou+1
  3344   001FBC  C017  F08C         	movff	?___flmul+2,efgtoa@ou+2
  3345   001FC0  C018  F08D         	movff	?___flmul+3,efgtoa@ou+3
  3346   001FC4                     
  3347                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  3348   001FC4  0E66               	movlw	102
  3349   001FC6  0100               	movlb	0	; () banked
  3350   001FC8  1981               	xorwf	efgtoa@nmode& (0+255),w,b
  3351   001FCA  A4D8               	btfss	status,2,c
  3352   001FCC  EFEA  F00F         	goto	u5781
  3353   001FD0  EFEC  F00F         	goto	u5780
  3354   001FD4                     u5781:
  3355   001FD4  EFEE  F00F         	goto	l5155
  3356   001FD8                     u5780:
  3357   001FD8                     
  3358                           ; BSR set to: 0
  3359                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  3360   001FD8  4B84               	infsnz	efgtoa@m& (0+255),f,b
  3361   001FDA  2B85               	incf	(efgtoa@m+1)& (0+255),f,b
  3362   001FDC                     l5155:
  3363                           
  3364                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  3365   001FDC  C08A  F09F         	movff	efgtoa@ou,efgtoa@u
  3366   001FE0  C08B  F0A0         	movff	efgtoa@ou+1,efgtoa@u+1
  3367   001FE4  C08C  F0A1         	movff	efgtoa@ou+2,efgtoa@u+2
  3368   001FE8  C08D  F0A2         	movff	efgtoa@ou+3,efgtoa@u+3
  3369   001FEC                     
  3370                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  3371   001FEC  C086  F077         	movff	efgtoa@e,efgtoa@ne
  3372   001FF0  C087  F078         	movff	efgtoa@e+1,efgtoa@ne+1
  3373   001FF4                     
  3374                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  3375   001FF4  0E00               	movlw	0
  3376   001FF6  0100               	movlb	0	; () banked
  3377   001FF8  6F7F               	movwf	efgtoa@pp& (0+255),b
  3378   001FFA                     
  3379                           ; BSR set to: 0
  3380                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  3381   001FFA  0E00               	movlw	0
  3382   001FFC  6F7C               	movwf	(efgtoa@t+1)& (0+255),b
  3383   001FFE  0E00               	movlw	0
  3384   002000  6F7B               	movwf	efgtoa@t& (0+255),b
  3385   002002                     
  3386                           ; BSR set to: 0
  3387                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  3388   002002  0E00               	movlw	0
  3389   002004  6F8F               	movwf	(efgtoa@i+1)& (0+255),b
  3390   002006  0E00               	movlw	0
  3391   002008  6F8E               	movwf	efgtoa@i& (0+255),b
  3392                           
  3393                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3394   00200A  EFEC  F010         	goto	l5205
  3395   00200E                     l5165:
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  3399   00200E  C090  F036         	movff	efgtoa@h,___fldiv@b
  3400   002012  C091  F037         	movff	efgtoa@h+1,___fldiv@b+1
  3401   002016  C092  F038         	movff	efgtoa@h+2,___fldiv@b+2
  3402   00201A  C093  F039         	movff	efgtoa@h+3,___fldiv@b+3
  3403   00201E  C09F  F03A         	movff	efgtoa@u,___fldiv@a
  3404   002022  C0A0  F03B         	movff	efgtoa@u+1,___fldiv@a+1
  3405   002026  C0A1  F03C         	movff	efgtoa@u+2,___fldiv@a+2
  3406   00202A  C0A2  F03D         	movff	efgtoa@u+3,___fldiv@a+3
  3407   00202E  ECDD  F015         	call	___fldiv	;wreg free
  3408   002032  C036  F04F         	movff	?___fldiv,floorf@x
  3409   002036  C037  F050         	movff	?___fldiv+1,floorf@x+1
  3410   00203A  C038  F051         	movff	?___fldiv+2,floorf@x+2
  3411   00203E  C039  F052         	movff	?___fldiv+3,floorf@x+3
  3412   002042  EC8F  F01B         	call	_floorf	;wreg free
  3413   002046  C04F  F094         	movff	?_floorf,efgtoa@l
  3414   00204A  C050  F095         	movff	?_floorf+1,efgtoa@l+1
  3415   00204E  C051  F096         	movff	?_floorf+2,efgtoa@l+2
  3416   002052  C052  F097         	movff	?_floorf+3,efgtoa@l+3
  3417                           
  3418                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3419   002056  C094  F005         	movff	efgtoa@l,___fltol@f1
  3420   00205A  C095  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3421   00205E  C096  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3422   002062  C097  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3423   002066  ECA0  F01F         	call	___fltol	;wreg free
  3424   00206A  BE06               	btfsc	(?___fltol+1)^0,7,c
  3425   00206C  EF43  F010         	goto	u5790
  3426   002070  5006               	movf	(?___fltol+1)^0,w,c
  3427   002072  E107               	bnz	u5791
  3428   002074  0E0A               	movlw	10
  3429   002076  5C05               	subwf	?___fltol^0,w,c
  3430   002078  B0D8               	btfsc	status,0,c
  3431   00207A  EF41  F010         	goto	u5791
  3432   00207E  EF43  F010         	goto	u5790
  3433   002082                     u5791:
  3434   002082  EF53  F010         	goto	l5169
  3435   002086                     u5790:
  3436   002086  C094  F005         	movff	efgtoa@l,___fltol@f1
  3437   00208A  C095  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3438   00208E  C096  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3439   002092  C097  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3440   002096  ECA0  F01F         	call	___fltol	;wreg free
  3441   00209A  C005  F082         	movff	?___fltol,efgtoa@d
  3442   00209E  C006  F083         	movff	?___fltol+1,efgtoa@d+1
  3443   0020A2  EF58  F010         	goto	l1171
  3444   0020A6                     l5169:
  3445   0020A6  0E00               	movlw	0
  3446   0020A8  0100               	movlb	0	; () banked
  3447   0020AA  6F83               	movwf	(efgtoa@d+1)& (0+255),b
  3448   0020AC  0E09               	movlw	9
  3449   0020AE  6F82               	movwf	efgtoa@d& (0+255),b
  3450   0020B0                     l1171:
  3451                           
  3452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  3453   0020B0  0100               	movlb	0	; () banked
  3454   0020B2  517F               	movf	efgtoa@pp& (0+255),w,b
  3455   0020B4  A4D8               	btfss	status,2,c
  3456   0020B6  EF5F  F010         	goto	u5801
  3457   0020BA  EF61  F010         	goto	u5800
  3458   0020BE                     u5801:
  3459   0020BE  EF89  F010         	goto	l5189
  3460   0020C2                     u5800:
  3461   0020C2                     
  3462                           ; BSR set to: 0
  3463   0020C2  BF78               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3464   0020C4  EF68  F010         	goto	u5810
  3465   0020C8  EF66  F010         	goto	u5811
  3466   0020CC                     u5811:
  3467   0020CC  EF89  F010         	goto	l5189
  3468   0020D0                     u5810:
  3469   0020D0                     
  3470                           ; BSR set to: 0
  3471                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  3472   0020D0  0E3C               	movlw	low _dbuf
  3473   0020D2  259D               	addwf	efgtoa@n& (0+255),w,b
  3474   0020D4  6ED9               	movwf	fsr2l,c
  3475   0020D6  0E01               	movlw	high _dbuf
  3476   0020D8  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3477   0020DA  6EDA               	movwf	fsr2h,c
  3478   0020DC  0E2E               	movlw	46
  3479   0020DE  6EDF               	movwf	indf2,c
  3480   0020E0                     
  3481                           ; BSR set to: 0
  3482   0020E0  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  3483   0020E2  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  3484   0020E4                     
  3485                           ; BSR set to: 0
  3486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  3487   0020E4  0788               	decf	efgtoa@w& (0+255),f,b
  3488   0020E6  A0D8               	btfss	status,0,c
  3489   0020E8  0789               	decf	(efgtoa@w+1)& (0+255),f,b
  3490   0020EA                     
  3491                           ; BSR set to: 0
  3492                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  3493   0020EA  0E01               	movlw	1
  3494   0020EC  6F7F               	movwf	efgtoa@pp& (0+255),b
  3495   0020EE  EF89  F010         	goto	l5189
  3496   0020F2                     l5181:
  3497                           
  3498                           ; BSR set to: 0
  3499                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  3500   0020F2  0E3C               	movlw	low _dbuf
  3501   0020F4  259D               	addwf	efgtoa@n& (0+255),w,b
  3502   0020F6  6ED9               	movwf	fsr2l,c
  3503   0020F8  0E01               	movlw	high _dbuf
  3504   0020FA  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3505   0020FC  6EDA               	movwf	fsr2h,c
  3506   0020FE  0E30               	movlw	48
  3507   002100  6EDF               	movwf	indf2,c
  3508   002102                     
  3509                           ; BSR set to: 0
  3510   002102  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  3511   002104  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  3512   002106                     
  3513                           ; BSR set to: 0
  3514                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  3515   002106  0788               	decf	efgtoa@w& (0+255),f,b
  3516   002108  A0D8               	btfss	status,0,c
  3517   00210A  0789               	decf	(efgtoa@w+1)& (0+255),f,b
  3518   00210C                     
  3519                           ; BSR set to: 0
  3520                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  3521   00210C  077B               	decf	efgtoa@t& (0+255),f,b
  3522   00210E  A0D8               	btfss	status,0,c
  3523   002110  077C               	decf	(efgtoa@t+1)& (0+255),f,b
  3524   002112                     l5189:
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  3528   002112  517B               	movf	efgtoa@t& (0+255),w,b
  3529   002114  117C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3530   002116  A4D8               	btfss	status,2,c
  3531   002118  EF90  F010         	goto	u5821
  3532   00211C  EF92  F010         	goto	u5820
  3533   002120                     u5821:
  3534   002120  EF79  F010         	goto	l5181
  3535   002124                     u5820:
  3536   002124                     
  3537                           ; BSR set to: 0
  3538                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3539   002124  0E3C               	movlw	low _dbuf
  3540   002126  259D               	addwf	efgtoa@n& (0+255),w,b
  3541   002128  6ED9               	movwf	fsr2l,c
  3542   00212A  0E01               	movlw	high _dbuf
  3543   00212C  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3544   00212E  6EDA               	movwf	fsr2h,c
  3545   002130  5182               	movf	efgtoa@d& (0+255),w,b
  3546   002132  0F30               	addlw	48
  3547   002134  6EDF               	movwf	indf2,c
  3548   002136                     
  3549                           ; BSR set to: 0
  3550   002136  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  3551   002138  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  3552   00213A                     
  3553                           ; BSR set to: 0
  3554                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  3555   00213A  0788               	decf	efgtoa@w& (0+255),f,b
  3556   00213C  A0D8               	btfss	status,0,c
  3557   00213E  0789               	decf	(efgtoa@w+1)& (0+255),f,b
  3558   002140                     
  3559                           ; BSR set to: 0
  3560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  3561   002140  C090  F02E         	movff	efgtoa@h,___flsub@b
  3562   002144  C091  F02F         	movff	efgtoa@h+1,___flsub@b+1
  3563   002148  C092  F030         	movff	efgtoa@h+2,___flsub@b+2
  3564   00214C  C093  F031         	movff	efgtoa@h+3,___flsub@b+3
  3565   002150  C094  F019         	movff	efgtoa@l,___flmul@a
  3566   002154  C095  F01A         	movff	efgtoa@l+1,___flmul@a+1
  3567   002158  C096  F01B         	movff	efgtoa@l+2,___flmul@a+2
  3568   00215C  C097  F01C         	movff	efgtoa@l+3,___flmul@a+3
  3569   002160  C09F  F015         	movff	efgtoa@u,___flmul@b
  3570   002164  C0A0  F016         	movff	efgtoa@u+1,___flmul@b+1
  3571   002168  C0A1  F017         	movff	efgtoa@u+2,___flmul@b+2
  3572   00216C  C0A2  F018         	movff	efgtoa@u+3,___flmul@b+3
  3573   002170  ECC8  F013         	call	___flmul	;wreg free
  3574   002174  C015  F032         	movff	?___flmul,___flsub@a
  3575   002178  C016  F033         	movff	?___flmul+1,___flsub@a+1
  3576   00217C  C017  F034         	movff	?___flmul+2,___flsub@a+2
  3577   002180  C018  F035         	movff	?___flmul+3,___flsub@a+3
  3578   002184  EC69  F026         	call	___flsub	;wreg free
  3579   002188  C02E  F090         	movff	?___flsub,efgtoa@h
  3580   00218C  C02F  F091         	movff	?___flsub+1,efgtoa@h+1
  3581   002190  C030  F092         	movff	?___flsub+2,efgtoa@h+2
  3582   002194  C031  F093         	movff	?___flsub+3,efgtoa@h+3
  3583   002198                     
  3584                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  3585   002198  C09F  F036         	movff	efgtoa@u,___fldiv@b
  3586   00219C  C0A0  F037         	movff	efgtoa@u+1,___fldiv@b+1
  3587   0021A0  C0A1  F038         	movff	efgtoa@u+2,___fldiv@b+2
  3588   0021A4  C0A2  F039         	movff	efgtoa@u+3,___fldiv@b+3
  3589   0021A8  0E00               	movlw	0
  3590   0021AA  6E3A               	movwf	___fldiv@a^0,c
  3591   0021AC  0E00               	movlw	0
  3592   0021AE  6E3B               	movwf	(___fldiv@a+1)^0,c
  3593   0021B0  0E20               	movlw	32
  3594   0021B2  6E3C               	movwf	(___fldiv@a+2)^0,c
  3595   0021B4  0E41               	movlw	65
  3596   0021B6  6E3D               	movwf	(___fldiv@a+3)^0,c
  3597   0021B8  ECDD  F015         	call	___fldiv	;wreg free
  3598   0021BC  C036  F09F         	movff	?___fldiv,efgtoa@u
  3599   0021C0  C037  F0A0         	movff	?___fldiv+1,efgtoa@u+1
  3600   0021C4  C038  F0A1         	movff	?___fldiv+2,efgtoa@u+2
  3601   0021C8  C039  F0A2         	movff	?___fldiv+3,efgtoa@u+3
  3602   0021CC                     
  3603                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  3604   0021CC  0100               	movlb	0	; () banked
  3605   0021CE  0777               	decf	efgtoa@ne& (0+255),f,b
  3606   0021D0  A0D8               	btfss	status,0,c
  3607   0021D2  0778               	decf	(efgtoa@ne+1)& (0+255),f,b
  3608   0021D4                     
  3609                           ; BSR set to: 0
  3610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  3611   0021D4  4B8E               	infsnz	efgtoa@i& (0+255),f,b
  3612   0021D6  2B8F               	incf	(efgtoa@i+1)& (0+255),f,b
  3613   0021D8                     l5205:
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3617   0021D8  5184               	movf	efgtoa@m& (0+255),w,b
  3618   0021DA  5D8E               	subwf	efgtoa@i& (0+255),w,b
  3619   0021DC  518F               	movf	(efgtoa@i+1)& (0+255),w,b
  3620   0021DE  0A80               	xorlw	128
  3621   0021E0  6E53               	movwf	??_efgtoa^0,c
  3622   0021E2  5185               	movf	(efgtoa@m+1)& (0+255),w,b
  3623   0021E4  0A80               	xorlw	128
  3624   0021E6  5853               	subwfb	??_efgtoa^0,w,c
  3625   0021E8  B0D8               	btfsc	status,0,c
  3626   0021EA  EFF9  F010         	goto	u5831
  3627   0021EE  EFFB  F010         	goto	u5830
  3628   0021F2                     u5831:
  3629   0021F2  EF09  F011         	goto	l5209
  3630   0021F6                     u5830:
  3631   0021F6                     
  3632                           ; BSR set to: 0
  3633   0021F6  BF9E               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3634   0021F8  EF07  F011         	goto	u5841
  3635   0021FC  519E               	movf	(efgtoa@n+1)& (0+255),w,b
  3636   0021FE  E109               	bnz	u5840
  3637   002200  0E4B               	movlw	75
  3638   002202  5D9D               	subwf	efgtoa@n& (0+255),w,b
  3639   002204  A0D8               	btfss	status,0,c
  3640   002206  EF07  F011         	goto	u5841
  3641   00220A  EF09  F011         	goto	u5840
  3642   00220E                     u5841:
  3643   00220E  EF07  F010         	goto	l5165
  3644   002212                     u5840:
  3645   002212                     l5209:
  3646                           
  3647                           ; BSR set to: 0
  3648                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  3649   002212  0E00               	movlw	0
  3650   002214  6F8F               	movwf	(efgtoa@i+1)& (0+255),b
  3651   002216  0E4F               	movlw	79
  3652   002218  6F8E               	movwf	efgtoa@i& (0+255),b
  3653   00221A                     
  3654                           ; BSR set to: 0
  3655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  3656   00221A  0E3C               	movlw	low _dbuf
  3657   00221C  258E               	addwf	efgtoa@i& (0+255),w,b
  3658   00221E  6ED9               	movwf	fsr2l,c
  3659   002220  0E01               	movlw	high _dbuf
  3660   002222  218F               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3661   002224  6EDA               	movwf	fsr2h,c
  3662   002226  0E00               	movlw	0
  3663   002228  6EDF               	movwf	indf2,c
  3664   00222A                     
  3665                           ; BSR set to: 0
  3666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3667   00222A  0E3C               	movlw	low _dbuf
  3668   00222C  6E53               	movwf	??_efgtoa^0,c
  3669   00222E  0E01               	movlw	high _dbuf
  3670   002230  6E54               	movwf	(??_efgtoa+1)^0,c
  3671   002232  519D               	movf	efgtoa@n& (0+255),w,b
  3672   002234  5E53               	subwf	??_efgtoa^0,f,c
  3673   002236  519E               	movf	(efgtoa@n+1)& (0+255),w,b
  3674   002238  5A54               	subwfb	(??_efgtoa+1)^0,f,c
  3675   00223A  518E               	movf	efgtoa@i& (0+255),w,b
  3676   00223C  2453               	addwf	??_efgtoa^0,w,c
  3677   00223E  6E05               	movwf	memcpy@d1^0,c
  3678   002240  518F               	movf	(efgtoa@i+1)& (0+255),w,b
  3679   002242  2054               	addwfc	(??_efgtoa+1)^0,w,c
  3680   002244  6E06               	movwf	(memcpy@d1+1)^0,c
  3681   002246  0E3C               	movlw	low _dbuf
  3682   002248  6E07               	movwf	memcpy@s1^0,c
  3683   00224A  0E01               	movlw	high _dbuf
  3684   00224C  6E08               	movwf	(memcpy@s1+1)^0,c
  3685   00224E  C09D  F009         	movff	efgtoa@n,memcpy@n
  3686   002252  C09E  F00A         	movff	efgtoa@n+1,memcpy@n+1
  3687   002256  ECA1  F025         	call	_memcpy	;wreg free
  3688   00225A                     
  3689                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  3690   00225A  0100               	movlb	0	; () banked
  3691   00225C  519D               	movf	efgtoa@n& (0+255),w,b
  3692   00225E  5D8E               	subwf	efgtoa@i& (0+255),w,b
  3693   002260  6F9D               	movwf	efgtoa@n& (0+255),b
  3694   002262  519E               	movf	(efgtoa@n+1)& (0+255),w,b
  3695   002264  598F               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3696   002266  6F9E               	movwf	(efgtoa@n+1)& (0+255),b
  3697   002268                     
  3698                           ; BSR set to: 0
  3699                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  3700   002268  5198               	movf	efgtoa@sign& (0+255),w,b
  3701   00226A  A4D8               	btfss	status,2,c
  3702   00226C  EF3A  F011         	goto	u5851
  3703   002270  EF3D  F011         	goto	u5850
  3704   002274                     u5851:
  3705   002274  0E01               	movlw	1
  3706   002276  EF3E  F011         	goto	u5860
  3707   00227A                     u5850:
  3708   00227A  0E00               	movlw	0
  3709   00227C                     u5860:
  3710   00227C  6F8E               	movwf	efgtoa@i& (0+255),b
  3711   00227E  6B8F               	clrf	(efgtoa@i+1)& (0+255),b
  3712   002280                     
  3713                           ; BSR set to: 0
  3714                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  3715   002280  5198               	movf	efgtoa@sign& (0+255),w,b
  3716   002282  B4D8               	btfsc	status,2,c
  3717   002284  EF46  F011         	goto	u5871
  3718   002288  EF48  F011         	goto	u5870
  3719   00228C                     u5871:
  3720   00228C  EF53  F011         	goto	l5223
  3721   002290                     u5870:
  3722   002290                     
  3723                           ; BSR set to: 0
  3724                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  3725   002290  079D               	decf	efgtoa@n& (0+255),f,b
  3726   002292  A0D8               	btfss	status,0,c
  3727   002294  079E               	decf	(efgtoa@n+1)& (0+255),f,b
  3728   002296  0E3C               	movlw	low _dbuf
  3729   002298  259D               	addwf	efgtoa@n& (0+255),w,b
  3730   00229A  6ED9               	movwf	fsr2l,c
  3731   00229C  0E01               	movlw	high _dbuf
  3732   00229E  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3733   0022A0  6EDA               	movwf	fsr2h,c
  3734   0022A2  C098  FFDF         	movff	efgtoa@sign,indf2
  3735   0022A6                     l5223:
  3736                           
  3737                           ; BSR set to: 0
  3738                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  3739   0022A6  518E               	movf	efgtoa@i& (0+255),w,b
  3740   0022A8  5F88               	subwf	efgtoa@w& (0+255),f,b
  3741   0022AA  518F               	movf	(efgtoa@i+1)& (0+255),w,b
  3742   0022AC  5B89               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3743   0022AE                     
  3744                           ; BSR set to: 0
  3745                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3746   0022AE  C070  F015         	movff	efgtoa@fp,pad@fp
  3747   0022B2  C071  F016         	movff	efgtoa@fp+1,pad@fp+1
  3748   0022B6  0E3C               	movlw	low _dbuf
  3749   0022B8  259D               	addwf	efgtoa@n& (0+255),w,b
  3750   0022BA  6E17               	movwf	pad@buf^0,c
  3751   0022BC  0E01               	movlw	high _dbuf
  3752   0022BE  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3753   0022C0  6E18               	movwf	(pad@buf+1)^0,c
  3754   0022C2  C088  F019         	movff	efgtoa@w,pad@p
  3755   0022C6  C089  F01A         	movff	efgtoa@w+1,pad@p+1
  3756   0022CA  EC3B  F024         	call	_pad	;wreg free
  3757   0022CE                     l1138:
  3758   0022CE  0012               	return		;funcret
  3759   0022D0                     __end_of_efgtoa:
  3760                           	callstack 0
  3761                           
  3762 ;; *************** function _strcpy *****************
  3763 ;; Defined at:
  3764 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  dest            2    4[COMRAM] PTR unsigned char 
  3767 ;;		 -> dbuf(80), 
  3768 ;;  src             2    6[COMRAM] PTR const unsigned char 
  3769 ;;		 -> STR_6(4), STR_3(4), 
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;  d               2   10[COMRAM] PTR unsigned char 
  3772 ;;		 -> dbuf(80), 
  3773 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3774 ;;		 -> STR_6(4), STR_3(4), 
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  2    4[COMRAM] PTR unsigned char 
  3777 ;; Registers used:
  3778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3784 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3785 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3787 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3788 ;;Total ram usage:        8 bytes
  3789 ;; Hardware stack levels used: 1
  3790 ;; Hardware stack levels required when called: 2
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_efgtoa
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           	psect	text7
  3799   004D18                     __ptext7:
  3800                           	callstack 0
  3801   004D18                     _strcpy:
  3802                           	callstack 24
  3803   004D18  C007  F009         	movff	strcpy@src,strcpy@s
  3804   004D1C  C008  F00A         	movff	strcpy@src+1,strcpy@s+1
  3805   004D20  C005  F00B         	movff	strcpy@dest,strcpy@d
  3806   004D24  C006  F00C         	movff	strcpy@dest+1,strcpy@d+1
  3807   004D28                     l3857:
  3808   004D28  C009  FFF6         	movff	strcpy@s,tblptrl
  3809   004D2C  C00A  FFF7         	movff	strcpy@s+1,tblptrh
  3810   004D30  4A09               	infsnz	strcpy@s^0,f,c
  3811   004D32  2A0A               	incf	(strcpy@s+1)^0,f,c
  3812   004D34                     	if	0	;tblptru may be non-zero
  3813   004D34                     	endif
  3814   004D34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3815   004D34  0E00               	movlw	low (__mediumconst shr (0+16))
  3816   004D36  6EF8               	movwf	tblptru,c
  3817   004D38                     	endif
  3818   004D38  C00B  FFD9         	movff	strcpy@d,fsr2l
  3819   004D3C  C00C  FFDA         	movff	strcpy@d+1,fsr2h
  3820   004D40  4A0B               	infsnz	strcpy@d^0,f,c
  3821   004D42  2A0C               	incf	(strcpy@d+1)^0,f,c
  3822   004D44  0008               	tblrd		*
  3823   004D46  CFF5 FFDF          	movff	tablat,indf2
  3824   004D4A  50DF               	movf	indf2,w,c
  3825   004D4C  A4D8               	btfss	status,2,c
  3826   004D4E  EFAB  F026         	goto	u4031
  3827   004D52  EFAD  F026         	goto	u4030
  3828   004D56                     u4031:
  3829   004D56  EF94  F026         	goto	l3857
  3830   004D5A                     u4030:
  3831   004D5A  0012               	return		;funcret
  3832   004D5C                     __end_of_strcpy:
  3833                           	callstack 0
  3834                           
  3835 ;; *************** function _memcpy *****************
  3836 ;; Defined at:
  3837 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;  d1              2    4[COMRAM] PTR void 
  3840 ;;		 -> dbuf(80), 
  3841 ;;  s1              2    6[COMRAM] PTR const void 
  3842 ;;		 -> dbuf(80), 
  3843 ;;  n               2    8[COMRAM] unsigned int 
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;  s               2   12[COMRAM] PTR const unsigned char 
  3846 ;;		 -> dbuf(80), 
  3847 ;;  d               2   10[COMRAM] PTR unsigned char 
  3848 ;;		 -> dbuf(80), 
  3849 ;;  tmp             1   14[COMRAM] unsigned char 
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  2    4[COMRAM] PTR void 
  3852 ;; Registers used:
  3853 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3859 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3860 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3862 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3863 ;;Total ram usage:       11 bytes
  3864 ;; Hardware stack levels used: 1
  3865 ;; Hardware stack levels required when called: 2
  3866 ;; This function calls:
  3867 ;;		Nothing
  3868 ;; This function is called by:
  3869 ;;		_efgtoa
  3870 ;; This function uses a non-reentrant model
  3871 ;;
  3872                           
  3873                           	psect	text8
  3874   004B42                     __ptext8:
  3875                           	callstack 0
  3876   004B42                     _memcpy:
  3877                           	callstack 24
  3878   004B42  C007  F00D         	movff	memcpy@s1,memcpy@s
  3879   004B46  C008  F00E         	movff	memcpy@s1+1,memcpy@s+1
  3880   004B4A  C005  F00B         	movff	memcpy@d1,memcpy@d
  3881   004B4E  C006  F00C         	movff	memcpy@d1+1,memcpy@d+1
  3882   004B52  EFBB  F025         	goto	l3901
  3883   004B56                     l3893:
  3884   004B56  C00D  FFD9         	movff	memcpy@s,fsr2l
  3885   004B5A  C00E  FFDA         	movff	memcpy@s+1,fsr2h
  3886   004B5E  50DF               	movf	indf2,w,c
  3887   004B60  6E0F               	movwf	memcpy@tmp^0,c
  3888   004B62  4A0D               	infsnz	memcpy@s^0,f,c
  3889   004B64  2A0E               	incf	(memcpy@s+1)^0,f,c
  3890   004B66  C00B  FFD9         	movff	memcpy@d,fsr2l
  3891   004B6A  C00C  FFDA         	movff	memcpy@d+1,fsr2h
  3892   004B6E  C00F  FFDF         	movff	memcpy@tmp,indf2
  3893   004B72  4A0B               	infsnz	memcpy@d^0,f,c
  3894   004B74  2A0C               	incf	(memcpy@d+1)^0,f,c
  3895   004B76                     l3901:
  3896   004B76  0609               	decf	memcpy@n^0,f,c
  3897   004B78  A0D8               	btfss	status,0,c
  3898   004B7A  060A               	decf	(memcpy@n+1)^0,f,c
  3899   004B7C  2809               	incf	memcpy@n^0,w,c
  3900   004B7E  E106               	bnz	u4151
  3901   004B80  280A               	incf	(memcpy@n+1)^0,w,c
  3902   004B82  A4D8               	btfss	status,2,c
  3903   004B84  EFC6  F025         	goto	u4151
  3904   004B88  EFC8  F025         	goto	u4150
  3905   004B8C                     u4151:
  3906   004B8C  EFAB  F025         	goto	l3893
  3907   004B90                     u4150:
  3908   004B90  0012               	return		;funcret
  3909   004B92                     __end_of_memcpy:
  3910                           	callstack 0
  3911                           
  3912 ;; *************** function _labs *****************
  3913 ;; Defined at:
  3914 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  a               4    4[COMRAM] long 
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;		None
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  4    4[COMRAM] long 
  3921 ;; Registers used:
  3922 ;;		wreg, status,2, status,0
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3928 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3930 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3931 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3932 ;;Total ram usage:        8 bytes
  3933 ;; Hardware stack levels used: 1
  3934 ;; Hardware stack levels required when called: 2
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		_efgtoa
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           	psect	text9
  3943   0049D6                     __ptext9:
  3944                           	callstack 0
  3945   0049D6                     _labs:
  3946                           	callstack 24
  3947   0049D6  BE08               	btfsc	(labs@a+3)^0,7,c
  3948   0049D8  EFFA  F024         	goto	u4040
  3949   0049DC  5008               	movf	(labs@a+3)^0,w,c
  3950   0049DE  1007               	iorwf	(labs@a+2)^0,w,c
  3951   0049E0  1006               	iorwf	(labs@a+1)^0,w,c
  3952   0049E2  E106               	bnz	u4041
  3953   0049E4  0405               	decf	labs@a^0,w,c
  3954   0049E6  B0D8               	btfsc	status,0,c
  3955   0049E8  EFF8  F024         	goto	u4041
  3956   0049EC  EFFA  F024         	goto	u4040
  3957   0049F0                     u4041:
  3958   0049F0  EF15  F025         	goto	l1243
  3959   0049F4                     u4040:
  3960   0049F4  C005  F009         	movff	labs@a,??_labs
  3961   0049F8  C006  F00A         	movff	labs@a+1,??_labs+1
  3962   0049FC  C007  F00B         	movff	labs@a+2,??_labs+2
  3963   004A00  C008  F00C         	movff	labs@a+3,??_labs+3
  3964   004A04  1E09               	comf	??_labs^0,f,c
  3965   004A06  1E0A               	comf	(??_labs+1)^0,f,c
  3966   004A08  1E0B               	comf	(??_labs+2)^0,f,c
  3967   004A0A  1E0C               	comf	(??_labs+3)^0,f,c
  3968   004A0C  2A09               	incf	??_labs^0,f,c
  3969   004A0E  0E00               	movlw	0
  3970   004A10  220A               	addwfc	(??_labs+1)^0,f,c
  3971   004A12  220B               	addwfc	(??_labs+2)^0,f,c
  3972   004A14  220C               	addwfc	(??_labs+3)^0,f,c
  3973   004A16  C009  F005         	movff	??_labs,?_labs
  3974   004A1A  C00A  F006         	movff	??_labs+1,?_labs+1
  3975   004A1E  C00B  F007         	movff	??_labs+2,?_labs+2
  3976   004A22  C00C  F008         	movff	??_labs+3,?_labs+3
  3977   004A26  EF1D  F025         	goto	l1246
  3978   004A2A                     l1243:
  3979   004A2A  C005  F005         	movff	labs@a,?_labs
  3980   004A2E  C006  F006         	movff	labs@a+1,?_labs+1
  3981   004A32  C007  F007         	movff	labs@a+2,?_labs+2
  3982   004A36  C008  F008         	movff	labs@a+3,?_labs+3
  3983   004A3A                     l1246:
  3984   004A3A  0012               	return		;funcret
  3985   004A3C                     __end_of_labs:
  3986                           	callstack 0
  3987                           
  3988 ;; *************** function _floorf *****************
  3989 ;; Defined at:
  3990 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;  x               4   78[COMRAM] float 
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;  u               4   12[BANK0 ] struct .
  3995 ;;  m               4    6[BANK0 ] unsigned long 
  3996 ;;  e               2   10[BANK0 ] int 
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  4   78[COMRAM] float 
  3999 ;; Registers used:
  4000 ;;		wreg, status,2, status,0
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4006 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4007 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4008 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4009 ;;      Totals:         4      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4010 ;;Total ram usage:       20 bytes
  4011 ;; Hardware stack levels used: 1
  4012 ;; Hardware stack levels required when called: 2
  4013 ;; This function calls:
  4014 ;;		Nothing
  4015 ;; This function is called by:
  4016 ;;		_efgtoa
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           	psect	text10
  4021   00371E                     __ptext10:
  4022                           	callstack 0
  4023   00371E                     _floorf:
  4024                           	callstack 24
  4025   00371E  C0EB  F06C         	movff	floorf@F526,floorf@u
  4026   003722  C0EC  F06D         	movff	floorf@F526+1,floorf@u+1
  4027   003726  C0ED  F06E         	movff	floorf@F526+2,floorf@u+2
  4028   00372A  C0EE  F06F         	movff	floorf@F526+3,floorf@u+3
  4029   00372E  C04F  F06C         	movff	floorf@x,floorf@u
  4030   003732  C050  F06D         	movff	floorf@x+1,floorf@u+1
  4031   003736  C051  F06E         	movff	floorf@x+2,floorf@u+2
  4032   00373A  C052  F06F         	movff	floorf@x+3,floorf@u+3
  4033   00373E  0E81               	movlw	129
  4034   003740  0100               	movlb	0	; () banked
  4035   003742  6F60               	movwf	??_floorf& (0+255),b
  4036   003744  0EFF               	movlw	255
  4037   003746  6F61               	movwf	(??_floorf+1)& (0+255),b
  4038   003748  C06C  F062         	movff	floorf@u,??_floorf+2
  4039   00374C  C06D  F063         	movff	floorf@u+1,??_floorf+3
  4040   003750  C06E  F064         	movff	floorf@u+2,??_floorf+4
  4041   003754  C06F  F065         	movff	floorf@u+3,??_floorf+5
  4042   003758  0E18               	movlw	24
  4043   00375A  EFB4  F01B         	goto	u5460
  4044   00375E                     u5465:
  4045   00375E  90D8               	bcf	status,0,c
  4046   003760  3365               	rrcf	(??_floorf+5)& (0+255),f,b
  4047   003762  3364               	rrcf	(??_floorf+4)& (0+255),f,b
  4048   003764  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4049   003766  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4050   003768                     u5460:
  4051   003768  2EE8               	decfsz	wreg,f,c
  4052   00376A  EFAF  F01B         	goto	u5465
  4053   00376E  5162               	movf	(??_floorf+2)& (0+255),w,b
  4054   003770  2560               	addwf	??_floorf& (0+255),w,b
  4055   003772  6F6A               	movwf	floorf@e& (0+255),b
  4056   003774  0E00               	movlw	0
  4057   003776  2161               	addwfc	(??_floorf+1)& (0+255),w,b
  4058   003778  6F6B               	movwf	(floorf@e+1)& (0+255),b
  4059   00377A  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
  4060   00377C  EFC9  F01B         	goto	u5471
  4061   003780  516B               	movf	(floorf@e+1)& (0+255),w,b
  4062   003782  E109               	bnz	u5470
  4063   003784  0E17               	movlw	23
  4064   003786  5D6A               	subwf	floorf@e& (0+255),w,b
  4065   003788  A0D8               	btfss	status,0,c
  4066   00378A  EFC9  F01B         	goto	u5471
  4067   00378E  EFCB  F01B         	goto	u5470
  4068   003792                     u5471:
  4069   003792  EFD5  F01B         	goto	l4985
  4070   003796                     u5470:
  4071   003796                     l4983:
  4072                           
  4073                           ; BSR set to: 0
  4074   003796  C04F  F04F         	movff	floorf@x,?_floorf
  4075   00379A  C050  F050         	movff	floorf@x+1,?_floorf+1
  4076   00379E  C051  F051         	movff	floorf@x+2,?_floorf+2
  4077   0037A2  C052  F052         	movff	floorf@x+3,?_floorf+3
  4078   0037A6  EF99  F01C         	goto	l1232
  4079   0037AA                     l4985:
  4080                           
  4081                           ; BSR set to: 0
  4082   0037AA  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
  4083   0037AC  EFDA  F01B         	goto	u5481
  4084   0037B0  EFDC  F01B         	goto	u5480
  4085   0037B4                     u5481:
  4086   0037B4  EF4D  F01C         	goto	l4995
  4087   0037B8                     u5480:
  4088   0037B8                     
  4089                           ; BSR set to: 0
  4090   0037B8  C06A  F060         	movff	floorf@e,??_floorf
  4091   0037BC  0EFF               	movlw	255
  4092   0037BE  6F61               	movwf	(??_floorf+1)& (0+255),b
  4093   0037C0  0EFF               	movlw	255
  4094   0037C2  6F62               	movwf	(??_floorf+2)& (0+255),b
  4095   0037C4  0E7F               	movlw	127
  4096   0037C6  6F63               	movwf	(??_floorf+3)& (0+255),b
  4097   0037C8  0E00               	movlw	0
  4098   0037CA  6F64               	movwf	(??_floorf+4)& (0+255),b
  4099   0037CC                     u5495:
  4100   0037CC  6760               	tstfsz	??_floorf& (0+255),b
  4101   0037CE  EFEB  F01B         	goto	u5496
  4102   0037D2  EFF3  F01B         	goto	u5497
  4103   0037D6                     u5496:
  4104   0037D6  3564               	rlcf	(??_floorf+4)& (0+255),w,b
  4105   0037D8  3364               	rrcf	(??_floorf+4)& (0+255),f,b
  4106   0037DA  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4107   0037DC  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4108   0037DE  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  4109   0037E0  2F60               	decfsz	??_floorf& (0+255),f,b
  4110   0037E2  EFE6  F01B         	goto	u5495
  4111   0037E6                     u5497:
  4112   0037E6  C061  F066         	movff	??_floorf+1,floorf@m
  4113   0037EA  C062  F067         	movff	??_floorf+2,floorf@m+1
  4114   0037EE  C063  F068         	movff	??_floorf+3,floorf@m+2
  4115   0037F2  C064  F069         	movff	??_floorf+4,floorf@m+3
  4116   0037F6  0100               	movlb	0	; () banked
  4117   0037F8  5166               	movf	floorf@m& (0+255),w,b
  4118   0037FA  156C               	andwf	floorf@u& (0+255),w,b
  4119   0037FC  6F60               	movwf	??_floorf& (0+255),b
  4120   0037FE  5167               	movf	(floorf@m+1)& (0+255),w,b
  4121   003800  156D               	andwf	(floorf@u+1)& (0+255),w,b
  4122   003802  6F61               	movwf	(??_floorf+1)& (0+255),b
  4123   003804  5168               	movf	(floorf@m+2)& (0+255),w,b
  4124   003806  156E               	andwf	(floorf@u+2)& (0+255),w,b
  4125   003808  6F62               	movwf	(??_floorf+2)& (0+255),b
  4126   00380A  5169               	movf	(floorf@m+3)& (0+255),w,b
  4127   00380C  156F               	andwf	(floorf@u+3)& (0+255),w,b
  4128   00380E  6F63               	movwf	(??_floorf+3)& (0+255),b
  4129   003810  5160               	movf	??_floorf& (0+255),w,b
  4130   003812  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  4131   003814  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  4132   003816  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  4133   003818  A4D8               	btfss	status,2,c
  4134   00381A  EF11  F01C         	goto	u5501
  4135   00381E  EF13  F01C         	goto	u5500
  4136   003822                     u5501:
  4137   003822  EF15  F01C         	goto	l4991
  4138   003826                     u5500:
  4139   003826  EFCB  F01B         	goto	l4983
  4140   00382A                     l4991:
  4141                           
  4142                           ; BSR set to: 0
  4143   00382A  C06C  F060         	movff	floorf@u,??_floorf
  4144   00382E  C06D  F061         	movff	floorf@u+1,??_floorf+1
  4145   003832  C06E  F062         	movff	floorf@u+2,??_floorf+2
  4146   003836  C06F  F063         	movff	floorf@u+3,??_floorf+3
  4147   00383A  0E20               	movlw	32
  4148   00383C  EF25  F01C         	goto	u5510
  4149   003840                     u5515:
  4150   003840  90D8               	bcf	status,0,c
  4151   003842  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4152   003844  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4153   003846  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  4154   003848  3360               	rrcf	??_floorf& (0+255),f,b
  4155   00384A                     u5510:
  4156   00384A  2EE8               	decfsz	wreg,f,c
  4157   00384C  EF20  F01C         	goto	u5515
  4158   003850  5160               	movf	??_floorf& (0+255),w,b
  4159   003852  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  4160   003854  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  4161   003856  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  4162   003858  B4D8               	btfsc	status,2,c
  4163   00385A  EF31  F01C         	goto	u5521
  4164   00385E  EF33  F01C         	goto	u5520
  4165   003862                     u5521:
  4166   003862  EF3B  F01C         	goto	l1235
  4167   003866                     u5520:
  4168   003866                     
  4169                           ; BSR set to: 0
  4170   003866  5166               	movf	floorf@m& (0+255),w,b
  4171   003868  276C               	addwf	floorf@u& (0+255),f,b
  4172   00386A  5167               	movf	(floorf@m+1)& (0+255),w,b
  4173   00386C  236D               	addwfc	(floorf@u+1)& (0+255),f,b
  4174   00386E  5168               	movf	(floorf@m+2)& (0+255),w,b
  4175   003870  236E               	addwfc	(floorf@u+2)& (0+255),f,b
  4176   003872  5169               	movf	(floorf@m+3)& (0+255),w,b
  4177   003874  236F               	addwfc	(floorf@u+3)& (0+255),f,b
  4178   003876                     l1235:
  4179                           
  4180                           ; BSR set to: 0
  4181   003876  1D66               	comf	floorf@m& (0+255),w,b
  4182   003878  6F60               	movwf	??_floorf& (0+255),b
  4183   00387A  1D67               	comf	(floorf@m+1)& (0+255),w,b
  4184   00387C  6F61               	movwf	(??_floorf+1)& (0+255),b
  4185   00387E  1D68               	comf	(floorf@m+2)& (0+255),w,b
  4186   003880  6F62               	movwf	(??_floorf+2)& (0+255),b
  4187   003882  1D69               	comf	(floorf@m+3)& (0+255),w,b
  4188   003884  6F63               	movwf	(??_floorf+3)& (0+255),b
  4189   003886  5160               	movf	??_floorf& (0+255),w,b
  4190   003888  176C               	andwf	floorf@u& (0+255),f,b
  4191   00388A  5161               	movf	(??_floorf+1)& (0+255),w,b
  4192   00388C  176D               	andwf	(floorf@u+1)& (0+255),f,b
  4193   00388E  5162               	movf	(??_floorf+2)& (0+255),w,b
  4194   003890  176E               	andwf	(floorf@u+2)& (0+255),f,b
  4195   003892  5163               	movf	(??_floorf+3)& (0+255),w,b
  4196   003894  176F               	andwf	(floorf@u+3)& (0+255),f,b
  4197   003896  EF91  F01C         	goto	l5003
  4198   00389A                     l4995:
  4199                           
  4200                           ; BSR set to: 0
  4201   00389A  C06C  F060         	movff	floorf@u,??_floorf
  4202   00389E  C06D  F061         	movff	floorf@u+1,??_floorf+1
  4203   0038A2  C06E  F062         	movff	floorf@u+2,??_floorf+2
  4204   0038A6  C06F  F063         	movff	floorf@u+3,??_floorf+3
  4205   0038AA  0E20               	movlw	32
  4206   0038AC  EF5D  F01C         	goto	u5530
  4207   0038B0                     u5535:
  4208   0038B0  90D8               	bcf	status,0,c
  4209   0038B2  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4210   0038B4  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4211   0038B6  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  4212   0038B8  3360               	rrcf	??_floorf& (0+255),f,b
  4213   0038BA                     u5530:
  4214   0038BA  2EE8               	decfsz	wreg,f,c
  4215   0038BC  EF58  F01C         	goto	u5535
  4216   0038C0  5160               	movf	??_floorf& (0+255),w,b
  4217   0038C2  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  4218   0038C4  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  4219   0038C6  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  4220   0038C8  A4D8               	btfss	status,2,c
  4221   0038CA  EF69  F01C         	goto	u5541
  4222   0038CE  EF6B  F01C         	goto	u5540
  4223   0038D2                     u5541:
  4224   0038D2  EF75  F01C         	goto	l4999
  4225   0038D6                     u5540:
  4226   0038D6                     
  4227                           ; BSR set to: 0
  4228   0038D6  0E00               	movlw	0
  4229   0038D8  6F6C               	movwf	floorf@u& (0+255),b
  4230   0038DA  0E00               	movlw	0
  4231   0038DC  6F6D               	movwf	(floorf@u+1)& (0+255),b
  4232   0038DE  0E00               	movlw	0
  4233   0038E0  6F6E               	movwf	(floorf@u+2)& (0+255),b
  4234   0038E2  0E00               	movlw	0
  4235   0038E4  6F6F               	movwf	(floorf@u+3)& (0+255),b
  4236   0038E6  EF91  F01C         	goto	l5003
  4237   0038EA                     l4999:
  4238                           
  4239                           ; BSR set to: 0
  4240   0038EA  90D8               	bcf	status,0,c
  4241   0038EC  356C               	rlcf	floorf@u& (0+255),w,b
  4242   0038EE  6F60               	movwf	??_floorf& (0+255),b
  4243   0038F0  356D               	rlcf	(floorf@u+1)& (0+255),w,b
  4244   0038F2  6F61               	movwf	(??_floorf+1)& (0+255),b
  4245   0038F4  356E               	rlcf	(floorf@u+2)& (0+255),w,b
  4246   0038F6  6F62               	movwf	(??_floorf+2)& (0+255),b
  4247   0038F8  356F               	rlcf	(floorf@u+3)& (0+255),w,b
  4248   0038FA  6F63               	movwf	(??_floorf+3)& (0+255),b
  4249   0038FC  5160               	movf	??_floorf& (0+255),w,b
  4250   0038FE  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  4251   003900  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  4252   003902  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  4253   003904  B4D8               	btfsc	status,2,c
  4254   003906  EF87  F01C         	goto	u5551
  4255   00390A  EF89  F01C         	goto	u5550
  4256   00390E                     u5551:
  4257   00390E  EF91  F01C         	goto	l5003
  4258   003912                     u5550:
  4259   003912                     
  4260                           ; BSR set to: 0
  4261   003912  0E00               	movlw	0
  4262   003914  6F6C               	movwf	floorf@u& (0+255),b
  4263   003916  0E00               	movlw	0
  4264   003918  6F6D               	movwf	(floorf@u+1)& (0+255),b
  4265   00391A  0E80               	movlw	128
  4266   00391C  6F6E               	movwf	(floorf@u+2)& (0+255),b
  4267   00391E  0EBF               	movlw	191
  4268   003920  6F6F               	movwf	(floorf@u+3)& (0+255),b
  4269   003922                     l5003:
  4270                           
  4271                           ; BSR set to: 0
  4272   003922  C06C  F04F         	movff	floorf@u,?_floorf
  4273   003926  C06D  F050         	movff	floorf@u+1,?_floorf+1
  4274   00392A  C06E  F051         	movff	floorf@u+2,?_floorf+2
  4275   00392E  C06F  F052         	movff	floorf@u+3,?_floorf+3
  4276   003932                     l1232:
  4277                           
  4278                           ; BSR set to: 0
  4279   003932  0012               	return		;funcret
  4280   003934                     __end_of_floorf:
  4281                           	callstack 0
  4282                           
  4283 ;; *************** function ___fpclassifyf *****************
  4284 ;; Defined at:
  4285 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;  x               4    4[COMRAM] float 
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;  u               4   14[COMRAM] struct .
  4290 ;;  e               2   12[COMRAM] int 
  4291 ;; Return value:  Size  Location     Type
  4292 ;;                  2    4[COMRAM] int 
  4293 ;; Registers used:
  4294 ;;		wreg, status,2, status,0
  4295 ;; Tracked objects:
  4296 ;;		On entry : 0/0
  4297 ;;		On exit  : 0/0
  4298 ;;		Unchanged: 0/0
  4299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4300 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4301 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4302 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4303 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4304 ;;Total ram usage:       14 bytes
  4305 ;; Hardware stack levels used: 1
  4306 ;; Hardware stack levels required when called: 2
  4307 ;; This function calls:
  4308 ;;		Nothing
  4309 ;; This function is called by:
  4310 ;;		_efgtoa
  4311 ;; This function uses a non-reentrant model
  4312 ;;
  4313                           
  4314                           	psect	text11
  4315   004250                     __ptext11:
  4316                           	callstack 0
  4317   004250                     ___fpclassifyf:
  4318                           	callstack 24
  4319   004250  C0EF  F00F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4320   004254  C0F0  F010         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4321   004258  C0F1  F011         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4322   00425C  C0F2  F012         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4323   004260  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  4324   004264  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4325   004268  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4326   00426C  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4327   004270  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  4328   004274  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4329   004278  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4330   00427C  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4331   004280  0E18               	movlw	24
  4332   004282  EF48  F021         	goto	u3960
  4333   004286                     u3965:
  4334   004286  90D8               	bcf	status,0,c
  4335   004288  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  4336   00428A  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  4337   00428C  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  4338   00428E  3209               	rrcf	??___fpclassifyf^0,f,c
  4339   004290                     u3960:
  4340   004290  2EE8               	decfsz	wreg,f,c
  4341   004292  EF43  F021         	goto	u3965
  4342   004296  5009               	movf	??___fpclassifyf^0,w,c
  4343   004298  6E0D               	movwf	___fpclassifyf@e^0,c
  4344   00429A  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  4345   00429C  500D               	movf	___fpclassifyf@e^0,w,c
  4346   00429E  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4347   0042A0  A4D8               	btfss	status,2,c
  4348   0042A2  EF55  F021         	goto	u3971
  4349   0042A6  EF57  F021         	goto	u3970
  4350   0042AA                     u3971:
  4351   0042AA  EF77  F021         	goto	l3845
  4352   0042AE                     u3970:
  4353   0042AE  90D8               	bcf	status,0,c
  4354   0042B0  340F               	rlcf	___fpclassifyf@u^0,w,c
  4355   0042B2  6E09               	movwf	??___fpclassifyf^0,c
  4356   0042B4  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4357   0042B6  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  4358   0042B8  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4359   0042BA  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  4360   0042BC  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4361   0042BE  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  4362   0042C0  5009               	movf	??___fpclassifyf^0,w,c
  4363   0042C2  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  4364   0042C4  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  4365   0042C6  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  4366   0042C8  A4D8               	btfss	status,2,c
  4367   0042CA  EF69  F021         	goto	u3981
  4368   0042CE  EF6B  F021         	goto	u3980
  4369   0042D2                     u3981:
  4370   0042D2  EF71  F021         	goto	l3841
  4371   0042D6                     u3980:
  4372   0042D6  0E00               	movlw	0
  4373   0042D8  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4374   0042DA  0E02               	movlw	2
  4375   0042DC  6E05               	movwf	?___fpclassifyf^0,c
  4376   0042DE  EFA6  F021         	goto	l1218
  4377   0042E2                     l3841:
  4378   0042E2  0E00               	movlw	0
  4379   0042E4  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4380   0042E6  0E03               	movlw	3
  4381   0042E8  6E05               	movwf	?___fpclassifyf^0,c
  4382   0042EA  EFA6  F021         	goto	l1218
  4383   0042EE                     l3845:
  4384   0042EE  280D               	incf	___fpclassifyf@e^0,w,c
  4385   0042F0  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4386   0042F2  A4D8               	btfss	status,2,c
  4387   0042F4  EF7E  F021         	goto	u3991
  4388   0042F8  EF80  F021         	goto	u3990
  4389   0042FC                     u3991:
  4390   0042FC  EFA2  F021         	goto	l3851
  4391   004300                     u3990:
  4392   004300  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  4393   004304  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4394   004308  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4395   00430C  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4396   004310  0E09               	movlw	9
  4397   004312                     u4005:
  4398   004312  90D8               	bcf	status,0,c
  4399   004314  3609               	rlcf	??___fpclassifyf^0,f,c
  4400   004316  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  4401   004318  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  4402   00431A  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  4403   00431C  2EE8               	decfsz	wreg,f,c
  4404   00431E  EF89  F021         	goto	u4005
  4405   004322  5009               	movf	??___fpclassifyf^0,w,c
  4406   004324  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  4407   004326  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  4408   004328  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  4409   00432A  B4D8               	btfsc	status,2,c
  4410   00432C  EF9A  F021         	goto	u4011
  4411   004330  EF9D  F021         	goto	u4010
  4412   004334                     u4011:
  4413   004334  0E01               	movlw	1
  4414   004336  EF9E  F021         	goto	u4020
  4415   00433A                     u4010:
  4416   00433A  0E00               	movlw	0
  4417   00433C                     u4020:
  4418   00433C  6E05               	movwf	?___fpclassifyf^0,c
  4419   00433E  6A06               	clrf	(?___fpclassifyf+1)^0,c
  4420   004340  EFA6  F021         	goto	l1218
  4421   004344                     l3851:
  4422   004344  0E00               	movlw	0
  4423   004346  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4424   004348  0E04               	movlw	4
  4425   00434A  6E05               	movwf	?___fpclassifyf^0,c
  4426   00434C                     l1218:
  4427   00434C  0012               	return		;funcret
  4428   00434E                     __end_of___fpclassifyf:
  4429                           	callstack 0
  4430                           
  4431 ;; *************** function ___fltol *****************
  4432 ;; Defined at:
  4433 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  4434 ;; Parameters:    Size  Location     Type
  4435 ;;  f1              4    4[COMRAM] int 
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;  exp1            1   13[COMRAM] unsigned char 
  4438 ;;  sign1           1   12[COMRAM] unsigned char 
  4439 ;; Return value:  Size  Location     Type
  4440 ;;                  4    4[COMRAM] long 
  4441 ;; Registers used:
  4442 ;;		wreg, status,2, status,0
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4448 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4449 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4450 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4451 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4452 ;;Total ram usage:       10 bytes
  4453 ;; Hardware stack levels used: 1
  4454 ;; Hardware stack levels required when called: 2
  4455 ;; This function calls:
  4456 ;;		Nothing
  4457 ;; This function is called by:
  4458 ;;		_efgtoa
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           	psect	text12
  4463   003F40                     __ptext12:
  4464                           	callstack 0
  4465   003F40                     ___fltol:
  4466                           	callstack 24
  4467   003F40  3407               	rlcf	(___fltol@f1+2)^0,w,c
  4468   003F42  3408               	rlcf	(___fltol@f1+3)^0,w,c
  4469   003F44  6E0E               	movwf	___fltol@exp1^0,c
  4470   003F46  500E               	movf	___fltol@exp1^0,w,c
  4471   003F48  A4D8               	btfss	status,2,c
  4472   003F4A  EFA9  F01F         	goto	u3861
  4473   003F4E  EFAB  F01F         	goto	u3860
  4474   003F52                     u3861:
  4475   003F52  EFB5  F01F         	goto	l3777
  4476   003F56                     u3860:
  4477   003F56                     l3773:
  4478   003F56  0E00               	movlw	0
  4479   003F58  6E05               	movwf	?___fltol^0,c
  4480   003F5A  0E00               	movlw	0
  4481   003F5C  6E06               	movwf	(?___fltol+1)^0,c
  4482   003F5E  0E00               	movlw	0
  4483   003F60  6E07               	movwf	(?___fltol+2)^0,c
  4484   003F62  0E00               	movlw	0
  4485   003F64  6E08               	movwf	(?___fltol+3)^0,c
  4486   003F66  EF22  F020         	goto	l691
  4487   003F6A                     l3777:
  4488   003F6A  C005  F009         	movff	___fltol@f1,??___fltol
  4489   003F6E  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  4490   003F72  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  4491   003F76  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  4492   003F7A  0E20               	movlw	32
  4493   003F7C  EFC5  F01F         	goto	u3870
  4494   003F80                     u3875:
  4495   003F80  90D8               	bcf	status,0,c
  4496   003F82  320C               	rrcf	(??___fltol+3)^0,f,c
  4497   003F84  320B               	rrcf	(??___fltol+2)^0,f,c
  4498   003F86  320A               	rrcf	(??___fltol+1)^0,f,c
  4499   003F88  3209               	rrcf	??___fltol^0,f,c
  4500   003F8A                     u3870:
  4501   003F8A  2EE8               	decfsz	wreg,f,c
  4502   003F8C  EFC0  F01F         	goto	u3875
  4503   003F90  5009               	movf	??___fltol^0,w,c
  4504   003F92  6E0D               	movwf	___fltol@sign1^0,c
  4505   003F94  8E07               	bsf	(___fltol@f1+2)^0,7,c
  4506   003F96  0EFF               	movlw	255
  4507   003F98  1605               	andwf	___fltol@f1^0,f,c
  4508   003F9A  0EFF               	movlw	255
  4509   003F9C  1606               	andwf	(___fltol@f1+1)^0,f,c
  4510   003F9E  0EFF               	movlw	255
  4511   003FA0  1607               	andwf	(___fltol@f1+2)^0,f,c
  4512   003FA2  0E00               	movlw	0
  4513   003FA4  1608               	andwf	(___fltol@f1+3)^0,f,c
  4514   003FA6  0E96               	movlw	150
  4515   003FA8  5E0E               	subwf	___fltol@exp1^0,f,c
  4516   003FAA  BE0E               	btfsc	___fltol@exp1^0,7,c
  4517   003FAC  EFDC  F01F         	goto	u3880
  4518   003FB0  EFDA  F01F         	goto	u3881
  4519   003FB4                     u3881:
  4520   003FB4  EFF2  F01F         	goto	l3797
  4521   003FB8                     u3880:
  4522   003FB8  500E               	movf	___fltol@exp1^0,w,c
  4523   003FBA  0A80               	xorlw	128
  4524   003FBC  0F97               	addlw	151
  4525   003FBE  B0D8               	btfsc	status,0,c
  4526   003FC0  EFE4  F01F         	goto	u3891
  4527   003FC4  EFE6  F01F         	goto	u3890
  4528   003FC8                     u3891:
  4529   003FC8  EFE8  F01F         	goto	l3793
  4530   003FCC                     u3890:
  4531   003FCC  EFAB  F01F         	goto	l3773
  4532   003FD0                     l3793:
  4533   003FD0  90D8               	bcf	status,0,c
  4534   003FD2  3208               	rrcf	(___fltol@f1+3)^0,f,c
  4535   003FD4  3207               	rrcf	(___fltol@f1+2)^0,f,c
  4536   003FD6  3206               	rrcf	(___fltol@f1+1)^0,f,c
  4537   003FD8  3205               	rrcf	___fltol@f1^0,f,c
  4538   003FDA  3E0E               	incfsz	___fltol@exp1^0,f,c
  4539   003FDC  EFE8  F01F         	goto	l3793
  4540   003FE0  EF0A  F020         	goto	l3807
  4541   003FE4                     l3797:
  4542   003FE4  0E1F               	movlw	31
  4543   003FE6  640E               	cpfsgt	___fltol@exp1^0,c
  4544   003FE8  EFF8  F01F         	goto	u3901
  4545   003FEC  EFFA  F01F         	goto	u3900
  4546   003FF0                     u3901:
  4547   003FF0  EF02  F020         	goto	l3805
  4548   003FF4                     u3900:
  4549   003FF4  EFAB  F01F         	goto	l3773
  4550   003FF8                     l3803:
  4551   003FF8  90D8               	bcf	status,0,c
  4552   003FFA  3605               	rlcf	___fltol@f1^0,f,c
  4553   003FFC  3606               	rlcf	(___fltol@f1+1)^0,f,c
  4554   003FFE  3607               	rlcf	(___fltol@f1+2)^0,f,c
  4555   004000  3608               	rlcf	(___fltol@f1+3)^0,f,c
  4556   004002  060E               	decf	___fltol@exp1^0,f,c
  4557   004004                     l3805:
  4558   004004  500E               	movf	___fltol@exp1^0,w,c
  4559   004006  A4D8               	btfss	status,2,c
  4560   004008  EF08  F020         	goto	u3911
  4561   00400C  EF0A  F020         	goto	u3910
  4562   004010                     u3911:
  4563   004010  EFFC  F01F         	goto	l3803
  4564   004014                     u3910:
  4565   004014                     l3807:
  4566   004014  500D               	movf	___fltol@sign1^0,w,c
  4567   004016  B4D8               	btfsc	status,2,c
  4568   004018  EF10  F020         	goto	u3921
  4569   00401C  EF12  F020         	goto	u3920
  4570   004020                     u3921:
  4571   004020  EF1A  F020         	goto	l3811
  4572   004024                     u3920:
  4573   004024  1E08               	comf	(___fltol@f1+3)^0,f,c
  4574   004026  1E07               	comf	(___fltol@f1+2)^0,f,c
  4575   004028  1E06               	comf	(___fltol@f1+1)^0,f,c
  4576   00402A  6C05               	negf	___fltol@f1^0,c
  4577   00402C  0E00               	movlw	0
  4578   00402E  2206               	addwfc	(___fltol@f1+1)^0,f,c
  4579   004030  2207               	addwfc	(___fltol@f1+2)^0,f,c
  4580   004032  2208               	addwfc	(___fltol@f1+3)^0,f,c
  4581   004034                     l3811:
  4582   004034  C005  F005         	movff	___fltol@f1,?___fltol
  4583   004038  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  4584   00403C  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  4585   004040  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  4586   004044                     l691:
  4587   004044  0012               	return		;funcret
  4588   004046                     __end_of___fltol:
  4589                           	callstack 0
  4590                           
  4591 ;; *************** function ___flneg *****************
  4592 ;; Defined at:
  4593 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;  f1              4    4[COMRAM] long 
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;		None
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  4    4[COMRAM] long 
  4600 ;; Registers used:
  4601 ;;		wreg, status,2, status,0
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/0
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4607 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4610 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4611 ;;Total ram usage:        4 bytes
  4612 ;; Hardware stack levels used: 1
  4613 ;; Hardware stack levels required when called: 2
  4614 ;; This function calls:
  4615 ;;		Nothing
  4616 ;; This function is called by:
  4617 ;;		_efgtoa
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           	psect	text13
  4622   004E22                     __ptext13:
  4623                           	callstack 0
  4624   004E22                     ___flneg:
  4625                           	callstack 24
  4626   004E22  5005               	movf	___flneg@f1^0,w,c
  4627   004E24  1006               	iorwf	(___flneg@f1+1)^0,w,c
  4628   004E26  1007               	iorwf	(___flneg@f1+2)^0,w,c
  4629   004E28  1008               	iorwf	(___flneg@f1+3)^0,w,c
  4630   004E2A  B4D8               	btfsc	status,2,c
  4631   004E2C  EF1A  F027         	goto	u3851
  4632   004E30  EF1C  F027         	goto	u3850
  4633   004E34                     u3851:
  4634   004E34  EF24  F027         	goto	l3767
  4635   004E38                     u3850:
  4636   004E38  0E00               	movlw	0
  4637   004E3A  1A05               	xorwf	___flneg@f1^0,f,c
  4638   004E3C  0E00               	movlw	0
  4639   004E3E  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  4640   004E40  0E00               	movlw	0
  4641   004E42  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  4642   004E44  0E80               	movlw	128
  4643   004E46  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  4644   004E48                     l3767:
  4645   004E48  C005  F005         	movff	___flneg@f1,?___flneg
  4646   004E4C  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  4647   004E50  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  4648   004E54  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  4649   004E58  0012               	return		;funcret
  4650   004E5A                     __end_of___flneg:
  4651                           	callstack 0
  4652                           
  4653 ;; *************** function ___fleq *****************
  4654 ;; Defined at:
  4655 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;  ff1             4    4[COMRAM] long 
  4658 ;;  ff2             4    8[COMRAM] long 
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;		None
  4661 ;; Return value:  Size  Location     Type
  4662 ;;		None               void
  4663 ;; Registers used:
  4664 ;;		wreg, status,2, status,0
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4670 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4672 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4673 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4674 ;;Total ram usage:       12 bytes
  4675 ;; Hardware stack levels used: 1
  4676 ;; Hardware stack levels required when called: 2
  4677 ;; This function calls:
  4678 ;;		Nothing
  4679 ;; This function is called by:
  4680 ;;		_efgtoa
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           	psect	text14
  4685   0046B2                     __ptext14:
  4686                           	callstack 0
  4687   0046B2                     ___fleq:
  4688                           	callstack 24
  4689   0046B2  0E00               	movlw	0
  4690   0046B4  1405               	andwf	___fleq@ff1^0,w,c
  4691   0046B6  6E0D               	movwf	??___fleq^0,c
  4692   0046B8  0E00               	movlw	0
  4693   0046BA  1406               	andwf	(___fleq@ff1+1)^0,w,c
  4694   0046BC  6E0E               	movwf	(??___fleq+1)^0,c
  4695   0046BE  0E80               	movlw	128
  4696   0046C0  1407               	andwf	(___fleq@ff1+2)^0,w,c
  4697   0046C2  6E0F               	movwf	(??___fleq+2)^0,c
  4698   0046C4  0E7F               	movlw	127
  4699   0046C6  1408               	andwf	(___fleq@ff1+3)^0,w,c
  4700   0046C8  6E10               	movwf	(??___fleq+3)^0,c
  4701   0046CA  500D               	movf	??___fleq^0,w,c
  4702   0046CC  100E               	iorwf	(??___fleq+1)^0,w,c
  4703   0046CE  100F               	iorwf	(??___fleq+2)^0,w,c
  4704   0046D0  1010               	iorwf	(??___fleq+3)^0,w,c
  4705   0046D2  A4D8               	btfss	status,2,c
  4706   0046D4  EF6E  F023         	goto	u3771
  4707   0046D8  EF70  F023         	goto	u3770
  4708   0046DC                     u3771:
  4709   0046DC  EF78  F023         	goto	l3729
  4710   0046E0                     u3770:
  4711   0046E0  0E00               	movlw	0
  4712   0046E2  6E05               	movwf	___fleq@ff1^0,c
  4713   0046E4  0E00               	movlw	0
  4714   0046E6  6E06               	movwf	(___fleq@ff1+1)^0,c
  4715   0046E8  0E00               	movlw	0
  4716   0046EA  6E07               	movwf	(___fleq@ff1+2)^0,c
  4717   0046EC  0E00               	movlw	0
  4718   0046EE  6E08               	movwf	(___fleq@ff1+3)^0,c
  4719   0046F0                     l3729:
  4720   0046F0  0E00               	movlw	0
  4721   0046F2  1409               	andwf	___fleq@ff2^0,w,c
  4722   0046F4  6E0D               	movwf	??___fleq^0,c
  4723   0046F6  0E00               	movlw	0
  4724   0046F8  140A               	andwf	(___fleq@ff2+1)^0,w,c
  4725   0046FA  6E0E               	movwf	(??___fleq+1)^0,c
  4726   0046FC  0E80               	movlw	128
  4727   0046FE  140B               	andwf	(___fleq@ff2+2)^0,w,c
  4728   004700  6E0F               	movwf	(??___fleq+2)^0,c
  4729   004702  0E7F               	movlw	127
  4730   004704  140C               	andwf	(___fleq@ff2+3)^0,w,c
  4731   004706  6E10               	movwf	(??___fleq+3)^0,c
  4732   004708  500D               	movf	??___fleq^0,w,c
  4733   00470A  100E               	iorwf	(??___fleq+1)^0,w,c
  4734   00470C  100F               	iorwf	(??___fleq+2)^0,w,c
  4735   00470E  1010               	iorwf	(??___fleq+3)^0,w,c
  4736   004710  A4D8               	btfss	status,2,c
  4737   004712  EF8D  F023         	goto	u3781
  4738   004716  EF8F  F023         	goto	u3780
  4739   00471A                     u3781:
  4740   00471A  EF97  F023         	goto	l3733
  4741   00471E                     u3780:
  4742   00471E  0E00               	movlw	0
  4743   004720  6E09               	movwf	___fleq@ff2^0,c
  4744   004722  0E00               	movlw	0
  4745   004724  6E0A               	movwf	(___fleq@ff2+1)^0,c
  4746   004726  0E00               	movlw	0
  4747   004728  6E0B               	movwf	(___fleq@ff2+2)^0,c
  4748   00472A  0E00               	movlw	0
  4749   00472C  6E0C               	movwf	(___fleq@ff2+3)^0,c
  4750   00472E                     l3733:
  4751   00472E  5009               	movf	___fleq@ff2^0,w,c
  4752   004730  1805               	xorwf	___fleq@ff1^0,w,c
  4753   004732  E10F               	bnz	u3790
  4754   004734  500A               	movf	(___fleq@ff2+1)^0,w,c
  4755   004736  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  4756   004738  E10C               	bnz	u3790
  4757   00473A  500B               	movf	(___fleq@ff2+2)^0,w,c
  4758   00473C  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  4759   00473E  E109               	bnz	u3790
  4760   004740  500C               	movf	(___fleq@ff2+3)^0,w,c
  4761   004742  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  4762   004744  B4D8               	btfsc	status,2,c
  4763   004746  EFA7  F023         	goto	u3791
  4764   00474A  EFA9  F023         	goto	u3790
  4765   00474E                     u3791:
  4766   00474E  EFAC  F023         	goto	l3737
  4767   004752                     u3790:
  4768   004752  90D8               	bcf	status,0,c
  4769   004754  EFAD  F023         	goto	l653
  4770   004758                     l3737:
  4771   004758  80D8               	bsf	status,0,c
  4772   00475A                     l653:
  4773   00475A  0012               	return		;funcret
  4774   00475C                     __end_of___fleq:
  4775                           	callstack 0
  4776                           
  4777 ;; *************** function _dtoa *****************
  4778 ;; Defined at:
  4779 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  4782 ;;		 -> sprintf@f(11), 
  4783 ;;  d               8   33[COMRAM] long long 
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;  n               8   55[COMRAM] long long 
  4786 ;;  i               2   63[COMRAM] int 
  4787 ;;  w               2   53[COMRAM] int 
  4788 ;;  p               2   51[COMRAM] int 
  4789 ;;  s               1   65[COMRAM] unsigned char 
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  1    wreg      void 
  4792 ;; Registers used:
  4793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4799 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4800 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4801 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4802 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4803 ;;Total ram usage:       35 bytes
  4804 ;; Hardware stack levels used: 1
  4805 ;; Hardware stack levels required when called: 6
  4806 ;; This function calls:
  4807 ;;		___aodiv
  4808 ;;		___aomod
  4809 ;;		_abs
  4810 ;;		_pad
  4811 ;; This function is called by:
  4812 ;;		_vfpfcnvrt
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           	psect	text15
  4817   00325A                     __ptext15:
  4818                           	callstack 0
  4819   00325A                     _dtoa:
  4820                           	callstack 21
  4821   00325A                     
  4822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  4823   00325A  C022  F038         	movff	dtoa@d,dtoa@n
  4824   00325E  C023  F039         	movff	dtoa@d+1,dtoa@n+1
  4825   003262  C024  F03A         	movff	dtoa@d+2,dtoa@n+2
  4826   003266  C025  F03B         	movff	dtoa@d+3,dtoa@n+3
  4827   00326A  C026  F03C         	movff	dtoa@d+4,dtoa@n+4
  4828   00326E  C027  F03D         	movff	dtoa@d+5,dtoa@n+5
  4829   003272  C028  F03E         	movff	dtoa@d+6,dtoa@n+6
  4830   003276  C029  F03F         	movff	dtoa@d+7,dtoa@n+7
  4831   00327A                     
  4832                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  4833   00327A  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  4834   00327C  EF42  F019         	goto	u4211
  4835   003280  EF45  F019         	goto	u4210
  4836   003284                     u4211:
  4837   003284  0E01               	movlw	1
  4838   003286  EF46  F019         	goto	u4220
  4839   00328A                     u4210:
  4840   00328A  0E00               	movlw	0
  4841   00328C                     u4220:
  4842   00328C  6E42               	movwf	dtoa@s^0,c
  4843   00328E                     
  4844                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  4845   00328E  5042               	movf	dtoa@s^0,w,c
  4846   003290  B4D8               	btfsc	status,2,c
  4847   003292  EF4D  F019         	goto	u4231
  4848   003296  EF4F  F019         	goto	u4230
  4849   00329A                     u4231:
  4850   00329A  EF5F  F019         	goto	l3969
  4851   00329E                     u4230:
  4852   00329E                     
  4853                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  4854   00329E  1E3F               	comf	(dtoa@n+7)^0,f,c
  4855   0032A0  1E3E               	comf	(dtoa@n+6)^0,f,c
  4856   0032A2  1E3D               	comf	(dtoa@n+5)^0,f,c
  4857   0032A4  1E3C               	comf	(dtoa@n+4)^0,f,c
  4858   0032A6  1E3B               	comf	(dtoa@n+3)^0,f,c
  4859   0032A8  1E3A               	comf	(dtoa@n+2)^0,f,c
  4860   0032AA  1E39               	comf	(dtoa@n+1)^0,f,c
  4861   0032AC  6C38               	negf	dtoa@n^0,c
  4862   0032AE  0E00               	movlw	0
  4863   0032B0  2239               	addwfc	(dtoa@n+1)^0,f,c
  4864   0032B2  223A               	addwfc	(dtoa@n+2)^0,f,c
  4865   0032B4  223B               	addwfc	(dtoa@n+3)^0,f,c
  4866   0032B6  223C               	addwfc	(dtoa@n+4)^0,f,c
  4867   0032B8  223D               	addwfc	(dtoa@n+5)^0,f,c
  4868   0032BA  223E               	addwfc	(dtoa@n+6)^0,f,c
  4869   0032BC  223F               	addwfc	(dtoa@n+7)^0,f,c
  4870   0032BE                     l3969:
  4871                           
  4872                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  4873   0032BE  0100               	movlb	0	; () banked
  4874   0032C0  BFF6               	btfsc	(_prec+1)& (0+255),7,b
  4875   0032C2  EF6D  F019         	goto	u4240
  4876   0032C6  51F6               	movf	(_prec+1)& (0+255),w,b
  4877   0032C8  E106               	bnz	u4241
  4878   0032CA  05F5               	decf	_prec& (0+255),w,b
  4879   0032CC  B0D8               	btfsc	status,0,c
  4880   0032CE  EF6B  F019         	goto	u4241
  4881   0032D2  EF6D  F019         	goto	u4240
  4882   0032D6                     u4241:
  4883   0032D6  EF73  F019         	goto	l1113
  4884   0032DA                     u4240:
  4885   0032DA                     
  4886                           ; BSR set to: 0
  4887   0032DA  0E00               	movlw	0
  4888   0032DC  6E35               	movwf	(dtoa@p+1)^0,c
  4889   0032DE  0E01               	movlw	1
  4890   0032E0  6E34               	movwf	dtoa@p^0,c
  4891   0032E2  EF77  F019         	goto	l1115
  4892   0032E6                     l1113:
  4893                           
  4894                           ; BSR set to: 0
  4895   0032E6  C0F5  F034         	movff	_prec,dtoa@p
  4896   0032EA  C0F6  F035         	movff	_prec+1,dtoa@p+1
  4897   0032EE                     l1115:
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  4901   0032EE  C0F3  F036         	movff	_width,dtoa@w
  4902   0032F2  C0F4  F037         	movff	_width+1,dtoa@w+1
  4903   0032F6                     
  4904                           ; BSR set to: 0
  4905                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  4906   0032F6  5042               	movf	dtoa@s^0,w,c
  4907   0032F8  B4D8               	btfsc	status,2,c
  4908   0032FA  EF81  F019         	goto	u4251
  4909   0032FE  EF83  F019         	goto	u4250
  4910   003302                     u4251:
  4911   003302  EF9A  F019         	goto	l1116
  4912   003306                     u4250:
  4913   003306                     
  4914                           ; BSR set to: 0
  4915                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  4916   003306  0636               	decf	dtoa@w^0,f,c
  4917   003308  A0D8               	btfss	status,0,c
  4918   00330A  0637               	decf	(dtoa@w+1)^0,f,c
  4919   00330C                     
  4920                           ; BSR set to: 0
  4921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  4922   00330C  5042               	movf	dtoa@s^0,w,c
  4923   00330E  A4D8               	btfss	status,2,c
  4924   003310  EF8C  F019         	goto	u4261
  4925   003314  EF8E  F019         	goto	u4260
  4926   003318                     u4261:
  4927   003318  EF94  F019         	goto	l3981
  4928   00331C                     u4260:
  4929   00331C                     
  4930                           ; BSR set to: 0
  4931   00331C  0E00               	movlw	0
  4932   00331E  6E33               	movwf	(_dtoa$2502+1)^0,c
  4933   003320  0E2B               	movlw	43
  4934   003322  6E32               	movwf	_dtoa$2502^0,c
  4935   003324  EF98  F019         	goto	l3983
  4936   003328                     l3981:
  4937                           
  4938                           ; BSR set to: 0
  4939   003328  0E00               	movlw	0
  4940   00332A  6E33               	movwf	(_dtoa$2502+1)^0,c
  4941   00332C  0E2D               	movlw	45
  4942   00332E  6E32               	movwf	_dtoa$2502^0,c
  4943   003330                     l3983:
  4944                           
  4945                           ; BSR set to: 0
  4946   003330  C032  F042         	movff	_dtoa$2502,dtoa@s
  4947   003334                     l1116:
  4948                           
  4949                           ; BSR set to: 0
  4950                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  4951   003334  0E00               	movlw	0
  4952   003336  6E41               	movwf	(dtoa@i+1)^0,c
  4953   003338  0E4F               	movlw	79
  4954   00333A  6E40               	movwf	dtoa@i^0,c
  4955   00333C                     
  4956                           ; BSR set to: 0
  4957                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  4958   00333C  0E00               	movlw	0
  4959   00333E  0101               	movlb	1	; () banked
  4960   003340  6F8B               	movwf	(_dbuf+79)& (0+255),b
  4961                           
  4962                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  4963   003342  EF1F  F01A         	goto	l3997
  4964   003346                     l3987:
  4965                           
  4966                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  4967   003346  0640               	decf	dtoa@i^0,f,c
  4968   003348  A0D8               	btfss	status,0,c
  4969   00334A  0641               	decf	(dtoa@i+1)^0,f,c
  4970   00334C                     
  4971                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  4972   00334C  0E3C               	movlw	low _dbuf
  4973   00334E  2440               	addwf	dtoa@i^0,w,c
  4974   003350  6ED9               	movwf	fsr2l,c
  4975   003352  0E01               	movlw	high _dbuf
  4976   003354  2041               	addwfc	(dtoa@i+1)^0,w,c
  4977   003356  6EDA               	movwf	fsr2h,c
  4978   003358  C038  F005         	movff	dtoa@n,___aomod@dividend
  4979   00335C  C039  F006         	movff	dtoa@n+1,___aomod@dividend+1
  4980   003360  C03A  F007         	movff	dtoa@n+2,___aomod@dividend+2
  4981   003364  C03B  F008         	movff	dtoa@n+3,___aomod@dividend+3
  4982   003368  C03C  F009         	movff	dtoa@n+4,___aomod@dividend+4
  4983   00336C  C03D  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  4984   003370  C03E  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  4985   003374  C03F  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  4986   003378  0E0A               	movlw	10
  4987   00337A  6E0D               	movwf	___aomod@divisor^0,c
  4988   00337C  0E00               	movlw	0
  4989   00337E  6E0E               	movwf	(___aomod@divisor+1)^0,c
  4990   003380  0E00               	movlw	0
  4991   003382  6E0F               	movwf	(___aomod@divisor+2)^0,c
  4992   003384  0E00               	movlw	0
  4993   003386  6E10               	movwf	(___aomod@divisor+3)^0,c
  4994   003388  0E00               	movlw	0
  4995   00338A  6E11               	movwf	(___aomod@divisor+4)^0,c
  4996   00338C  0E00               	movlw	0
  4997   00338E  6E12               	movwf	(___aomod@divisor+5)^0,c
  4998   003390  0E00               	movlw	0
  4999   003392  6E13               	movwf	(___aomod@divisor+6)^0,c
  5000   003394  0E00               	movlw	0
  5001   003396  6E14               	movwf	(___aomod@divisor+7)^0,c
  5002   003398  ECEE  F01E         	call	___aomod	;wreg free
  5003   00339C  C005  F02A         	movff	?___aomod,??_dtoa
  5004   0033A0  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  5005   0033A4  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  5006   0033A8  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  5007   0033AC  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  5008   0033B0  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  5009   0033B4  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  5010   0033B8  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  5011   0033BC  C02A  F017         	movff	??_dtoa,abs@a
  5012   0033C0  C02B  F018         	movff	??_dtoa+1,abs@a+1
  5013   0033C4  ECF1  F026         	call	_abs	;wreg free
  5014   0033C8  5017               	movf	?_abs^0,w,c
  5015   0033CA  0F30               	addlw	48
  5016   0033CC  6EDF               	movwf	indf2,c
  5017   0033CE                     
  5018                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5019   0033CE  0634               	decf	dtoa@p^0,f,c
  5020   0033D0  A0D8               	btfss	status,0,c
  5021   0033D2  0635               	decf	(dtoa@p+1)^0,f,c
  5022   0033D4                     
  5023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5024   0033D4  0636               	decf	dtoa@w^0,f,c
  5025   0033D6  A0D8               	btfss	status,0,c
  5026   0033D8  0637               	decf	(dtoa@w+1)^0,f,c
  5027   0033DA                     
  5028                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5029   0033DA  C038  F005         	movff	dtoa@n,___aodiv@dividend
  5030   0033DE  C039  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  5031   0033E2  C03A  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  5032   0033E6  C03B  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  5033   0033EA  C03C  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  5034   0033EE  C03D  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  5035   0033F2  C03E  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  5036   0033F6  C03F  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  5037   0033FA  0E0A               	movlw	10
  5038   0033FC  6E0D               	movwf	___aodiv@divisor^0,c
  5039   0033FE  0E00               	movlw	0
  5040   003400  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  5041   003402  0E00               	movlw	0
  5042   003404  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  5043   003406  0E00               	movlw	0
  5044   003408  6E10               	movwf	(___aodiv@divisor+3)^0,c
  5045   00340A  0E00               	movlw	0
  5046   00340C  6E11               	movwf	(___aodiv@divisor+4)^0,c
  5047   00340E  0E00               	movlw	0
  5048   003410  6E12               	movwf	(___aodiv@divisor+5)^0,c
  5049   003412  0E00               	movlw	0
  5050   003414  6E13               	movwf	(___aodiv@divisor+6)^0,c
  5051   003416  0E00               	movlw	0
  5052   003418  6E14               	movwf	(___aodiv@divisor+7)^0,c
  5053   00341A  EC74  F01D         	call	___aodiv	;wreg free
  5054   00341E  C005  F038         	movff	?___aodiv,dtoa@n
  5055   003422  C006  F039         	movff	?___aodiv+1,dtoa@n+1
  5056   003426  C007  F03A         	movff	?___aodiv+2,dtoa@n+2
  5057   00342A  C008  F03B         	movff	?___aodiv+3,dtoa@n+3
  5058   00342E  C009  F03C         	movff	?___aodiv+4,dtoa@n+4
  5059   003432  C00A  F03D         	movff	?___aodiv+5,dtoa@n+5
  5060   003436  C00B  F03E         	movff	?___aodiv+6,dtoa@n+6
  5061   00343A  C00C  F03F         	movff	?___aodiv+7,dtoa@n+7
  5062   00343E                     l3997:
  5063                           
  5064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5065   00343E  BE41               	btfsc	(dtoa@i+1)^0,7,c
  5066   003440  EF2A  F01A         	goto	u4271
  5067   003444  5041               	movf	(dtoa@i+1)^0,w,c
  5068   003446  E108               	bnz	u4270
  5069   003448  0440               	decf	dtoa@i^0,w,c
  5070   00344A  A0D8               	btfss	status,0,c
  5071   00344C  EF2A  F01A         	goto	u4271
  5072   003450  EF2C  F01A         	goto	u4270
  5073   003454                     u4271:
  5074   003454  EF48  F01A         	goto	l4003
  5075   003458                     u4270:
  5076   003458  5038               	movf	dtoa@n^0,w,c
  5077   00345A  1039               	iorwf	(dtoa@n+1)^0,w,c
  5078   00345C  103A               	iorwf	(dtoa@n+2)^0,w,c
  5079   00345E  103B               	iorwf	(dtoa@n+3)^0,w,c
  5080   003460  103C               	iorwf	(dtoa@n+4)^0,w,c
  5081   003462  103D               	iorwf	(dtoa@n+5)^0,w,c
  5082   003464  103E               	iorwf	(dtoa@n+6)^0,w,c
  5083   003466  103F               	iorwf	(dtoa@n+7)^0,w,c
  5084   003468  A4D8               	btfss	status,2,c
  5085   00346A  EF39  F01A         	goto	u4281
  5086   00346E  EF3B  F01A         	goto	u4280
  5087   003472                     u4281:
  5088   003472  EFA3  F019         	goto	l3987
  5089   003476                     u4280:
  5090   003476  BE35               	btfsc	(dtoa@p+1)^0,7,c
  5091   003478  EF48  F01A         	goto	u4290
  5092   00347C  5035               	movf	(dtoa@p+1)^0,w,c
  5093   00347E  E106               	bnz	u4291
  5094   003480  0434               	decf	dtoa@p^0,w,c
  5095   003482  B0D8               	btfsc	status,0,c
  5096   003484  EF46  F01A         	goto	u4291
  5097   003488  EF48  F01A         	goto	u4290
  5098   00348C                     u4291:
  5099   00348C  EFA3  F019         	goto	l3987
  5100   003490                     u4290:
  5101   003490                     l4003:
  5102                           
  5103                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5104   003490  5042               	movf	dtoa@s^0,w,c
  5105   003492  B4D8               	btfsc	status,2,c
  5106   003494  EF4E  F01A         	goto	u4301
  5107   003498  EF50  F01A         	goto	u4300
  5108   00349C                     u4301:
  5109   00349C  EF5B  F01A         	goto	l4009
  5110   0034A0                     u4300:
  5111   0034A0                     
  5112                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5113   0034A0  0640               	decf	dtoa@i^0,f,c
  5114   0034A2  A0D8               	btfss	status,0,c
  5115   0034A4  0641               	decf	(dtoa@i+1)^0,f,c
  5116   0034A6                     
  5117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5118   0034A6  0E3C               	movlw	low _dbuf
  5119   0034A8  2440               	addwf	dtoa@i^0,w,c
  5120   0034AA  6ED9               	movwf	fsr2l,c
  5121   0034AC  0E01               	movlw	high _dbuf
  5122   0034AE  2041               	addwfc	(dtoa@i+1)^0,w,c
  5123   0034B0  6EDA               	movwf	fsr2h,c
  5124   0034B2  C042  FFDF         	movff	dtoa@s,indf2
  5125   0034B6                     l4009:
  5126                           
  5127                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5128   0034B6  C020  F015         	movff	dtoa@fp,pad@fp
  5129   0034BA  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  5130   0034BE  0E3C               	movlw	low _dbuf
  5131   0034C0  2440               	addwf	dtoa@i^0,w,c
  5132   0034C2  6E17               	movwf	pad@buf^0,c
  5133   0034C4  0E01               	movlw	high _dbuf
  5134   0034C6  2041               	addwfc	(dtoa@i+1)^0,w,c
  5135   0034C8  6E18               	movwf	(pad@buf+1)^0,c
  5136   0034CA  C036  F019         	movff	dtoa@w,pad@p
  5137   0034CE  C037  F01A         	movff	dtoa@w+1,pad@p+1
  5138   0034D2  EC3B  F024         	call	_pad	;wreg free
  5139   0034D6  0012               	return		;funcret
  5140   0034D8                     __end_of_dtoa:
  5141                           	callstack 0
  5142                           
  5143 ;; *************** function _pad *****************
  5144 ;; Defined at:
  5145 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5146 ;; Parameters:    Size  Location     Type
  5147 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  5148 ;;		 -> sprintf@f(11), 
  5149 ;;  buf             2   22[COMRAM] PTR unsigned char 
  5150 ;;		 -> dbuf(80), 
  5151 ;;  p               2   24[COMRAM] int 
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;  w               2   29[COMRAM] int 
  5154 ;;  i               2   27[COMRAM] int 
  5155 ;; Return value:  Size  Location     Type
  5156 ;;                  1    wreg      void 
  5157 ;; Registers used:
  5158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5159 ;; Tracked objects:
  5160 ;;		On entry : 0/0
  5161 ;;		On exit  : 0/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5164 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5165 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5166 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5167 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5168 ;;Total ram usage:       11 bytes
  5169 ;; Hardware stack levels used: 1
  5170 ;; Hardware stack levels required when called: 5
  5171 ;; This function calls:
  5172 ;;		_fputc
  5173 ;;		_fputs
  5174 ;; This function is called by:
  5175 ;;		_dtoa
  5176 ;;		_efgtoa
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180                           	psect	text16
  5181   004876                     __ptext16:
  5182                           	callstack 0
  5183   004876                     _pad:
  5184                           	callstack 21
  5185   004876                     
  5186                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5187   004876  BE1A               	btfsc	(pad@p+1)^0,7,c
  5188   004878  EF40  F024         	goto	u3931
  5189   00487C  EF42  F024         	goto	u3930
  5190   004880                     u3931:
  5191   004880  EF48  F024         	goto	l3819
  5192   004884                     u3930:
  5193   004884  C019  F01E         	movff	pad@p,pad@w
  5194   004888  C01A  F01F         	movff	pad@p+1,pad@w+1
  5195   00488C  EF4C  F024         	goto	l1104
  5196   004890                     l3819:
  5197   004890  0E00               	movlw	0
  5198   004892  6E1F               	movwf	(pad@w+1)^0,c
  5199   004894  0E00               	movlw	0
  5200   004896  6E1E               	movwf	pad@w^0,c
  5201   004898                     l1104:
  5202                           
  5203                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5204   004898  0E00               	movlw	0
  5205   00489A  6E1D               	movwf	(pad@i+1)^0,c
  5206   00489C  0E00               	movlw	0
  5207   00489E  6E1C               	movwf	pad@i^0,c
  5208                           
  5209                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5210   0048A0  EF5E  F024         	goto	l3825
  5211   0048A4                     l3821:
  5212                           
  5213                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5214   0048A4  0E00               	movlw	0
  5215   0048A6  6E06               	movwf	(fputc@c+1)^0,c
  5216   0048A8  0E20               	movlw	32
  5217   0048AA  6E05               	movwf	fputc@c^0,c
  5218   0048AC  C015  F007         	movff	pad@fp,fputc@fp
  5219   0048B0  C016  F008         	movff	pad@fp+1,fputc@fp+1
  5220   0048B4  ECF4  F022         	call	_fputc	;wreg free
  5221   0048B8                     
  5222                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5223   0048B8  4A1C               	infsnz	pad@i^0,f,c
  5224   0048BA  2A1D               	incf	(pad@i+1)^0,f,c
  5225   0048BC                     l3825:
  5226                           
  5227                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5228   0048BC  501E               	movf	pad@w^0,w,c
  5229   0048BE  5C1C               	subwf	pad@i^0,w,c
  5230   0048C0  501D               	movf	(pad@i+1)^0,w,c
  5231   0048C2  0A80               	xorlw	128
  5232   0048C4  6E1B               	movwf	??_pad^0,c
  5233   0048C6  501F               	movf	(pad@w+1)^0,w,c
  5234   0048C8  0A80               	xorlw	128
  5235   0048CA  581B               	subwfb	??_pad^0,w,c
  5236   0048CC  A0D8               	btfss	status,0,c
  5237   0048CE  EF6B  F024         	goto	u3941
  5238   0048D2  EF6D  F024         	goto	u3940
  5239   0048D6                     u3941:
  5240   0048D6  EF52  F024         	goto	l3821
  5241   0048DA                     u3940:
  5242   0048DA                     
  5243                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5244   0048DA  C017  F00E         	movff	pad@buf,fputs@s
  5245   0048DE  C018  F00F         	movff	pad@buf+1,fputs@s+1
  5246   0048E2  C015  F010         	movff	pad@fp,fputs@fp
  5247   0048E6  C016  F011         	movff	pad@fp+1,fputs@fp+1
  5248   0048EA  ECAE  F026         	call	_fputs	;wreg free
  5249   0048EE  0012               	return		;funcret
  5250   0048F0                     __end_of_pad:
  5251                           	callstack 0
  5252                           
  5253 ;; *************** function _fputs *****************
  5254 ;; Defined at:
  5255 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5256 ;; Parameters:    Size  Location     Type
  5257 ;;  s               2   13[COMRAM] PTR const unsigned char 
  5258 ;;		 -> dbuf(80), 
  5259 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  5260 ;;		 -> sprintf@f(11), 
  5261 ;; Auto vars:     Size  Location     Type
  5262 ;;  i               2   18[COMRAM] int 
  5263 ;;  c               1   17[COMRAM] unsigned char 
  5264 ;; Return value:  Size  Location     Type
  5265 ;;                  2   13[COMRAM] int 
  5266 ;; Registers used:
  5267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5268 ;; Tracked objects:
  5269 ;;		On entry : 0/0
  5270 ;;		On exit  : 0/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5273 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5274 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5276 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5277 ;;Total ram usage:        7 bytes
  5278 ;; Hardware stack levels used: 1
  5279 ;; Hardware stack levels required when called: 4
  5280 ;; This function calls:
  5281 ;;		_fputc
  5282 ;; This function is called by:
  5283 ;;		_pad
  5284 ;; This function uses a non-reentrant model
  5285 ;;
  5286                           
  5287                           	psect	text17
  5288   004D5C                     __ptext17:
  5289                           	callstack 0
  5290   004D5C                     _fputs:
  5291                           	callstack 21
  5292   004D5C  0E00               	movlw	0
  5293   004D5E  6E14               	movwf	(fputs@i+1)^0,c
  5294   004D60  0E00               	movlw	0
  5295   004D62  6E13               	movwf	fputs@i^0,c
  5296   004D64  EFBF  F026         	goto	l3365
  5297   004D68                     l3361:
  5298   004D68  C012  F005         	movff	fputs@c,fputc@c
  5299   004D6C  6A06               	clrf	(fputc@c+1)^0,c
  5300   004D6E  C010  F007         	movff	fputs@fp,fputc@fp
  5301   004D72  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  5302   004D76  ECF4  F022         	call	_fputc	;wreg free
  5303   004D7A  4A13               	infsnz	fputs@i^0,f,c
  5304   004D7C  2A14               	incf	(fputs@i+1)^0,f,c
  5305   004D7E                     l3365:
  5306   004D7E  5013               	movf	fputs@i^0,w,c
  5307   004D80  240E               	addwf	fputs@s^0,w,c
  5308   004D82  6ED9               	movwf	fsr2l,c
  5309   004D84  5014               	movf	(fputs@i+1)^0,w,c
  5310   004D86  200F               	addwfc	(fputs@s+1)^0,w,c
  5311   004D88  6EDA               	movwf	fsr2h,c
  5312   004D8A  50DF               	movf	indf2,w,c
  5313   004D8C  6E12               	movwf	fputs@c^0,c
  5314   004D8E  5012               	movf	fputs@c^0,w,c
  5315   004D90  A4D8               	btfss	status,2,c
  5316   004D92  EFCD  F026         	goto	u3191
  5317   004D96  EFCF  F026         	goto	u3190
  5318   004D9A                     u3191:
  5319   004D9A  EFB4  F026         	goto	l3361
  5320   004D9E                     u3190:
  5321   004D9E  0012               	return		;funcret
  5322   004DA0                     __end_of_fputs:
  5323                           	callstack 0
  5324                           
  5325 ;; *************** function _fputc *****************
  5326 ;; Defined at:
  5327 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5328 ;; Parameters:    Size  Location     Type
  5329 ;;  c               2    4[COMRAM] int 
  5330 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  5331 ;;		 -> sprintf@f(11), 
  5332 ;; Auto vars:     Size  Location     Type
  5333 ;;		None
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  2    4[COMRAM] int 
  5336 ;; Registers used:
  5337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5343 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5345 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5346 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5347 ;;Total ram usage:        9 bytes
  5348 ;; Hardware stack levels used: 1
  5349 ;; Hardware stack levels required when called: 3
  5350 ;; This function calls:
  5351 ;;		_putch
  5352 ;; This function is called by:
  5353 ;;		_pad
  5354 ;;		_vfpfcnvrt
  5355 ;;		_fputs
  5356 ;; This function uses a non-reentrant model
  5357 ;;
  5358                           
  5359                           	psect	text18
  5360   0045E8                     __ptext18:
  5361                           	callstack 0
  5362   0045E8                     _fputc:
  5363                           	callstack 24
  5364   0045E8  5007               	movf	fputc@fp^0,w,c
  5365   0045EA  1008               	iorwf	(fputc@fp+1)^0,w,c
  5366   0045EC  B4D8               	btfsc	status,2,c
  5367   0045EE  EFFB  F022         	goto	u2761
  5368   0045F2  EFFD  F022         	goto	u2760
  5369   0045F6                     u2761:
  5370   0045F6  EF06  F023         	goto	l3147
  5371   0045FA                     u2760:
  5372   0045FA  5007               	movf	fputc@fp^0,w,c
  5373   0045FC  1008               	iorwf	(fputc@fp+1)^0,w,c
  5374   0045FE  A4D8               	btfss	status,2,c
  5375   004600  EF04  F023         	goto	u2771
  5376   004604  EF06  F023         	goto	u2770
  5377   004608                     u2771:
  5378   004608  EF0B  F023         	goto	l3149
  5379   00460C                     u2770:
  5380   00460C                     l3147:
  5381   00460C  5005               	movf	fputc@c^0,w,c
  5382   00460E  EC51  F028         	call	_putch
  5383   004612  EF58  F023         	goto	l1264
  5384   004616                     l3149:
  5385   004616  EE20 F009          	lfsr	2,9
  5386   00461A  5007               	movf	fputc@fp^0,w,c
  5387   00461C  26D9               	addwf	fsr2l,f,c
  5388   00461E  5008               	movf	(fputc@fp+1)^0,w,c
  5389   004620  22DA               	addwfc	fsr2h,f,c
  5390   004622  50DE               	movf	postinc2,w,c
  5391   004624  10DE               	iorwf	postinc2,w,c
  5392   004626  B4D8               	btfsc	status,2,c
  5393   004628  EF18  F023         	goto	u2781
  5394   00462C  EF1A  F023         	goto	u2780
  5395   004630                     u2781:
  5396   004630  EF35  F023         	goto	l3153
  5397   004634                     u2780:
  5398   004634  EE20 F009          	lfsr	2,9
  5399   004638  5007               	movf	fputc@fp^0,w,c
  5400   00463A  26D9               	addwf	fsr2l,f,c
  5401   00463C  5008               	movf	(fputc@fp+1)^0,w,c
  5402   00463E  22DA               	addwfc	fsr2h,f,c
  5403   004640  EE10 F003          	lfsr	1,3
  5404   004644  5007               	movf	fputc@fp^0,w,c
  5405   004646  26E1               	addwf	fsr1l,f,c
  5406   004648  5008               	movf	(fputc@fp+1)^0,w,c
  5407   00464A  22E2               	addwfc	fsr1h,f,c
  5408   00464C  50DE               	movf	postinc2,w,c
  5409   00464E  5CE6               	subwf	postinc1,w,c
  5410   004650  50E6               	movf	postinc1,w,c
  5411   004652  0A80               	xorlw	128
  5412   004654  6E0D               	movwf	(??_fputc+4)^0,c
  5413   004656  50DE               	movf	postinc2,w,c
  5414   004658  0A80               	xorlw	128
  5415   00465A  580D               	subwfb	(??_fputc+4)^0,w,c
  5416   00465C  B0D8               	btfsc	status,0,c
  5417   00465E  EF33  F023         	goto	u2791
  5418   004662  EF35  F023         	goto	u2790
  5419   004666                     u2791:
  5420   004666  EF58  F023         	goto	l1264
  5421   00466A                     u2790:
  5422   00466A                     l3153:
  5423   00466A  EE20 F003          	lfsr	2,3
  5424   00466E  5007               	movf	fputc@fp^0,w,c
  5425   004670  26D9               	addwf	fsr2l,f,c
  5426   004672  5008               	movf	(fputc@fp+1)^0,w,c
  5427   004674  22DA               	addwfc	fsr2h,f,c
  5428   004676  CFDE F009          	movff	postinc2,??_fputc
  5429   00467A  CFDD F00A          	movff	postdec2,??_fputc+1
  5430   00467E  C007  FFD9         	movff	fputc@fp,fsr2l
  5431   004682  C008  FFDA         	movff	fputc@fp+1,fsr2h
  5432   004686  CFDE F00B          	movff	postinc2,??_fputc+2
  5433   00468A  CFDD F00C          	movff	postdec2,??_fputc+3
  5434   00468E  5009               	movf	??_fputc^0,w,c
  5435   004690  240B               	addwf	(??_fputc+2)^0,w,c
  5436   004692  6ED9               	movwf	fsr2l,c
  5437   004694  500A               	movf	(??_fputc+1)^0,w,c
  5438   004696  200C               	addwfc	(??_fputc+3)^0,w,c
  5439   004698  6EDA               	movwf	fsr2h,c
  5440   00469A  C005  FFDF         	movff	fputc@c,indf2
  5441   00469E  EE20 F003          	lfsr	2,3
  5442   0046A2  5007               	movf	fputc@fp^0,w,c
  5443   0046A4  26D9               	addwf	fsr2l,f,c
  5444   0046A6  5008               	movf	(fputc@fp+1)^0,w,c
  5445   0046A8  22DA               	addwfc	fsr2h,f,c
  5446   0046AA  2ADE               	incf	postinc2,f,c
  5447   0046AC  0E00               	movlw	0
  5448   0046AE  22DD               	addwfc	postdec2,f,c
  5449   0046B0                     l1264:
  5450   0046B0  0012               	return		;funcret
  5451   0046B2                     __end_of_fputc:
  5452                           	callstack 0
  5453                           
  5454 ;; *************** function _putch *****************
  5455 ;; Defined at:
  5456 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;  c               1    wreg     unsigned char 
  5459 ;; Auto vars:     Size  Location     Type
  5460 ;;  c               1    0[COMRAM] unsigned char 
  5461 ;; Return value:  Size  Location     Type
  5462 ;;                  1    wreg      void 
  5463 ;; Registers used:
  5464 ;;		wreg
  5465 ;; Tracked objects:
  5466 ;;		On entry : 0/0
  5467 ;;		On exit  : 0/0
  5468 ;;		Unchanged: 0/0
  5469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5474 ;;Total ram usage:        0 bytes
  5475 ;; Hardware stack levels used: 1
  5476 ;; Hardware stack levels required when called: 2
  5477 ;; This function calls:
  5478 ;;		Nothing
  5479 ;; This function is called by:
  5480 ;;		_fputc
  5481 ;; This function uses a non-reentrant model
  5482 ;;
  5483                           
  5484                           	psect	text19
  5485   0050A2                     __ptext19:
  5486                           	callstack 0
  5487   0050A2                     _putch:
  5488                           	callstack 24
  5489   0050A2  0012               	return		;funcret
  5490   0050A4                     __end_of_putch:
  5491                           	callstack 0
  5492                           
  5493 ;; *************** function _abs *****************
  5494 ;; Defined at:
  5495 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  5496 ;; Parameters:    Size  Location     Type
  5497 ;;  a               2   22[COMRAM] int 
  5498 ;; Auto vars:     Size  Location     Type
  5499 ;;		None
  5500 ;; Return value:  Size  Location     Type
  5501 ;;                  2   22[COMRAM] int 
  5502 ;; Registers used:
  5503 ;;		wreg, status,2, status,0
  5504 ;; Tracked objects:
  5505 ;;		On entry : 0/0
  5506 ;;		On exit  : 0/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5509 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5511 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5512 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5513 ;;Total ram usage:        4 bytes
  5514 ;; Hardware stack levels used: 1
  5515 ;; Hardware stack levels required when called: 2
  5516 ;; This function calls:
  5517 ;;		Nothing
  5518 ;; This function is called by:
  5519 ;;		_dtoa
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523                           	psect	text20
  5524   004DE2                     __ptext20:
  5525                           	callstack 0
  5526   004DE2                     _abs:
  5527                           	callstack 24
  5528   004DE2  BE18               	btfsc	(abs@a+1)^0,7,c
  5529   004DE4  EFFE  F026         	goto	u3950
  5530   004DE8  5018               	movf	(abs@a+1)^0,w,c
  5531   004DEA  E106               	bnz	u3951
  5532   004DEC  0417               	decf	abs@a^0,w,c
  5533   004DEE  B0D8               	btfsc	status,0,c
  5534   004DF0  EFFC  F026         	goto	u3951
  5535   004DF4  EFFE  F026         	goto	u3950
  5536   004DF8                     u3951:
  5537   004DF8  EF0C  F027         	goto	l1223
  5538   004DFC                     u3950:
  5539   004DFC  C017  F019         	movff	abs@a,??_abs
  5540   004E00  C018  F01A         	movff	abs@a+1,??_abs+1
  5541   004E04  1E19               	comf	??_abs^0,f,c
  5542   004E06  1E1A               	comf	(??_abs+1)^0,f,c
  5543   004E08  4A19               	infsnz	??_abs^0,f,c
  5544   004E0A  2A1A               	incf	(??_abs+1)^0,f,c
  5545   004E0C  C019  F017         	movff	??_abs,?_abs
  5546   004E10  C01A  F018         	movff	??_abs+1,?_abs+1
  5547   004E14  EF10  F027         	goto	l1226
  5548   004E18                     l1223:
  5549   004E18  C017  F017         	movff	abs@a,?_abs
  5550   004E1C  C018  F018         	movff	abs@a+1,?_abs+1
  5551   004E20                     l1226:
  5552   004E20  0012               	return		;funcret
  5553   004E22                     __end_of_abs:
  5554                           	callstack 0
  5555                           
  5556 ;; *************** function ___aomod *****************
  5557 ;; Defined at:
  5558 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;  dividend        8    4[COMRAM] long long 
  5561 ;;  divisor         8   12[COMRAM] long long 
  5562 ;; Auto vars:     Size  Location     Type
  5563 ;;  sign            1   21[COMRAM] unsigned char 
  5564 ;;  counter         1   20[COMRAM] unsigned char 
  5565 ;; Return value:  Size  Location     Type
  5566 ;;                  8    4[COMRAM] long long 
  5567 ;; Registers used:
  5568 ;;		wreg, status,2, status,0
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/0
  5571 ;;		On exit  : 0/0
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5574 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5575 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5577 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5578 ;;Total ram usage:       18 bytes
  5579 ;; Hardware stack levels used: 1
  5580 ;; Hardware stack levels required when called: 2
  5581 ;; This function calls:
  5582 ;;		Nothing
  5583 ;; This function is called by:
  5584 ;;		_dtoa
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588                           	psect	text21
  5589   003DDC                     __ptext21:
  5590                           	callstack 0
  5591   003DDC                     ___aomod:
  5592                           	callstack 24
  5593   003DDC  0E00               	movlw	0
  5594   003DDE  6E16               	movwf	___aomod@sign^0,c
  5595   003DE0  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  5596   003DE2  EFF7  F01E         	goto	u3290
  5597   003DE6  EFF5  F01E         	goto	u3291
  5598   003DEA                     u3291:
  5599   003DEA  EF09  F01F         	goto	l3423
  5600   003DEE                     u3290:
  5601   003DEE  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  5602   003DF0  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  5603   003DF2  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  5604   003DF4  1E09               	comf	(___aomod@dividend+4)^0,f,c
  5605   003DF6  1E08               	comf	(___aomod@dividend+3)^0,f,c
  5606   003DF8  1E07               	comf	(___aomod@dividend+2)^0,f,c
  5607   003DFA  1E06               	comf	(___aomod@dividend+1)^0,f,c
  5608   003DFC  6C05               	negf	___aomod@dividend^0,c
  5609   003DFE  0E00               	movlw	0
  5610   003E00  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  5611   003E02  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  5612   003E04  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  5613   003E06  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  5614   003E08  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  5615   003E0A  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  5616   003E0C  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  5617   003E0E  0E01               	movlw	1
  5618   003E10  6E16               	movwf	___aomod@sign^0,c
  5619   003E12                     l3423:
  5620   003E12  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  5621   003E14  EF10  F01F         	goto	u3300
  5622   003E18  EF0E  F01F         	goto	u3301
  5623   003E1C                     u3301:
  5624   003E1C  EF20  F01F         	goto	l3427
  5625   003E20                     u3300:
  5626   003E20  1E14               	comf	(___aomod@divisor+7)^0,f,c
  5627   003E22  1E13               	comf	(___aomod@divisor+6)^0,f,c
  5628   003E24  1E12               	comf	(___aomod@divisor+5)^0,f,c
  5629   003E26  1E11               	comf	(___aomod@divisor+4)^0,f,c
  5630   003E28  1E10               	comf	(___aomod@divisor+3)^0,f,c
  5631   003E2A  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  5632   003E2C  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  5633   003E2E  6C0D               	negf	___aomod@divisor^0,c
  5634   003E30  0E00               	movlw	0
  5635   003E32  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  5636   003E34  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  5637   003E36  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  5638   003E38  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  5639   003E3A  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  5640   003E3C  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  5641   003E3E  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  5642   003E40                     l3427:
  5643   003E40  500D               	movf	___aomod@divisor^0,w,c
  5644   003E42  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  5645   003E44  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  5646   003E46  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  5647   003E48  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  5648   003E4A  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  5649   003E4C  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  5650   003E4E  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  5651   003E50  B4D8               	btfsc	status,2,c
  5652   003E52  EF2D  F01F         	goto	u3311
  5653   003E56  EF2F  F01F         	goto	u3310
  5654   003E5A                     u3311:
  5655   003E5A  EF77  F01F         	goto	l3443
  5656   003E5E                     u3310:
  5657   003E5E  0E01               	movlw	1
  5658   003E60  6E15               	movwf	___aomod@counter^0,c
  5659   003E62  EF3D  F01F         	goto	l3433
  5660   003E66                     l3431:
  5661   003E66  90D8               	bcf	status,0,c
  5662   003E68  360D               	rlcf	___aomod@divisor^0,f,c
  5663   003E6A  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  5664   003E6C  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  5665   003E6E  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  5666   003E70  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  5667   003E72  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  5668   003E74  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  5669   003E76  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  5670   003E78  2A15               	incf	___aomod@counter^0,f,c
  5671   003E7A                     l3433:
  5672   003E7A  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  5673   003E7C  EF42  F01F         	goto	u3321
  5674   003E80  EF44  F01F         	goto	u3320
  5675   003E84                     u3321:
  5676   003E84  EF33  F01F         	goto	l3431
  5677   003E88                     u3320:
  5678   003E88                     l3435:
  5679   003E88  500D               	movf	___aomod@divisor^0,w,c
  5680   003E8A  5C05               	subwf	___aomod@dividend^0,w,c
  5681   003E8C  500E               	movf	(___aomod@divisor+1)^0,w,c
  5682   003E8E  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  5683   003E90  500F               	movf	(___aomod@divisor+2)^0,w,c
  5684   003E92  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  5685   003E94  5010               	movf	(___aomod@divisor+3)^0,w,c
  5686   003E96  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  5687   003E98  5011               	movf	(___aomod@divisor+4)^0,w,c
  5688   003E9A  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  5689   003E9C  5012               	movf	(___aomod@divisor+5)^0,w,c
  5690   003E9E  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  5691   003EA0  5013               	movf	(___aomod@divisor+6)^0,w,c
  5692   003EA2  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  5693   003EA4  5014               	movf	(___aomod@divisor+7)^0,w,c
  5694   003EA6  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  5695   003EA8  A0D8               	btfss	status,0,c
  5696   003EAA  EF59  F01F         	goto	u3331
  5697   003EAE  EF5B  F01F         	goto	u3330
  5698   003EB2                     u3331:
  5699   003EB2  EF6B  F01F         	goto	l3439
  5700   003EB6                     u3330:
  5701   003EB6  500D               	movf	___aomod@divisor^0,w,c
  5702   003EB8  5E05               	subwf	___aomod@dividend^0,f,c
  5703   003EBA  500E               	movf	(___aomod@divisor+1)^0,w,c
  5704   003EBC  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  5705   003EBE  500F               	movf	(___aomod@divisor+2)^0,w,c
  5706   003EC0  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  5707   003EC2  5010               	movf	(___aomod@divisor+3)^0,w,c
  5708   003EC4  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  5709   003EC6  5011               	movf	(___aomod@divisor+4)^0,w,c
  5710   003EC8  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  5711   003ECA  5012               	movf	(___aomod@divisor+5)^0,w,c
  5712   003ECC  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  5713   003ECE  5013               	movf	(___aomod@divisor+6)^0,w,c
  5714   003ED0  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  5715   003ED2  5014               	movf	(___aomod@divisor+7)^0,w,c
  5716   003ED4  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  5717   003ED6                     l3439:
  5718   003ED6  90D8               	bcf	status,0,c
  5719   003ED8  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  5720   003EDA  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  5721   003EDC  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  5722   003EDE  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  5723   003EE0  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  5724   003EE2  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  5725   003EE4  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  5726   003EE6  320D               	rrcf	___aomod@divisor^0,f,c
  5727   003EE8  2E15               	decfsz	___aomod@counter^0,f,c
  5728   003EEA  EF44  F01F         	goto	l3435
  5729   003EEE                     l3443:
  5730   003EEE  5016               	movf	___aomod@sign^0,w,c
  5731   003EF0  B4D8               	btfsc	status,2,c
  5732   003EF2  EF7D  F01F         	goto	u3341
  5733   003EF6  EF7F  F01F         	goto	u3340
  5734   003EFA                     u3341:
  5735   003EFA  EF8F  F01F         	goto	l3447
  5736   003EFE                     u3340:
  5737   003EFE  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  5738   003F00  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  5739   003F02  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  5740   003F04  1E09               	comf	(___aomod@dividend+4)^0,f,c
  5741   003F06  1E08               	comf	(___aomod@dividend+3)^0,f,c
  5742   003F08  1E07               	comf	(___aomod@dividend+2)^0,f,c
  5743   003F0A  1E06               	comf	(___aomod@dividend+1)^0,f,c
  5744   003F0C  6C05               	negf	___aomod@dividend^0,c
  5745   003F0E  0E00               	movlw	0
  5746   003F10  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  5747   003F12  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  5748   003F14  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  5749   003F16  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  5750   003F18  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  5751   003F1A  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  5752   003F1C  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  5753   003F1E                     l3447:
  5754   003F1E  C005  F005         	movff	___aomod@dividend,?___aomod
  5755   003F22  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  5756   003F26  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  5757   003F2A  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  5758   003F2E  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  5759   003F32  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  5760   003F36  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  5761   003F3A  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  5762   003F3E  0012               	return		;funcret
  5763   003F40                     __end_of___aomod:
  5764                           	callstack 0
  5765                           
  5766 ;; *************** function ___aodiv *****************
  5767 ;; Defined at:
  5768 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  5769 ;; Parameters:    Size  Location     Type
  5770 ;;  dividend        8    4[COMRAM] long long 
  5771 ;;  divisor         8   12[COMRAM] long long 
  5772 ;; Auto vars:     Size  Location     Type
  5773 ;;  quotient        8   22[COMRAM] long long 
  5774 ;;  sign            1   21[COMRAM] unsigned char 
  5775 ;;  counter         1   20[COMRAM] unsigned char 
  5776 ;; Return value:  Size  Location     Type
  5777 ;;                  8    4[COMRAM] long long 
  5778 ;; Registers used:
  5779 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5780 ;; Tracked objects:
  5781 ;;		On entry : 0/0
  5782 ;;		On exit  : 0/0
  5783 ;;		Unchanged: 0/0
  5784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5785 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5786 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5788 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5789 ;;Total ram usage:       26 bytes
  5790 ;; Hardware stack levels used: 1
  5791 ;; Hardware stack levels required when called: 2
  5792 ;; This function calls:
  5793 ;;		Nothing
  5794 ;; This function is called by:
  5795 ;;		_dtoa
  5796 ;; This function uses a non-reentrant model
  5797 ;;
  5798                           
  5799                           	psect	text22
  5800   003AE8                     __ptext22:
  5801                           	callstack 0
  5802   003AE8                     ___aodiv:
  5803                           	callstack 24
  5804   003AE8  0E00               	movlw	0
  5805   003AEA  6E16               	movwf	___aodiv@sign^0,c
  5806   003AEC  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  5807   003AEE  EF7D  F01D         	goto	u3220
  5808   003AF2  EF7B  F01D         	goto	u3221
  5809   003AF6                     u3221:
  5810   003AF6  EF8F  F01D         	goto	l3379
  5811   003AFA                     u3220:
  5812   003AFA  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  5813   003AFC  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  5814   003AFE  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  5815   003B00  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  5816   003B02  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  5817   003B04  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  5818   003B06  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  5819   003B08  6C0D               	negf	___aodiv@divisor^0,c
  5820   003B0A  0E00               	movlw	0
  5821   003B0C  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  5822   003B0E  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  5823   003B10  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  5824   003B12  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  5825   003B14  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  5826   003B16  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  5827   003B18  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  5828   003B1A  0E01               	movlw	1
  5829   003B1C  6E16               	movwf	___aodiv@sign^0,c
  5830   003B1E                     l3379:
  5831   003B1E  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  5832   003B20  EF96  F01D         	goto	u3230
  5833   003B24  EF94  F01D         	goto	u3231
  5834   003B28                     u3231:
  5835   003B28  EFA8  F01D         	goto	l3385
  5836   003B2C                     u3230:
  5837   003B2C  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  5838   003B2E  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  5839   003B30  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  5840   003B32  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  5841   003B34  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  5842   003B36  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  5843   003B38  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  5844   003B3A  6C05               	negf	___aodiv@dividend^0,c
  5845   003B3C  0E00               	movlw	0
  5846   003B3E  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  5847   003B40  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  5848   003B42  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  5849   003B44  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  5850   003B46  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  5851   003B48  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  5852   003B4A  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  5853   003B4C  0E01               	movlw	1
  5854   003B4E  1A16               	xorwf	___aodiv@sign^0,f,c
  5855   003B50                     l3385:
  5856   003B50  EE20  F017         	lfsr	2,___aodiv@quotient
  5857   003B54  0E07               	movlw	7
  5858   003B56                     u3241:
  5859   003B56  6ADE               	clrf	postinc2,c
  5860   003B58  06E8               	decf	wreg,f,c
  5861   003B5A  E2FD               	bc	u3241
  5862   003B5C  500D               	movf	___aodiv@divisor^0,w,c
  5863   003B5E  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  5864   003B60  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  5865   003B62  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  5866   003B64  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  5867   003B66  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  5868   003B68  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  5869   003B6A  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  5870   003B6C  B4D8               	btfsc	status,2,c
  5871   003B6E  EFBB  F01D         	goto	u3251
  5872   003B72  EFBD  F01D         	goto	u3250
  5873   003B76                     u3251:
  5874   003B76  EF0F  F01E         	goto	l3407
  5875   003B7A                     u3250:
  5876   003B7A  0E01               	movlw	1
  5877   003B7C  6E15               	movwf	___aodiv@counter^0,c
  5878   003B7E  EFCB  F01D         	goto	l3393
  5879   003B82                     l3391:
  5880   003B82  90D8               	bcf	status,0,c
  5881   003B84  360D               	rlcf	___aodiv@divisor^0,f,c
  5882   003B86  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  5883   003B88  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  5884   003B8A  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  5885   003B8C  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  5886   003B8E  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  5887   003B90  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  5888   003B92  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  5889   003B94  2A15               	incf	___aodiv@counter^0,f,c
  5890   003B96                     l3393:
  5891   003B96  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  5892   003B98  EFD0  F01D         	goto	u3261
  5893   003B9C  EFD2  F01D         	goto	u3260
  5894   003BA0                     u3261:
  5895   003BA0  EFC1  F01D         	goto	l3391
  5896   003BA4                     u3260:
  5897   003BA4                     l3395:
  5898   003BA4  90D8               	bcf	status,0,c
  5899   003BA6  3617               	rlcf	___aodiv@quotient^0,f,c
  5900   003BA8  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  5901   003BAA  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  5902   003BAC  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  5903   003BAE  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  5904   003BB0  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  5905   003BB2  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  5906   003BB4  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  5907   003BB6  500D               	movf	___aodiv@divisor^0,w,c
  5908   003BB8  5C05               	subwf	___aodiv@dividend^0,w,c
  5909   003BBA  500E               	movf	(___aodiv@divisor+1)^0,w,c
  5910   003BBC  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  5911   003BBE  500F               	movf	(___aodiv@divisor+2)^0,w,c
  5912   003BC0  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  5913   003BC2  5010               	movf	(___aodiv@divisor+3)^0,w,c
  5914   003BC4  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  5915   003BC6  5011               	movf	(___aodiv@divisor+4)^0,w,c
  5916   003BC8  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  5917   003BCA  5012               	movf	(___aodiv@divisor+5)^0,w,c
  5918   003BCC  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  5919   003BCE  5013               	movf	(___aodiv@divisor+6)^0,w,c
  5920   003BD0  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  5921   003BD2  5014               	movf	(___aodiv@divisor+7)^0,w,c
  5922   003BD4  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  5923   003BD6  A0D8               	btfss	status,0,c
  5924   003BD8  EFF0  F01D         	goto	u3271
  5925   003BDC  EFF2  F01D         	goto	u3270
  5926   003BE0                     u3271:
  5927   003BE0  EF03  F01E         	goto	l3403
  5928   003BE4                     u3270:
  5929   003BE4  500D               	movf	___aodiv@divisor^0,w,c
  5930   003BE6  5E05               	subwf	___aodiv@dividend^0,f,c
  5931   003BE8  500E               	movf	(___aodiv@divisor+1)^0,w,c
  5932   003BEA  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  5933   003BEC  500F               	movf	(___aodiv@divisor+2)^0,w,c
  5934   003BEE  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  5935   003BF0  5010               	movf	(___aodiv@divisor+3)^0,w,c
  5936   003BF2  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  5937   003BF4  5011               	movf	(___aodiv@divisor+4)^0,w,c
  5938   003BF6  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  5939   003BF8  5012               	movf	(___aodiv@divisor+5)^0,w,c
  5940   003BFA  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  5941   003BFC  5013               	movf	(___aodiv@divisor+6)^0,w,c
  5942   003BFE  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  5943   003C00  5014               	movf	(___aodiv@divisor+7)^0,w,c
  5944   003C02  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  5945   003C04  8017               	bsf	___aodiv@quotient^0,0,c
  5946   003C06                     l3403:
  5947   003C06  90D8               	bcf	status,0,c
  5948   003C08  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  5949   003C0A  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  5950   003C0C  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  5951   003C0E  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  5952   003C10  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  5953   003C12  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  5954   003C14  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  5955   003C16  320D               	rrcf	___aodiv@divisor^0,f,c
  5956   003C18  2E15               	decfsz	___aodiv@counter^0,f,c
  5957   003C1A  EFD2  F01D         	goto	l3395
  5958   003C1E                     l3407:
  5959   003C1E  5016               	movf	___aodiv@sign^0,w,c
  5960   003C20  B4D8               	btfsc	status,2,c
  5961   003C22  EF15  F01E         	goto	u3281
  5962   003C26  EF17  F01E         	goto	u3280
  5963   003C2A                     u3281:
  5964   003C2A  EF27  F01E         	goto	l3411
  5965   003C2E                     u3280:
  5966   003C2E  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  5967   003C30  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  5968   003C32  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  5969   003C34  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  5970   003C36  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  5971   003C38  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  5972   003C3A  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  5973   003C3C  6C17               	negf	___aodiv@quotient^0,c
  5974   003C3E  0E00               	movlw	0
  5975   003C40  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  5976   003C42  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  5977   003C44  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  5978   003C46  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  5979   003C48  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  5980   003C4A  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  5981   003C4C  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  5982   003C4E                     l3411:
  5983   003C4E  C017  F005         	movff	___aodiv@quotient,?___aodiv
  5984   003C52  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  5985   003C56  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  5986   003C5A  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  5987   003C5E  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  5988   003C62  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  5989   003C66  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  5990   003C6A  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  5991   003C6E  0012               	return		;funcret
  5992   003C70                     __end_of___aodiv:
  5993                           	callstack 0
  5994                           
  5995 ;; *************** function _sendTxBuf *****************
  5996 ;; Defined at:
  5997 ;;		line 126 in file "serialTest.c"
  5998 ;; Parameters:    Size  Location     Type
  5999 ;;		None
  6000 ;; Auto vars:     Size  Location     Type
  6001 ;;		None
  6002 ;; Return value:  Size  Location     Type
  6003 ;;                  1    wreg      void 
  6004 ;; Registers used:
  6005 ;;		wreg, status,2, status,0, cstack
  6006 ;; Tracked objects:
  6007 ;;		On entry : 0/0
  6008 ;;		On exit  : 0/0
  6009 ;;		Unchanged: 0/0
  6010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6015 ;;Total ram usage:        0 bytes
  6016 ;; Hardware stack levels used: 1
  6017 ;; Hardware stack levels required when called: 3
  6018 ;; This function calls:
  6019 ;;		_isDataInTxBuf
  6020 ;; This function is called by:
  6021 ;;		_main
  6022 ;; This function uses a non-reentrant model
  6023 ;;
  6024                           
  6025                           	psect	text23
  6026   00502E                     __ptext23:
  6027                           	callstack 0
  6028   00502E                     _sendTxBuf:
  6029                           	callstack 27
  6030   00502E                     
  6031                           ;serialTest.c: 127:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;}
  6032   00502E  EC24  F028         	call	_isDataInTxBuf	;wreg free
  6033   005032  0900               	iorlw	0
  6034   005034  B4D8               	btfsc	status,2,c
  6035   005036  EF1F  F028         	goto	u5331
  6036   00503A  EF21  F028         	goto	u5330
  6037   00503E                     u5331:
  6038   00503E  EF23  F028         	goto	l382
  6039   005042                     u5330:
  6040   005042  010E               	movlb	14	; () banked
  6041   005044  852D               	bsf	45,2,b	;volatile
  6042   005046                     l382:
  6043   005046  0012               	return		;funcret
  6044   005048                     __end_of_sendTxBuf:
  6045                           	callstack 0
  6046                           
  6047 ;; *************** function _isDataInTxBuf *****************
  6048 ;; Defined at:
  6049 ;;		line 113 in file "serialTest.c"
  6050 ;; Parameters:    Size  Location     Type
  6051 ;;		None
  6052 ;; Auto vars:     Size  Location     Type
  6053 ;;		None
  6054 ;; Return value:  Size  Location     Type
  6055 ;;                  1    wreg      unsigned char 
  6056 ;; Registers used:
  6057 ;;		wreg, status,2, status,0
  6058 ;; Tracked objects:
  6059 ;;		On entry : 0/0
  6060 ;;		On exit  : 0/0
  6061 ;;		Unchanged: 0/0
  6062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6067 ;;Total ram usage:        0 bytes
  6068 ;; Hardware stack levels used: 1
  6069 ;; Hardware stack levels required when called: 2
  6070 ;; This function calls:
  6071 ;;		Nothing
  6072 ;; This function is called by:
  6073 ;;		_sendTxBuf
  6074 ;; This function uses a non-reentrant model
  6075 ;;
  6076                           
  6077                           	psect	text24
  6078   005048                     __ptext24:
  6079                           	callstack 0
  6080   005048                     _isDataInTxBuf:
  6081                           	callstack 27
  6082   005048                     
  6083                           ;serialTest.c: 114:     return (TxBufWriteCnt!=TxBufReadCnt);
  6084   005048  5057               	movf	_TxBufReadCnt^0,w,c	;volatile
  6085   00504A  1858               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  6086   00504C  A4D8               	btfss	status,2,c
  6087   00504E  EF2B  F028         	goto	u4721
  6088   005052  EF2E  F028         	goto	u4720
  6089   005056                     u4721:
  6090   005056  0E01               	movlw	1
  6091   005058  EF2F  F028         	goto	u4730
  6092   00505C                     u4720:
  6093   00505C  0E00               	movlw	0
  6094   00505E                     u4730:
  6095   00505E  0012               	return		;funcret
  6096   005060                     __end_of_isDataInTxBuf:
  6097                           	callstack 0
  6098                           
  6099 ;; *************** function _initUSART4 *****************
  6100 ;; Defined at:
  6101 ;;		line 5 in file "serialTest.c"
  6102 ;; Parameters:    Size  Location     Type
  6103 ;;		None
  6104 ;; Auto vars:     Size  Location     Type
  6105 ;;		None
  6106 ;; Return value:  Size  Location     Type
  6107 ;;                  1    wreg      void 
  6108 ;; Registers used:
  6109 ;;		wreg, status,2
  6110 ;; Tracked objects:
  6111 ;;		On entry : 0/0
  6112 ;;		On exit  : 0/0
  6113 ;;		Unchanged: 0/0
  6114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6119 ;;Total ram usage:        0 bytes
  6120 ;; Hardware stack levels used: 1
  6121 ;; Hardware stack levels required when called: 2
  6122 ;; This function calls:
  6123 ;;		Nothing
  6124 ;; This function is called by:
  6125 ;;		_main
  6126 ;; This function uses a non-reentrant model
  6127 ;;
  6128                           
  6129                           	psect	text25
  6130   004EBE                     __ptext25:
  6131                           	callstack 0
  6132   004EBE                     _initUSART4:
  6133                           	callstack 28
  6134   004EBE                     
  6135                           ;serialTest.c: 9:     BAUD4CONbits.BRG16 = 0;
  6136   004EBE  010E               	movlb	14	; () banked
  6137   004EC0  97E9               	bcf	233,3,b	;volatile
  6138                           
  6139                           ;serialTest.c: 10:     TX4STAbits.BRGH = 0;
  6140   004EC2  95E8               	bcf	232,2,b	;volatile
  6141   004EC4                     
  6142                           ; BSR set to: 14
  6143                           ;serialTest.c: 19:     SP4BRGL = 51;
  6144   004EC4  0E33               	movlw	51
  6145   004EC6  6FE5               	movwf	229,b	;volatile
  6146                           
  6147                           ;serialTest.c: 20:     SP4BRGH = 0;
  6148   004EC8  0E00               	movlw	0
  6149   004ECA  6FE6               	movwf	230,b	;volatile
  6150   004ECC                     
  6151                           ; BSR set to: 14
  6152                           ;serialTest.c: 22:     RC4STAbits.CREN = 1;
  6153   004ECC  89E7               	bsf	231,4,b	;volatile
  6154   004ECE                     
  6155                           ; BSR set to: 14
  6156                           ;serialTest.c: 23:     TX4STAbits.TXEN = 1;
  6157   004ECE  8BE8               	bsf	232,5,b	;volatile
  6158   004ED0                     
  6159                           ; BSR set to: 14
  6160                           ;serialTest.c: 24:     RC4STAbits.SPEN = 1;
  6161   004ED0  8FE7               	bsf	231,7,b	;volatile
  6162   004ED2                     
  6163                           ; BSR set to: 14
  6164                           ;serialTest.c: 26:     TRISCbits.TRISC1 = 1;
  6165   004ED2  8283               	bsf	131,1,c	;volatile
  6166                           
  6167                           ;serialTest.c: 28:     RC0PPS = 0x12;
  6168   004ED4  0E12               	movlw	18
  6169   004ED6  6F62               	movwf	98,b	;volatile
  6170                           
  6171                           ;serialTest.c: 29:     RX4PPS = 0x11;
  6172   004ED8  0E11               	movlw	17
  6173   004EDA  6F15               	movwf	21,b	;volatile
  6174   004EDC                     
  6175                           ; BSR set to: 14
  6176                           ;serialTest.c: 32:     INTCONbits.GIE = 1;
  6177   004EDC  8EF2               	bsf	242,7,c	;volatile
  6178   004EDE                     
  6179                           ; BSR set to: 14
  6180                           ;serialTest.c: 33:     INTCONbits.IPEN = 1;
  6181   004EDE  8AF2               	bsf	242,5,c	;volatile
  6182   004EE0                     
  6183                           ; BSR set to: 14
  6184                           ;serialTest.c: 34:     INTCONbits.PEIE = 1;
  6185   004EE0  8CF2               	bsf	242,6,c	;volatile
  6186   004EE2                     
  6187                           ; BSR set to: 14
  6188                           ;serialTest.c: 36:     PIE4bits.RC4IE=1;
  6189   004EE2  872D               	bsf	45,3,b	;volatile
  6190   004EE4                     
  6191                           ; BSR set to: 14
  6192                           ;serialTest.c: 37:     PIE4bits.TX4IE=0;
  6193   004EE4  952D               	bcf	45,2,b	;volatile
  6194   004EE6                     
  6195                           ; BSR set to: 14
  6196                           ;serialTest.c: 39:     IPR4bits.RC4IP = 1;
  6197   004EE6  8723               	bsf	35,3,b	;volatile
  6198   004EE8                     
  6199                           ; BSR set to: 14
  6200                           ;serialTest.c: 40:     IPR4bits.TX4IP = 1;
  6201   004EE8  8523               	bsf	35,2,b	;volatile
  6202   004EEA                     
  6203                           ; BSR set to: 14
  6204   004EEA  0012               	return		;funcret
  6205   004EEC                     __end_of_initUSART4:
  6206                           	callstack 0
  6207                           
  6208 ;; *************** function _initDCmotorsPWM *****************
  6209 ;; Defined at:
  6210 ;;		line 5 in file "dc_motor.c"
  6211 ;; Parameters:    Size  Location     Type
  6212 ;;  PWMperiod       2    4[COMRAM] int 
  6213 ;; Auto vars:     Size  Location     Type
  6214 ;;		None
  6215 ;; Return value:  Size  Location     Type
  6216 ;;                  1    wreg      void 
  6217 ;; Registers used:
  6218 ;;		wreg, status,2
  6219 ;; Tracked objects:
  6220 ;;		On entry : 0/0
  6221 ;;		On exit  : 0/0
  6222 ;;		Unchanged: 0/0
  6223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6224 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6227 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6228 ;;Total ram usage:        2 bytes
  6229 ;; Hardware stack levels used: 1
  6230 ;; Hardware stack levels required when called: 2
  6231 ;; This function calls:
  6232 ;;		Nothing
  6233 ;; This function is called by:
  6234 ;;		_main
  6235 ;; This function uses a non-reentrant model
  6236 ;;
  6237                           
  6238                           	psect	text26
  6239   00475C                     __ptext26:
  6240                           	callstack 0
  6241   00475C                     _initDCmotorsPWM:
  6242                           	callstack 28
  6243   00475C                     
  6244                           ;dc_motor.c: 9:     LATEbits.LATE2 = 0;
  6245   00475C  947D               	bcf	125,2,c	;volatile
  6246                           
  6247                           ;dc_motor.c: 10:     LATEbits.LATE4 = 0;
  6248   00475E  987D               	bcf	125,4,c	;volatile
  6249                           
  6250                           ;dc_motor.c: 11:     LATCbits.LATC7 = 0;
  6251   004760  9E7B               	bcf	123,7,c	;volatile
  6252                           
  6253                           ;dc_motor.c: 12:     LATGbits.LATG6 = 0;
  6254   004762  9C7F               	bcf	127,6,c	;volatile
  6255                           
  6256                           ;dc_motor.c: 15:     TRISEbits.TRISE2 = 0 ;
  6257   004764  9485               	bcf	133,2,c	;volatile
  6258                           
  6259                           ;dc_motor.c: 16:     TRISEbits.TRISE4 = 0 ;
  6260   004766  9885               	bcf	133,4,c	;volatile
  6261                           
  6262                           ;dc_motor.c: 17:     TRISCbits.TRISC7 = 0 ;
  6263   004768  9E83               	bcf	131,7,c	;volatile
  6264                           
  6265                           ;dc_motor.c: 18:     TRISGbits.TRISG6 = 0 ;
  6266   00476A  9C87               	bcf	135,6,c	;volatile
  6267   00476C                     
  6268                           ;dc_motor.c: 21:     RE2PPS=0x05;
  6269   00476C  0E05               	movlw	5
  6270   00476E  010E               	movlb	14	; () banked
  6271   004770  6F74               	movwf	116,b	;volatile
  6272                           
  6273                           ;dc_motor.c: 22:     RE4PPS=0x06;
  6274   004772  0E06               	movlw	6
  6275   004774  6F76               	movwf	118,b	;volatile
  6276                           
  6277                           ;dc_motor.c: 23:     RC7PPS=0x07;
  6278   004776  0E07               	movlw	7
  6279   004778  6F69               	movwf	105,b	;volatile
  6280                           
  6281                           ;dc_motor.c: 24:     RG6PPS=0x08;
  6282   00477A  0E08               	movlw	8
  6283   00477C  6F88               	movwf	136,b	;volatile
  6284                           
  6285                           ;dc_motor.c: 27:     T2CONbits.CKPS=0b011;
  6286   00477E  50BD               	movf	189,w,c	;volatile
  6287   004780  0B8F               	andlw	-113
  6288   004782  0930               	iorlw	48
  6289   004784  6EBD               	movwf	189,c	;volatile
  6290                           
  6291                           ;dc_motor.c: 28:     T2HLTbits.MODE=0b00000;
  6292   004786  0EE0               	movlw	-32
  6293   004788  16BE               	andwf	190,f,c	;volatile
  6294                           
  6295                           ;dc_motor.c: 29:     T2CLKCONbits.CS=0b0001;
  6296   00478A  50BF               	movf	191,w,c	;volatile
  6297   00478C  0BF0               	andlw	-16
  6298   00478E  0901               	iorlw	1
  6299   004790  6EBF               	movwf	191,c	;volatile
  6300                           
  6301                           ;dc_motor.c: 33:     T2PR=199;
  6302   004792  0EC7               	movlw	199
  6303   004794  6EBC               	movwf	188,c	;volatile
  6304   004796                     
  6305                           ; BSR set to: 14
  6306                           ;dc_motor.c: 34:     T2CONbits.ON=1;
  6307   004796  8EBD               	bsf	189,7,c	;volatile
  6308                           
  6309                           ;dc_motor.c: 38:     CCPR1H=0;
  6310   004798  0E00               	movlw	0
  6311   00479A  6EAA               	movwf	170,c	;volatile
  6312                           
  6313                           ;dc_motor.c: 39:     CCPR2H=0;
  6314   00479C  0E00               	movlw	0
  6315   00479E  6EA6               	movwf	166,c	;volatile
  6316                           
  6317                           ;dc_motor.c: 40:     CCPR3H=0;
  6318   0047A0  0E00               	movlw	0
  6319   0047A2  010F               	movlb	15	; () banked
  6320   0047A4  6F25               	movwf	37,b	;volatile
  6321                           
  6322                           ;dc_motor.c: 41:     CCPR4H=0;
  6323   0047A6  0E00               	movlw	0
  6324   0047A8  6F21               	movwf	33,b	;volatile
  6325                           
  6326                           ;dc_motor.c: 44:     CCPTMRS0bits.C1TSEL=0;
  6327   0047AA  0EFC               	movlw	-4
  6328   0047AC  16AD               	andwf	173,f,c	;volatile
  6329                           
  6330                           ;dc_motor.c: 45:     CCPTMRS0bits.C2TSEL=0;
  6331   0047AE  0EF3               	movlw	-13
  6332   0047B0  16AD               	andwf	173,f,c	;volatile
  6333                           
  6334                           ;dc_motor.c: 46:     CCPTMRS0bits.C3TSEL=0;
  6335   0047B2  0ECF               	movlw	-49
  6336   0047B4  16AD               	andwf	173,f,c	;volatile
  6337                           
  6338                           ;dc_motor.c: 47:     CCPTMRS0bits.C4TSEL=0;
  6339   0047B6  0E3F               	movlw	-193
  6340   0047B8  16AD               	andwf	173,f,c	;volatile
  6341   0047BA                     
  6342                           ; BSR set to: 15
  6343                           ;dc_motor.c: 50:     CCP1CONbits.FMT=1;
  6344   0047BA  88AB               	bsf	171,4,c	;volatile
  6345                           
  6346                           ;dc_motor.c: 51:     CCP1CONbits.CCP1MODE=0b1100;
  6347   0047BC  50AB               	movf	171,w,c	;volatile
  6348   0047BE  0BF0               	andlw	-16
  6349   0047C0  090C               	iorlw	12
  6350   0047C2  6EAB               	movwf	171,c	;volatile
  6351   0047C4                     
  6352                           ; BSR set to: 15
  6353                           ;dc_motor.c: 52:     CCP1CONbits.EN=1;
  6354   0047C4  8EAB               	bsf	171,7,c	;volatile
  6355   0047C6                     
  6356                           ; BSR set to: 15
  6357                           ;dc_motor.c: 54:     CCP2CONbits.FMT=1;
  6358   0047C6  88A7               	bsf	167,4,c	;volatile
  6359                           
  6360                           ;dc_motor.c: 55:     CCP2CONbits.CCP2MODE=0b1100;
  6361   0047C8  50A7               	movf	167,w,c	;volatile
  6362   0047CA  0BF0               	andlw	-16
  6363   0047CC  090C               	iorlw	12
  6364   0047CE  6EA7               	movwf	167,c	;volatile
  6365   0047D0                     
  6366                           ; BSR set to: 15
  6367                           ;dc_motor.c: 56:     CCP2CONbits.EN=1;
  6368   0047D0  8EA7               	bsf	167,7,c	;volatile
  6369   0047D2                     
  6370                           ; BSR set to: 15
  6371                           ;dc_motor.c: 58:     CCP3CONbits.FMT=1;
  6372   0047D2  8926               	bsf	38,4,b	;volatile
  6373                           
  6374                           ;dc_motor.c: 59:     CCP3CONbits.CCP3MODE=0b1100;
  6375   0047D4  5126               	movf	38,w,b	;volatile
  6376   0047D6  0BF0               	andlw	-16
  6377   0047D8  090C               	iorlw	12
  6378   0047DA  6F26               	movwf	38,b	;volatile
  6379   0047DC                     
  6380                           ; BSR set to: 15
  6381                           ;dc_motor.c: 60:     CCP3CONbits.EN=1;
  6382   0047DC  8F26               	bsf	38,7,b	;volatile
  6383   0047DE                     
  6384                           ; BSR set to: 15
  6385                           ;dc_motor.c: 62:     CCP4CONbits.FMT=1;
  6386   0047DE  8922               	bsf	34,4,b	;volatile
  6387                           
  6388                           ;dc_motor.c: 63:     CCP4CONbits.CCP4MODE=0b1100;
  6389   0047E0  5122               	movf	34,w,b	;volatile
  6390   0047E2  0BF0               	andlw	-16
  6391   0047E4  090C               	iorlw	12
  6392   0047E6  6F22               	movwf	34,b	;volatile
  6393   0047E8                     
  6394                           ; BSR set to: 15
  6395                           ;dc_motor.c: 64:     CCP4CONbits.EN=1;
  6396   0047E8  8F22               	bsf	34,7,b	;volatile
  6397   0047EA                     
  6398                           ; BSR set to: 15
  6399   0047EA  0012               	return		;funcret
  6400   0047EC                     __end_of_initDCmotorsPWM:
  6401                           	callstack 0
  6402                           
  6403 ;; *************** function _color_click_init *****************
  6404 ;; Defined at:
  6405 ;;		line 7 in file "color.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;		None
  6408 ;; Auto vars:     Size  Location     Type
  6409 ;;		None
  6410 ;; Return value:  Size  Location     Type
  6411 ;;                  1    wreg      void 
  6412 ;; Registers used:
  6413 ;;		wreg, status,2, status,0, cstack
  6414 ;; Tracked objects:
  6415 ;;		On entry : 0/0
  6416 ;;		On exit  : 0/0
  6417 ;;		Unchanged: 0/0
  6418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6421 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6422 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6423 ;;Total ram usage:        1 bytes
  6424 ;; Hardware stack levels used: 1
  6425 ;; Hardware stack levels required when called: 5
  6426 ;; This function calls:
  6427 ;;		_I2C_2_Master_Init
  6428 ;;		_color_writetoaddr
  6429 ;; This function is called by:
  6430 ;;		_main
  6431 ;; This function uses a non-reentrant model
  6432 ;;
  6433                           
  6434                           	psect	text27
  6435   004E5A                     __ptext27:
  6436                           	callstack 0
  6437   004E5A                     _color_click_init:
  6438                           	callstack 25
  6439   004E5A                     
  6440                           ;color.c: 10:     I2C_2_Master_Init();
  6441   004E5A  ECA1  F027         	call	_I2C_2_Master_Init	;wreg free
  6442   004E5E                     
  6443                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
  6444   004E5E  0E01               	movlw	1
  6445   004E60  6E07               	movwf	color_writetoaddr@value^0,c
  6446   004E62  0E00               	movlw	0
  6447   004E64  EC07  F028         	call	_color_writetoaddr
  6448   004E68                     
  6449                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6450   004E68  0E3F               	movlw	63
  6451   004E6A  6E09               	movwf	??_color_click_init^0,c
  6452   004E6C  0E55               	movlw	85
  6453   004E6E                     u6367:
  6454   004E6E  2EE8               	decfsz	wreg,f,c
  6455   004E70  D7FE               	bra	u6367
  6456   004E72  2E09               	decfsz	??_color_click_init^0,f,c
  6457   004E74  D7FC               	bra	u6367
  6458   004E76  F000               	nop	
  6459   004E78                     
  6460                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  6461   004E78  0E03               	movlw	3
  6462   004E7A  6E07               	movwf	color_writetoaddr@value^0,c
  6463   004E7C  0E00               	movlw	0
  6464   004E7E  EC07  F028         	call	_color_writetoaddr
  6465   004E82                     
  6466                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  6467   004E82  0ED5               	movlw	213
  6468   004E84  6E07               	movwf	color_writetoaddr@value^0,c
  6469   004E86  0E01               	movlw	1
  6470   004E88  EC07  F028         	call	_color_writetoaddr
  6471   004E8C  0012               	return		;funcret
  6472   004E8E                     __end_of_color_click_init:
  6473                           	callstack 0
  6474                           
  6475 ;; *************** function _color_writetoaddr *****************
  6476 ;; Defined at:
  6477 ;;		line 24 in file "color.c"
  6478 ;; Parameters:    Size  Location     Type
  6479 ;;  address         1    wreg     unsigned char 
  6480 ;;  value           1    6[COMRAM] unsigned char 
  6481 ;; Auto vars:     Size  Location     Type
  6482 ;;  address         1    7[COMRAM] unsigned char 
  6483 ;; Return value:  Size  Location     Type
  6484 ;;                  1    wreg      void 
  6485 ;; Registers used:
  6486 ;;		wreg, status,2, status,0, cstack
  6487 ;; Tracked objects:
  6488 ;;		On entry : 0/0
  6489 ;;		On exit  : 0/0
  6490 ;;		Unchanged: 0/0
  6491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6492 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6493 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6495 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6496 ;;Total ram usage:        2 bytes
  6497 ;; Hardware stack levels used: 1
  6498 ;; Hardware stack levels required when called: 4
  6499 ;; This function calls:
  6500 ;;		_I2C_2_Master_Start
  6501 ;;		_I2C_2_Master_Stop
  6502 ;;		_I2C_2_Master_Write
  6503 ;; This function is called by:
  6504 ;;		_color_click_init
  6505 ;; This function uses a non-reentrant model
  6506 ;;
  6507                           
  6508                           	psect	text28
  6509   00500E                     __ptext28:
  6510                           	callstack 0
  6511   00500E                     _color_writetoaddr:
  6512                           	callstack 25
  6513                           
  6514                           ;incstack = 0
  6515                           ;color_writetoaddr@address stored from wreg
  6516   00500E  6E08               	movwf	color_writetoaddr@address^0,c
  6517   005010                     
  6518                           ;color.c: 25:     I2C_2_Master_Start();
  6519   005010  EC47  F028         	call	_I2C_2_Master_Start	;wreg free
  6520                           
  6521                           ;color.c: 26:     I2C_2_Master_Write(0x52 | 0x00);
  6522   005014  0E52               	movlw	82
  6523   005016  EC3C  F028         	call	_I2C_2_Master_Write
  6524                           
  6525                           ;color.c: 27:     I2C_2_Master_Write(0x80 | address);
  6526   00501A  5008               	movf	color_writetoaddr@address^0,w,c
  6527   00501C  0980               	iorlw	128
  6528   00501E  EC3C  F028         	call	_I2C_2_Master_Write
  6529                           
  6530                           ;color.c: 28:     I2C_2_Master_Write(value);
  6531   005022  5007               	movf	color_writetoaddr@value^0,w,c
  6532   005024  EC3C  F028         	call	_I2C_2_Master_Write
  6533                           
  6534                           ;color.c: 29:     I2C_2_Master_Stop();
  6535   005028  EC42  F028         	call	_I2C_2_Master_Stop	;wreg free
  6536   00502C  0012               	return		;funcret
  6537   00502E                     __end_of_color_writetoaddr:
  6538                           	callstack 0
  6539                           
  6540 ;; *************** function _I2C_2_Master_Init *****************
  6541 ;; Defined at:
  6542 ;;		line 4 in file "i2c.c"
  6543 ;; Parameters:    Size  Location     Type
  6544 ;;		None
  6545 ;; Auto vars:     Size  Location     Type
  6546 ;;		None
  6547 ;; Return value:  Size  Location     Type
  6548 ;;                  1    wreg      void 
  6549 ;; Registers used:
  6550 ;;		wreg, status,2
  6551 ;; Tracked objects:
  6552 ;;		On entry : 0/0
  6553 ;;		On exit  : 0/0
  6554 ;;		Unchanged: 0/0
  6555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6560 ;;Total ram usage:        0 bytes
  6561 ;; Hardware stack levels used: 1
  6562 ;; Hardware stack levels required when called: 2
  6563 ;; This function calls:
  6564 ;;		Nothing
  6565 ;; This function is called by:
  6566 ;;		_color_click_init
  6567 ;; This function uses a non-reentrant model
  6568 ;;
  6569                           
  6570                           	psect	text29
  6571   004F42                     __ptext29:
  6572                           	callstack 0
  6573   004F42                     _I2C_2_Master_Init:
  6574                           	callstack 27
  6575   004F42                     
  6576                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6577   004F42  010E               	movlb	14	; () banked
  6578   004F44  51D9               	movf	217,w,b	;volatile
  6579   004F46  0BF0               	andlw	-16
  6580   004F48  0908               	iorlw	8
  6581   004F4A  6FD9               	movwf	217,b	;volatile
  6582   004F4C                     
  6583                           ; BSR set to: 14
  6584                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6585   004F4C  8BD9               	bsf	217,5,b	;volatile
  6586                           
  6587                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6588   004F4E  0E9F               	movlw	159
  6589   004F50  6FD6               	movwf	214,b	;volatile
  6590   004F52                     
  6591                           ; BSR set to: 14
  6592                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6593   004F52  8A84               	bsf	132,5,c	;volatile
  6594   004F54                     
  6595                           ; BSR set to: 14
  6596                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6597   004F54  8C84               	bsf	132,6,c	;volatile
  6598   004F56                     
  6599                           ; BSR set to: 14
  6600                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6601   004F56  9BA7               	bcf	167,5,b	;volatile
  6602   004F58                     
  6603                           ; BSR set to: 14
  6604                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6605   004F58  9DA7               	bcf	167,6,b	;volatile
  6606                           
  6607                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  6608   004F5A  0E1D               	movlw	29
  6609   004F5C  6F1D               	movwf	29,b	;volatile
  6610                           
  6611                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  6612   004F5E  0E1E               	movlw	30
  6613   004F60  6F1C               	movwf	28,b	;volatile
  6614                           
  6615                           ;i2c.c: 18:   RD5PPS=0x1C;
  6616   004F62  0E1C               	movlw	28
  6617   004F64  6F6F               	movwf	111,b	;volatile
  6618                           
  6619                           ;i2c.c: 19:   RD6PPS=0x1B;
  6620   004F66  0E1B               	movlw	27
  6621   004F68  6F70               	movwf	112,b	;volatile
  6622   004F6A                     
  6623                           ; BSR set to: 14
  6624   004F6A  0012               	return		;funcret
  6625   004F6C                     __end_of_I2C_2_Master_Init:
  6626                           	callstack 0
  6627                           
  6628 ;; *************** function _colorDetect *****************
  6629 ;; Defined at:
  6630 ;;		line 129 in file "color.c"
  6631 ;; Parameters:    Size  Location     Type
  6632 ;;  clearRef        4    0[BANK0 ] void 
  6633 ;;  ambientRGBVa    2    4[BANK0 ] PTR struct RGB
  6634 ;;		 -> main@ambientRGBVal(8), 
  6635 ;;  whiteRGBVal     2    6[BANK0 ] PTR struct RGB
  6636 ;;		 -> main@whiteRGBVal(8), 
  6637 ;;  mL              2    8[BANK0 ] PTR struct DC_motor
  6638 ;;		 -> main@motorLeft(9), 
  6639 ;;  mR              2   10[BANK0 ] PTR struct DC_motor
  6640 ;;		 -> main@motorRight(9), 
  6641 ;; Auto vars:     Size  Location     Type
  6642 ;;  RGBVal          8   30[BANK0 ] struct RGB
  6643 ;;  bluePrint       4   46[BANK0 ] float 
  6644 ;;  greenPrint      4   42[BANK0 ] float 
  6645 ;;  redPrint        4   38[BANK0 ] float 
  6646 ;;  whiteB          4   20[BANK0 ] float 
  6647 ;;  whiteG          4   16[BANK0 ] float 
  6648 ;;  whiteR          4   12[BANK0 ] float 
  6649 ;;  whiteC          4    0        float 
  6650 ;;  ambientB        2   28[BANK0 ] unsigned int 
  6651 ;;  ambientG        2   26[BANK0 ] unsigned int 
  6652 ;;  ambientR        2   24[BANK0 ] unsigned int 
  6653 ;; Return value:  Size  Location     Type
  6654 ;;                  1    wreg      void 
  6655 ;; Registers used:
  6656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6657 ;; Tracked objects:
  6658 ;;		On entry : 0/0
  6659 ;;		On exit  : 0/0
  6660 ;;		Unchanged: 0/0
  6661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6662 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6663 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6664 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6665 ;;      Totals:         2      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6666 ;;Total ram usage:       52 bytes
  6667 ;; Hardware stack levels used: 1
  6668 ;; Hardware stack levels required when called: 6
  6669 ;; This function calls:
  6670 ;;		___fldiv
  6671 ;;		___flge
  6672 ;;		___flmul
  6673 ;;		___flsub
  6674 ;;		___xxtofl
  6675 ;;		_fullSpeedAhead
  6676 ;;		_getColor
  6677 ;;		_right45
  6678 ;; This function is called by:
  6679 ;;		_main
  6680 ;; This function uses a non-reentrant model
  6681 ;;
  6682                           
  6683                           	psect	text30
  6684   000E2C                     __ptext30:
  6685                           	callstack 0
  6686   000E2C                     _colorDetect:
  6687                           	callstack 24
  6688   000E2C                     
  6689                           ;color.c: 132:         RGB RGBVal;;color.c: 133:         getColor(&RGBVal);
  6690   000E2C  0E7E               	movlw	low colorDetect@RGBVal
  6691   000E2E  6E10               	movwf	getColor@v^0,c
  6692   000E30  0E00               	movlw	high colorDetect@RGBVal
  6693   000E32  6E11               	movwf	(getColor@v+1)^0,c
  6694   000E34  EC1E  F025         	call	_getColor	;wreg free
  6695   000E38                     
  6696                           ;color.c: 135:         unsigned int ambientR = ambientRGBVal->R;
  6697   000E38  C064  FFD9         	movff	colorDetect@ambientRGBVal,fsr2l
  6698   000E3C  C065  FFDA         	movff	colorDetect@ambientRGBVal+1,fsr2h
  6699   000E40  CFDE F078          	movff	postinc2,colorDetect@ambientR
  6700   000E44  CFDD F079          	movff	postdec2,colorDetect@ambientR+1
  6701   000E48                     
  6702                           ;color.c: 136:         unsigned int ambientG = ambientRGBVal->G;
  6703   000E48  0100               	movlb	0	; () banked
  6704   000E4A  EE20 F002          	lfsr	2,2
  6705   000E4E  5164               	movf	colorDetect@ambientRGBVal& (0+255),w,b
  6706   000E50  26D9               	addwf	fsr2l,f,c
  6707   000E52  5165               	movf	(colorDetect@ambientRGBVal+1)& (0+255),w,b
  6708   000E54  22DA               	addwfc	fsr2h,f,c
  6709   000E56  CFDE F07A          	movff	postinc2,colorDetect@ambientG
  6710   000E5A  CFDD F07B          	movff	postdec2,colorDetect@ambientG+1
  6711   000E5E                     
  6712                           ; BSR set to: 0
  6713                           ;color.c: 137:         unsigned int ambientB = ambientRGBVal->B;
  6714   000E5E  EE20 F004          	lfsr	2,4
  6715   000E62  5164               	movf	colorDetect@ambientRGBVal& (0+255),w,b
  6716   000E64  26D9               	addwf	fsr2l,f,c
  6717   000E66  5165               	movf	(colorDetect@ambientRGBVal+1)& (0+255),w,b
  6718   000E68  22DA               	addwfc	fsr2h,f,c
  6719   000E6A  CFDE F07C          	movff	postinc2,colorDetect@ambientB
  6720   000E6E  CFDD F07D          	movff	postdec2,colorDetect@ambientB+1
  6721   000E72                     
  6722                           ; BSR set to: 0
  6723                           ;color.c: 139:         float whiteR = whiteRGBVal->R;
  6724   000E72  C066  FFD9         	movff	colorDetect@whiteRGBVal,fsr2l
  6725   000E76  C067  FFDA         	movff	colorDetect@whiteRGBVal+1,fsr2h
  6726   000E7A  CFDE F04F          	movff	postinc2,??_colorDetect
  6727   000E7E  CFDD F050          	movff	postdec2,??_colorDetect+1
  6728   000E82  C04F  F005         	movff	??_colorDetect,___xxtofl@val
  6729   000E86  C050  F006         	movff	??_colorDetect+1,___xxtofl@val+1
  6730   000E8A  6A07               	clrf	(___xxtofl@val+2)^0,c
  6731   000E8C  6A08               	clrf	(___xxtofl@val+3)^0,c
  6732   000E8E  0E00               	movlw	0
  6733   000E90  EC9A  F01C         	call	___xxtofl
  6734   000E94  C005  F06C         	movff	?___xxtofl,colorDetect@whiteR
  6735   000E98  C006  F06D         	movff	?___xxtofl+1,colorDetect@whiteR+1
  6736   000E9C  C007  F06E         	movff	?___xxtofl+2,colorDetect@whiteR+2
  6737   000EA0  C008  F06F         	movff	?___xxtofl+3,colorDetect@whiteR+3
  6738   000EA4                     
  6739                           ;color.c: 140:         float whiteG = whiteRGBVal->G;
  6740   000EA4  0100               	movlb	0	; () banked
  6741   000EA6  EE20 F002          	lfsr	2,2
  6742   000EAA  5166               	movf	colorDetect@whiteRGBVal& (0+255),w,b
  6743   000EAC  26D9               	addwf	fsr2l,f,c
  6744   000EAE  5167               	movf	(colorDetect@whiteRGBVal+1)& (0+255),w,b
  6745   000EB0  22DA               	addwfc	fsr2h,f,c
  6746   000EB2  CFDE F04F          	movff	postinc2,??_colorDetect
  6747   000EB6  CFDD F050          	movff	postdec2,??_colorDetect+1
  6748   000EBA  C04F  F005         	movff	??_colorDetect,___xxtofl@val
  6749   000EBE  C050  F006         	movff	??_colorDetect+1,___xxtofl@val+1
  6750   000EC2  6A07               	clrf	(___xxtofl@val+2)^0,c
  6751   000EC4  6A08               	clrf	(___xxtofl@val+3)^0,c
  6752   000EC6  0E00               	movlw	0
  6753   000EC8  EC9A  F01C         	call	___xxtofl
  6754   000ECC  C005  F070         	movff	?___xxtofl,colorDetect@whiteG
  6755   000ED0  C006  F071         	movff	?___xxtofl+1,colorDetect@whiteG+1
  6756   000ED4  C007  F072         	movff	?___xxtofl+2,colorDetect@whiteG+2
  6757   000ED8  C008  F073         	movff	?___xxtofl+3,colorDetect@whiteG+3
  6758   000EDC                     
  6759                           ;color.c: 141:         float whiteB = whiteRGBVal->B;
  6760   000EDC  0100               	movlb	0	; () banked
  6761   000EDE  EE20 F004          	lfsr	2,4
  6762   000EE2  5166               	movf	colorDetect@whiteRGBVal& (0+255),w,b
  6763   000EE4  26D9               	addwf	fsr2l,f,c
  6764   000EE6  5167               	movf	(colorDetect@whiteRGBVal+1)& (0+255),w,b
  6765   000EE8  22DA               	addwfc	fsr2h,f,c
  6766   000EEA  CFDE F04F          	movff	postinc2,??_colorDetect
  6767   000EEE  CFDD F050          	movff	postdec2,??_colorDetect+1
  6768   000EF2  C04F  F005         	movff	??_colorDetect,___xxtofl@val
  6769   000EF6  C050  F006         	movff	??_colorDetect+1,___xxtofl@val+1
  6770   000EFA  6A07               	clrf	(___xxtofl@val+2)^0,c
  6771   000EFC  6A08               	clrf	(___xxtofl@val+3)^0,c
  6772   000EFE  0E00               	movlw	0
  6773   000F00  EC9A  F01C         	call	___xxtofl
  6774   000F04  C005  F074         	movff	?___xxtofl,colorDetect@whiteB
  6775   000F08  C006  F075         	movff	?___xxtofl+1,colorDetect@whiteB+1
  6776   000F0C  C007  F076         	movff	?___xxtofl+2,colorDetect@whiteB+2
  6777   000F10  C008  F077         	movff	?___xxtofl+3,colorDetect@whiteB+3
  6778   000F14  0100               	movlb	0	; () banked
  6779   000F16  EE20 F006          	lfsr	2,6
  6780   000F1A  5166               	movf	colorDetect@whiteRGBVal& (0+255),w,b
  6781   000F1C  26D9               	addwf	fsr2l,f,c
  6782   000F1E  5167               	movf	(colorDetect@whiteRGBVal+1)& (0+255),w,b
  6783   000F20  22DA               	addwfc	fsr2h,f,c
  6784   000F22  CFDE F04F          	movff	postinc2,??_colorDetect
  6785   000F26  CFDD F050          	movff	postdec2,??_colorDetect+1
  6786   000F2A  C04F  F005         	movff	??_colorDetect,___xxtofl@val
  6787   000F2E  C050  F006         	movff	??_colorDetect+1,___xxtofl@val+1
  6788   000F32  6A07               	clrf	(___xxtofl@val+2)^0,c
  6789   000F34  6A08               	clrf	(___xxtofl@val+3)^0,c
  6790   000F36  0E00               	movlw	0
  6791   000F38  EC9A  F01C         	call	___xxtofl
  6792   000F3C                     
  6793                           ;color.c: 144:         float redPrint = (RGBVal.R-ambientR)/((whiteR-(float)ambientR)*(c
      +                          learRef));
  6794   000F3C  0100               	movlb	0	; () banked
  6795   000F3E  5178               	movf	colorDetect@ambientR& (0+255),w,b
  6796   000F40  5D7E               	subwf	colorDetect@RGBVal& (0+255),w,b
  6797   000F42  6E4F               	movwf	??_colorDetect^0,c
  6798   000F44  5179               	movf	(colorDetect@ambientR+1)& (0+255),w,b
  6799   000F46  597F               	subwfb	(colorDetect@RGBVal+1)& (0+255),w,b
  6800   000F48  6E50               	movwf	(??_colorDetect+1)^0,c
  6801   000F4A  C04F  F005         	movff	??_colorDetect,___xxtofl@val
  6802   000F4E  C050  F006         	movff	??_colorDetect+1,___xxtofl@val+1
  6803   000F52  6A07               	clrf	(___xxtofl@val+2)^0,c
  6804   000F54  6A08               	clrf	(___xxtofl@val+3)^0,c
  6805   000F56  0E00               	movlw	0
  6806   000F58  EC9A  F01C         	call	___xxtofl
  6807   000F5C  C005  F036         	movff	?___xxtofl,___fldiv@b
  6808   000F60  C006  F037         	movff	?___xxtofl+1,___fldiv@b+1
  6809   000F64  C007  F038         	movff	?___xxtofl+2,___fldiv@b+2
  6810   000F68  C008  F039         	movff	?___xxtofl+3,___fldiv@b+3
  6811   000F6C  C060  F019         	movff	colorDetect@clearRef,___flmul@a
  6812   000F70  C061  F01A         	movff	colorDetect@clearRef+1,___flmul@a+1
  6813   000F74  C062  F01B         	movff	colorDetect@clearRef+2,___flmul@a+2
  6814   000F78  C063  F01C         	movff	colorDetect@clearRef+3,___flmul@a+3
  6815   000F7C  C078  F005         	movff	colorDetect@ambientR,___xxtofl@val
  6816   000F80  C079  F006         	movff	colorDetect@ambientR+1,___xxtofl@val+1
  6817   000F84  6A07               	clrf	(___xxtofl@val+2)^0,c
  6818   000F86  6A08               	clrf	(___xxtofl@val+3)^0,c
  6819   000F88  0E00               	movlw	0
  6820   000F8A  EC9A  F01C         	call	___xxtofl
  6821   000F8E  C005  F032         	movff	?___xxtofl,___flsub@a
  6822   000F92  C006  F033         	movff	?___xxtofl+1,___flsub@a+1
  6823   000F96  C007  F034         	movff	?___xxtofl+2,___flsub@a+2
  6824   000F9A  C008  F035         	movff	?___xxtofl+3,___flsub@a+3
  6825   000F9E  C06C  F02E         	movff	colorDetect@whiteR,___flsub@b
  6826   000FA2  C06D  F02F         	movff	colorDetect@whiteR+1,___flsub@b+1
  6827   000FA6  C06E  F030         	movff	colorDetect@whiteR+2,___flsub@b+2
  6828   000FAA  C06F  F031         	movff	colorDetect@whiteR+3,___flsub@b+3
  6829   000FAE  EC69  F026         	call	___flsub	;wreg free
  6830   000FB2  C02E  F015         	movff	?___flsub,___flmul@b
  6831   000FB6  C02F  F016         	movff	?___flsub+1,___flmul@b+1
  6832   000FBA  C030  F017         	movff	?___flsub+2,___flmul@b+2
  6833   000FBE  C031  F018         	movff	?___flsub+3,___flmul@b+3
  6834   000FC2  ECC8  F013         	call	___flmul	;wreg free
  6835   000FC6  C015  F03A         	movff	?___flmul,___fldiv@a
  6836   000FCA  C016  F03B         	movff	?___flmul+1,___fldiv@a+1
  6837   000FCE  C017  F03C         	movff	?___flmul+2,___fldiv@a+2
  6838   000FD2  C018  F03D         	movff	?___flmul+3,___fldiv@a+3
  6839   000FD6  ECDD  F015         	call	___fldiv	;wreg free
  6840   000FDA  C036  F086         	movff	?___fldiv,colorDetect@redPrint
  6841   000FDE  C037  F087         	movff	?___fldiv+1,colorDetect@redPrint+1
  6842   000FE2  C038  F088         	movff	?___fldiv+2,colorDetect@redPrint+2
  6843   000FE6  C039  F089         	movff	?___fldiv+3,colorDetect@redPrint+3
  6844   000FEA                     
  6845                           ;color.c: 145:         float greenPrint = (RGBVal.G-ambientG)/((whiteG-(float)ambientG)*
      +                          (clearRef));
  6846   000FEA  0100               	movlb	0	; () banked
  6847   000FEC  517A               	movf	colorDetect@ambientG& (0+255),w,b
  6848   000FEE  5D80               	subwf	(colorDetect@RGBVal+2)& (0+255),w,b
  6849   000FF0  6E4F               	movwf	??_colorDetect^0,c
  6850   000FF2  517B               	movf	(colorDetect@ambientG+1)& (0+255),w,b
  6851   000FF4  5981               	subwfb	(colorDetect@RGBVal+3)& (0+255),w,b
  6852   000FF6  6E50               	movwf	(??_colorDetect+1)^0,c
  6853   000FF8  C04F  F005         	movff	??_colorDetect,___xxtofl@val
  6854   000FFC  C050  F006         	movff	??_colorDetect+1,___xxtofl@val+1
  6855   001000  6A07               	clrf	(___xxtofl@val+2)^0,c
  6856   001002  6A08               	clrf	(___xxtofl@val+3)^0,c
  6857   001004  0E00               	movlw	0
  6858   001006  EC9A  F01C         	call	___xxtofl
  6859   00100A  C005  F036         	movff	?___xxtofl,___fldiv@b
  6860   00100E  C006  F037         	movff	?___xxtofl+1,___fldiv@b+1
  6861   001012  C007  F038         	movff	?___xxtofl+2,___fldiv@b+2
  6862   001016  C008  F039         	movff	?___xxtofl+3,___fldiv@b+3
  6863   00101A  C060  F019         	movff	colorDetect@clearRef,___flmul@a
  6864   00101E  C061  F01A         	movff	colorDetect@clearRef+1,___flmul@a+1
  6865   001022  C062  F01B         	movff	colorDetect@clearRef+2,___flmul@a+2
  6866   001026  C063  F01C         	movff	colorDetect@clearRef+3,___flmul@a+3
  6867   00102A  C07A  F005         	movff	colorDetect@ambientG,___xxtofl@val
  6868   00102E  C07B  F006         	movff	colorDetect@ambientG+1,___xxtofl@val+1
  6869   001032  6A07               	clrf	(___xxtofl@val+2)^0,c
  6870   001034  6A08               	clrf	(___xxtofl@val+3)^0,c
  6871   001036  0E00               	movlw	0
  6872   001038  EC9A  F01C         	call	___xxtofl
  6873   00103C  C005  F032         	movff	?___xxtofl,___flsub@a
  6874   001040  C006  F033         	movff	?___xxtofl+1,___flsub@a+1
  6875   001044  C007  F034         	movff	?___xxtofl+2,___flsub@a+2
  6876   001048  C008  F035         	movff	?___xxtofl+3,___flsub@a+3
  6877   00104C  C070  F02E         	movff	colorDetect@whiteG,___flsub@b
  6878   001050  C071  F02F         	movff	colorDetect@whiteG+1,___flsub@b+1
  6879   001054  C072  F030         	movff	colorDetect@whiteG+2,___flsub@b+2
  6880   001058  C073  F031         	movff	colorDetect@whiteG+3,___flsub@b+3
  6881   00105C  EC69  F026         	call	___flsub	;wreg free
  6882   001060  C02E  F015         	movff	?___flsub,___flmul@b
  6883   001064  C02F  F016         	movff	?___flsub+1,___flmul@b+1
  6884   001068  C030  F017         	movff	?___flsub+2,___flmul@b+2
  6885   00106C  C031  F018         	movff	?___flsub+3,___flmul@b+3
  6886   001070  ECC8  F013         	call	___flmul	;wreg free
  6887   001074  C015  F03A         	movff	?___flmul,___fldiv@a
  6888   001078  C016  F03B         	movff	?___flmul+1,___fldiv@a+1
  6889   00107C  C017  F03C         	movff	?___flmul+2,___fldiv@a+2
  6890   001080  C018  F03D         	movff	?___flmul+3,___fldiv@a+3
  6891   001084  ECDD  F015         	call	___fldiv	;wreg free
  6892   001088  C036  F08A         	movff	?___fldiv,colorDetect@greenPrint
  6893   00108C  C037  F08B         	movff	?___fldiv+1,colorDetect@greenPrint+1
  6894   001090  C038  F08C         	movff	?___fldiv+2,colorDetect@greenPrint+2
  6895   001094  C039  F08D         	movff	?___fldiv+3,colorDetect@greenPrint+3
  6896   001098                     
  6897                           ;color.c: 146:         float bluePrint = (RGBVal.B-ambientB)/((whiteB-(float)ambientB)*(
      +                          clearRef));
  6898   001098  0100               	movlb	0	; () banked
  6899   00109A  517C               	movf	colorDetect@ambientB& (0+255),w,b
  6900   00109C  5D82               	subwf	(colorDetect@RGBVal+4)& (0+255),w,b
  6901   00109E  6E4F               	movwf	??_colorDetect^0,c
  6902   0010A0  517D               	movf	(colorDetect@ambientB+1)& (0+255),w,b
  6903   0010A2  5983               	subwfb	(colorDetect@RGBVal+5)& (0+255),w,b
  6904   0010A4  6E50               	movwf	(??_colorDetect+1)^0,c
  6905   0010A6  C04F  F005         	movff	??_colorDetect,___xxtofl@val
  6906   0010AA  C050  F006         	movff	??_colorDetect+1,___xxtofl@val+1
  6907   0010AE  6A07               	clrf	(___xxtofl@val+2)^0,c
  6908   0010B0  6A08               	clrf	(___xxtofl@val+3)^0,c
  6909   0010B2  0E00               	movlw	0
  6910   0010B4  EC9A  F01C         	call	___xxtofl
  6911   0010B8  C005  F036         	movff	?___xxtofl,___fldiv@b
  6912   0010BC  C006  F037         	movff	?___xxtofl+1,___fldiv@b+1
  6913   0010C0  C007  F038         	movff	?___xxtofl+2,___fldiv@b+2
  6914   0010C4  C008  F039         	movff	?___xxtofl+3,___fldiv@b+3
  6915   0010C8  C060  F019         	movff	colorDetect@clearRef,___flmul@a
  6916   0010CC  C061  F01A         	movff	colorDetect@clearRef+1,___flmul@a+1
  6917   0010D0  C062  F01B         	movff	colorDetect@clearRef+2,___flmul@a+2
  6918   0010D4  C063  F01C         	movff	colorDetect@clearRef+3,___flmul@a+3
  6919   0010D8  C07C  F005         	movff	colorDetect@ambientB,___xxtofl@val
  6920   0010DC  C07D  F006         	movff	colorDetect@ambientB+1,___xxtofl@val+1
  6921   0010E0  6A07               	clrf	(___xxtofl@val+2)^0,c
  6922   0010E2  6A08               	clrf	(___xxtofl@val+3)^0,c
  6923   0010E4  0E00               	movlw	0
  6924   0010E6  EC9A  F01C         	call	___xxtofl
  6925   0010EA  C005  F032         	movff	?___xxtofl,___flsub@a
  6926   0010EE  C006  F033         	movff	?___xxtofl+1,___flsub@a+1
  6927   0010F2  C007  F034         	movff	?___xxtofl+2,___flsub@a+2
  6928   0010F6  C008  F035         	movff	?___xxtofl+3,___flsub@a+3
  6929   0010FA  C074  F02E         	movff	colorDetect@whiteB,___flsub@b
  6930   0010FE  C075  F02F         	movff	colorDetect@whiteB+1,___flsub@b+1
  6931   001102  C076  F030         	movff	colorDetect@whiteB+2,___flsub@b+2
  6932   001106  C077  F031         	movff	colorDetect@whiteB+3,___flsub@b+3
  6933   00110A  EC69  F026         	call	___flsub	;wreg free
  6934   00110E  C02E  F015         	movff	?___flsub,___flmul@b
  6935   001112  C02F  F016         	movff	?___flsub+1,___flmul@b+1
  6936   001116  C030  F017         	movff	?___flsub+2,___flmul@b+2
  6937   00111A  C031  F018         	movff	?___flsub+3,___flmul@b+3
  6938   00111E  ECC8  F013         	call	___flmul	;wreg free
  6939   001122  C015  F03A         	movff	?___flmul,___fldiv@a
  6940   001126  C016  F03B         	movff	?___flmul+1,___fldiv@a+1
  6941   00112A  C017  F03C         	movff	?___flmul+2,___fldiv@a+2
  6942   00112E  C018  F03D         	movff	?___flmul+3,___fldiv@a+3
  6943   001132  ECDD  F015         	call	___fldiv	;wreg free
  6944   001136  C036  F08E         	movff	?___fldiv,colorDetect@bluePrint
  6945   00113A  C037  F08F         	movff	?___fldiv+1,colorDetect@bluePrint+1
  6946   00113E  C038  F090         	movff	?___fldiv+2,colorDetect@bluePrint+2
  6947   001142  C039  F091         	movff	?___fldiv+3,colorDetect@bluePrint+3
  6948   001146                     
  6949                           ;color.c: 148:         if ((redPrint < 0) | (redPrint > 2)) { redPrint = 0.0;}
  6950   001146  0100               	movlb	0	; () banked
  6951   001148  BF89               	btfsc	(colorDetect@redPrint+3)& (0+255),7,b
  6952   00114A  EFA9  F008         	goto	u5931
  6953   00114E  EFAB  F008         	goto	u5930
  6954   001152                     u5931:
  6955   001152  EFC4  F008         	goto	l5347
  6956   001156                     u5930:
  6957   001156                     
  6958                           ; BSR set to: 0
  6959   001156  0E00               	movlw	0
  6960   001158  6E36               	movwf	___flge@ff1^0,c
  6961   00115A  0E00               	movlw	0
  6962   00115C  6E37               	movwf	(___flge@ff1+1)^0,c
  6963   00115E  0E00               	movlw	0
  6964   001160  6E38               	movwf	(___flge@ff1+2)^0,c
  6965   001162  0E40               	movlw	64
  6966   001164  6E39               	movwf	(___flge@ff1+3)^0,c
  6967   001166  C086  F03A         	movff	colorDetect@redPrint,___flge@ff2
  6968   00116A  C087  F03B         	movff	colorDetect@redPrint+1,___flge@ff2+1
  6969   00116E  C088  F03C         	movff	colorDetect@redPrint+2,___flge@ff2+2
  6970   001172  C089  F03D         	movff	colorDetect@redPrint+3,___flge@ff2+3
  6971   001176  ECA6  F020         	call	___flge	;wreg free
  6972   00117A  B0D8               	btfsc	status,0,c
  6973   00117C  EFC2  F008         	goto	u5941
  6974   001180  EFC4  F008         	goto	u5940
  6975   001184                     u5941:
  6976   001184  EFCD  F008         	goto	l5349
  6977   001188                     u5940:
  6978   001188                     l5347:
  6979   001188  0E00               	movlw	0
  6980   00118A  0100               	movlb	0	; () banked
  6981   00118C  6F86               	movwf	colorDetect@redPrint& (0+255),b
  6982   00118E  0E00               	movlw	0
  6983   001190  6F87               	movwf	(colorDetect@redPrint+1)& (0+255),b
  6984   001192  0E00               	movlw	0
  6985   001194  6F88               	movwf	(colorDetect@redPrint+2)& (0+255),b
  6986   001196  0E00               	movlw	0
  6987   001198  6F89               	movwf	(colorDetect@redPrint+3)& (0+255),b
  6988   00119A                     l5349:
  6989                           
  6990                           ;color.c: 149:         if ((greenPrint < 0) | (greenPrint > 2)) {greenPrint = 0.0;}
  6991   00119A  0100               	movlb	0	; () banked
  6992   00119C  BF8D               	btfsc	(colorDetect@greenPrint+3)& (0+255),7,b
  6993   00119E  EFD3  F008         	goto	u5951
  6994   0011A2  EFD5  F008         	goto	u5950
  6995   0011A6                     u5951:
  6996   0011A6  EFEE  F008         	goto	l5353
  6997   0011AA                     u5950:
  6998   0011AA                     
  6999                           ; BSR set to: 0
  7000   0011AA  0E00               	movlw	0
  7001   0011AC  6E36               	movwf	___flge@ff1^0,c
  7002   0011AE  0E00               	movlw	0
  7003   0011B0  6E37               	movwf	(___flge@ff1+1)^0,c
  7004   0011B2  0E00               	movlw	0
  7005   0011B4  6E38               	movwf	(___flge@ff1+2)^0,c
  7006   0011B6  0E40               	movlw	64
  7007   0011B8  6E39               	movwf	(___flge@ff1+3)^0,c
  7008   0011BA  C08A  F03A         	movff	colorDetect@greenPrint,___flge@ff2
  7009   0011BE  C08B  F03B         	movff	colorDetect@greenPrint+1,___flge@ff2+1
  7010   0011C2  C08C  F03C         	movff	colorDetect@greenPrint+2,___flge@ff2+2
  7011   0011C6  C08D  F03D         	movff	colorDetect@greenPrint+3,___flge@ff2+3
  7012   0011CA  ECA6  F020         	call	___flge	;wreg free
  7013   0011CE  B0D8               	btfsc	status,0,c
  7014   0011D0  EFEC  F008         	goto	u5961
  7015   0011D4  EFEE  F008         	goto	u5960
  7016   0011D8                     u5961:
  7017   0011D8  EFF7  F008         	goto	l5355
  7018   0011DC                     u5960:
  7019   0011DC                     l5353:
  7020   0011DC  0E00               	movlw	0
  7021   0011DE  0100               	movlb	0	; () banked
  7022   0011E0  6F8A               	movwf	colorDetect@greenPrint& (0+255),b
  7023   0011E2  0E00               	movlw	0
  7024   0011E4  6F8B               	movwf	(colorDetect@greenPrint+1)& (0+255),b
  7025   0011E6  0E00               	movlw	0
  7026   0011E8  6F8C               	movwf	(colorDetect@greenPrint+2)& (0+255),b
  7027   0011EA  0E00               	movlw	0
  7028   0011EC  6F8D               	movwf	(colorDetect@greenPrint+3)& (0+255),b
  7029   0011EE                     l5355:
  7030                           
  7031                           ;color.c: 150:         if ((bluePrint < 0) | (bluePrint > 2)){ bluePrint = 0.0;}
  7032   0011EE  0100               	movlb	0	; () banked
  7033   0011F0  BF91               	btfsc	(colorDetect@bluePrint+3)& (0+255),7,b
  7034   0011F2  EFFD  F008         	goto	u5971
  7035   0011F6  EFFF  F008         	goto	u5970
  7036   0011FA                     u5971:
  7037   0011FA  EF18  F009         	goto	l5359
  7038   0011FE                     u5970:
  7039   0011FE                     
  7040                           ; BSR set to: 0
  7041   0011FE  0E00               	movlw	0
  7042   001200  6E36               	movwf	___flge@ff1^0,c
  7043   001202  0E00               	movlw	0
  7044   001204  6E37               	movwf	(___flge@ff1+1)^0,c
  7045   001206  0E00               	movlw	0
  7046   001208  6E38               	movwf	(___flge@ff1+2)^0,c
  7047   00120A  0E40               	movlw	64
  7048   00120C  6E39               	movwf	(___flge@ff1+3)^0,c
  7049   00120E  C08E  F03A         	movff	colorDetect@bluePrint,___flge@ff2
  7050   001212  C08F  F03B         	movff	colorDetect@bluePrint+1,___flge@ff2+1
  7051   001216  C090  F03C         	movff	colorDetect@bluePrint+2,___flge@ff2+2
  7052   00121A  C091  F03D         	movff	colorDetect@bluePrint+3,___flge@ff2+3
  7053   00121E  ECA6  F020         	call	___flge	;wreg free
  7054   001222  B0D8               	btfsc	status,0,c
  7055   001224  EF16  F009         	goto	u5981
  7056   001228  EF18  F009         	goto	u5980
  7057   00122C                     u5981:
  7058   00122C  EF21  F009         	goto	l5361
  7059   001230                     u5980:
  7060   001230                     l5359:
  7061   001230  0E00               	movlw	0
  7062   001232  0100               	movlb	0	; () banked
  7063   001234  6F8E               	movwf	colorDetect@bluePrint& (0+255),b
  7064   001236  0E00               	movlw	0
  7065   001238  6F8F               	movwf	(colorDetect@bluePrint+1)& (0+255),b
  7066   00123A  0E00               	movlw	0
  7067   00123C  6F90               	movwf	(colorDetect@bluePrint+2)& (0+255),b
  7068   00123E  0E00               	movlw	0
  7069   001240  6F91               	movwf	(colorDetect@bluePrint+3)& (0+255),b
  7070   001242                     l5361:
  7071                           
  7072                           ;color.c: 153:         if ((redPrint > 0.9) & (greenPrint > 0.9) & (bluePrint > 0.9)){
  7073   001242  0E66               	movlw	102
  7074   001244  6E36               	movwf	___flge@ff1^0,c
  7075   001246  0E66               	movlw	102
  7076   001248  6E37               	movwf	(___flge@ff1+1)^0,c
  7077   00124A  0E66               	movlw	102
  7078   00124C  6E38               	movwf	(___flge@ff1+2)^0,c
  7079   00124E  0E3F               	movlw	63
  7080   001250  6E39               	movwf	(___flge@ff1+3)^0,c
  7081   001252  C086  F03A         	movff	colorDetect@redPrint,___flge@ff2
  7082   001256  C087  F03B         	movff	colorDetect@redPrint+1,___flge@ff2+1
  7083   00125A  C088  F03C         	movff	colorDetect@redPrint+2,___flge@ff2+2
  7084   00125E  C089  F03D         	movff	colorDetect@redPrint+3,___flge@ff2+3
  7085   001262  ECA6  F020         	call	___flge	;wreg free
  7086   001266  B0D8               	btfsc	status,0,c
  7087   001268  EF38  F009         	goto	u5991
  7088   00126C  EF3A  F009         	goto	u5990
  7089   001270                     u5991:
  7090   001270  EF84  F009         	goto	l5373
  7091   001274                     u5990:
  7092   001274  0E66               	movlw	102
  7093   001276  6E36               	movwf	___flge@ff1^0,c
  7094   001278  0E66               	movlw	102
  7095   00127A  6E37               	movwf	(___flge@ff1+1)^0,c
  7096   00127C  0E66               	movlw	102
  7097   00127E  6E38               	movwf	(___flge@ff1+2)^0,c
  7098   001280  0E3F               	movlw	63
  7099   001282  6E39               	movwf	(___flge@ff1+3)^0,c
  7100   001284  C08A  F03A         	movff	colorDetect@greenPrint,___flge@ff2
  7101   001288  C08B  F03B         	movff	colorDetect@greenPrint+1,___flge@ff2+1
  7102   00128C  C08C  F03C         	movff	colorDetect@greenPrint+2,___flge@ff2+2
  7103   001290  C08D  F03D         	movff	colorDetect@greenPrint+3,___flge@ff2+3
  7104   001294  ECA6  F020         	call	___flge	;wreg free
  7105   001298  B0D8               	btfsc	status,0,c
  7106   00129A  EF51  F009         	goto	u6001
  7107   00129E  EF53  F009         	goto	u6000
  7108   0012A2                     u6001:
  7109   0012A2  EF84  F009         	goto	l5373
  7110   0012A6                     u6000:
  7111   0012A6  0E66               	movlw	102
  7112   0012A8  6E36               	movwf	___flge@ff1^0,c
  7113   0012AA  0E66               	movlw	102
  7114   0012AC  6E37               	movwf	(___flge@ff1+1)^0,c
  7115   0012AE  0E66               	movlw	102
  7116   0012B0  6E38               	movwf	(___flge@ff1+2)^0,c
  7117   0012B2  0E3F               	movlw	63
  7118   0012B4  6E39               	movwf	(___flge@ff1+3)^0,c
  7119   0012B6  C08E  F03A         	movff	colorDetect@bluePrint,___flge@ff2
  7120   0012BA  C08F  F03B         	movff	colorDetect@bluePrint+1,___flge@ff2+1
  7121   0012BE  C090  F03C         	movff	colorDetect@bluePrint+2,___flge@ff2+2
  7122   0012C2  C091  F03D         	movff	colorDetect@bluePrint+3,___flge@ff2+3
  7123   0012C6  ECA6  F020         	call	___flge	;wreg free
  7124   0012CA  B0D8               	btfsc	status,0,c
  7125   0012CC  EF6A  F009         	goto	u6011
  7126   0012D0  EF6C  F009         	goto	u6010
  7127   0012D4                     u6011:
  7128   0012D4  EF84  F009         	goto	l5373
  7129   0012D8                     u6010:
  7130   0012D8                     
  7131                           ;color.c: 154:         _delay((unsigned long)((2)*(64000000/4000.0)));
  7132   0012D8  0E2A               	movlw	42
  7133   0012DA  6E4F               	movwf	??_colorDetect^0,c
  7134   0012DC  0E8E               	movlw	142
  7135   0012DE                     u6377:
  7136   0012DE  2EE8               	decfsz	wreg,f,c
  7137   0012E0  D7FE               	bra	u6377
  7138   0012E2  2E4F               	decfsz	??_colorDetect^0,f,c
  7139   0012E4  D7FC               	bra	u6377
  7140   0012E6                     
  7141                           ;color.c: 155:         fullSpeedAhead(mL,mR);
  7142   0012E6  C068  F018         	movff	colorDetect@mL,fullSpeedAhead@mL
  7143   0012EA  C069  F019         	movff	colorDetect@mL+1,fullSpeedAhead@mL+1
  7144   0012EE  C06A  F01A         	movff	colorDetect@mR,fullSpeedAhead@mR
  7145   0012F2  C06B  F01B         	movff	colorDetect@mR+1,fullSpeedAhead@mR+1
  7146   0012F6  ECB2  F024         	call	_fullSpeedAhead	;wreg free
  7147   0012FA                     
  7148                           ;color.c: 156:         _delay((unsigned long)((2)*(64000000/4000.0)));
  7149   0012FA  0E2A               	movlw	42
  7150   0012FC  6E4F               	movwf	??_colorDetect^0,c
  7151   0012FE  0E8E               	movlw	142
  7152   001300                     u6387:
  7153   001300  2EE8               	decfsz	wreg,f,c
  7154   001302  D7FE               	bra	u6387
  7155   001304  2E4F               	decfsz	??_colorDetect^0,f,c
  7156   001306  D7FC               	bra	u6387
  7157   001308                     l5373:
  7158                           
  7159                           ;color.c: 160:         if ((redPrint > 1.5) & (redPrint - greenPrint > 0.8) & (redPrint 
      +                          -bluePrint > 0.8)){
  7160   001308  0E00               	movlw	0
  7161   00130A  6E36               	movwf	___flge@ff1^0,c
  7162   00130C  0E00               	movlw	0
  7163   00130E  6E37               	movwf	(___flge@ff1+1)^0,c
  7164   001310  0EC0               	movlw	192
  7165   001312  6E38               	movwf	(___flge@ff1+2)^0,c
  7166   001314  0E3F               	movlw	63
  7167   001316  6E39               	movwf	(___flge@ff1+3)^0,c
  7168   001318  C086  F03A         	movff	colorDetect@redPrint,___flge@ff2
  7169   00131C  C087  F03B         	movff	colorDetect@redPrint+1,___flge@ff2+1
  7170   001320  C088  F03C         	movff	colorDetect@redPrint+2,___flge@ff2+2
  7171   001324  C089  F03D         	movff	colorDetect@redPrint+3,___flge@ff2+3
  7172   001328  ECA6  F020         	call	___flge	;wreg free
  7173   00132C  B0D8               	btfsc	status,0,c
  7174   00132E  EF9B  F009         	goto	u6021
  7175   001332  EF9D  F009         	goto	u6020
  7176   001336                     u6021:
  7177   001336  EF04  F00A         	goto	l5383
  7178   00133A                     u6020:
  7179   00133A  0ECD               	movlw	205
  7180   00133C  6E36               	movwf	___flge@ff1^0,c
  7181   00133E  0ECC               	movlw	204
  7182   001340  6E37               	movwf	(___flge@ff1+1)^0,c
  7183   001342  0E4C               	movlw	76
  7184   001344  6E38               	movwf	(___flge@ff1+2)^0,c
  7185   001346  0E3F               	movlw	63
  7186   001348  6E39               	movwf	(___flge@ff1+3)^0,c
  7187   00134A  C08A  F032         	movff	colorDetect@greenPrint,___flsub@a
  7188   00134E  C08B  F033         	movff	colorDetect@greenPrint+1,___flsub@a+1
  7189   001352  C08C  F034         	movff	colorDetect@greenPrint+2,___flsub@a+2
  7190   001356  C08D  F035         	movff	colorDetect@greenPrint+3,___flsub@a+3
  7191   00135A  C086  F02E         	movff	colorDetect@redPrint,___flsub@b
  7192   00135E  C087  F02F         	movff	colorDetect@redPrint+1,___flsub@b+1
  7193   001362  C088  F030         	movff	colorDetect@redPrint+2,___flsub@b+2
  7194   001366  C089  F031         	movff	colorDetect@redPrint+3,___flsub@b+3
  7195   00136A  EC69  F026         	call	___flsub	;wreg free
  7196   00136E  C02E  F03A         	movff	?___flsub,___flge@ff2
  7197   001372  C02F  F03B         	movff	?___flsub+1,___flge@ff2+1
  7198   001376  C030  F03C         	movff	?___flsub+2,___flge@ff2+2
  7199   00137A  C031  F03D         	movff	?___flsub+3,___flge@ff2+3
  7200   00137E  ECA6  F020         	call	___flge	;wreg free
  7201   001382  B0D8               	btfsc	status,0,c
  7202   001384  EFC6  F009         	goto	u6031
  7203   001388  EFC8  F009         	goto	u6030
  7204   00138C                     u6031:
  7205   00138C  EF04  F00A         	goto	l5383
  7206   001390                     u6030:
  7207   001390  0ECD               	movlw	205
  7208   001392  6E36               	movwf	___flge@ff1^0,c
  7209   001394  0ECC               	movlw	204
  7210   001396  6E37               	movwf	(___flge@ff1+1)^0,c
  7211   001398  0E4C               	movlw	76
  7212   00139A  6E38               	movwf	(___flge@ff1+2)^0,c
  7213   00139C  0E3F               	movlw	63
  7214   00139E  6E39               	movwf	(___flge@ff1+3)^0,c
  7215   0013A0  C08E  F032         	movff	colorDetect@bluePrint,___flsub@a
  7216   0013A4  C08F  F033         	movff	colorDetect@bluePrint+1,___flsub@a+1
  7217   0013A8  C090  F034         	movff	colorDetect@bluePrint+2,___flsub@a+2
  7218   0013AC  C091  F035         	movff	colorDetect@bluePrint+3,___flsub@a+3
  7219   0013B0  C086  F02E         	movff	colorDetect@redPrint,___flsub@b
  7220   0013B4  C087  F02F         	movff	colorDetect@redPrint+1,___flsub@b+1
  7221   0013B8  C088  F030         	movff	colorDetect@redPrint+2,___flsub@b+2
  7222   0013BC  C089  F031         	movff	colorDetect@redPrint+3,___flsub@b+3
  7223   0013C0  EC69  F026         	call	___flsub	;wreg free
  7224   0013C4  C02E  F03A         	movff	?___flsub,___flge@ff2
  7225   0013C8  C02F  F03B         	movff	?___flsub+1,___flge@ff2+1
  7226   0013CC  C030  F03C         	movff	?___flsub+2,___flge@ff2+2
  7227   0013D0  C031  F03D         	movff	?___flsub+3,___flge@ff2+3
  7228   0013D4  ECA6  F020         	call	___flge	;wreg free
  7229   0013D8  B0D8               	btfsc	status,0,c
  7230   0013DA  EFF1  F009         	goto	u6041
  7231   0013DE  EFF3  F009         	goto	u6040
  7232   0013E2                     u6041:
  7233   0013E2  EF04  F00A         	goto	l5383
  7234   0013E6                     u6040:
  7235   0013E6                     
  7236                           ;color.c: 161:             right45(mL,mR);
  7237   0013E6  C068  F018         	movff	colorDetect@mL,right45@mL
  7238   0013EA  C069  F019         	movff	colorDetect@mL+1,right45@mL+1
  7239   0013EE  C06A  F01A         	movff	colorDetect@mR,right45@mR
  7240   0013F2  C06B  F01B         	movff	colorDetect@mR+1,right45@mR+1
  7241   0013F6  EC23  F020         	call	_right45	;wreg free
  7242   0013FA                     
  7243                           ;color.c: 162:             _delay((unsigned long)((2)*(64000000/4000.0)));
  7244   0013FA  0E2A               	movlw	42
  7245   0013FC  6E4F               	movwf	??_colorDetect^0,c
  7246   0013FE  0E8E               	movlw	142
  7247   001400                     u6397:
  7248   001400  2EE8               	decfsz	wreg,f,c
  7249   001402  D7FE               	bra	u6397
  7250   001404  2E4F               	decfsz	??_colorDetect^0,f,c
  7251   001406  D7FC               	bra	u6397
  7252   001408                     l5383:
  7253                           
  7254                           ;color.c: 166:         if ((redPrint > 1.3) & (greenPrint > 0.5) & (bluePrint > 0.5)){
  7255   001408  0E66               	movlw	102
  7256   00140A  6E36               	movwf	___flge@ff1^0,c
  7257   00140C  0E66               	movlw	102
  7258   00140E  6E37               	movwf	(___flge@ff1+1)^0,c
  7259   001410  0EA6               	movlw	166
  7260   001412  6E38               	movwf	(___flge@ff1+2)^0,c
  7261   001414  0E3F               	movlw	63
  7262   001416  6E39               	movwf	(___flge@ff1+3)^0,c
  7263   001418  C086  F03A         	movff	colorDetect@redPrint,___flge@ff2
  7264   00141C  C087  F03B         	movff	colorDetect@redPrint+1,___flge@ff2+1
  7265   001420  C088  F03C         	movff	colorDetect@redPrint+2,___flge@ff2+2
  7266   001424  C089  F03D         	movff	colorDetect@redPrint+3,___flge@ff2+3
  7267   001428  ECA6  F020         	call	___flge	;wreg free
  7268   00142C  B0D8               	btfsc	status,0,c
  7269   00142E  EF1B  F00A         	goto	u6051
  7270   001432  EF1D  F00A         	goto	u6050
  7271   001436                     u6051:
  7272   001436  EF56  F00A         	goto	l5391
  7273   00143A                     u6050:
  7274   00143A  0E00               	movlw	0
  7275   00143C  6E36               	movwf	___flge@ff1^0,c
  7276   00143E  0E00               	movlw	0
  7277   001440  6E37               	movwf	(___flge@ff1+1)^0,c
  7278   001442  0E00               	movlw	0
  7279   001444  6E38               	movwf	(___flge@ff1+2)^0,c
  7280   001446  0E3F               	movlw	63
  7281   001448  6E39               	movwf	(___flge@ff1+3)^0,c
  7282   00144A  C08A  F03A         	movff	colorDetect@greenPrint,___flge@ff2
  7283   00144E  C08B  F03B         	movff	colorDetect@greenPrint+1,___flge@ff2+1
  7284   001452  C08C  F03C         	movff	colorDetect@greenPrint+2,___flge@ff2+2
  7285   001456  C08D  F03D         	movff	colorDetect@greenPrint+3,___flge@ff2+3
  7286   00145A  ECA6  F020         	call	___flge	;wreg free
  7287   00145E  B0D8               	btfsc	status,0,c
  7288   001460  EF34  F00A         	goto	u6061
  7289   001464  EF36  F00A         	goto	u6060
  7290   001468                     u6061:
  7291   001468  EF56  F00A         	goto	l5391
  7292   00146C                     u6060:
  7293   00146C  0E00               	movlw	0
  7294   00146E  6E36               	movwf	___flge@ff1^0,c
  7295   001470  0E00               	movlw	0
  7296   001472  6E37               	movwf	(___flge@ff1+1)^0,c
  7297   001474  0E00               	movlw	0
  7298   001476  6E38               	movwf	(___flge@ff1+2)^0,c
  7299   001478  0E3F               	movlw	63
  7300   00147A  6E39               	movwf	(___flge@ff1+3)^0,c
  7301   00147C  C08E  F03A         	movff	colorDetect@bluePrint,___flge@ff2
  7302   001480  C08F  F03B         	movff	colorDetect@bluePrint+1,___flge@ff2+1
  7303   001484  C090  F03C         	movff	colorDetect@bluePrint+2,___flge@ff2+2
  7304   001488  C091  F03D         	movff	colorDetect@bluePrint+3,___flge@ff2+3
  7305   00148C  ECA6  F020         	call	___flge	;wreg free
  7306   001490  B0D8               	btfsc	status,0,c
  7307   001492  EF4D  F00A         	goto	u6071
  7308   001496  EF4F  F00A         	goto	u6070
  7309   00149A                     u6071:
  7310   00149A  EF56  F00A         	goto	l5391
  7311   00149E                     u6070:
  7312   00149E                     
  7313                           ;color.c: 167:         _delay((unsigned long)((2)*(64000000/4000.0)));
  7314   00149E  0E2A               	movlw	42
  7315   0014A0  6E4F               	movwf	??_colorDetect^0,c
  7316   0014A2  0E8E               	movlw	142
  7317   0014A4                     u6407:
  7318   0014A4  2EE8               	decfsz	wreg,f,c
  7319   0014A6  D7FE               	bra	u6407
  7320   0014A8  2E4F               	decfsz	??_colorDetect^0,f,c
  7321   0014AA  D7FC               	bra	u6407
  7322   0014AC                     l5391:
  7323                           
  7324                           ;color.c: 171:         if ((redPrint > 1.0) & (greenPrint > 0.8) & (bluePrint < 0.8)){
  7325   0014AC  0E00               	movlw	0
  7326   0014AE  6E36               	movwf	___flge@ff1^0,c
  7327   0014B0  0E00               	movlw	0
  7328   0014B2  6E37               	movwf	(___flge@ff1+1)^0,c
  7329   0014B4  0E80               	movlw	128
  7330   0014B6  6E38               	movwf	(___flge@ff1+2)^0,c
  7331   0014B8  0E3F               	movlw	63
  7332   0014BA  6E39               	movwf	(___flge@ff1+3)^0,c
  7333   0014BC  C086  F03A         	movff	colorDetect@redPrint,___flge@ff2
  7334   0014C0  C087  F03B         	movff	colorDetect@redPrint+1,___flge@ff2+1
  7335   0014C4  C088  F03C         	movff	colorDetect@redPrint+2,___flge@ff2+2
  7336   0014C8  C089  F03D         	movff	colorDetect@redPrint+3,___flge@ff2+3
  7337   0014CC  ECA6  F020         	call	___flge	;wreg free
  7338   0014D0  B0D8               	btfsc	status,0,c
  7339   0014D2  EF6D  F00A         	goto	u6081
  7340   0014D6  EF6F  F00A         	goto	u6080
  7341   0014DA                     u6081:
  7342   0014DA  EFA8  F00A         	goto	l5399
  7343   0014DE                     u6080:
  7344   0014DE  0ECD               	movlw	205
  7345   0014E0  6E36               	movwf	___flge@ff1^0,c
  7346   0014E2  0ECC               	movlw	204
  7347   0014E4  6E37               	movwf	(___flge@ff1+1)^0,c
  7348   0014E6  0E4C               	movlw	76
  7349   0014E8  6E38               	movwf	(___flge@ff1+2)^0,c
  7350   0014EA  0E3F               	movlw	63
  7351   0014EC  6E39               	movwf	(___flge@ff1+3)^0,c
  7352   0014EE  C08A  F03A         	movff	colorDetect@greenPrint,___flge@ff2
  7353   0014F2  C08B  F03B         	movff	colorDetect@greenPrint+1,___flge@ff2+1
  7354   0014F6  C08C  F03C         	movff	colorDetect@greenPrint+2,___flge@ff2+2
  7355   0014FA  C08D  F03D         	movff	colorDetect@greenPrint+3,___flge@ff2+3
  7356   0014FE  ECA6  F020         	call	___flge	;wreg free
  7357   001502  B0D8               	btfsc	status,0,c
  7358   001504  EF86  F00A         	goto	u6091
  7359   001508  EF88  F00A         	goto	u6090
  7360   00150C                     u6091:
  7361   00150C  EFA8  F00A         	goto	l5399
  7362   001510                     u6090:
  7363   001510  C08E  F036         	movff	colorDetect@bluePrint,___flge@ff1
  7364   001514  C08F  F037         	movff	colorDetect@bluePrint+1,___flge@ff1+1
  7365   001518  C090  F038         	movff	colorDetect@bluePrint+2,___flge@ff1+2
  7366   00151C  C091  F039         	movff	colorDetect@bluePrint+3,___flge@ff1+3
  7367   001520  0ECD               	movlw	205
  7368   001522  6E3A               	movwf	___flge@ff2^0,c
  7369   001524  0ECC               	movlw	204
  7370   001526  6E3B               	movwf	(___flge@ff2+1)^0,c
  7371   001528  0E4C               	movlw	76
  7372   00152A  6E3C               	movwf	(___flge@ff2+2)^0,c
  7373   00152C  0E3F               	movlw	63
  7374   00152E  6E3D               	movwf	(___flge@ff2+3)^0,c
  7375   001530  ECA6  F020         	call	___flge	;wreg free
  7376   001534  B0D8               	btfsc	status,0,c
  7377   001536  EF9F  F00A         	goto	u6101
  7378   00153A  EFA1  F00A         	goto	u6100
  7379   00153E                     u6101:
  7380   00153E  EFA8  F00A         	goto	l5399
  7381   001542                     u6100:
  7382   001542                     
  7383                           ;color.c: 172:         _delay((unsigned long)((2)*(64000000/4000.0)));
  7384   001542  0E2A               	movlw	42
  7385   001544  6E4F               	movwf	??_colorDetect^0,c
  7386   001546  0E8E               	movlw	142
  7387   001548                     u6417:
  7388   001548  2EE8               	decfsz	wreg,f,c
  7389   00154A  D7FE               	bra	u6417
  7390   00154C  2E4F               	decfsz	??_colorDetect^0,f,c
  7391   00154E  D7FC               	bra	u6417
  7392   001550                     l5399:
  7393                           
  7394                           ;color.c: 176:         if ((bluePrint - redPrint > 0.7) & (bluePrint - greenPrint > 0.3)
      +                           & (bluePrint > 0.7 )){
  7395   001550  0E33               	movlw	51
  7396   001552  6E36               	movwf	___flge@ff1^0,c
  7397   001554  0E33               	movlw	51
  7398   001556  6E37               	movwf	(___flge@ff1+1)^0,c
  7399   001558  0E33               	movlw	51
  7400   00155A  6E38               	movwf	(___flge@ff1+2)^0,c
  7401   00155C  0E3F               	movlw	63
  7402   00155E  6E39               	movwf	(___flge@ff1+3)^0,c
  7403   001560  C086  F032         	movff	colorDetect@redPrint,___flsub@a
  7404   001564  C087  F033         	movff	colorDetect@redPrint+1,___flsub@a+1
  7405   001568  C088  F034         	movff	colorDetect@redPrint+2,___flsub@a+2
  7406   00156C  C089  F035         	movff	colorDetect@redPrint+3,___flsub@a+3
  7407   001570  C08E  F02E         	movff	colorDetect@bluePrint,___flsub@b
  7408   001574  C08F  F02F         	movff	colorDetect@bluePrint+1,___flsub@b+1
  7409   001578  C090  F030         	movff	colorDetect@bluePrint+2,___flsub@b+2
  7410   00157C  C091  F031         	movff	colorDetect@bluePrint+3,___flsub@b+3
  7411   001580  EC69  F026         	call	___flsub	;wreg free
  7412   001584  C02E  F03A         	movff	?___flsub,___flge@ff2
  7413   001588  C02F  F03B         	movff	?___flsub+1,___flge@ff2+1
  7414   00158C  C030  F03C         	movff	?___flsub+2,___flge@ff2+2
  7415   001590  C031  F03D         	movff	?___flsub+3,___flge@ff2+3
  7416   001594  ECA6  F020         	call	___flge	;wreg free
  7417   001598  B0D8               	btfsc	status,0,c
  7418   00159A  EFD1  F00A         	goto	u6111
  7419   00159E  EFD3  F00A         	goto	u6110
  7420   0015A2                     u6111:
  7421   0015A2  EF1E  F00B         	goto	l5407
  7422   0015A6                     u6110:
  7423   0015A6  0E9A               	movlw	154
  7424   0015A8  6E36               	movwf	___flge@ff1^0,c
  7425   0015AA  0E99               	movlw	153
  7426   0015AC  6E37               	movwf	(___flge@ff1+1)^0,c
  7427   0015AE  0E99               	movlw	153
  7428   0015B0  6E38               	movwf	(___flge@ff1+2)^0,c
  7429   0015B2  0E3E               	movlw	62
  7430   0015B4  6E39               	movwf	(___flge@ff1+3)^0,c
  7431   0015B6  C08A  F032         	movff	colorDetect@greenPrint,___flsub@a
  7432   0015BA  C08B  F033         	movff	colorDetect@greenPrint+1,___flsub@a+1
  7433   0015BE  C08C  F034         	movff	colorDetect@greenPrint+2,___flsub@a+2
  7434   0015C2  C08D  F035         	movff	colorDetect@greenPrint+3,___flsub@a+3
  7435   0015C6  C08E  F02E         	movff	colorDetect@bluePrint,___flsub@b
  7436   0015CA  C08F  F02F         	movff	colorDetect@bluePrint+1,___flsub@b+1
  7437   0015CE  C090  F030         	movff	colorDetect@bluePrint+2,___flsub@b+2
  7438   0015D2  C091  F031         	movff	colorDetect@bluePrint+3,___flsub@b+3
  7439   0015D6  EC69  F026         	call	___flsub	;wreg free
  7440   0015DA  C02E  F03A         	movff	?___flsub,___flge@ff2
  7441   0015DE  C02F  F03B         	movff	?___flsub+1,___flge@ff2+1
  7442   0015E2  C030  F03C         	movff	?___flsub+2,___flge@ff2+2
  7443   0015E6  C031  F03D         	movff	?___flsub+3,___flge@ff2+3
  7444   0015EA  ECA6  F020         	call	___flge	;wreg free
  7445   0015EE  B0D8               	btfsc	status,0,c
  7446   0015F0  EFFC  F00A         	goto	u6121
  7447   0015F4  EFFE  F00A         	goto	u6120
  7448   0015F8                     u6121:
  7449   0015F8  EF1E  F00B         	goto	l5407
  7450   0015FC                     u6120:
  7451   0015FC  0E33               	movlw	51
  7452   0015FE  6E36               	movwf	___flge@ff1^0,c
  7453   001600  0E33               	movlw	51
  7454   001602  6E37               	movwf	(___flge@ff1+1)^0,c
  7455   001604  0E33               	movlw	51
  7456   001606  6E38               	movwf	(___flge@ff1+2)^0,c
  7457   001608  0E3F               	movlw	63
  7458   00160A  6E39               	movwf	(___flge@ff1+3)^0,c
  7459   00160C  C08E  F03A         	movff	colorDetect@bluePrint,___flge@ff2
  7460   001610  C08F  F03B         	movff	colorDetect@bluePrint+1,___flge@ff2+1
  7461   001614  C090  F03C         	movff	colorDetect@bluePrint+2,___flge@ff2+2
  7462   001618  C091  F03D         	movff	colorDetect@bluePrint+3,___flge@ff2+3
  7463   00161C  ECA6  F020         	call	___flge	;wreg free
  7464   001620  B0D8               	btfsc	status,0,c
  7465   001622  EF15  F00B         	goto	u6131
  7466   001626  EF17  F00B         	goto	u6130
  7467   00162A                     u6131:
  7468   00162A  EF1E  F00B         	goto	l5407
  7469   00162E                     u6130:
  7470   00162E                     
  7471                           ;color.c: 177:         _delay((unsigned long)((2)*(64000000/4000.0)));
  7472   00162E  0E2A               	movlw	42
  7473   001630  6E4F               	movwf	??_colorDetect^0,c
  7474   001632  0E8E               	movlw	142
  7475   001634                     u6427:
  7476   001634  2EE8               	decfsz	wreg,f,c
  7477   001636  D7FE               	bra	u6427
  7478   001638  2E4F               	decfsz	??_colorDetect^0,f,c
  7479   00163A  D7FC               	bra	u6427
  7480   00163C                     l5407:
  7481                           
  7482                           ;color.c: 181:         if ((greenPrint - redPrint > 0.4 ) & (greenPrint > 1) & (greenPri
      +                          nt - bluePrint > 0.4 )){
  7483   00163C  0ECD               	movlw	205
  7484   00163E  6E36               	movwf	___flge@ff1^0,c
  7485   001640  0ECC               	movlw	204
  7486   001642  6E37               	movwf	(___flge@ff1+1)^0,c
  7487   001644  0ECC               	movlw	204
  7488   001646  6E38               	movwf	(___flge@ff1+2)^0,c
  7489   001648  0E3E               	movlw	62
  7490   00164A  6E39               	movwf	(___flge@ff1+3)^0,c
  7491   00164C  C086  F032         	movff	colorDetect@redPrint,___flsub@a
  7492   001650  C087  F033         	movff	colorDetect@redPrint+1,___flsub@a+1
  7493   001654  C088  F034         	movff	colorDetect@redPrint+2,___flsub@a+2
  7494   001658  C089  F035         	movff	colorDetect@redPrint+3,___flsub@a+3
  7495   00165C  C08A  F02E         	movff	colorDetect@greenPrint,___flsub@b
  7496   001660  C08B  F02F         	movff	colorDetect@greenPrint+1,___flsub@b+1
  7497   001664  C08C  F030         	movff	colorDetect@greenPrint+2,___flsub@b+2
  7498   001668  C08D  F031         	movff	colorDetect@greenPrint+3,___flsub@b+3
  7499   00166C  EC69  F026         	call	___flsub	;wreg free
  7500   001670  C02E  F03A         	movff	?___flsub,___flge@ff2
  7501   001674  C02F  F03B         	movff	?___flsub+1,___flge@ff2+1
  7502   001678  C030  F03C         	movff	?___flsub+2,___flge@ff2+2
  7503   00167C  C031  F03D         	movff	?___flsub+3,___flge@ff2+3
  7504   001680  ECA6  F020         	call	___flge	;wreg free
  7505   001684  B0D8               	btfsc	status,0,c
  7506   001686  EF47  F00B         	goto	u6141
  7507   00168A  EF49  F00B         	goto	u6140
  7508   00168E                     u6141:
  7509   00168E  EF94  F00B         	goto	l5415
  7510   001692                     u6140:
  7511   001692  0E00               	movlw	0
  7512   001694  6E36               	movwf	___flge@ff1^0,c
  7513   001696  0E00               	movlw	0
  7514   001698  6E37               	movwf	(___flge@ff1+1)^0,c
  7515   00169A  0E80               	movlw	128
  7516   00169C  6E38               	movwf	(___flge@ff1+2)^0,c
  7517   00169E  0E3F               	movlw	63
  7518   0016A0  6E39               	movwf	(___flge@ff1+3)^0,c
  7519   0016A2  C08A  F03A         	movff	colorDetect@greenPrint,___flge@ff2
  7520   0016A6  C08B  F03B         	movff	colorDetect@greenPrint+1,___flge@ff2+1
  7521   0016AA  C08C  F03C         	movff	colorDetect@greenPrint+2,___flge@ff2+2
  7522   0016AE  C08D  F03D         	movff	colorDetect@greenPrint+3,___flge@ff2+3
  7523   0016B2  ECA6  F020         	call	___flge	;wreg free
  7524   0016B6  B0D8               	btfsc	status,0,c
  7525   0016B8  EF60  F00B         	goto	u6151
  7526   0016BC  EF62  F00B         	goto	u6150
  7527   0016C0                     u6151:
  7528   0016C0  EF94  F00B         	goto	l5415
  7529   0016C4                     u6150:
  7530   0016C4  0ECD               	movlw	205
  7531   0016C6  6E36               	movwf	___flge@ff1^0,c
  7532   0016C8  0ECC               	movlw	204
  7533   0016CA  6E37               	movwf	(___flge@ff1+1)^0,c
  7534   0016CC  0ECC               	movlw	204
  7535   0016CE  6E38               	movwf	(___flge@ff1+2)^0,c
  7536   0016D0  0E3E               	movlw	62
  7537   0016D2  6E39               	movwf	(___flge@ff1+3)^0,c
  7538   0016D4  C08E  F032         	movff	colorDetect@bluePrint,___flsub@a
  7539   0016D8  C08F  F033         	movff	colorDetect@bluePrint+1,___flsub@a+1
  7540   0016DC  C090  F034         	movff	colorDetect@bluePrint+2,___flsub@a+2
  7541   0016E0  C091  F035         	movff	colorDetect@bluePrint+3,___flsub@a+3
  7542   0016E4  C08A  F02E         	movff	colorDetect@greenPrint,___flsub@b
  7543   0016E8  C08B  F02F         	movff	colorDetect@greenPrint+1,___flsub@b+1
  7544   0016EC  C08C  F030         	movff	colorDetect@greenPrint+2,___flsub@b+2
  7545   0016F0  C08D  F031         	movff	colorDetect@greenPrint+3,___flsub@b+3
  7546   0016F4  EC69  F026         	call	___flsub	;wreg free
  7547   0016F8  C02E  F03A         	movff	?___flsub,___flge@ff2
  7548   0016FC  C02F  F03B         	movff	?___flsub+1,___flge@ff2+1
  7549   001700  C030  F03C         	movff	?___flsub+2,___flge@ff2+2
  7550   001704  C031  F03D         	movff	?___flsub+3,___flge@ff2+3
  7551   001708  ECA6  F020         	call	___flge	;wreg free
  7552   00170C  B0D8               	btfsc	status,0,c
  7553   00170E  EF8B  F00B         	goto	u6161
  7554   001712  EF8D  F00B         	goto	u6160
  7555   001716                     u6161:
  7556   001716  EF94  F00B         	goto	l5415
  7557   00171A                     u6160:
  7558   00171A                     
  7559                           ;color.c: 182:         _delay((unsigned long)((2)*(64000000/4000.0)));
  7560   00171A  0E2A               	movlw	42
  7561   00171C  6E4F               	movwf	??_colorDetect^0,c
  7562   00171E  0E8E               	movlw	142
  7563   001720                     u6437:
  7564   001720  2EE8               	decfsz	wreg,f,c
  7565   001722  D7FE               	bra	u6437
  7566   001724  2E4F               	decfsz	??_colorDetect^0,f,c
  7567   001726  D7FC               	bra	u6437
  7568   001728                     l5415:
  7569                           
  7570                           ;color.c: 186:         if ((redPrint < 0.7) & (greenPrint > 1.0)& (bluePrint > 1.0)){
  7571   001728  C086  F036         	movff	colorDetect@redPrint,___flge@ff1
  7572   00172C  C087  F037         	movff	colorDetect@redPrint+1,___flge@ff1+1
  7573   001730  C088  F038         	movff	colorDetect@redPrint+2,___flge@ff1+2
  7574   001734  C089  F039         	movff	colorDetect@redPrint+3,___flge@ff1+3
  7575   001738  0E33               	movlw	51
  7576   00173A  6E3A               	movwf	___flge@ff2^0,c
  7577   00173C  0E33               	movlw	51
  7578   00173E  6E3B               	movwf	(___flge@ff2+1)^0,c
  7579   001740  0E33               	movlw	51
  7580   001742  6E3C               	movwf	(___flge@ff2+2)^0,c
  7581   001744  0E3F               	movlw	63
  7582   001746  6E3D               	movwf	(___flge@ff2+3)^0,c
  7583   001748  ECA6  F020         	call	___flge	;wreg free
  7584   00174C  B0D8               	btfsc	status,0,c
  7585   00174E  EFAB  F00B         	goto	u6171
  7586   001752  EFAD  F00B         	goto	u6170
  7587   001756                     u6171:
  7588   001756  EFE6  F00B         	goto	l5423
  7589   00175A                     u6170:
  7590   00175A  0E00               	movlw	0
  7591   00175C  6E36               	movwf	___flge@ff1^0,c
  7592   00175E  0E00               	movlw	0
  7593   001760  6E37               	movwf	(___flge@ff1+1)^0,c
  7594   001762  0E80               	movlw	128
  7595   001764  6E38               	movwf	(___flge@ff1+2)^0,c
  7596   001766  0E3F               	movlw	63
  7597   001768  6E39               	movwf	(___flge@ff1+3)^0,c
  7598   00176A  C08A  F03A         	movff	colorDetect@greenPrint,___flge@ff2
  7599   00176E  C08B  F03B         	movff	colorDetect@greenPrint+1,___flge@ff2+1
  7600   001772  C08C  F03C         	movff	colorDetect@greenPrint+2,___flge@ff2+2
  7601   001776  C08D  F03D         	movff	colorDetect@greenPrint+3,___flge@ff2+3
  7602   00177A  ECA6  F020         	call	___flge	;wreg free
  7603   00177E  B0D8               	btfsc	status,0,c
  7604   001780  EFC4  F00B         	goto	u6181
  7605   001784  EFC6  F00B         	goto	u6180
  7606   001788                     u6181:
  7607   001788  EFE6  F00B         	goto	l5423
  7608   00178C                     u6180:
  7609   00178C  0E00               	movlw	0
  7610   00178E  6E36               	movwf	___flge@ff1^0,c
  7611   001790  0E00               	movlw	0
  7612   001792  6E37               	movwf	(___flge@ff1+1)^0,c
  7613   001794  0E80               	movlw	128
  7614   001796  6E38               	movwf	(___flge@ff1+2)^0,c
  7615   001798  0E3F               	movlw	63
  7616   00179A  6E39               	movwf	(___flge@ff1+3)^0,c
  7617   00179C  C08E  F03A         	movff	colorDetect@bluePrint,___flge@ff2
  7618   0017A0  C08F  F03B         	movff	colorDetect@bluePrint+1,___flge@ff2+1
  7619   0017A4  C090  F03C         	movff	colorDetect@bluePrint+2,___flge@ff2+2
  7620   0017A8  C091  F03D         	movff	colorDetect@bluePrint+3,___flge@ff2+3
  7621   0017AC  ECA6  F020         	call	___flge	;wreg free
  7622   0017B0  B0D8               	btfsc	status,0,c
  7623   0017B2  EFDD  F00B         	goto	u6191
  7624   0017B6  EFDF  F00B         	goto	u6190
  7625   0017BA                     u6191:
  7626   0017BA  EFE6  F00B         	goto	l5423
  7627   0017BE                     u6190:
  7628   0017BE                     
  7629                           ;color.c: 187:         _delay((unsigned long)((2)*(64000000/4000.0)));
  7630   0017BE  0E2A               	movlw	42
  7631   0017C0  6E4F               	movwf	??_colorDetect^0,c
  7632   0017C2  0E8E               	movlw	142
  7633   0017C4                     u6447:
  7634   0017C4  2EE8               	decfsz	wreg,f,c
  7635   0017C6  D7FE               	bra	u6447
  7636   0017C8  2E4F               	decfsz	??_colorDetect^0,f,c
  7637   0017CA  D7FC               	bra	u6447
  7638   0017CC                     l5423:
  7639                           
  7640                           ;color.c: 191:         if ((redPrint > 0.95) & (greenPrint > 0.8 & greenPrint < 0.9) & (
      +                          bluePrint > 0.8 & bluePrint < 0.95)){
  7641   0017CC  0E33               	movlw	51
  7642   0017CE  6E36               	movwf	___flge@ff1^0,c
  7643   0017D0  0E33               	movlw	51
  7644   0017D2  6E37               	movwf	(___flge@ff1+1)^0,c
  7645   0017D4  0E73               	movlw	115
  7646   0017D6  6E38               	movwf	(___flge@ff1+2)^0,c
  7647   0017D8  0E3F               	movlw	63
  7648   0017DA  6E39               	movwf	(___flge@ff1+3)^0,c
  7649   0017DC  C086  F03A         	movff	colorDetect@redPrint,___flge@ff2
  7650   0017E0  C087  F03B         	movff	colorDetect@redPrint+1,___flge@ff2+1
  7651   0017E4  C088  F03C         	movff	colorDetect@redPrint+2,___flge@ff2+2
  7652   0017E8  C089  F03D         	movff	colorDetect@redPrint+3,___flge@ff2+3
  7653   0017EC  ECA6  F020         	call	___flge	;wreg free
  7654   0017F0  B0D8               	btfsc	status,0,c
  7655   0017F2  EFFD  F00B         	goto	u6201
  7656   0017F6  EFFF  F00B         	goto	u6200
  7657   0017FA                     u6201:
  7658   0017FA  EF6A  F00C         	goto	l73
  7659   0017FE                     u6200:
  7660   0017FE  0ECD               	movlw	205
  7661   001800  6E36               	movwf	___flge@ff1^0,c
  7662   001802  0ECC               	movlw	204
  7663   001804  6E37               	movwf	(___flge@ff1+1)^0,c
  7664   001806  0E4C               	movlw	76
  7665   001808  6E38               	movwf	(___flge@ff1+2)^0,c
  7666   00180A  0E3F               	movlw	63
  7667   00180C  6E39               	movwf	(___flge@ff1+3)^0,c
  7668   00180E  C08A  F03A         	movff	colorDetect@greenPrint,___flge@ff2
  7669   001812  C08B  F03B         	movff	colorDetect@greenPrint+1,___flge@ff2+1
  7670   001816  C08C  F03C         	movff	colorDetect@greenPrint+2,___flge@ff2+2
  7671   00181A  C08D  F03D         	movff	colorDetect@greenPrint+3,___flge@ff2+3
  7672   00181E  ECA6  F020         	call	___flge	;wreg free
  7673   001822  B0D8               	btfsc	status,0,c
  7674   001824  EF16  F00C         	goto	u6211
  7675   001828  EF18  F00C         	goto	u6210
  7676   00182C                     u6211:
  7677   00182C  EF6A  F00C         	goto	l73
  7678   001830                     u6210:
  7679   001830  C08A  F036         	movff	colorDetect@greenPrint,___flge@ff1
  7680   001834  C08B  F037         	movff	colorDetect@greenPrint+1,___flge@ff1+1
  7681   001838  C08C  F038         	movff	colorDetect@greenPrint+2,___flge@ff1+2
  7682   00183C  C08D  F039         	movff	colorDetect@greenPrint+3,___flge@ff1+3
  7683   001840  0E66               	movlw	102
  7684   001842  6E3A               	movwf	___flge@ff2^0,c
  7685   001844  0E66               	movlw	102
  7686   001846  6E3B               	movwf	(___flge@ff2+1)^0,c
  7687   001848  0E66               	movlw	102
  7688   00184A  6E3C               	movwf	(___flge@ff2+2)^0,c
  7689   00184C  0E3F               	movlw	63
  7690   00184E  6E3D               	movwf	(___flge@ff2+3)^0,c
  7691   001850  ECA6  F020         	call	___flge	;wreg free
  7692   001854  B0D8               	btfsc	status,0,c
  7693   001856  EF2F  F00C         	goto	u6221
  7694   00185A  EF31  F00C         	goto	u6220
  7695   00185E                     u6221:
  7696   00185E  EF6A  F00C         	goto	l73
  7697   001862                     u6220:
  7698   001862  0ECD               	movlw	205
  7699   001864  6E36               	movwf	___flge@ff1^0,c
  7700   001866  0ECC               	movlw	204
  7701   001868  6E37               	movwf	(___flge@ff1+1)^0,c
  7702   00186A  0E4C               	movlw	76
  7703   00186C  6E38               	movwf	(___flge@ff1+2)^0,c
  7704   00186E  0E3F               	movlw	63
  7705   001870  6E39               	movwf	(___flge@ff1+3)^0,c
  7706   001872  C08E  F03A         	movff	colorDetect@bluePrint,___flge@ff2
  7707   001876  C08F  F03B         	movff	colorDetect@bluePrint+1,___flge@ff2+1
  7708   00187A  C090  F03C         	movff	colorDetect@bluePrint+2,___flge@ff2+2
  7709   00187E  C091  F03D         	movff	colorDetect@bluePrint+3,___flge@ff2+3
  7710   001882  ECA6  F020         	call	___flge	;wreg free
  7711   001886  B0D8               	btfsc	status,0,c
  7712   001888  EF48  F00C         	goto	u6231
  7713   00188C  EF4A  F00C         	goto	u6230
  7714   001890                     u6231:
  7715   001890  EF6A  F00C         	goto	l73
  7716   001894                     u6230:
  7717   001894  C08E  F036         	movff	colorDetect@bluePrint,___flge@ff1
  7718   001898  C08F  F037         	movff	colorDetect@bluePrint+1,___flge@ff1+1
  7719   00189C  C090  F038         	movff	colorDetect@bluePrint+2,___flge@ff1+2
  7720   0018A0  C091  F039         	movff	colorDetect@bluePrint+3,___flge@ff1+3
  7721   0018A4  0E33               	movlw	51
  7722   0018A6  6E3A               	movwf	___flge@ff2^0,c
  7723   0018A8  0E33               	movlw	51
  7724   0018AA  6E3B               	movwf	(___flge@ff2+1)^0,c
  7725   0018AC  0E73               	movlw	115
  7726   0018AE  6E3C               	movwf	(___flge@ff2+2)^0,c
  7727   0018B0  0E3F               	movlw	63
  7728   0018B2  6E3D               	movwf	(___flge@ff2+3)^0,c
  7729   0018B4  ECA6  F020         	call	___flge	;wreg free
  7730   0018B8  B0D8               	btfsc	status,0,c
  7731   0018BA  EF61  F00C         	goto	u6241
  7732   0018BE  EF63  F00C         	goto	u6240
  7733   0018C2                     u6241:
  7734   0018C2  EF6A  F00C         	goto	l73
  7735   0018C6                     u6240:
  7736   0018C6                     
  7737                           ;color.c: 192:         _delay((unsigned long)((2)*(64000000/4000.0)));
  7738   0018C6  0E2A               	movlw	42
  7739   0018C8  6E4F               	movwf	??_colorDetect^0,c
  7740   0018CA  0E8E               	movlw	142
  7741   0018CC                     u6457:
  7742   0018CC  2EE8               	decfsz	wreg,f,c
  7743   0018CE  D7FE               	bra	u6457
  7744   0018D0  2E4F               	decfsz	??_colorDetect^0,f,c
  7745   0018D2  D7FC               	bra	u6457
  7746   0018D4                     l73:
  7747   0018D4  0012               	return		;funcret
  7748   0018D6                     __end_of_colorDetect:
  7749                           	callstack 0
  7750                           
  7751 ;; *************** function _right45 *****************
  7752 ;; Defined at:
  7753 ;;		line 161 in file "dc_motor.c"
  7754 ;; Parameters:    Size  Location     Type
  7755 ;;  mL              2   23[COMRAM] PTR struct DC_motor
  7756 ;;		 -> main@motorLeft(9), 
  7757 ;;  mR              2   25[COMRAM] PTR struct DC_motor
  7758 ;;		 -> main@motorRight(9), 
  7759 ;; Auto vars:     Size  Location     Type
  7760 ;;		None
  7761 ;; Return value:  Size  Location     Type
  7762 ;;                  1    wreg      void 
  7763 ;; Registers used:
  7764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7765 ;; Tracked objects:
  7766 ;;		On entry : 0/0
  7767 ;;		On exit  : 0/0
  7768 ;;		Unchanged: 0/0
  7769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7770 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7772 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7773 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7774 ;;Total ram usage:        6 bytes
  7775 ;; Hardware stack levels used: 1
  7776 ;; Hardware stack levels required when called: 4
  7777 ;; This function calls:
  7778 ;;		_setMotorPWM
  7779 ;; This function is called by:
  7780 ;;		_colorDetect
  7781 ;; This function uses a non-reentrant model
  7782 ;;
  7783                           
  7784                           	psect	text31
  7785   004046                     __ptext31:
  7786                           	callstack 0
  7787   004046                     _right45:
  7788                           	callstack 25
  7789   004046                     
  7790                           ;dc_motor.c: 161: void right45(DC_motor *mL, DC_motor *mR);dc_motor.c: 162: {;dc_motor.c
      +                          : 163:     mL->direction = 1;
  7791   004046  EE20 F001          	lfsr	2,1
  7792   00404A  5018               	movf	right45@mL^0,w,c
  7793   00404C  26D9               	addwf	fsr2l,f,c
  7794   00404E  5019               	movf	(right45@mL+1)^0,w,c
  7795   004050  22DA               	addwfc	fsr2h,f,c
  7796   004052  0E01               	movlw	1
  7797   004054  6EDF               	movwf	indf2,c
  7798                           
  7799                           ;dc_motor.c: 164:     mR->direction = 0;
  7800   004056  EE20 F001          	lfsr	2,1
  7801   00405A  501A               	movf	right45@mR^0,w,c
  7802   00405C  26D9               	addwf	fsr2l,f,c
  7803   00405E  501B               	movf	(right45@mR+1)^0,w,c
  7804   004060  22DA               	addwfc	fsr2h,f,c
  7805   004062  0E00               	movlw	0
  7806   004064  6EDF               	movwf	indf2,c
  7807                           
  7808                           ;dc_motor.c: 166:     mL->brakemode = 1;
  7809   004066  EE20 F002          	lfsr	2,2
  7810   00406A  5018               	movf	right45@mL^0,w,c
  7811   00406C  26D9               	addwf	fsr2l,f,c
  7812   00406E  5019               	movf	(right45@mL+1)^0,w,c
  7813   004070  22DA               	addwfc	fsr2h,f,c
  7814   004072  0E01               	movlw	1
  7815   004074  6EDF               	movwf	indf2,c
  7816                           
  7817                           ;dc_motor.c: 167:     mL->brakemode = 1;
  7818   004076  EE20 F002          	lfsr	2,2
  7819   00407A  5018               	movf	right45@mL^0,w,c
  7820   00407C  26D9               	addwf	fsr2l,f,c
  7821   00407E  5019               	movf	(right45@mL+1)^0,w,c
  7822   004080  22DA               	addwfc	fsr2h,f,c
  7823   004082  0E01               	movlw	1
  7824   004084  6EDF               	movwf	indf2,c
  7825                           
  7826                           ;dc_motor.c: 169:     while (mL->power < 10){
  7827   004086  EF62  F020         	goto	l275
  7828   00408A                     l4389:
  7829                           
  7830                           ;dc_motor.c: 170:     mL->power += 1;
  7831   00408A  C018  FFD9         	movff	right45@mL,fsr2l
  7832   00408E  C019  FFDA         	movff	right45@mL+1,fsr2h
  7833   004092  2ADF               	incf	indf2,f,c
  7834                           
  7835                           ;dc_motor.c: 171:     mR->power += 1;
  7836   004094  C01A  FFD9         	movff	right45@mR,fsr2l
  7837   004098  C01B  FFDA         	movff	right45@mR+1,fsr2h
  7838   00409C  2ADF               	incf	indf2,f,c
  7839   00409E                     
  7840                           ;dc_motor.c: 173:     setMotorPWM(mL);
  7841   00409E  C018  F012         	movff	right45@mL,setMotorPWM@m
  7842   0040A2  C019  F013         	movff	right45@mL+1,setMotorPWM@m+1
  7843   0040A6  EC38  F01E         	call	_setMotorPWM	;wreg free
  7844   0040AA                     
  7845                           ;dc_motor.c: 174:     setMotorPWM(mR);
  7846   0040AA  C01A  F012         	movff	right45@mR,setMotorPWM@m
  7847   0040AE  C01B  F013         	movff	right45@mR+1,setMotorPWM@m+1
  7848   0040B2  EC38  F01E         	call	_setMotorPWM	;wreg free
  7849   0040B6                     
  7850                           ;dc_motor.c: 175:     _delay((unsigned long)((2)*(64000000/4000.0)));
  7851   0040B6  0E2A               	movlw	42
  7852   0040B8  6E1C               	movwf	??_right45^0,c
  7853   0040BA  0E8E               	movlw	142
  7854   0040BC                     u6467:
  7855   0040BC  2EE8               	decfsz	wreg,f,c
  7856   0040BE  D7FE               	bra	u6467
  7857   0040C0  2E1C               	decfsz	??_right45^0,f,c
  7858   0040C2  D7FC               	bra	u6467
  7859   0040C4                     l275:
  7860                           
  7861                           ;dc_motor.c: 169:     while (mL->power < 10){
  7862   0040C4  C018  FFD9         	movff	right45@mL,fsr2l
  7863   0040C8  C019  FFDA         	movff	right45@mL+1,fsr2h
  7864   0040CC  0E09               	movlw	9
  7865   0040CE  64DF               	cpfsgt	indf2,c
  7866   0040D0  EF6C  F020         	goto	u4691
  7867   0040D4  EF6E  F020         	goto	u4690
  7868   0040D8                     u4691:
  7869   0040D8  EF45  F020         	goto	l4389
  7870   0040DC                     u4690:
  7871   0040DC                     
  7872                           ;dc_motor.c: 178:     _delay((unsigned long)((100)*(64000000/4000.0)));
  7873   0040DC  0E09               	movlw	9
  7874   0040DE  6E1D               	movwf	(??_right45+1)^0,c
  7875   0040E0  0E1E               	movlw	30
  7876   0040E2  6E1C               	movwf	??_right45^0,c
  7877   0040E4  0EE4               	movlw	228
  7878   0040E6                     u6477:
  7879   0040E6  2EE8               	decfsz	wreg,f,c
  7880   0040E8  D7FE               	bra	u6477
  7881   0040EA  2E1C               	decfsz	??_right45^0,f,c
  7882   0040EC  D7FC               	bra	u6477
  7883   0040EE  2E1D               	decfsz	(??_right45+1)^0,f,c
  7884   0040F0  D7FA               	bra	u6477
  7885   0040F2  D000               	nop2	
  7886                           
  7887                           ;dc_motor.c: 180:     while (mL->power > 0){
  7888   0040F4  EF99  F020         	goto	l4407
  7889   0040F8                     l4399:
  7890                           
  7891                           ;dc_motor.c: 181:     mL->power -= 1;
  7892   0040F8  C018  FFD9         	movff	right45@mL,fsr2l
  7893   0040FC  C019  FFDA         	movff	right45@mL+1,fsr2h
  7894   004100  06DF               	decf	indf2,f,c
  7895                           
  7896                           ;dc_motor.c: 182:     mR->power -= 1;
  7897   004102  C01A  FFD9         	movff	right45@mR,fsr2l
  7898   004106  C01B  FFDA         	movff	right45@mR+1,fsr2h
  7899   00410A  06DF               	decf	indf2,f,c
  7900   00410C                     
  7901                           ;dc_motor.c: 184:     setMotorPWM(mL);
  7902   00410C  C018  F012         	movff	right45@mL,setMotorPWM@m
  7903   004110  C019  F013         	movff	right45@mL+1,setMotorPWM@m+1
  7904   004114  EC38  F01E         	call	_setMotorPWM	;wreg free
  7905   004118                     
  7906                           ;dc_motor.c: 185:     setMotorPWM(mR);
  7907   004118  C01A  F012         	movff	right45@mR,setMotorPWM@m
  7908   00411C  C01B  F013         	movff	right45@mR+1,setMotorPWM@m+1
  7909   004120  EC38  F01E         	call	_setMotorPWM	;wreg free
  7910   004124                     
  7911                           ;dc_motor.c: 186:     _delay((unsigned long)((2)*(64000000/4000.0)));
  7912   004124  0E2A               	movlw	42
  7913   004126  6E1C               	movwf	??_right45^0,c
  7914   004128  0E8E               	movlw	142
  7915   00412A                     u6487:
  7916   00412A  2EE8               	decfsz	wreg,f,c
  7917   00412C  D7FE               	bra	u6487
  7918   00412E  2E1C               	decfsz	??_right45^0,f,c
  7919   004130  D7FC               	bra	u6487
  7920   004132                     l4407:
  7921                           
  7922                           ;dc_motor.c: 180:     while (mL->power > 0){
  7923   004132  C018  FFD9         	movff	right45@mL,fsr2l
  7924   004136  C019  FFDA         	movff	right45@mL+1,fsr2h
  7925   00413A  50DF               	movf	indf2,w,c
  7926   00413C  A4D8               	btfss	status,2,c
  7927   00413E  EFA3  F020         	goto	u4701
  7928   004142  EFA5  F020         	goto	u4700
  7929   004146                     u4701:
  7930   004146  EF7C  F020         	goto	l4399
  7931   00414A                     u4700:
  7932   00414A  0012               	return		;funcret
  7933   00414C                     __end_of_right45:
  7934                           	callstack 0
  7935                           
  7936 ;; *************** function _fullSpeedAhead *****************
  7937 ;; Defined at:
  7938 ;;		line 195 in file "dc_motor.c"
  7939 ;; Parameters:    Size  Location     Type
  7940 ;;  mL              2   23[COMRAM] PTR struct DC_motor
  7941 ;;		 -> main@motorLeft(9), 
  7942 ;;  mR              2   25[COMRAM] PTR struct DC_motor
  7943 ;;		 -> main@motorRight(9), 
  7944 ;; Auto vars:     Size  Location     Type
  7945 ;;		None
  7946 ;; Return value:  Size  Location     Type
  7947 ;;                  1    wreg      void 
  7948 ;; Registers used:
  7949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7950 ;; Tracked objects:
  7951 ;;		On entry : 0/0
  7952 ;;		On exit  : 0/0
  7953 ;;		Unchanged: 0/0
  7954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7955 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7958 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7959 ;;Total ram usage:        4 bytes
  7960 ;; Hardware stack levels used: 1
  7961 ;; Hardware stack levels required when called: 4
  7962 ;; This function calls:
  7963 ;;		_setMotorPWM
  7964 ;; This function is called by:
  7965 ;;		_colorDetect
  7966 ;; This function uses a non-reentrant model
  7967 ;;
  7968                           
  7969                           	psect	text32
  7970   004964                     __ptext32:
  7971                           	callstack 0
  7972   004964                     _fullSpeedAhead:
  7973                           	callstack 25
  7974   004964                     
  7975                           ;dc_motor.c: 195: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 196: {;dc_
      +                          motor.c: 198:     mL->power = 50;
  7976   004964  C018  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  7977   004968  C019  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  7978   00496C  0E32               	movlw	50
  7979   00496E  6EDF               	movwf	indf2,c
  7980                           
  7981                           ;dc_motor.c: 199:     mR->power = 50;
  7982   004970  C01A  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  7983   004974  C01B  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  7984   004978  0E32               	movlw	50
  7985   00497A  6EDF               	movwf	indf2,c
  7986   00497C                     
  7987                           ;dc_motor.c: 201:     mL->direction = 1;
  7988   00497C  EE20 F001          	lfsr	2,1
  7989   004980  5018               	movf	fullSpeedAhead@mL^0,w,c
  7990   004982  26D9               	addwf	fsr2l,f,c
  7991   004984  5019               	movf	(fullSpeedAhead@mL+1)^0,w,c
  7992   004986  22DA               	addwfc	fsr2h,f,c
  7993   004988  0E01               	movlw	1
  7994   00498A  6EDF               	movwf	indf2,c
  7995   00498C                     
  7996                           ;dc_motor.c: 202:     mR->direction = 1;
  7997   00498C  EE20 F001          	lfsr	2,1
  7998   004990  501A               	movf	fullSpeedAhead@mR^0,w,c
  7999   004992  26D9               	addwf	fsr2l,f,c
  8000   004994  501B               	movf	(fullSpeedAhead@mR+1)^0,w,c
  8001   004996  22DA               	addwfc	fsr2h,f,c
  8002   004998  0E01               	movlw	1
  8003   00499A  6EDF               	movwf	indf2,c
  8004   00499C                     
  8005                           ;dc_motor.c: 204:     mL->brakemode = 1;
  8006   00499C  EE20 F002          	lfsr	2,2
  8007   0049A0  5018               	movf	fullSpeedAhead@mL^0,w,c
  8008   0049A2  26D9               	addwf	fsr2l,f,c
  8009   0049A4  5019               	movf	(fullSpeedAhead@mL+1)^0,w,c
  8010   0049A6  22DA               	addwfc	fsr2h,f,c
  8011   0049A8  0E01               	movlw	1
  8012   0049AA  6EDF               	movwf	indf2,c
  8013   0049AC                     
  8014                           ;dc_motor.c: 205:     mL->brakemode = 1;
  8015   0049AC  EE20 F002          	lfsr	2,2
  8016   0049B0  5018               	movf	fullSpeedAhead@mL^0,w,c
  8017   0049B2  26D9               	addwf	fsr2l,f,c
  8018   0049B4  5019               	movf	(fullSpeedAhead@mL+1)^0,w,c
  8019   0049B6  22DA               	addwfc	fsr2h,f,c
  8020   0049B8  0E01               	movlw	1
  8021   0049BA  6EDF               	movwf	indf2,c
  8022   0049BC                     
  8023                           ;dc_motor.c: 207:     setMotorPWM(mL);
  8024   0049BC  C018  F012         	movff	fullSpeedAhead@mL,setMotorPWM@m
  8025   0049C0  C019  F013         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  8026   0049C4  EC38  F01E         	call	_setMotorPWM	;wreg free
  8027   0049C8                     
  8028                           ;dc_motor.c: 208:     setMotorPWM(mR);
  8029   0049C8  C01A  F012         	movff	fullSpeedAhead@mR,setMotorPWM@m
  8030   0049CC  C01B  F013         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  8031   0049D0  EC38  F01E         	call	_setMotorPWM	;wreg free
  8032   0049D4  0012               	return		;funcret
  8033   0049D6                     __end_of_fullSpeedAhead:
  8034                           	callstack 0
  8035                           
  8036 ;; *************** function _setMotorPWM *****************
  8037 ;; Defined at:
  8038 ;;		line 86 in file "dc_motor.c"
  8039 ;; Parameters:    Size  Location     Type
  8040 ;;  m               2   17[COMRAM] PTR struct DC_motor
  8041 ;;		 -> main@motorRight(9), main@motorLeft(9), 
  8042 ;; Auto vars:     Size  Location     Type
  8043 ;;  negDuty         1   22[COMRAM] unsigned char 
  8044 ;;  posDuty         1   21[COMRAM] unsigned char 
  8045 ;; Return value:  Size  Location     Type
  8046 ;;                  1    wreg      void 
  8047 ;; Registers used:
  8048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8049 ;; Tracked objects:
  8050 ;;		On entry : 0/0
  8051 ;;		On exit  : 0/0
  8052 ;;		Unchanged: 0/0
  8053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8054 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8055 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8056 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8057 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8058 ;;Total ram usage:        6 bytes
  8059 ;; Hardware stack levels used: 1
  8060 ;; Hardware stack levels required when called: 3
  8061 ;; This function calls:
  8062 ;;		___lwdiv
  8063 ;;		___wmul
  8064 ;; This function is called by:
  8065 ;;		_stop
  8066 ;;		_right45
  8067 ;;		_fullSpeedAhead
  8068 ;;		_turnLeft
  8069 ;;		_turnRight
  8070 ;; This function uses a non-reentrant model
  8071 ;;
  8072                           
  8073                           	psect	text33
  8074   003C70                     __ptext33:
  8075                           	callstack 0
  8076   003C70                     _setMotorPWM:
  8077                           	callstack 26
  8078   003C70                     
  8079                           ;dc_motor.c: 86: void setMotorPWM(DC_motor *m);dc_motor.c: 87: {;dc_motor.c: 88:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 90:     if(m->brakemode) {
  8080   003C70  EE20 F002          	lfsr	2,2
  8081   003C74  5012               	movf	setMotorPWM@m^0,w,c
  8082   003C76  26D9               	addwf	fsr2l,f,c
  8083   003C78  5013               	movf	(setMotorPWM@m+1)^0,w,c
  8084   003C7A  22DA               	addwfc	fsr2h,f,c
  8085   003C7C  50DF               	movf	indf2,w,c
  8086   003C7E  B4D8               	btfsc	status,2,c
  8087   003C80  EF44  F01E         	goto	u4631
  8088   003C84  EF46  F01E         	goto	u4630
  8089   003C88                     u4631:
  8090   003C88  EF7A  F01E         	goto	l4265
  8091   003C8C                     u4630:
  8092   003C8C                     
  8093                           ;dc_motor.c: 91:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  8094   003C8C  C012  FFD9         	movff	setMotorPWM@m,fsr2l
  8095   003C90  C013  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8096   003C94  50DF               	movf	indf2,w,c
  8097   003C96  6E14               	movwf	??_setMotorPWM^0,c
  8098   003C98  5014               	movf	??_setMotorPWM^0,w,c
  8099   003C9A  6E05               	movwf	___wmul@multiplier^0,c
  8100   003C9C  6A06               	clrf	(___wmul@multiplier+1)^0,c
  8101   003C9E  EE20 F003          	lfsr	2,3
  8102   003CA2  5012               	movf	setMotorPWM@m^0,w,c
  8103   003CA4  26D9               	addwf	fsr2l,f,c
  8104   003CA6  5013               	movf	(setMotorPWM@m+1)^0,w,c
  8105   003CA8  22DA               	addwfc	fsr2h,f,c
  8106   003CAA  CFDE F007          	movff	postinc2,___wmul@multiplicand
  8107   003CAE  CFDD F008          	movff	postdec2,___wmul@multiplicand+1
  8108   003CB2  ECF4  F027         	call	___wmul	;wreg free
  8109   003CB6  C005  F00B         	movff	?___wmul,___lwdiv@dividend
  8110   003CBA  C006  F00C         	movff	?___wmul+1,___lwdiv@dividend+1
  8111   003CBE  0E00               	movlw	0
  8112   003CC0  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
  8113   003CC2  0E64               	movlw	100
  8114   003CC4  6E0D               	movwf	___lwdiv@divisor^0,c
  8115   003CC6  EC78  F024         	call	___lwdiv	;wreg free
  8116   003CCA  EE20 F003          	lfsr	2,3
  8117   003CCE  5012               	movf	setMotorPWM@m^0,w,c
  8118   003CD0  26D9               	addwf	fsr2l,f,c
  8119   003CD2  5013               	movf	(setMotorPWM@m+1)^0,w,c
  8120   003CD4  22DA               	addwfc	fsr2h,f,c
  8121   003CD6  50DF               	movf	indf2,w,c
  8122   003CD8  6E15               	movwf	(??_setMotorPWM+1)^0,c
  8123   003CDA  500B               	movf	?___lwdiv^0,w,c
  8124   003CDC  5C15               	subwf	(??_setMotorPWM+1)^0,w,c
  8125   003CDE  6E16               	movwf	setMotorPWM@posDuty^0,c
  8126   003CE0                     
  8127                           ;dc_motor.c: 92:         negDuty=m->PWMperiod;
  8128   003CE0  EE20 F003          	lfsr	2,3
  8129   003CE4  5012               	movf	setMotorPWM@m^0,w,c
  8130   003CE6  26D9               	addwf	fsr2l,f,c
  8131   003CE8  5013               	movf	(setMotorPWM@m+1)^0,w,c
  8132   003CEA  22DA               	addwfc	fsr2h,f,c
  8133   003CEC  50DF               	movf	indf2,w,c
  8134   003CEE  6E17               	movwf	setMotorPWM@negDuty^0,c
  8135                           
  8136                           ;dc_motor.c: 93:     }
  8137   003CF0  EF9D  F01E         	goto	l4269
  8138   003CF4                     l4265:
  8139                           
  8140                           ;dc_motor.c: 95:         posDuty=0;
  8141   003CF4  0E00               	movlw	0
  8142   003CF6  6E16               	movwf	setMotorPWM@posDuty^0,c
  8143   003CF8                     
  8144                           ;dc_motor.c: 96:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  8145   003CF8  C012  FFD9         	movff	setMotorPWM@m,fsr2l
  8146   003CFC  C013  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8147   003D00  50DF               	movf	indf2,w,c
  8148   003D02  6E14               	movwf	??_setMotorPWM^0,c
  8149   003D04  5014               	movf	??_setMotorPWM^0,w,c
  8150   003D06  6E05               	movwf	___wmul@multiplier^0,c
  8151   003D08  6A06               	clrf	(___wmul@multiplier+1)^0,c
  8152   003D0A  EE20 F003          	lfsr	2,3
  8153   003D0E  5012               	movf	setMotorPWM@m^0,w,c
  8154   003D10  26D9               	addwf	fsr2l,f,c
  8155   003D12  5013               	movf	(setMotorPWM@m+1)^0,w,c
  8156   003D14  22DA               	addwfc	fsr2h,f,c
  8157   003D16  CFDE F007          	movff	postinc2,___wmul@multiplicand
  8158   003D1A  CFDD F008          	movff	postdec2,___wmul@multiplicand+1
  8159   003D1E  ECF4  F027         	call	___wmul	;wreg free
  8160   003D22  C005  F00B         	movff	?___wmul,___lwdiv@dividend
  8161   003D26  C006  F00C         	movff	?___wmul+1,___lwdiv@dividend+1
  8162   003D2A  0E00               	movlw	0
  8163   003D2C  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
  8164   003D2E  0E64               	movlw	100
  8165   003D30  6E0D               	movwf	___lwdiv@divisor^0,c
  8166   003D32  EC78  F024         	call	___lwdiv	;wreg free
  8167   003D36  500B               	movf	?___lwdiv^0,w,c
  8168   003D38  6E17               	movwf	setMotorPWM@negDuty^0,c
  8169   003D3A                     l4269:
  8170                           
  8171                           ;dc_motor.c: 99:     if (m->direction) {
  8172   003D3A  EE20 F001          	lfsr	2,1
  8173   003D3E  5012               	movf	setMotorPWM@m^0,w,c
  8174   003D40  26D9               	addwf	fsr2l,f,c
  8175   003D42  5013               	movf	(setMotorPWM@m+1)^0,w,c
  8176   003D44  22DA               	addwfc	fsr2h,f,c
  8177   003D46  50DF               	movf	indf2,w,c
  8178   003D48  B4D8               	btfsc	status,2,c
  8179   003D4A  EFA9  F01E         	goto	u4641
  8180   003D4E  EFAB  F01E         	goto	u4640
  8181   003D52                     u4641:
  8182   003D52  EFCD  F01E         	goto	l4273
  8183   003D56                     u4640:
  8184   003D56                     
  8185                           ;dc_motor.c: 100:         *(m->posDutyHighByte)=posDuty;
  8186   003D56  EE20 F005          	lfsr	2,5
  8187   003D5A  5012               	movf	setMotorPWM@m^0,w,c
  8188   003D5C  26D9               	addwf	fsr2l,f,c
  8189   003D5E  5013               	movf	(setMotorPWM@m+1)^0,w,c
  8190   003D60  22DA               	addwfc	fsr2h,f,c
  8191   003D62  CFDE F014          	movff	postinc2,??_setMotorPWM
  8192   003D66  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  8193   003D6A  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  8194   003D6E  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8195   003D72  C016  FFDF         	movff	setMotorPWM@posDuty,indf2
  8196                           
  8197                           ;dc_motor.c: 101:         *(m->negDutyHighByte)=negDuty;
  8198   003D76  EE20 F007          	lfsr	2,7
  8199   003D7A  5012               	movf	setMotorPWM@m^0,w,c
  8200   003D7C  26D9               	addwf	fsr2l,f,c
  8201   003D7E  5013               	movf	(setMotorPWM@m+1)^0,w,c
  8202   003D80  22DA               	addwfc	fsr2h,f,c
  8203   003D82  CFDE F014          	movff	postinc2,??_setMotorPWM
  8204   003D86  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  8205   003D8A  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  8206   003D8E  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8207   003D92  C017  FFDF         	movff	setMotorPWM@negDuty,indf2
  8208                           
  8209                           ;dc_motor.c: 102:     } else {
  8210   003D96  EFED  F01E         	goto	l260
  8211   003D9A                     l4273:
  8212                           
  8213                           ;dc_motor.c: 103:         *(m->posDutyHighByte)=negDuty;
  8214   003D9A  EE20 F005          	lfsr	2,5
  8215   003D9E  5012               	movf	setMotorPWM@m^0,w,c
  8216   003DA0  26D9               	addwf	fsr2l,f,c
  8217   003DA2  5013               	movf	(setMotorPWM@m+1)^0,w,c
  8218   003DA4  22DA               	addwfc	fsr2h,f,c
  8219   003DA6  CFDE F014          	movff	postinc2,??_setMotorPWM
  8220   003DAA  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  8221   003DAE  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  8222   003DB2  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8223   003DB6  C017  FFDF         	movff	setMotorPWM@negDuty,indf2
  8224                           
  8225                           ;dc_motor.c: 104:         *(m->negDutyHighByte)=posDuty;
  8226   003DBA  EE20 F007          	lfsr	2,7
  8227   003DBE  5012               	movf	setMotorPWM@m^0,w,c
  8228   003DC0  26D9               	addwf	fsr2l,f,c
  8229   003DC2  5013               	movf	(setMotorPWM@m+1)^0,w,c
  8230   003DC4  22DA               	addwfc	fsr2h,f,c
  8231   003DC6  CFDE F014          	movff	postinc2,??_setMotorPWM
  8232   003DCA  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  8233   003DCE  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  8234   003DD2  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8235   003DD6  C016  FFDF         	movff	setMotorPWM@posDuty,indf2
  8236   003DDA                     l260:
  8237   003DDA  0012               	return		;funcret
  8238   003DDC                     __end_of_setMotorPWM:
  8239                           	callstack 0
  8240                           
  8241 ;; *************** function ___wmul *****************
  8242 ;; Defined at:
  8243 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  8244 ;; Parameters:    Size  Location     Type
  8245 ;;  multiplier      2    4[COMRAM] unsigned int 
  8246 ;;  multiplicand    2    6[COMRAM] unsigned int 
  8247 ;; Auto vars:     Size  Location     Type
  8248 ;;  product         2    8[COMRAM] unsigned int 
  8249 ;; Return value:  Size  Location     Type
  8250 ;;                  2    4[COMRAM] unsigned int 
  8251 ;; Registers used:
  8252 ;;		wreg, status,2, status,0, prodl, prodh
  8253 ;; Tracked objects:
  8254 ;;		On entry : 0/0
  8255 ;;		On exit  : 0/0
  8256 ;;		Unchanged: 0/0
  8257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8258 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8259 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8261 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8262 ;;Total ram usage:        6 bytes
  8263 ;; Hardware stack levels used: 1
  8264 ;; Hardware stack levels required when called: 2
  8265 ;; This function calls:
  8266 ;;		Nothing
  8267 ;; This function is called by:
  8268 ;;		_setMotorPWM
  8269 ;; This function uses a non-reentrant model
  8270 ;;
  8271                           
  8272                           	psect	text34
  8273   004FE8                     __ptext34:
  8274                           	callstack 0
  8275   004FE8                     ___wmul:
  8276                           	callstack 26
  8277   004FE8  5005               	movf	___wmul@multiplier^0,w,c
  8278   004FEA  0207               	mulwf	___wmul@multiplicand^0,c
  8279   004FEC  CFF3 F009          	movff	prodl,___wmul@product
  8280   004FF0  CFF4 F00A          	movff	prodh,___wmul@product+1
  8281   004FF4  5005               	movf	___wmul@multiplier^0,w,c
  8282   004FF6  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  8283   004FF8  50F3               	movf	243,w,c
  8284   004FFA  260A               	addwf	(___wmul@product+1)^0,f,c
  8285   004FFC  5006               	movf	(___wmul@multiplier+1)^0,w,c
  8286   004FFE  0207               	mulwf	___wmul@multiplicand^0,c
  8287   005000  50F3               	movf	243,w,c
  8288   005002  260A               	addwf	(___wmul@product+1)^0,f,c
  8289   005004  C009  F005         	movff	___wmul@product,?___wmul
  8290   005008  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  8291   00500C  0012               	return		;funcret
  8292   00500E                     __end_of___wmul:
  8293                           	callstack 0
  8294                           
  8295 ;; *************** function ___lwdiv *****************
  8296 ;; Defined at:
  8297 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  8298 ;; Parameters:    Size  Location     Type
  8299 ;;  dividend        2   10[COMRAM] unsigned int 
  8300 ;;  divisor         2   12[COMRAM] unsigned int 
  8301 ;; Auto vars:     Size  Location     Type
  8302 ;;  quotient        2   14[COMRAM] unsigned int 
  8303 ;;  counter         1   16[COMRAM] unsigned char 
  8304 ;; Return value:  Size  Location     Type
  8305 ;;                  2   10[COMRAM] unsigned int 
  8306 ;; Registers used:
  8307 ;;		wreg, status,2, status,0
  8308 ;; Tracked objects:
  8309 ;;		On entry : 0/0
  8310 ;;		On exit  : 0/0
  8311 ;;		Unchanged: 0/0
  8312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8313 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8314 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8316 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8317 ;;Total ram usage:        7 bytes
  8318 ;; Hardware stack levels used: 1
  8319 ;; Hardware stack levels required when called: 2
  8320 ;; This function calls:
  8321 ;;		Nothing
  8322 ;; This function is called by:
  8323 ;;		_setMotorPWM
  8324 ;; This function uses a non-reentrant model
  8325 ;;
  8326                           
  8327                           	psect	text35
  8328   0048F0                     __ptext35:
  8329                           	callstack 0
  8330   0048F0                     ___lwdiv:
  8331                           	callstack 26
  8332   0048F0  0E00               	movlw	0
  8333   0048F2  6E10               	movwf	(___lwdiv@quotient+1)^0,c
  8334   0048F4  0E00               	movlw	0
  8335   0048F6  6E0F               	movwf	___lwdiv@quotient^0,c
  8336   0048F8  500D               	movf	___lwdiv@divisor^0,w,c
  8337   0048FA  100E               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8338   0048FC  B4D8               	btfsc	status,2,c
  8339   0048FE  EF83  F024         	goto	u4181
  8340   004902  EF85  F024         	goto	u4180
  8341   004906                     u4181:
  8342   004906  EFAD  F024         	goto	l885
  8343   00490A                     u4180:
  8344   00490A  0E01               	movlw	1
  8345   00490C  6E11               	movwf	___lwdiv@counter^0,c
  8346   00490E  EF8D  F024         	goto	l3947
  8347   004912                     l3945:
  8348   004912  90D8               	bcf	status,0,c
  8349   004914  360D               	rlcf	___lwdiv@divisor^0,f,c
  8350   004916  360E               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8351   004918  2A11               	incf	___lwdiv@counter^0,f,c
  8352   00491A                     l3947:
  8353   00491A  AE0E               	btfss	(___lwdiv@divisor+1)^0,7,c
  8354   00491C  EF92  F024         	goto	u4191
  8355   004920  EF94  F024         	goto	u4190
  8356   004924                     u4191:
  8357   004924  EF89  F024         	goto	l3945
  8358   004928                     u4190:
  8359   004928                     l3949:
  8360   004928  90D8               	bcf	status,0,c
  8361   00492A  360F               	rlcf	___lwdiv@quotient^0,f,c
  8362   00492C  3610               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8363   00492E  500D               	movf	___lwdiv@divisor^0,w,c
  8364   004930  5C0B               	subwf	___lwdiv@dividend^0,w,c
  8365   004932  500E               	movf	(___lwdiv@divisor+1)^0,w,c
  8366   004934  580C               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8367   004936  A0D8               	btfss	status,0,c
  8368   004938  EFA0  F024         	goto	u4201
  8369   00493C  EFA2  F024         	goto	u4200
  8370   004940                     u4201:
  8371   004940  EFA7  F024         	goto	l3957
  8372   004944                     u4200:
  8373   004944  500D               	movf	___lwdiv@divisor^0,w,c
  8374   004946  5E0B               	subwf	___lwdiv@dividend^0,f,c
  8375   004948  500E               	movf	(___lwdiv@divisor+1)^0,w,c
  8376   00494A  5A0C               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8377   00494C  800F               	bsf	___lwdiv@quotient^0,0,c
  8378   00494E                     l3957:
  8379   00494E  90D8               	bcf	status,0,c
  8380   004950  320E               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8381   004952  320D               	rrcf	___lwdiv@divisor^0,f,c
  8382   004954  2E11               	decfsz	___lwdiv@counter^0,f,c
  8383   004956  EF94  F024         	goto	l3949
  8384   00495A                     l885:
  8385   00495A  C00F  F00B         	movff	___lwdiv@quotient,?___lwdiv
  8386   00495E  C010  F00C         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8387   004962  0012               	return		;funcret
  8388   004964                     __end_of___lwdiv:
  8389                           	callstack 0
  8390                           
  8391 ;; *************** function ___xxtofl *****************
  8392 ;; Defined at:
  8393 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  8394 ;; Parameters:    Size  Location     Type
  8395 ;;  sign            1    wreg     unsigned char 
  8396 ;;  val             4    4[COMRAM] long 
  8397 ;; Auto vars:     Size  Location     Type
  8398 ;;  sign            1   12[COMRAM] unsigned char 
  8399 ;;  arg             4   14[COMRAM] unsigned long 
  8400 ;;  exp             1   13[COMRAM] unsigned char 
  8401 ;; Return value:  Size  Location     Type
  8402 ;;                  4    4[COMRAM] unsigned char 
  8403 ;; Registers used:
  8404 ;;		wreg, status,2, status,0
  8405 ;; Tracked objects:
  8406 ;;		On entry : 0/0
  8407 ;;		On exit  : 0/0
  8408 ;;		Unchanged: 0/0
  8409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8410 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8411 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8412 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8413 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8414 ;;Total ram usage:       14 bytes
  8415 ;; Hardware stack levels used: 1
  8416 ;; Hardware stack levels required when called: 2
  8417 ;; This function calls:
  8418 ;;		Nothing
  8419 ;; This function is called by:
  8420 ;;		_colorDetect
  8421 ;;		_main
  8422 ;; This function uses a non-reentrant model
  8423 ;;
  8424                           
  8425                           	psect	text36
  8426   003934                     __ptext36:
  8427                           	callstack 0
  8428   003934                     ___xxtofl:
  8429                           	callstack 27
  8430                           
  8431                           ;incstack = 0
  8432                           ;___xxtofl@sign stored from wreg
  8433   003934  6E0D               	movwf	___xxtofl@sign^0,c
  8434   003936  500D               	movf	___xxtofl@sign^0,w,c
  8435   003938  B4D8               	btfsc	status,2,c
  8436   00393A  EFA1  F01C         	goto	u4741
  8437   00393E  EFA3  F01C         	goto	u4740
  8438   003942                     u4741:
  8439   003942  EFC5  F01C         	goto	l1049
  8440   003946                     u4740:
  8441   003946  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  8442   003948  EFAA  F01C         	goto	u4750
  8443   00394C  EFA8  F01C         	goto	u4751
  8444   003950                     u4751:
  8445   003950  EFC5  F01C         	goto	l1049
  8446   003954                     u4750:
  8447   003954  C005  F009         	movff	___xxtofl@val,??___xxtofl
  8448   003958  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  8449   00395C  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  8450   003960  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  8451   003964  1E09               	comf	??___xxtofl^0,f,c
  8452   003966  1E0A               	comf	(??___xxtofl+1)^0,f,c
  8453   003968  1E0B               	comf	(??___xxtofl+2)^0,f,c
  8454   00396A  1E0C               	comf	(??___xxtofl+3)^0,f,c
  8455   00396C  2A09               	incf	??___xxtofl^0,f,c
  8456   00396E  0E00               	movlw	0
  8457   003970  220A               	addwfc	(??___xxtofl+1)^0,f,c
  8458   003972  220B               	addwfc	(??___xxtofl+2)^0,f,c
  8459   003974  220C               	addwfc	(??___xxtofl+3)^0,f,c
  8460   003976  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  8461   00397A  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  8462   00397E  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  8463   003982  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  8464   003986  EFCD  F01C         	goto	l4427
  8465   00398A                     l1049:
  8466   00398A  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  8467   00398E  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8468   003992  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8469   003996  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8470   00399A                     l4427:
  8471   00399A  5005               	movf	___xxtofl@val^0,w,c
  8472   00399C  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  8473   00399E  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  8474   0039A0  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  8475   0039A2  A4D8               	btfss	status,2,c
  8476   0039A4  EFD6  F01C         	goto	u4761
  8477   0039A8  EFD8  F01C         	goto	u4760
  8478   0039AC                     u4761:
  8479   0039AC  EFE2  F01C         	goto	l4433
  8480   0039B0                     u4760:
  8481   0039B0  0E00               	movlw	0
  8482   0039B2  6E05               	movwf	?___xxtofl^0,c
  8483   0039B4  0E00               	movlw	0
  8484   0039B6  6E06               	movwf	(?___xxtofl+1)^0,c
  8485   0039B8  0E00               	movlw	0
  8486   0039BA  6E07               	movwf	(?___xxtofl+2)^0,c
  8487   0039BC  0E00               	movlw	0
  8488   0039BE  6E08               	movwf	(?___xxtofl+3)^0,c
  8489   0039C0  EF73  F01D         	goto	l1052
  8490   0039C4                     l4433:
  8491   0039C4  0E96               	movlw	150
  8492   0039C6  6E0E               	movwf	___xxtofl@exp^0,c
  8493   0039C8  EFEC  F01C         	goto	l4437
  8494   0039CC                     l4435:
  8495   0039CC  2A0E               	incf	___xxtofl@exp^0,f,c
  8496   0039CE  90D8               	bcf	status,0,c
  8497   0039D0  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  8498   0039D2  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  8499   0039D4  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  8500   0039D6  320F               	rrcf	___xxtofl@arg^0,f,c
  8501   0039D8                     l4437:
  8502   0039D8  0E00               	movlw	0
  8503   0039DA  140F               	andwf	___xxtofl@arg^0,w,c
  8504   0039DC  6E09               	movwf	??___xxtofl^0,c
  8505   0039DE  0E00               	movlw	0
  8506   0039E0  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  8507   0039E2  6E0A               	movwf	(??___xxtofl+1)^0,c
  8508   0039E4  0E00               	movlw	0
  8509   0039E6  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  8510   0039E8  6E0B               	movwf	(??___xxtofl+2)^0,c
  8511   0039EA  0EFE               	movlw	254
  8512   0039EC  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  8513   0039EE  6E0C               	movwf	(??___xxtofl+3)^0,c
  8514   0039F0  5009               	movf	??___xxtofl^0,w,c
  8515   0039F2  100A               	iorwf	(??___xxtofl+1)^0,w,c
  8516   0039F4  100B               	iorwf	(??___xxtofl+2)^0,w,c
  8517   0039F6  100C               	iorwf	(??___xxtofl+3)^0,w,c
  8518   0039F8  A4D8               	btfss	status,2,c
  8519   0039FA  EF01  F01D         	goto	u4771
  8520   0039FE  EF03  F01D         	goto	u4770
  8521   003A02                     u4771:
  8522   003A02  EFE6  F01C         	goto	l4435
  8523   003A06                     u4770:
  8524   003A06  EF11  F01D         	goto	l1056
  8525   003A0A                     l4439:
  8526   003A0A  2A0E               	incf	___xxtofl@exp^0,f,c
  8527   003A0C  0E01               	movlw	1
  8528   003A0E  260F               	addwf	___xxtofl@arg^0,f,c
  8529   003A10  0E00               	movlw	0
  8530   003A12  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  8531   003A14  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  8532   003A16  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  8533   003A18  90D8               	bcf	status,0,c
  8534   003A1A  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  8535   003A1C  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  8536   003A1E  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  8537   003A20  320F               	rrcf	___xxtofl@arg^0,f,c
  8538   003A22                     l1056:
  8539   003A22  0E00               	movlw	0
  8540   003A24  140F               	andwf	___xxtofl@arg^0,w,c
  8541   003A26  6E09               	movwf	??___xxtofl^0,c
  8542   003A28  0E00               	movlw	0
  8543   003A2A  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  8544   003A2C  6E0A               	movwf	(??___xxtofl+1)^0,c
  8545   003A2E  0E00               	movlw	0
  8546   003A30  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  8547   003A32  6E0B               	movwf	(??___xxtofl+2)^0,c
  8548   003A34  0EFF               	movlw	255
  8549   003A36  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  8550   003A38  6E0C               	movwf	(??___xxtofl+3)^0,c
  8551   003A3A  5009               	movf	??___xxtofl^0,w,c
  8552   003A3C  100A               	iorwf	(??___xxtofl+1)^0,w,c
  8553   003A3E  100B               	iorwf	(??___xxtofl+2)^0,w,c
  8554   003A40  100C               	iorwf	(??___xxtofl+3)^0,w,c
  8555   003A42  A4D8               	btfss	status,2,c
  8556   003A44  EF26  F01D         	goto	u4781
  8557   003A48  EF28  F01D         	goto	u4780
  8558   003A4C                     u4781:
  8559   003A4C  EF05  F01D         	goto	l4439
  8560   003A50                     u4780:
  8561   003A50  EF30  F01D         	goto	l4447
  8562   003A54                     l4445:
  8563   003A54  060E               	decf	___xxtofl@exp^0,f,c
  8564   003A56  90D8               	bcf	status,0,c
  8565   003A58  360F               	rlcf	___xxtofl@arg^0,f,c
  8566   003A5A  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  8567   003A5C  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  8568   003A5E  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  8569   003A60                     l4447:
  8570   003A60  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  8571   003A62  EF35  F01D         	goto	u4791
  8572   003A66  EF37  F01D         	goto	u4790
  8573   003A6A                     u4791:
  8574   003A6A  EF3F  F01D         	goto	l1063
  8575   003A6E                     u4790:
  8576   003A6E  0E02               	movlw	2
  8577   003A70  600E               	cpfslt	___xxtofl@exp^0,c
  8578   003A72  EF3D  F01D         	goto	u4801
  8579   003A76  EF3F  F01D         	goto	u4800
  8580   003A7A                     u4801:
  8581   003A7A  EF2A  F01D         	goto	l4445
  8582   003A7E                     u4800:
  8583   003A7E                     l1063:
  8584   003A7E  B00E               	btfsc	___xxtofl@exp^0,0,c
  8585   003A80  EF44  F01D         	goto	u4811
  8586   003A84  EF46  F01D         	goto	u4810
  8587   003A88                     u4811:
  8588   003A88  EF47  F01D         	goto	l4453
  8589   003A8C                     u4810:
  8590   003A8C  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  8591   003A8E                     l4453:
  8592   003A8E  90D8               	bcf	status,0,c
  8593   003A90  320E               	rrcf	___xxtofl@exp^0,f,c
  8594   003A92  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  8595   003A96  6A0A               	clrf	(??___xxtofl+1)^0,c
  8596   003A98  6A0B               	clrf	(??___xxtofl+2)^0,c
  8597   003A9A  6A0C               	clrf	(??___xxtofl+3)^0,c
  8598   003A9C  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  8599   003AA0  6A0B               	clrf	(??___xxtofl+2)^0,c
  8600   003AA2  6A0A               	clrf	(??___xxtofl+1)^0,c
  8601   003AA4  6A09               	clrf	??___xxtofl^0,c
  8602   003AA6  5009               	movf	??___xxtofl^0,w,c
  8603   003AA8  120F               	iorwf	___xxtofl@arg^0,f,c
  8604   003AAA  500A               	movf	(??___xxtofl+1)^0,w,c
  8605   003AAC  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  8606   003AAE  500B               	movf	(??___xxtofl+2)^0,w,c
  8607   003AB0  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  8608   003AB2  500C               	movf	(??___xxtofl+3)^0,w,c
  8609   003AB4  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  8610   003AB6  500D               	movf	___xxtofl@sign^0,w,c
  8611   003AB8  B4D8               	btfsc	status,2,c
  8612   003ABA  EF61  F01D         	goto	u4821
  8613   003ABE  EF63  F01D         	goto	u4820
  8614   003AC2                     u4821:
  8615   003AC2  EF6B  F01D         	goto	l4463
  8616   003AC6                     u4820:
  8617   003AC6  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  8618   003AC8  EF6A  F01D         	goto	u4830
  8619   003ACC  EF68  F01D         	goto	u4831
  8620   003AD0                     u4831:
  8621   003AD0  EF6B  F01D         	goto	l4463
  8622   003AD4                     u4830:
  8623   003AD4  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  8624   003AD6                     l4463:
  8625   003AD6  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  8626   003ADA  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  8627   003ADE  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  8628   003AE2  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  8629   003AE6                     l1052:
  8630   003AE6  0012               	return		;funcret
  8631   003AE8                     __end_of___xxtofl:
  8632                           	callstack 0
  8633                           
  8634 ;; *************** function ___flsub *****************
  8635 ;; Defined at:
  8636 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  8637 ;; Parameters:    Size  Location     Type
  8638 ;;  b               4   45[COMRAM] unsigned char 
  8639 ;;  a               4   49[COMRAM] unsigned char 
  8640 ;; Auto vars:     Size  Location     Type
  8641 ;;		None
  8642 ;; Return value:  Size  Location     Type
  8643 ;;                  4   45[COMRAM] unsigned char 
  8644 ;; Registers used:
  8645 ;;		wreg, status,2, status,0, cstack
  8646 ;; Tracked objects:
  8647 ;;		On entry : 0/0
  8648 ;;		On exit  : 0/0
  8649 ;;		Unchanged: 0/0
  8650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8651 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8654 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8655 ;;Total ram usage:        8 bytes
  8656 ;; Hardware stack levels used: 1
  8657 ;; Hardware stack levels required when called: 3
  8658 ;; This function calls:
  8659 ;;		___fladd
  8660 ;; This function is called by:
  8661 ;;		_colorDetect
  8662 ;;		_efgtoa
  8663 ;; This function uses a non-reentrant model
  8664 ;;
  8665                           
  8666                           	psect	text37
  8667   004CD2                     __ptext37:
  8668                           	callstack 0
  8669   004CD2                     ___flsub:
  8670                           	callstack 23
  8671   004CD2  0E00               	movlw	0
  8672   004CD4  1A32               	xorwf	___flsub@a^0,f,c
  8673   004CD6  0E00               	movlw	0
  8674   004CD8  1A33               	xorwf	(___flsub@a+1)^0,f,c
  8675   004CDA  0E00               	movlw	0
  8676   004CDC  1A34               	xorwf	(___flsub@a+2)^0,f,c
  8677   004CDE  0E80               	movlw	128
  8678   004CE0  1A35               	xorwf	(___flsub@a+3)^0,f,c
  8679   004CE2  C02E  F005         	movff	___flsub@b,___fladd@b
  8680   004CE6  C02F  F006         	movff	___flsub@b+1,___fladd@b+1
  8681   004CEA  C030  F007         	movff	___flsub@b+2,___fladd@b+2
  8682   004CEE  C031  F008         	movff	___flsub@b+3,___fladd@b+3
  8683   004CF2  C032  F009         	movff	___flsub@a,___fladd@a
  8684   004CF6  C033  F00A         	movff	___flsub@a+1,___fladd@a+1
  8685   004CFA  C034  F00B         	movff	___flsub@a+2,___fladd@a+2
  8686   004CFE  C035  F00C         	movff	___flsub@a+3,___fladd@a+3
  8687   004D02  EC68  F011         	call	___fladd	;wreg free
  8688   004D06  C005  F02E         	movff	?___fladd,?___flsub
  8689   004D0A  C006  F02F         	movff	?___fladd+1,?___flsub+1
  8690   004D0E  C007  F030         	movff	?___fladd+2,?___flsub+2
  8691   004D12  C008  F031         	movff	?___fladd+3,?___flsub+3
  8692   004D16  0012               	return		;funcret
  8693   004D18                     __end_of___flsub:
  8694                           	callstack 0
  8695                           
  8696 ;; *************** function ___fladd *****************
  8697 ;; Defined at:
  8698 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  8699 ;; Parameters:    Size  Location     Type
  8700 ;;  b               4    4[COMRAM] unsigned char 
  8701 ;;  a               4    8[COMRAM] unsigned char 
  8702 ;; Auto vars:     Size  Location     Type
  8703 ;;  grs             1   19[COMRAM] unsigned char 
  8704 ;;  bexp            1   18[COMRAM] unsigned char 
  8705 ;;  aexp            1   17[COMRAM] unsigned char 
  8706 ;;  signs           1   16[COMRAM] unsigned char 
  8707 ;; Return value:  Size  Location     Type
  8708 ;;                  4    4[COMRAM] unsigned char 
  8709 ;; Registers used:
  8710 ;;		wreg, status,2, status,0
  8711 ;; Tracked objects:
  8712 ;;		On entry : 0/0
  8713 ;;		On exit  : 0/0
  8714 ;;		Unchanged: 0/0
  8715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8716 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8717 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8718 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8719 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8720 ;;Total ram usage:       16 bytes
  8721 ;; Hardware stack levels used: 1
  8722 ;; Hardware stack levels required when called: 2
  8723 ;; This function calls:
  8724 ;;		Nothing
  8725 ;; This function is called by:
  8726 ;;		___flsub
  8727 ;;		_efgtoa
  8728 ;; This function uses a non-reentrant model
  8729 ;;
  8730                           
  8731                           	psect	text38
  8732   0022D0                     __ptext38:
  8733                           	callstack 0
  8734   0022D0                     ___fladd:
  8735                           	callstack 23
  8736   0022D0  5008               	movf	(___fladd@b+3)^0,w,c
  8737   0022D2  0B80               	andlw	128
  8738   0022D4  6E11               	movwf	___fladd@signs^0,c
  8739   0022D6  5008               	movf	(___fladd@b+3)^0,w,c
  8740   0022D8  2408               	addwf	(___fladd@b+3)^0,w,c
  8741   0022DA  6E13               	movwf	___fladd@bexp^0,c
  8742   0022DC  AE07               	btfss	(___fladd@b+2)^0,7,c
  8743   0022DE  EF73  F011         	goto	u2801
  8744   0022E2  EF75  F011         	goto	u2800
  8745   0022E6                     u2801:
  8746   0022E6  EF76  F011         	goto	l3163
  8747   0022EA                     u2800:
  8748   0022EA  8013               	bsf	___fladd@bexp^0,0,c
  8749   0022EC                     l3163:
  8750   0022EC  5013               	movf	___fladd@bexp^0,w,c
  8751   0022EE  B4D8               	btfsc	status,2,c
  8752   0022F0  EF7C  F011         	goto	u2811
  8753   0022F4  EF7E  F011         	goto	u2810
  8754   0022F8                     u2811:
  8755   0022F8  EF93  F011         	goto	l3173
  8756   0022FC                     u2810:
  8757   0022FC  2813               	incf	___fladd@bexp^0,w,c
  8758   0022FE  A4D8               	btfss	status,2,c
  8759   002300  EF84  F011         	goto	u2821
  8760   002304  EF86  F011         	goto	u2820
  8761   002308                     u2821:
  8762   002308  EF8E  F011         	goto	l3169
  8763   00230C                     u2820:
  8764   00230C  0E00               	movlw	0
  8765   00230E  6E05               	movwf	___fladd@b^0,c
  8766   002310  0E00               	movlw	0
  8767   002312  6E06               	movwf	(___fladd@b+1)^0,c
  8768   002314  0E00               	movlw	0
  8769   002316  6E07               	movwf	(___fladd@b+2)^0,c
  8770   002318  0E00               	movlw	0
  8771   00231A  6E08               	movwf	(___fladd@b+3)^0,c
  8772   00231C                     l3169:
  8773   00231C  8E07               	bsf	(___fladd@b+2)^0,7,c
  8774   00231E  0E00               	movlw	0
  8775   002320  6E08               	movwf	(___fladd@b+3)^0,c
  8776   002322  EF9B  F011         	goto	l3175
  8777   002326                     l3173:
  8778   002326  0E00               	movlw	0
  8779   002328  6E05               	movwf	___fladd@b^0,c
  8780   00232A  0E00               	movlw	0
  8781   00232C  6E06               	movwf	(___fladd@b+1)^0,c
  8782   00232E  0E00               	movlw	0
  8783   002330  6E07               	movwf	(___fladd@b+2)^0,c
  8784   002332  0E00               	movlw	0
  8785   002334  6E08               	movwf	(___fladd@b+3)^0,c
  8786   002336                     l3175:
  8787   002336  500C               	movf	(___fladd@a+3)^0,w,c
  8788   002338  0B80               	andlw	128
  8789   00233A  6E12               	movwf	___fladd@aexp^0,c
  8790   00233C  5011               	movf	___fladd@signs^0,w,c
  8791   00233E  1812               	xorwf	___fladd@aexp^0,w,c
  8792   002340  B4D8               	btfsc	status,2,c
  8793   002342  EFA5  F011         	goto	u2831
  8794   002346  EFA7  F011         	goto	u2830
  8795   00234A                     u2831:
  8796   00234A  EFA8  F011         	goto	l3181
  8797   00234E                     u2830:
  8798   00234E  8C11               	bsf	___fladd@signs^0,6,c
  8799   002350                     l3181:
  8800   002350  500C               	movf	(___fladd@a+3)^0,w,c
  8801   002352  240C               	addwf	(___fladd@a+3)^0,w,c
  8802   002354  6E12               	movwf	___fladd@aexp^0,c
  8803   002356  AE0B               	btfss	(___fladd@a+2)^0,7,c
  8804   002358  EFB0  F011         	goto	u2841
  8805   00235C  EFB2  F011         	goto	u2840
  8806   002360                     u2841:
  8807   002360  EFB3  F011         	goto	l3187
  8808   002364                     u2840:
  8809   002364  8012               	bsf	___fladd@aexp^0,0,c
  8810   002366                     l3187:
  8811   002366  5012               	movf	___fladd@aexp^0,w,c
  8812   002368  B4D8               	btfsc	status,2,c
  8813   00236A  EFB9  F011         	goto	u2851
  8814   00236E  EFBB  F011         	goto	u2850
  8815   002372                     u2851:
  8816   002372  EFD0  F011         	goto	l3197
  8817   002376                     u2850:
  8818   002376  2812               	incf	___fladd@aexp^0,w,c
  8819   002378  A4D8               	btfss	status,2,c
  8820   00237A  EFC1  F011         	goto	u2861
  8821   00237E  EFC3  F011         	goto	u2860
  8822   002382                     u2861:
  8823   002382  EFCB  F011         	goto	l3193
  8824   002386                     u2860:
  8825   002386  0E00               	movlw	0
  8826   002388  6E09               	movwf	___fladd@a^0,c
  8827   00238A  0E00               	movlw	0
  8828   00238C  6E0A               	movwf	(___fladd@a+1)^0,c
  8829   00238E  0E00               	movlw	0
  8830   002390  6E0B               	movwf	(___fladd@a+2)^0,c
  8831   002392  0E00               	movlw	0
  8832   002394  6E0C               	movwf	(___fladd@a+3)^0,c
  8833   002396                     l3193:
  8834   002396  8E0B               	bsf	(___fladd@a+2)^0,7,c
  8835   002398  0E00               	movlw	0
  8836   00239A  6E0C               	movwf	(___fladd@a+3)^0,c
  8837   00239C  EFD8  F011         	goto	l3199
  8838   0023A0                     l3197:
  8839   0023A0  0E00               	movlw	0
  8840   0023A2  6E09               	movwf	___fladd@a^0,c
  8841   0023A4  0E00               	movlw	0
  8842   0023A6  6E0A               	movwf	(___fladd@a+1)^0,c
  8843   0023A8  0E00               	movlw	0
  8844   0023AA  6E0B               	movwf	(___fladd@a+2)^0,c
  8845   0023AC  0E00               	movlw	0
  8846   0023AE  6E0C               	movwf	(___fladd@a+3)^0,c
  8847   0023B0                     l3199:
  8848   0023B0  5013               	movf	___fladd@bexp^0,w,c
  8849   0023B2  5C12               	subwf	___fladd@aexp^0,w,c
  8850   0023B4  B0D8               	btfsc	status,0,c
  8851   0023B6  EFDF  F011         	goto	u2871
  8852   0023BA  EFE1  F011         	goto	u2870
  8853   0023BE                     u2871:
  8854   0023BE  EF08  F012         	goto	l3235
  8855   0023C2                     u2870:
  8856   0023C2  AC11               	btfss	___fladd@signs^0,6,c
  8857   0023C4  EFE6  F011         	goto	u2881
  8858   0023C8  EFE8  F011         	goto	u2880
  8859   0023CC                     u2881:
  8860   0023CC  EFEA  F011         	goto	l3205
  8861   0023D0                     u2880:
  8862   0023D0  0E80               	movlw	128
  8863   0023D2  1A11               	xorwf	___fladd@signs^0,f,c
  8864   0023D4                     l3205:
  8865   0023D4  C013  F014         	movff	___fladd@bexp,___fladd@grs
  8866   0023D8  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  8867   0023DC  C014  F012         	movff	___fladd@grs,___fladd@aexp
  8868   0023E0  C005  F014         	movff	___fladd@b,___fladd@grs
  8869   0023E4  C009  F005         	movff	___fladd@a,___fladd@b
  8870   0023E8  C014  F009         	movff	___fladd@grs,___fladd@a
  8871   0023EC  C006  F014         	movff	___fladd@b+1,___fladd@grs
  8872   0023F0  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  8873   0023F4  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  8874   0023F8  C007  F014         	movff	___fladd@b+2,___fladd@grs
  8875   0023FC  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  8876   002400  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  8877   002404  C008  F014         	movff	___fladd@b+3,___fladd@grs
  8878   002408  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  8879   00240C  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  8880   002410                     l3235:
  8881   002410  0E00               	movlw	0
  8882   002412  6E14               	movwf	___fladd@grs^0,c
  8883   002414  5013               	movf	___fladd@bexp^0,w,c
  8884   002416  C012  F00D         	movff	___fladd@aexp,??___fladd
  8885   00241A  6A0E               	clrf	(??___fladd+1)^0,c
  8886   00241C  5E0D               	subwf	??___fladd^0,f,c
  8887   00241E  0E00               	movlw	0
  8888   002420  5A0E               	subwfb	(??___fladd+1)^0,f,c
  8889   002422  BE0E               	btfsc	(??___fladd+1)^0,7,c
  8890   002424  EF1D  F012         	goto	u2891
  8891   002428  500E               	movf	(??___fladd+1)^0,w,c
  8892   00242A  E109               	bnz	u2890
  8893   00242C  0E1A               	movlw	26
  8894   00242E  5C0D               	subwf	??___fladd^0,w,c
  8895   002430  A0D8               	btfss	status,0,c
  8896   002432  EF1D  F012         	goto	u2891
  8897   002436  EF1F  F012         	goto	u2890
  8898   00243A                     u2891:
  8899   00243A  EF56  F012         	goto	l923
  8900   00243E                     u2890:
  8901   00243E  5005               	movf	___fladd@b^0,w,c
  8902   002440  1006               	iorwf	(___fladd@b+1)^0,w,c
  8903   002442  1007               	iorwf	(___fladd@b+2)^0,w,c
  8904   002444  1008               	iorwf	(___fladd@b+3)^0,w,c
  8905   002446  A4D8               	btfss	status,2,c
  8906   002448  EF28  F012         	goto	u2901
  8907   00244C  EF2B  F012         	goto	u2900
  8908   002450                     u2901:
  8909   002450  0E01               	movlw	1
  8910   002452  EF2C  F012         	goto	u2910
  8911   002456                     u2900:
  8912   002456  0E00               	movlw	0
  8913   002458                     u2910:
  8914   002458  6E14               	movwf	___fladd@grs^0,c
  8915   00245A  0E00               	movlw	0
  8916   00245C  6E05               	movwf	___fladd@b^0,c
  8917   00245E  0E00               	movlw	0
  8918   002460  6E06               	movwf	(___fladd@b+1)^0,c
  8919   002462  0E00               	movlw	0
  8920   002464  6E07               	movwf	(___fladd@b+2)^0,c
  8921   002466  0E00               	movlw	0
  8922   002468  6E08               	movwf	(___fladd@b+3)^0,c
  8923   00246A  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  8924   00246E  EF5F  F012         	goto	l922
  8925   002472                     l924:
  8926   002472  A014               	btfss	___fladd@grs^0,0,c
  8927   002474  EF3E  F012         	goto	u2921
  8928   002478  EF40  F012         	goto	u2920
  8929   00247C                     u2921:
  8930   00247C  EF46  F012         	goto	l3247
  8931   002480                     u2920:
  8932   002480  90D8               	bcf	status,0,c
  8933   002482  3014               	rrcf	___fladd@grs^0,w,c
  8934   002484  0901               	iorlw	1
  8935   002486  6E14               	movwf	___fladd@grs^0,c
  8936   002488  EF48  F012         	goto	l3249
  8937   00248C                     l3247:
  8938   00248C  90D8               	bcf	status,0,c
  8939   00248E  3214               	rrcf	___fladd@grs^0,f,c
  8940   002490                     l3249:
  8941   002490  A005               	btfss	___fladd@b^0,0,c
  8942   002492  EF4D  F012         	goto	u2931
  8943   002496  EF4F  F012         	goto	u2930
  8944   00249A                     u2931:
  8945   00249A  EF50  F012         	goto	l3253
  8946   00249E                     u2930:
  8947   00249E  8E14               	bsf	___fladd@grs^0,7,c
  8948   0024A0                     l3253:
  8949   0024A0  3408               	rlcf	(___fladd@b+3)^0,w,c
  8950   0024A2  3208               	rrcf	(___fladd@b+3)^0,f,c
  8951   0024A4  3207               	rrcf	(___fladd@b+2)^0,f,c
  8952   0024A6  3206               	rrcf	(___fladd@b+1)^0,f,c
  8953   0024A8  3205               	rrcf	___fladd@b^0,f,c
  8954   0024AA  2A13               	incf	___fladd@bexp^0,f,c
  8955   0024AC                     l923:
  8956   0024AC  5012               	movf	___fladd@aexp^0,w,c
  8957   0024AE  5C13               	subwf	___fladd@bexp^0,w,c
  8958   0024B0  A0D8               	btfss	status,0,c
  8959   0024B2  EF5D  F012         	goto	u2941
  8960   0024B6  EF5F  F012         	goto	u2940
  8961   0024BA                     u2941:
  8962   0024BA  EF39  F012         	goto	l924
  8963   0024BE                     u2940:
  8964   0024BE                     l922:
  8965   0024BE  BC11               	btfsc	___fladd@signs^0,6,c
  8966   0024C0  EF64  F012         	goto	u2951
  8967   0024C4  EF66  F012         	goto	u2950
  8968   0024C8                     u2951:
  8969   0024C8  EFA6  F012         	goto	l3281
  8970   0024CC                     u2950:
  8971   0024CC  5013               	movf	___fladd@bexp^0,w,c
  8972   0024CE  A4D8               	btfss	status,2,c
  8973   0024D0  EF6C  F012         	goto	u2961
  8974   0024D4  EF6E  F012         	goto	u2960
  8975   0024D8                     u2961:
  8976   0024D8  EF78  F012         	goto	l3263
  8977   0024DC                     u2960:
  8978   0024DC  0E00               	movlw	0
  8979   0024DE  6E05               	movwf	?___fladd^0,c
  8980   0024E0  0E00               	movlw	0
  8981   0024E2  6E06               	movwf	(?___fladd+1)^0,c
  8982   0024E4  0E00               	movlw	0
  8983   0024E6  6E07               	movwf	(?___fladd+2)^0,c
  8984   0024E8  0E00               	movlw	0
  8985   0024EA  6E08               	movwf	(?___fladd+3)^0,c
  8986   0024EC  EFC7  F013         	goto	l931
  8987   0024F0                     l3263:
  8988   0024F0  5009               	movf	___fladd@a^0,w,c
  8989   0024F2  2605               	addwf	___fladd@b^0,f,c
  8990   0024F4  500A               	movf	(___fladd@a+1)^0,w,c
  8991   0024F6  2206               	addwfc	(___fladd@b+1)^0,f,c
  8992   0024F8  500B               	movf	(___fladd@a+2)^0,w,c
  8993   0024FA  2207               	addwfc	(___fladd@b+2)^0,f,c
  8994   0024FC  500C               	movf	(___fladd@a+3)^0,w,c
  8995   0024FE  2208               	addwfc	(___fladd@b+3)^0,f,c
  8996   002500  A008               	btfss	(___fladd@b+3)^0,0,c
  8997   002502  EF85  F012         	goto	u2971
  8998   002506  EF87  F012         	goto	u2970
  8999   00250A                     u2971:
  9000   00250A  EF33  F013         	goto	l3317
  9001   00250E                     u2970:
  9002   00250E  A014               	btfss	___fladd@grs^0,0,c
  9003   002510  EF8C  F012         	goto	u2981
  9004   002514  EF8E  F012         	goto	u2980
  9005   002518                     u2981:
  9006   002518  EF94  F012         	goto	l3271
  9007   00251C                     u2980:
  9008   00251C  90D8               	bcf	status,0,c
  9009   00251E  3014               	rrcf	___fladd@grs^0,w,c
  9010   002520  0901               	iorlw	1
  9011   002522  6E14               	movwf	___fladd@grs^0,c
  9012   002524  EF96  F012         	goto	l3273
  9013   002528                     l3271:
  9014   002528  90D8               	bcf	status,0,c
  9015   00252A  3214               	rrcf	___fladd@grs^0,f,c
  9016   00252C                     l3273:
  9017   00252C  A005               	btfss	___fladd@b^0,0,c
  9018   00252E  EF9B  F012         	goto	u2991
  9019   002532  EF9D  F012         	goto	u2990
  9020   002536                     u2991:
  9021   002536  EF9E  F012         	goto	l3277
  9022   00253A                     u2990:
  9023   00253A  8E14               	bsf	___fladd@grs^0,7,c
  9024   00253C                     l3277:
  9025   00253C  3408               	rlcf	(___fladd@b+3)^0,w,c
  9026   00253E  3208               	rrcf	(___fladd@b+3)^0,f,c
  9027   002540  3207               	rrcf	(___fladd@b+2)^0,f,c
  9028   002542  3206               	rrcf	(___fladd@b+1)^0,f,c
  9029   002544  3205               	rrcf	___fladd@b^0,f,c
  9030   002546  2A13               	incf	___fladd@bexp^0,f,c
  9031   002548  EF33  F013         	goto	l3317
  9032   00254C                     l3281:
  9033   00254C  5009               	movf	___fladd@a^0,w,c
  9034   00254E  5C05               	subwf	___fladd@b^0,w,c
  9035   002550  500A               	movf	(___fladd@a+1)^0,w,c
  9036   002552  5806               	subwfb	(___fladd@b+1)^0,w,c
  9037   002554  500B               	movf	(___fladd@a+2)^0,w,c
  9038   002556  5807               	subwfb	(___fladd@b+2)^0,w,c
  9039   002558  5008               	movf	(___fladd@b+3)^0,w,c
  9040   00255A  0A80               	xorlw	128
  9041   00255C  6E0D               	movwf	??___fladd^0,c
  9042   00255E  500C               	movf	(___fladd@a+3)^0,w,c
  9043   002560  0A80               	xorlw	128
  9044   002562  580D               	subwfb	??___fladd^0,w,c
  9045   002564  B0D8               	btfsc	status,0,c
  9046   002566  EFB7  F012         	goto	u3001
  9047   00256A  EFB9  F012         	goto	u3000
  9048   00256E                     u3001:
  9049   00256E  EFE4  F012         	goto	l3291
  9050   002572                     u3000:
  9051   002572  5005               	movf	___fladd@b^0,w,c
  9052   002574  5C09               	subwf	___fladd@a^0,w,c
  9053   002576  6E0D               	movwf	??___fladd^0,c
  9054   002578  5006               	movf	(___fladd@b+1)^0,w,c
  9055   00257A  580A               	subwfb	(___fladd@a+1)^0,w,c
  9056   00257C  6E0E               	movwf	(??___fladd+1)^0,c
  9057   00257E  5007               	movf	(___fladd@b+2)^0,w,c
  9058   002580  580B               	subwfb	(___fladd@a+2)^0,w,c
  9059   002582  6E0F               	movwf	(??___fladd+2)^0,c
  9060   002584  5008               	movf	(___fladd@b+3)^0,w,c
  9061   002586  580C               	subwfb	(___fladd@a+3)^0,w,c
  9062   002588  6E10               	movwf	(??___fladd+3)^0,c
  9063   00258A  0EFF               	movlw	255
  9064   00258C  240D               	addwf	??___fladd^0,w,c
  9065   00258E  6E05               	movwf	___fladd@b^0,c
  9066   002590  0EFF               	movlw	255
  9067   002592  200E               	addwfc	(??___fladd+1)^0,w,c
  9068   002594  6E06               	movwf	(___fladd@b+1)^0,c
  9069   002596  0EFF               	movlw	255
  9070   002598  200F               	addwfc	(??___fladd+2)^0,w,c
  9071   00259A  6E07               	movwf	(___fladd@b+2)^0,c
  9072   00259C  0EFF               	movlw	255
  9073   00259E  2010               	addwfc	(??___fladd+3)^0,w,c
  9074   0025A0  6E08               	movwf	(___fladd@b+3)^0,c
  9075   0025A2  0E80               	movlw	128
  9076   0025A4  1A11               	xorwf	___fladd@signs^0,f,c
  9077   0025A6  6C14               	negf	___fladd@grs^0,c
  9078   0025A8  5014               	movf	___fladd@grs^0,w,c
  9079   0025AA  A4D8               	btfss	status,2,c
  9080   0025AC  EFDA  F012         	goto	u3011
  9081   0025B0  EFDC  F012         	goto	u3010
  9082   0025B4                     u3011:
  9083   0025B4  EFEC  F012         	goto	l939
  9084   0025B8                     u3010:
  9085   0025B8  0E01               	movlw	1
  9086   0025BA  2605               	addwf	___fladd@b^0,f,c
  9087   0025BC  0E00               	movlw	0
  9088   0025BE  2206               	addwfc	(___fladd@b+1)^0,f,c
  9089   0025C0  2207               	addwfc	(___fladd@b+2)^0,f,c
  9090   0025C2  2208               	addwfc	(___fladd@b+3)^0,f,c
  9091   0025C4  EFEC  F012         	goto	l939
  9092   0025C8                     l3291:
  9093   0025C8  5009               	movf	___fladd@a^0,w,c
  9094   0025CA  5E05               	subwf	___fladd@b^0,f,c
  9095   0025CC  500A               	movf	(___fladd@a+1)^0,w,c
  9096   0025CE  5A06               	subwfb	(___fladd@b+1)^0,f,c
  9097   0025D0  500B               	movf	(___fladd@a+2)^0,w,c
  9098   0025D2  5A07               	subwfb	(___fladd@b+2)^0,f,c
  9099   0025D4  500C               	movf	(___fladd@a+3)^0,w,c
  9100   0025D6  5A08               	subwfb	(___fladd@b+3)^0,f,c
  9101   0025D8                     l939:
  9102   0025D8  5005               	movf	___fladd@b^0,w,c
  9103   0025DA  1006               	iorwf	(___fladd@b+1)^0,w,c
  9104   0025DC  1007               	iorwf	(___fladd@b+2)^0,w,c
  9105   0025DE  1008               	iorwf	(___fladd@b+3)^0,w,c
  9106   0025E0  A4D8               	btfss	status,2,c
  9107   0025E2  EFF5  F012         	goto	u3021
  9108   0025E6  EFF7  F012         	goto	u3020
  9109   0025EA                     u3021:
  9110   0025EA  EF2C  F013         	goto	l3315
  9111   0025EE                     u3020:
  9112   0025EE  5014               	movf	___fladd@grs^0,w,c
  9113   0025F0  A4D8               	btfss	status,2,c
  9114   0025F2  EFFD  F012         	goto	u3031
  9115   0025F6  EFFF  F012         	goto	u3030
  9116   0025FA                     u3031:
  9117   0025FA  EF2C  F013         	goto	l3315
  9118   0025FE                     u3030:
  9119   0025FE  0E00               	movlw	0
  9120   002600  6E05               	movwf	?___fladd^0,c
  9121   002602  0E00               	movlw	0
  9122   002604  6E06               	movwf	(?___fladd+1)^0,c
  9123   002606  0E00               	movlw	0
  9124   002608  6E07               	movwf	(?___fladd+2)^0,c
  9125   00260A  0E00               	movlw	0
  9126   00260C  6E08               	movwf	(?___fladd+3)^0,c
  9127   00260E  EFC7  F013         	goto	l931
  9128   002612                     l3299:
  9129   002612  90D8               	bcf	status,0,c
  9130   002614  3605               	rlcf	___fladd@b^0,f,c
  9131   002616  3606               	rlcf	(___fladd@b+1)^0,f,c
  9132   002618  3607               	rlcf	(___fladd@b+2)^0,f,c
  9133   00261A  3608               	rlcf	(___fladd@b+3)^0,f,c
  9134   00261C  AE14               	btfss	___fladd@grs^0,7,c
  9135   00261E  EF13  F013         	goto	u3041
  9136   002622  EF15  F013         	goto	u3040
  9137   002626                     u3041:
  9138   002626  EF16  F013         	goto	l3305
  9139   00262A                     u3040:
  9140   00262A  8005               	bsf	___fladd@b^0,0,c
  9141   00262C                     l3305:
  9142   00262C  A014               	btfss	___fladd@grs^0,0,c
  9143   00262E  EF1B  F013         	goto	u3051
  9144   002632  EF1D  F013         	goto	u3050
  9145   002636                     u3051:
  9146   002636  EF21  F013         	goto	l3309
  9147   00263A                     u3050:
  9148   00263A  80D8               	bsf	status,0,c
  9149   00263C  3614               	rlcf	___fladd@grs^0,f,c
  9150   00263E  EF23  F013         	goto	l3311
  9151   002642                     l3309:
  9152   002642  90D8               	bcf	status,0,c
  9153   002644  3614               	rlcf	___fladd@grs^0,f,c
  9154   002646                     l3311:
  9155   002646  5013               	movf	___fladd@bexp^0,w,c
  9156   002648  B4D8               	btfsc	status,2,c
  9157   00264A  EF29  F013         	goto	u3061
  9158   00264E  EF2B  F013         	goto	u3060
  9159   002652                     u3061:
  9160   002652  EF2C  F013         	goto	l3315
  9161   002656                     u3060:
  9162   002656  0613               	decf	___fladd@bexp^0,f,c
  9163   002658                     l3315:
  9164   002658  AE07               	btfss	(___fladd@b+2)^0,7,c
  9165   00265A  EF31  F013         	goto	u3071
  9166   00265E  EF33  F013         	goto	u3070
  9167   002662                     u3071:
  9168   002662  EF09  F013         	goto	l3299
  9169   002666                     u3070:
  9170   002666                     l3317:
  9171   002666  0E00               	movlw	0
  9172   002668  6E12               	movwf	___fladd@aexp^0,c
  9173   00266A  AE14               	btfss	___fladd@grs^0,7,c
  9174   00266C  EF3A  F013         	goto	u3081
  9175   002670  EF3C  F013         	goto	u3080
  9176   002674                     u3081:
  9177   002674  EF54  F013         	goto	l948
  9178   002678                     u3080:
  9179   002678  C014  F00D         	movff	___fladd@grs,??___fladd
  9180   00267C  0E7F               	movlw	127
  9181   00267E  160D               	andwf	??___fladd^0,f,c
  9182   002680  B4D8               	btfsc	status,2,c
  9183   002682  EF45  F013         	goto	u3091
  9184   002686  EF47  F013         	goto	u3090
  9185   00268A                     u3091:
  9186   00268A  EF4B  F013         	goto	l949
  9187   00268E                     u3090:
  9188   00268E                     l3323:
  9189   00268E  0E01               	movlw	1
  9190   002690  6E12               	movwf	___fladd@aexp^0,c
  9191   002692  EF54  F013         	goto	l948
  9192   002696                     l949:
  9193   002696  A005               	btfss	___fladd@b^0,0,c
  9194   002698  EF50  F013         	goto	u3101
  9195   00269C  EF52  F013         	goto	u3100
  9196   0026A0                     u3101:
  9197   0026A0  EF54  F013         	goto	l948
  9198   0026A4                     u3100:
  9199   0026A4  EF47  F013         	goto	l3323
  9200   0026A8                     l948:
  9201   0026A8  5012               	movf	___fladd@aexp^0,w,c
  9202   0026AA  B4D8               	btfsc	status,2,c
  9203   0026AC  EF5A  F013         	goto	u3111
  9204   0026B0  EF5C  F013         	goto	u3110
  9205   0026B4                     u3111:
  9206   0026B4  EF87  F013         	goto	l3335
  9207   0026B8                     u3110:
  9208   0026B8  0E01               	movlw	1
  9209   0026BA  2605               	addwf	___fladd@b^0,f,c
  9210   0026BC  0E00               	movlw	0
  9211   0026BE  2206               	addwfc	(___fladd@b+1)^0,f,c
  9212   0026C0  2207               	addwfc	(___fladd@b+2)^0,f,c
  9213   0026C2  2208               	addwfc	(___fladd@b+3)^0,f,c
  9214   0026C4  A008               	btfss	(___fladd@b+3)^0,0,c
  9215   0026C6  EF67  F013         	goto	u3121
  9216   0026CA  EF69  F013         	goto	u3120
  9217   0026CE                     u3121:
  9218   0026CE  EF87  F013         	goto	l3335
  9219   0026D2                     u3120:
  9220   0026D2  C005  F00D         	movff	___fladd@b,??___fladd
  9221   0026D6  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  9222   0026DA  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  9223   0026DE  C008  F010         	movff	___fladd@b+3,??___fladd+3
  9224   0026E2  3410               	rlcf	(??___fladd+3)^0,w,c
  9225   0026E4  3210               	rrcf	(??___fladd+3)^0,f,c
  9226   0026E6  320F               	rrcf	(??___fladd+2)^0,f,c
  9227   0026E8  320E               	rrcf	(??___fladd+1)^0,f,c
  9228   0026EA  320D               	rrcf	??___fladd^0,f,c
  9229   0026EC  C00D  F005         	movff	??___fladd,___fladd@b
  9230   0026F0  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  9231   0026F4  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  9232   0026F8  C010  F008         	movff	??___fladd+3,___fladd@b+3
  9233   0026FC  2813               	incf	___fladd@bexp^0,w,c
  9234   0026FE  B4D8               	btfsc	status,2,c
  9235   002700  EF84  F013         	goto	u3131
  9236   002704  EF86  F013         	goto	u3130
  9237   002708                     u3131:
  9238   002708  EF87  F013         	goto	l3335
  9239   00270C                     u3130:
  9240   00270C  2A13               	incf	___fladd@bexp^0,f,c
  9241   00270E                     l3335:
  9242   00270E  2813               	incf	___fladd@bexp^0,w,c
  9243   002710  B4D8               	btfsc	status,2,c
  9244   002712  EF8D  F013         	goto	u3141
  9245   002716  EF8F  F013         	goto	u3140
  9246   00271A                     u3141:
  9247   00271A  EF97  F013         	goto	l3339
  9248   00271E                     u3140:
  9249   00271E  5013               	movf	___fladd@bexp^0,w,c
  9250   002720  A4D8               	btfss	status,2,c
  9251   002722  EF95  F013         	goto	u3151
  9252   002726  EF97  F013         	goto	u3150
  9253   00272A                     u3151:
  9254   00272A  EFA9  F013         	goto	l3343
  9255   00272E                     u3150:
  9256   00272E                     l3339:
  9257   00272E  0E00               	movlw	0
  9258   002730  6E05               	movwf	___fladd@b^0,c
  9259   002732  0E00               	movlw	0
  9260   002734  6E06               	movwf	(___fladd@b+1)^0,c
  9261   002736  0E00               	movlw	0
  9262   002738  6E07               	movwf	(___fladd@b+2)^0,c
  9263   00273A  0E00               	movlw	0
  9264   00273C  6E08               	movwf	(___fladd@b+3)^0,c
  9265   00273E  5013               	movf	___fladd@bexp^0,w,c
  9266   002740  A4D8               	btfss	status,2,c
  9267   002742  EFA5  F013         	goto	u3161
  9268   002746  EFA7  F013         	goto	u3160
  9269   00274A                     u3161:
  9270   00274A  EFA9  F013         	goto	l3343
  9271   00274E                     u3160:
  9272   00274E  0E00               	movlw	0
  9273   002750  6E11               	movwf	___fladd@signs^0,c
  9274   002752                     l3343:
  9275   002752  A013               	btfss	___fladd@bexp^0,0,c
  9276   002754  EFAE  F013         	goto	u3171
  9277   002758  EFB0  F013         	goto	u3170
  9278   00275C                     u3171:
  9279   00275C  EFB3  F013         	goto	l3347
  9280   002760                     u3170:
  9281   002760  8E07               	bsf	(___fladd@b+2)^0,7,c
  9282   002762  EFB4  F013         	goto	l3349
  9283   002766                     l3347:
  9284   002766  9E07               	bcf	(___fladd@b+2)^0,7,c
  9285   002768                     l3349:
  9286   002768  90D8               	bcf	status,0,c
  9287   00276A  3013               	rrcf	___fladd@bexp^0,w,c
  9288   00276C  6E08               	movwf	(___fladd@b+3)^0,c
  9289   00276E  AE11               	btfss	___fladd@signs^0,7,c
  9290   002770  EFBC  F013         	goto	u3181
  9291   002774  EFBE  F013         	goto	u3180
  9292   002778                     u3181:
  9293   002778  EFBF  F013         	goto	l3355
  9294   00277C                     u3180:
  9295   00277C  8E08               	bsf	(___fladd@b+3)^0,7,c
  9296   00277E                     l3355:
  9297   00277E  C005  F005         	movff	___fladd@b,?___fladd
  9298   002782  C006  F006         	movff	___fladd@b+1,?___fladd+1
  9299   002786  C007  F007         	movff	___fladd@b+2,?___fladd+2
  9300   00278A  C008  F008         	movff	___fladd@b+3,?___fladd+3
  9301   00278E                     l931:
  9302   00278E  0012               	return		;funcret
  9303   002790                     __end_of___fladd:
  9304                           	callstack 0
  9305                           
  9306 ;; *************** function ___flmul *****************
  9307 ;; Defined at:
  9308 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  9309 ;; Parameters:    Size  Location     Type
  9310 ;;  b               4   20[COMRAM] unsigned char 
  9311 ;;  a               4   24[COMRAM] unsigned char 
  9312 ;; Auto vars:     Size  Location     Type
  9313 ;;  prod            4   39[COMRAM] struct .
  9314 ;;  grs             4   33[COMRAM] unsigned long 
  9315 ;;  temp            2   43[COMRAM] struct .
  9316 ;;  bexp            1   38[COMRAM] unsigned char 
  9317 ;;  aexp            1   37[COMRAM] unsigned char 
  9318 ;;  sign            1   32[COMRAM] unsigned char 
  9319 ;; Return value:  Size  Location     Type
  9320 ;;                  4   20[COMRAM] unsigned char 
  9321 ;; Registers used:
  9322 ;;		wreg, status,2, status,0, prodl, prodh
  9323 ;; Tracked objects:
  9324 ;;		On entry : 0/0
  9325 ;;		On exit  : 0/0
  9326 ;;		Unchanged: 0/0
  9327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9328 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9329 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9330 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9331 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9332 ;;Total ram usage:       25 bytes
  9333 ;; Hardware stack levels used: 1
  9334 ;; Hardware stack levels required when called: 2
  9335 ;; This function calls:
  9336 ;;		Nothing
  9337 ;; This function is called by:
  9338 ;;		_colorDetect
  9339 ;;		_efgtoa
  9340 ;; This function uses a non-reentrant model
  9341 ;;
  9342                           
  9343                           	psect	text39
  9344   002790                     __ptext39:
  9345                           	callstack 0
  9346   002790                     ___flmul:
  9347                           	callstack 24
  9348   002790  5018               	movf	(___flmul@b+3)^0,w,c
  9349   002792  0B80               	andlw	128
  9350   002794  6E21               	movwf	___flmul@sign^0,c
  9351   002796  5018               	movf	(___flmul@b+3)^0,w,c
  9352   002798  2418               	addwf	(___flmul@b+3)^0,w,c
  9353   00279A  6E27               	movwf	___flmul@bexp^0,c
  9354   00279C  AE17               	btfss	(___flmul@b+2)^0,7,c
  9355   00279E  EFD3  F013         	goto	u3581
  9356   0027A2  EFD5  F013         	goto	u3580
  9357   0027A6                     u3581:
  9358   0027A6  EFD6  F013         	goto	l3595
  9359   0027AA                     u3580:
  9360   0027AA  8027               	bsf	___flmul@bexp^0,0,c
  9361   0027AC                     l3595:
  9362   0027AC  5027               	movf	___flmul@bexp^0,w,c
  9363   0027AE  B4D8               	btfsc	status,2,c
  9364   0027B0  EFDC  F013         	goto	u3591
  9365   0027B4  EFDE  F013         	goto	u3590
  9366   0027B8                     u3591:
  9367   0027B8  EFF1  F013         	goto	l3603
  9368   0027BC                     u3590:
  9369   0027BC  2827               	incf	___flmul@bexp^0,w,c
  9370   0027BE  A4D8               	btfss	status,2,c
  9371   0027C0  EFE4  F013         	goto	u3601
  9372   0027C4  EFE6  F013         	goto	u3600
  9373   0027C8                     u3601:
  9374   0027C8  EFEE  F013         	goto	l3601
  9375   0027CC                     u3600:
  9376   0027CC  0E00               	movlw	0
  9377   0027CE  6E15               	movwf	___flmul@b^0,c
  9378   0027D0  0E00               	movlw	0
  9379   0027D2  6E16               	movwf	(___flmul@b+1)^0,c
  9380   0027D4  0E00               	movlw	0
  9381   0027D6  6E17               	movwf	(___flmul@b+2)^0,c
  9382   0027D8  0E00               	movlw	0
  9383   0027DA  6E18               	movwf	(___flmul@b+3)^0,c
  9384   0027DC                     l3601:
  9385   0027DC  8E17               	bsf	(___flmul@b+2)^0,7,c
  9386   0027DE  EFF9  F013         	goto	l3605
  9387   0027E2                     l3603:
  9388   0027E2  0E00               	movlw	0
  9389   0027E4  6E15               	movwf	___flmul@b^0,c
  9390   0027E6  0E00               	movlw	0
  9391   0027E8  6E16               	movwf	(___flmul@b+1)^0,c
  9392   0027EA  0E00               	movlw	0
  9393   0027EC  6E17               	movwf	(___flmul@b+2)^0,c
  9394   0027EE  0E00               	movlw	0
  9395   0027F0  6E18               	movwf	(___flmul@b+3)^0,c
  9396   0027F2                     l3605:
  9397   0027F2  501C               	movf	(___flmul@a+3)^0,w,c
  9398   0027F4  0B80               	andlw	128
  9399   0027F6  1A21               	xorwf	___flmul@sign^0,f,c
  9400   0027F8  501C               	movf	(___flmul@a+3)^0,w,c
  9401   0027FA  241C               	addwf	(___flmul@a+3)^0,w,c
  9402   0027FC  6E26               	movwf	___flmul@aexp^0,c
  9403   0027FE  AE1B               	btfss	(___flmul@a+2)^0,7,c
  9404   002800  EF04  F014         	goto	u3611
  9405   002804  EF06  F014         	goto	u3610
  9406   002808                     u3611:
  9407   002808  EF07  F014         	goto	l3613
  9408   00280C                     u3610:
  9409   00280C  8026               	bsf	___flmul@aexp^0,0,c
  9410   00280E                     l3613:
  9411   00280E  5026               	movf	___flmul@aexp^0,w,c
  9412   002810  B4D8               	btfsc	status,2,c
  9413   002812  EF0D  F014         	goto	u3621
  9414   002816  EF0F  F014         	goto	u3620
  9415   00281A                     u3621:
  9416   00281A  EF22  F014         	goto	l3621
  9417   00281E                     u3620:
  9418   00281E  2826               	incf	___flmul@aexp^0,w,c
  9419   002820  A4D8               	btfss	status,2,c
  9420   002822  EF15  F014         	goto	u3631
  9421   002826  EF17  F014         	goto	u3630
  9422   00282A                     u3631:
  9423   00282A  EF1F  F014         	goto	l3619
  9424   00282E                     u3630:
  9425   00282E  0E00               	movlw	0
  9426   002830  6E19               	movwf	___flmul@a^0,c
  9427   002832  0E00               	movlw	0
  9428   002834  6E1A               	movwf	(___flmul@a+1)^0,c
  9429   002836  0E00               	movlw	0
  9430   002838  6E1B               	movwf	(___flmul@a+2)^0,c
  9431   00283A  0E00               	movlw	0
  9432   00283C  6E1C               	movwf	(___flmul@a+3)^0,c
  9433   00283E                     l3619:
  9434   00283E  8E1B               	bsf	(___flmul@a+2)^0,7,c
  9435   002840  EF2A  F014         	goto	l1008
  9436   002844                     l3621:
  9437   002844  0E00               	movlw	0
  9438   002846  6E19               	movwf	___flmul@a^0,c
  9439   002848  0E00               	movlw	0
  9440   00284A  6E1A               	movwf	(___flmul@a+1)^0,c
  9441   00284C  0E00               	movlw	0
  9442   00284E  6E1B               	movwf	(___flmul@a+2)^0,c
  9443   002850  0E00               	movlw	0
  9444   002852  6E1C               	movwf	(___flmul@a+3)^0,c
  9445   002854                     l1008:
  9446   002854  5026               	movf	___flmul@aexp^0,w,c
  9447   002856  B4D8               	btfsc	status,2,c
  9448   002858  EF30  F014         	goto	u3641
  9449   00285C  EF32  F014         	goto	u3640
  9450   002860                     u3641:
  9451   002860  EF3A  F014         	goto	l3625
  9452   002864                     u3640:
  9453   002864  5027               	movf	___flmul@bexp^0,w,c
  9454   002866  A4D8               	btfss	status,2,c
  9455   002868  EF38  F014         	goto	u3651
  9456   00286C  EF3A  F014         	goto	u3650
  9457   002870                     u3651:
  9458   002870  EF44  F014         	goto	l3629
  9459   002874                     u3650:
  9460   002874                     l3625:
  9461   002874  0E00               	movlw	0
  9462   002876  6E15               	movwf	?___flmul^0,c
  9463   002878  0E00               	movlw	0
  9464   00287A  6E16               	movwf	(?___flmul+1)^0,c
  9465   00287C  0E00               	movlw	0
  9466   00287E  6E17               	movwf	(?___flmul+2)^0,c
  9467   002880  0E00               	movlw	0
  9468   002882  6E18               	movwf	(?___flmul+3)^0,c
  9469   002884  EFDC  F015         	goto	l1012
  9470   002888                     l3629:
  9471   002888  501B               	movf	(___flmul@a+2)^0,w,c
  9472   00288A  0215               	mulwf	___flmul@b^0,c
  9473   00288C  CFF3 F02C          	movff	prodl,___flmul@temp
  9474   002890  CFF4 F02D          	movff	prodh,___flmul@temp+1
  9475   002894  502C               	movf	___flmul@temp^0,w,c
  9476   002896  6E22               	movwf	___flmul@grs^0,c
  9477   002898  6A23               	clrf	(___flmul@grs+1)^0,c
  9478   00289A  6A24               	clrf	(___flmul@grs+2)^0,c
  9479   00289C  6A25               	clrf	(___flmul@grs+3)^0,c
  9480   00289E  502D               	movf	(___flmul@temp+1)^0,w,c
  9481   0028A0  6E28               	movwf	___flmul@prod^0,c
  9482   0028A2  6A29               	clrf	(___flmul@prod+1)^0,c
  9483   0028A4  6A2A               	clrf	(___flmul@prod+2)^0,c
  9484   0028A6  6A2B               	clrf	(___flmul@prod+3)^0,c
  9485   0028A8  501A               	movf	(___flmul@a+1)^0,w,c
  9486   0028AA  0216               	mulwf	(___flmul@b+1)^0,c
  9487   0028AC  CFF3 F02C          	movff	prodl,___flmul@temp
  9488   0028B0  CFF4 F02D          	movff	prodh,___flmul@temp+1
  9489   0028B4  502C               	movf	___flmul@temp^0,w,c
  9490   0028B6  2622               	addwf	___flmul@grs^0,f,c
  9491   0028B8  0E00               	movlw	0
  9492   0028BA  2223               	addwfc	(___flmul@grs+1)^0,f,c
  9493   0028BC  2224               	addwfc	(___flmul@grs+2)^0,f,c
  9494   0028BE  2225               	addwfc	(___flmul@grs+3)^0,f,c
  9495   0028C0  502D               	movf	(___flmul@temp+1)^0,w,c
  9496   0028C2  2628               	addwf	___flmul@prod^0,f,c
  9497   0028C4  0E00               	movlw	0
  9498   0028C6  2229               	addwfc	(___flmul@prod+1)^0,f,c
  9499   0028C8  222A               	addwfc	(___flmul@prod+2)^0,f,c
  9500   0028CA  222B               	addwfc	(___flmul@prod+3)^0,f,c
  9501   0028CC  5019               	movf	___flmul@a^0,w,c
  9502   0028CE  0217               	mulwf	(___flmul@b+2)^0,c
  9503   0028D0  CFF3 F02C          	movff	prodl,___flmul@temp
  9504   0028D4  CFF4 F02D          	movff	prodh,___flmul@temp+1
  9505   0028D8  502C               	movf	___flmul@temp^0,w,c
  9506   0028DA  2622               	addwf	___flmul@grs^0,f,c
  9507   0028DC  0E00               	movlw	0
  9508   0028DE  2223               	addwfc	(___flmul@grs+1)^0,f,c
  9509   0028E0  2224               	addwfc	(___flmul@grs+2)^0,f,c
  9510   0028E2  2225               	addwfc	(___flmul@grs+3)^0,f,c
  9511   0028E4  502D               	movf	(___flmul@temp+1)^0,w,c
  9512   0028E6  2628               	addwf	___flmul@prod^0,f,c
  9513   0028E8  0E00               	movlw	0
  9514   0028EA  2229               	addwfc	(___flmul@prod+1)^0,f,c
  9515   0028EC  222A               	addwfc	(___flmul@prod+2)^0,f,c
  9516   0028EE  222B               	addwfc	(___flmul@prod+3)^0,f,c
  9517   0028F0  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  9518   0028F4  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  9519   0028F8  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  9520   0028FC  6A22               	clrf	___flmul@grs^0,c
  9521   0028FE  5019               	movf	___flmul@a^0,w,c
  9522   002900  0216               	mulwf	(___flmul@b+1)^0,c
  9523   002902  CFF3 F02C          	movff	prodl,___flmul@temp
  9524   002906  CFF4 F02D          	movff	prodh,___flmul@temp+1
  9525   00290A  502C               	movf	___flmul@temp^0,w,c
  9526   00290C  2622               	addwf	___flmul@grs^0,f,c
  9527   00290E  502D               	movf	(___flmul@temp+1)^0,w,c
  9528   002910  2223               	addwfc	(___flmul@grs+1)^0,f,c
  9529   002912  0E00               	movlw	0
  9530   002914  2224               	addwfc	(___flmul@grs+2)^0,f,c
  9531   002916  0E00               	movlw	0
  9532   002918  2225               	addwfc	(___flmul@grs+3)^0,f,c
  9533   00291A  501A               	movf	(___flmul@a+1)^0,w,c
  9534   00291C  0215               	mulwf	___flmul@b^0,c
  9535   00291E  CFF3 F02C          	movff	prodl,___flmul@temp
  9536   002922  CFF4 F02D          	movff	prodh,___flmul@temp+1
  9537   002926  502C               	movf	___flmul@temp^0,w,c
  9538   002928  2622               	addwf	___flmul@grs^0,f,c
  9539   00292A  502D               	movf	(___flmul@temp+1)^0,w,c
  9540   00292C  2223               	addwfc	(___flmul@grs+1)^0,f,c
  9541   00292E  0E00               	movlw	0
  9542   002930  2224               	addwfc	(___flmul@grs+2)^0,f,c
  9543   002932  0E00               	movlw	0
  9544   002934  2225               	addwfc	(___flmul@grs+3)^0,f,c
  9545   002936  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  9546   00293A  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  9547   00293E  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  9548   002942  6A22               	clrf	___flmul@grs^0,c
  9549   002944  5019               	movf	___flmul@a^0,w,c
  9550   002946  0215               	mulwf	___flmul@b^0,c
  9551   002948  CFF3 F02C          	movff	prodl,___flmul@temp
  9552   00294C  CFF4 F02D          	movff	prodh,___flmul@temp+1
  9553   002950  502C               	movf	___flmul@temp^0,w,c
  9554   002952  2622               	addwf	___flmul@grs^0,f,c
  9555   002954  502D               	movf	(___flmul@temp+1)^0,w,c
  9556   002956  2223               	addwfc	(___flmul@grs+1)^0,f,c
  9557   002958  0E00               	movlw	0
  9558   00295A  2224               	addwfc	(___flmul@grs+2)^0,f,c
  9559   00295C  0E00               	movlw	0
  9560   00295E  2225               	addwfc	(___flmul@grs+3)^0,f,c
  9561   002960  501B               	movf	(___flmul@a+2)^0,w,c
  9562   002962  0216               	mulwf	(___flmul@b+1)^0,c
  9563   002964  CFF3 F02C          	movff	prodl,___flmul@temp
  9564   002968  CFF4 F02D          	movff	prodh,___flmul@temp+1
  9565   00296C  502C               	movf	___flmul@temp^0,w,c
  9566   00296E  2628               	addwf	___flmul@prod^0,f,c
  9567   002970  502D               	movf	(___flmul@temp+1)^0,w,c
  9568   002972  2229               	addwfc	(___flmul@prod+1)^0,f,c
  9569   002974  0E00               	movlw	0
  9570   002976  222A               	addwfc	(___flmul@prod+2)^0,f,c
  9571   002978  0E00               	movlw	0
  9572   00297A  222B               	addwfc	(___flmul@prod+3)^0,f,c
  9573   00297C  501A               	movf	(___flmul@a+1)^0,w,c
  9574   00297E  0217               	mulwf	(___flmul@b+2)^0,c
  9575   002980  CFF3 F02C          	movff	prodl,___flmul@temp
  9576   002984  CFF4 F02D          	movff	prodh,___flmul@temp+1
  9577   002988  502C               	movf	___flmul@temp^0,w,c
  9578   00298A  2628               	addwf	___flmul@prod^0,f,c
  9579   00298C  502D               	movf	(___flmul@temp+1)^0,w,c
  9580   00298E  2229               	addwfc	(___flmul@prod+1)^0,f,c
  9581   002990  0E00               	movlw	0
  9582   002992  222A               	addwfc	(___flmul@prod+2)^0,f,c
  9583   002994  0E00               	movlw	0
  9584   002996  222B               	addwfc	(___flmul@prod+3)^0,f,c
  9585   002998  501B               	movf	(___flmul@a+2)^0,w,c
  9586   00299A  0217               	mulwf	(___flmul@b+2)^0,c
  9587   00299C  CFF3 F02C          	movff	prodl,___flmul@temp
  9588   0029A0  CFF4 F02D          	movff	prodh,___flmul@temp+1
  9589   0029A4  502C               	movf	___flmul@temp^0,w,c
  9590   0029A6  6E1D               	movwf	??___flmul^0,c
  9591   0029A8  502D               	movf	(___flmul@temp+1)^0,w,c
  9592   0029AA  6E1E               	movwf	(??___flmul+1)^0,c
  9593   0029AC  6A1F               	clrf	(??___flmul+2)^0,c
  9594   0029AE  6A20               	clrf	(??___flmul+3)^0,c
  9595   0029B0  C01F  F020         	movff	??___flmul+2,??___flmul+3
  9596   0029B4  C01E  F01F         	movff	??___flmul+1,??___flmul+2
  9597   0029B8  C01D  F01E         	movff	??___flmul,??___flmul+1
  9598   0029BC  6A1D               	clrf	??___flmul^0,c
  9599   0029BE  501D               	movf	??___flmul^0,w,c
  9600   0029C0  2628               	addwf	___flmul@prod^0,f,c
  9601   0029C2  501E               	movf	(??___flmul+1)^0,w,c
  9602   0029C4  2229               	addwfc	(___flmul@prod+1)^0,f,c
  9603   0029C6  501F               	movf	(??___flmul+2)^0,w,c
  9604   0029C8  222A               	addwfc	(___flmul@prod+2)^0,f,c
  9605   0029CA  5020               	movf	(??___flmul+3)^0,w,c
  9606   0029CC  222B               	addwfc	(___flmul@prod+3)^0,f,c
  9607   0029CE  C022  F01D         	movff	___flmul@grs,??___flmul
  9608   0029D2  C023  F01E         	movff	___flmul@grs+1,??___flmul+1
  9609   0029D6  C024  F01F         	movff	___flmul@grs+2,??___flmul+2
  9610   0029DA  C025  F020         	movff	___flmul@grs+3,??___flmul+3
  9611   0029DE  0E19               	movlw	25
  9612   0029E0  EFF7  F014         	goto	u3660
  9613   0029E4                     u3665:
  9614   0029E4  90D8               	bcf	status,0,c
  9615   0029E6  3220               	rrcf	(??___flmul+3)^0,f,c
  9616   0029E8  321F               	rrcf	(??___flmul+2)^0,f,c
  9617   0029EA  321E               	rrcf	(??___flmul+1)^0,f,c
  9618   0029EC  321D               	rrcf	??___flmul^0,f,c
  9619   0029EE                     u3660:
  9620   0029EE  2EE8               	decfsz	wreg,f,c
  9621   0029F0  EFF2  F014         	goto	u3665
  9622   0029F4  501D               	movf	??___flmul^0,w,c
  9623   0029F6  2628               	addwf	___flmul@prod^0,f,c
  9624   0029F8  501E               	movf	(??___flmul+1)^0,w,c
  9625   0029FA  2229               	addwfc	(___flmul@prod+1)^0,f,c
  9626   0029FC  501F               	movf	(??___flmul+2)^0,w,c
  9627   0029FE  222A               	addwfc	(___flmul@prod+2)^0,f,c
  9628   002A00  5020               	movf	(??___flmul+3)^0,w,c
  9629   002A02  222B               	addwfc	(___flmul@prod+3)^0,f,c
  9630   002A04  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  9631   002A08  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  9632   002A0C  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  9633   002A10  6A22               	clrf	___flmul@grs^0,c
  9634   002A12  5026               	movf	___flmul@aexp^0,w,c
  9635   002A14  C027  F01D         	movff	___flmul@bexp,??___flmul
  9636   002A18  6A1E               	clrf	(??___flmul+1)^0,c
  9637   002A1A  261D               	addwf	??___flmul^0,f,c
  9638   002A1C  0E00               	movlw	0
  9639   002A1E  221E               	addwfc	(??___flmul+1)^0,f,c
  9640   002A20  0E82               	movlw	130
  9641   002A22  241D               	addwf	??___flmul^0,w,c
  9642   002A24  6E2C               	movwf	___flmul@temp^0,c
  9643   002A26  0EFF               	movlw	255
  9644   002A28  201E               	addwfc	(??___flmul+1)^0,w,c
  9645   002A2A  6E2D               	movwf	(___flmul@temp+1)^0,c
  9646   002A2C  EF2D  F015         	goto	l3677
  9647   002A30                     l3671:
  9648   002A30  90D8               	bcf	status,0,c
  9649   002A32  3628               	rlcf	___flmul@prod^0,f,c
  9650   002A34  3629               	rlcf	(___flmul@prod+1)^0,f,c
  9651   002A36  362A               	rlcf	(___flmul@prod+2)^0,f,c
  9652   002A38  362B               	rlcf	(___flmul@prod+3)^0,f,c
  9653   002A3A  AE25               	btfss	(___flmul@grs+3)^0,7,c
  9654   002A3C  EF22  F015         	goto	u3671
  9655   002A40  EF24  F015         	goto	u3670
  9656   002A44                     u3671:
  9657   002A44  EF25  F015         	goto	l1015
  9658   002A48                     u3670:
  9659   002A48  8028               	bsf	___flmul@prod^0,0,c
  9660   002A4A                     l1015:
  9661   002A4A  90D8               	bcf	status,0,c
  9662   002A4C  3622               	rlcf	___flmul@grs^0,f,c
  9663   002A4E  3623               	rlcf	(___flmul@grs+1)^0,f,c
  9664   002A50  3624               	rlcf	(___flmul@grs+2)^0,f,c
  9665   002A52  3625               	rlcf	(___flmul@grs+3)^0,f,c
  9666   002A54  062C               	decf	___flmul@temp^0,f,c
  9667   002A56  A0D8               	btfss	status,0,c
  9668   002A58  062D               	decf	(___flmul@temp+1)^0,f,c
  9669   002A5A                     l3677:
  9670   002A5A  AE2A               	btfss	(___flmul@prod+2)^0,7,c
  9671   002A5C  EF32  F015         	goto	u3681
  9672   002A60  EF34  F015         	goto	u3680
  9673   002A64                     u3681:
  9674   002A64  EF18  F015         	goto	l3671
  9675   002A68                     u3680:
  9676   002A68  0E00               	movlw	0
  9677   002A6A  6E26               	movwf	___flmul@aexp^0,c
  9678   002A6C  AE25               	btfss	(___flmul@grs+3)^0,7,c
  9679   002A6E  EF3B  F015         	goto	u3691
  9680   002A72  EF3D  F015         	goto	u3690
  9681   002A76                     u3691:
  9682   002A76  EF61  F015         	goto	l1017
  9683   002A7A                     u3690:
  9684   002A7A  0EFF               	movlw	255
  9685   002A7C  1422               	andwf	___flmul@grs^0,w,c
  9686   002A7E  6E1D               	movwf	??___flmul^0,c
  9687   002A80  0EFF               	movlw	255
  9688   002A82  1423               	andwf	(___flmul@grs+1)^0,w,c
  9689   002A84  6E1E               	movwf	(??___flmul+1)^0,c
  9690   002A86  0EFF               	movlw	255
  9691   002A88  1424               	andwf	(___flmul@grs+2)^0,w,c
  9692   002A8A  6E1F               	movwf	(??___flmul+2)^0,c
  9693   002A8C  0E7F               	movlw	127
  9694   002A8E  1425               	andwf	(___flmul@grs+3)^0,w,c
  9695   002A90  6E20               	movwf	(??___flmul+3)^0,c
  9696   002A92  501D               	movf	??___flmul^0,w,c
  9697   002A94  101E               	iorwf	(??___flmul+1)^0,w,c
  9698   002A96  101F               	iorwf	(??___flmul+2)^0,w,c
  9699   002A98  1020               	iorwf	(??___flmul+3)^0,w,c
  9700   002A9A  B4D8               	btfsc	status,2,c
  9701   002A9C  EF52  F015         	goto	u3701
  9702   002AA0  EF54  F015         	goto	u3700
  9703   002AA4                     u3701:
  9704   002AA4  EF58  F015         	goto	l1018
  9705   002AA8                     u3700:
  9706   002AA8                     l3685:
  9707   002AA8  0E01               	movlw	1
  9708   002AAA  6E26               	movwf	___flmul@aexp^0,c
  9709   002AAC  EF61  F015         	goto	l1017
  9710   002AB0                     l1018:
  9711   002AB0  A028               	btfss	___flmul@prod^0,0,c
  9712   002AB2  EF5D  F015         	goto	u3711
  9713   002AB6  EF5F  F015         	goto	u3710
  9714   002ABA                     u3711:
  9715   002ABA  EF61  F015         	goto	l1017
  9716   002ABE                     u3710:
  9717   002ABE  EF54  F015         	goto	l3685
  9718   002AC2                     l1017:
  9719   002AC2  5026               	movf	___flmul@aexp^0,w,c
  9720   002AC4  B4D8               	btfsc	status,2,c
  9721   002AC6  EF67  F015         	goto	u3721
  9722   002ACA  EF69  F015         	goto	u3720
  9723   002ACE                     u3721:
  9724   002ACE  EF8D  F015         	goto	l3697
  9725   002AD2                     u3720:
  9726   002AD2  0E01               	movlw	1
  9727   002AD4  2628               	addwf	___flmul@prod^0,f,c
  9728   002AD6  0E00               	movlw	0
  9729   002AD8  2229               	addwfc	(___flmul@prod+1)^0,f,c
  9730   002ADA  222A               	addwfc	(___flmul@prod+2)^0,f,c
  9731   002ADC  222B               	addwfc	(___flmul@prod+3)^0,f,c
  9732   002ADE  A02B               	btfss	(___flmul@prod+3)^0,0,c
  9733   002AE0  EF74  F015         	goto	u3731
  9734   002AE4  EF76  F015         	goto	u3730
  9735   002AE8                     u3731:
  9736   002AE8  EF8D  F015         	goto	l3697
  9737   002AEC                     u3730:
  9738   002AEC  C028  F01D         	movff	___flmul@prod,??___flmul
  9739   002AF0  C029  F01E         	movff	___flmul@prod+1,??___flmul+1
  9740   002AF4  C02A  F01F         	movff	___flmul@prod+2,??___flmul+2
  9741   002AF8  C02B  F020         	movff	___flmul@prod+3,??___flmul+3
  9742   002AFC  3420               	rlcf	(??___flmul+3)^0,w,c
  9743   002AFE  3220               	rrcf	(??___flmul+3)^0,f,c
  9744   002B00  321F               	rrcf	(??___flmul+2)^0,f,c
  9745   002B02  321E               	rrcf	(??___flmul+1)^0,f,c
  9746   002B04  321D               	rrcf	??___flmul^0,f,c
  9747   002B06  C01D  F028         	movff	??___flmul,___flmul@prod
  9748   002B0A  C01E  F029         	movff	??___flmul+1,___flmul@prod+1
  9749   002B0E  C01F  F02A         	movff	??___flmul+2,___flmul@prod+2
  9750   002B12  C020  F02B         	movff	??___flmul+3,___flmul@prod+3
  9751   002B16  4A2C               	infsnz	___flmul@temp^0,f,c
  9752   002B18  2A2D               	incf	(___flmul@temp+1)^0,f,c
  9753   002B1A                     l3697:
  9754   002B1A  BE2D               	btfsc	(___flmul@temp+1)^0,7,c
  9755   002B1C  EF98  F015         	goto	u3741
  9756   002B20  502D               	movf	(___flmul@temp+1)^0,w,c
  9757   002B22  E108               	bnz	u3740
  9758   002B24  282C               	incf	___flmul@temp^0,w,c
  9759   002B26  A0D8               	btfss	status,0,c
  9760   002B28  EF98  F015         	goto	u3741
  9761   002B2C  EF9A  F015         	goto	u3740
  9762   002B30                     u3741:
  9763   002B30  EFA4  F015         	goto	l3701
  9764   002B34                     u3740:
  9765   002B34  0E00               	movlw	0
  9766   002B36  6E28               	movwf	___flmul@prod^0,c
  9767   002B38  0E00               	movlw	0
  9768   002B3A  6E29               	movwf	(___flmul@prod+1)^0,c
  9769   002B3C  0E80               	movlw	128
  9770   002B3E  6E2A               	movwf	(___flmul@prod+2)^0,c
  9771   002B40  0E7F               	movlw	127
  9772   002B42  6E2B               	movwf	(___flmul@prod+3)^0,c
  9773   002B44  EFD2  F015         	goto	l3713
  9774   002B48                     l3701:
  9775   002B48  BE2D               	btfsc	(___flmul@temp+1)^0,7,c
  9776   002B4A  EFB1  F015         	goto	u3750
  9777   002B4E  502D               	movf	(___flmul@temp+1)^0,w,c
  9778   002B50  E106               	bnz	u3751
  9779   002B52  042C               	decf	___flmul@temp^0,w,c
  9780   002B54  B0D8               	btfsc	status,0,c
  9781   002B56  EFAF  F015         	goto	u3751
  9782   002B5A  EFB1  F015         	goto	u3750
  9783   002B5E                     u3751:
  9784   002B5E  EFBD  F015         	goto	l1025
  9785   002B62                     u3750:
  9786   002B62  0E00               	movlw	0
  9787   002B64  6E28               	movwf	___flmul@prod^0,c
  9788   002B66  0E00               	movlw	0
  9789   002B68  6E29               	movwf	(___flmul@prod+1)^0,c
  9790   002B6A  0E00               	movlw	0
  9791   002B6C  6E2A               	movwf	(___flmul@prod+2)^0,c
  9792   002B6E  0E00               	movlw	0
  9793   002B70  6E2B               	movwf	(___flmul@prod+3)^0,c
  9794   002B72  0E00               	movlw	0
  9795   002B74  6E21               	movwf	___flmul@sign^0,c
  9796   002B76  EFD2  F015         	goto	l3713
  9797   002B7A                     l1025:
  9798   002B7A  C02C  F027         	movff	___flmul@temp,___flmul@bexp
  9799   002B7E  0EFF               	movlw	255
  9800   002B80  1628               	andwf	___flmul@prod^0,f,c
  9801   002B82  0EFF               	movlw	255
  9802   002B84  1629               	andwf	(___flmul@prod+1)^0,f,c
  9803   002B86  0E7F               	movlw	127
  9804   002B88  162A               	andwf	(___flmul@prod+2)^0,f,c
  9805   002B8A  0E00               	movlw	0
  9806   002B8C  162B               	andwf	(___flmul@prod+3)^0,f,c
  9807   002B8E  A027               	btfss	___flmul@bexp^0,0,c
  9808   002B90  EFCC  F015         	goto	u3761
  9809   002B94  EFCE  F015         	goto	u3760
  9810   002B98                     u3761:
  9811   002B98  EFCF  F015         	goto	l3711
  9812   002B9C                     u3760:
  9813   002B9C  8E2A               	bsf	(___flmul@prod+2)^0,7,c
  9814   002B9E                     l3711:
  9815   002B9E  90D8               	bcf	status,0,c
  9816   002BA0  3027               	rrcf	___flmul@bexp^0,w,c
  9817   002BA2  6E2B               	movwf	(___flmul@prod+3)^0,c
  9818   002BA4                     l3713:
  9819   002BA4  5021               	movf	___flmul@sign^0,w,c
  9820   002BA6  122B               	iorwf	(___flmul@prod+3)^0,f,c
  9821   002BA8  C028  F015         	movff	___flmul@prod,?___flmul
  9822   002BAC  C029  F016         	movff	___flmul@prod+1,?___flmul+1
  9823   002BB0  C02A  F017         	movff	___flmul@prod+2,?___flmul+2
  9824   002BB4  C02B  F018         	movff	___flmul@prod+3,?___flmul+3
  9825   002BB8                     l1012:
  9826   002BB8  0012               	return		;funcret
  9827   002BBA                     __end_of___flmul:
  9828                           	callstack 0
  9829                           
  9830 ;; *************** function ___flge *****************
  9831 ;; Defined at:
  9832 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  9833 ;; Parameters:    Size  Location     Type
  9834 ;;  ff1             4   53[COMRAM] unsigned char 
  9835 ;;  ff2             4   57[COMRAM] unsigned char 
  9836 ;; Auto vars:     Size  Location     Type
  9837 ;;		None
  9838 ;; Return value:  Size  Location     Type
  9839 ;;		None               void
  9840 ;; Registers used:
  9841 ;;		wreg, status,2, status,0
  9842 ;; Tracked objects:
  9843 ;;		On entry : 0/0
  9844 ;;		On exit  : 0/0
  9845 ;;		Unchanged: 0/0
  9846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9847 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9849 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9850 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9851 ;;Total ram usage:       12 bytes
  9852 ;; Hardware stack levels used: 1
  9853 ;; Hardware stack levels required when called: 2
  9854 ;; This function calls:
  9855 ;;		Nothing
  9856 ;; This function is called by:
  9857 ;;		_colorDetect
  9858 ;;		_main
  9859 ;;		_efgtoa
  9860 ;; This function uses a non-reentrant model
  9861 ;;
  9862                           
  9863                           	psect	text40
  9864   00414C                     __ptext40:
  9865                           	callstack 0
  9866   00414C                     ___flge:
  9867                           	callstack 24
  9868   00414C  0E00               	movlw	0
  9869   00414E  1436               	andwf	___flge@ff1^0,w,c
  9870   004150  6E3E               	movwf	??___flge^0,c
  9871   004152  0E00               	movlw	0
  9872   004154  1437               	andwf	(___flge@ff1+1)^0,w,c
  9873   004156  6E3F               	movwf	(??___flge+1)^0,c
  9874   004158  0E80               	movlw	128
  9875   00415A  1438               	andwf	(___flge@ff1+2)^0,w,c
  9876   00415C  6E40               	movwf	(??___flge+2)^0,c
  9877   00415E  0E7F               	movlw	127
  9878   004160  1439               	andwf	(___flge@ff1+3)^0,w,c
  9879   004162  6E41               	movwf	(??___flge+3)^0,c
  9880   004164  503E               	movf	??___flge^0,w,c
  9881   004166  103F               	iorwf	(??___flge+1)^0,w,c
  9882   004168  1040               	iorwf	(??___flge+2)^0,w,c
  9883   00416A  1041               	iorwf	(??___flge+3)^0,w,c
  9884   00416C  A4D8               	btfss	status,2,c
  9885   00416E  EFBB  F020         	goto	u3801
  9886   004172  EFBD  F020         	goto	u3800
  9887   004176                     u3801:
  9888   004176  EFC5  F020         	goto	l3745
  9889   00417A                     u3800:
  9890   00417A  0E00               	movlw	0
  9891   00417C  6E36               	movwf	___flge@ff1^0,c
  9892   00417E  0E00               	movlw	0
  9893   004180  6E37               	movwf	(___flge@ff1+1)^0,c
  9894   004182  0E00               	movlw	0
  9895   004184  6E38               	movwf	(___flge@ff1+2)^0,c
  9896   004186  0E00               	movlw	0
  9897   004188  6E39               	movwf	(___flge@ff1+3)^0,c
  9898   00418A                     l3745:
  9899   00418A  0E00               	movlw	0
  9900   00418C  143A               	andwf	___flge@ff2^0,w,c
  9901   00418E  6E3E               	movwf	??___flge^0,c
  9902   004190  0E00               	movlw	0
  9903   004192  143B               	andwf	(___flge@ff2+1)^0,w,c
  9904   004194  6E3F               	movwf	(??___flge+1)^0,c
  9905   004196  0E80               	movlw	128
  9906   004198  143C               	andwf	(___flge@ff2+2)^0,w,c
  9907   00419A  6E40               	movwf	(??___flge+2)^0,c
  9908   00419C  0E7F               	movlw	127
  9909   00419E  143D               	andwf	(___flge@ff2+3)^0,w,c
  9910   0041A0  6E41               	movwf	(??___flge+3)^0,c
  9911   0041A2  503E               	movf	??___flge^0,w,c
  9912   0041A4  103F               	iorwf	(??___flge+1)^0,w,c
  9913   0041A6  1040               	iorwf	(??___flge+2)^0,w,c
  9914   0041A8  1041               	iorwf	(??___flge+3)^0,w,c
  9915   0041AA  A4D8               	btfss	status,2,c
  9916   0041AC  EFDA  F020         	goto	u3811
  9917   0041B0  EFDC  F020         	goto	u3810
  9918   0041B4                     u3811:
  9919   0041B4  EFE4  F020         	goto	l3749
  9920   0041B8                     u3810:
  9921   0041B8  0E00               	movlw	0
  9922   0041BA  6E3A               	movwf	___flge@ff2^0,c
  9923   0041BC  0E00               	movlw	0
  9924   0041BE  6E3B               	movwf	(___flge@ff2+1)^0,c
  9925   0041C0  0E00               	movlw	0
  9926   0041C2  6E3C               	movwf	(___flge@ff2+2)^0,c
  9927   0041C4  0E00               	movlw	0
  9928   0041C6  6E3D               	movwf	(___flge@ff2+3)^0,c
  9929   0041C8                     l3749:
  9930   0041C8  AE39               	btfss	(___flge@ff1+3)^0,7,c
  9931   0041CA  EFE9  F020         	goto	u3821
  9932   0041CE  EFEB  F020         	goto	u3820
  9933   0041D2                     u3821:
  9934   0041D2  EFF4  F020         	goto	l3753
  9935   0041D6                     u3820:
  9936   0041D6  6C36               	negf	___flge@ff1^0,c
  9937   0041D8  1E37               	comf	(___flge@ff1+1)^0,f,c
  9938   0041DA  B0D8               	btfsc	status,0,c
  9939   0041DC  2A37               	incf	(___flge@ff1+1)^0,f,c
  9940   0041DE  1E38               	comf	(___flge@ff1+2)^0,f,c
  9941   0041E0  B0D8               	btfsc	status,0,c
  9942   0041E2  2A38               	incf	(___flge@ff1+2)^0,f,c
  9943   0041E4  0E80               	movlw	128
  9944   0041E6  5639               	subfwb	(___flge@ff1+3)^0,f,c
  9945   0041E8                     l3753:
  9946   0041E8  AE3D               	btfss	(___flge@ff2+3)^0,7,c
  9947   0041EA  EFF9  F020         	goto	u3831
  9948   0041EE  EFFB  F020         	goto	u3830
  9949   0041F2                     u3831:
  9950   0041F2  EF04  F021         	goto	l659
  9951   0041F6                     u3830:
  9952   0041F6  6C3A               	negf	___flge@ff2^0,c
  9953   0041F8  1E3B               	comf	(___flge@ff2+1)^0,f,c
  9954   0041FA  B0D8               	btfsc	status,0,c
  9955   0041FC  2A3B               	incf	(___flge@ff2+1)^0,f,c
  9956   0041FE  1E3C               	comf	(___flge@ff2+2)^0,f,c
  9957   004200  B0D8               	btfsc	status,0,c
  9958   004202  2A3C               	incf	(___flge@ff2+2)^0,f,c
  9959   004204  0E80               	movlw	128
  9960   004206  563D               	subfwb	(___flge@ff2+3)^0,f,c
  9961   004208                     l659:
  9962   004208  0E00               	movlw	0
  9963   00420A  1A36               	xorwf	___flge@ff1^0,f,c
  9964   00420C  0E00               	movlw	0
  9965   00420E  1A37               	xorwf	(___flge@ff1+1)^0,f,c
  9966   004210  0E00               	movlw	0
  9967   004212  1A38               	xorwf	(___flge@ff1+2)^0,f,c
  9968   004214  0E80               	movlw	128
  9969   004216  1A39               	xorwf	(___flge@ff1+3)^0,f,c
  9970   004218  0E00               	movlw	0
  9971   00421A  1A3A               	xorwf	___flge@ff2^0,f,c
  9972   00421C  0E00               	movlw	0
  9973   00421E  1A3B               	xorwf	(___flge@ff2+1)^0,f,c
  9974   004220  0E00               	movlw	0
  9975   004222  1A3C               	xorwf	(___flge@ff2+2)^0,f,c
  9976   004224  0E80               	movlw	128
  9977   004226  1A3D               	xorwf	(___flge@ff2+3)^0,f,c
  9978   004228  503A               	movf	___flge@ff2^0,w,c
  9979   00422A  5C36               	subwf	___flge@ff1^0,w,c
  9980   00422C  503B               	movf	(___flge@ff2+1)^0,w,c
  9981   00422E  5837               	subwfb	(___flge@ff1+1)^0,w,c
  9982   004230  503C               	movf	(___flge@ff2+2)^0,w,c
  9983   004232  5838               	subwfb	(___flge@ff1+2)^0,w,c
  9984   004234  503D               	movf	(___flge@ff2+3)^0,w,c
  9985   004236  5839               	subwfb	(___flge@ff1+3)^0,w,c
  9986   004238  B0D8               	btfsc	status,0,c
  9987   00423A  EF21  F021         	goto	u3841
  9988   00423E  EF23  F021         	goto	u3840
  9989   004242                     u3841:
  9990   004242  EF26  F021         	goto	l3759
  9991   004246                     u3840:
  9992   004246  90D8               	bcf	status,0,c
  9993   004248  EF27  F021         	goto	l664
  9994   00424C                     l3759:
  9995   00424C  80D8               	bsf	status,0,c
  9996   00424E                     l664:
  9997   00424E  0012               	return		;funcret
  9998   004250                     __end_of___flge:
  9999                           	callstack 0
 10000                           
 10001 ;; *************** function ___fldiv *****************
 10002 ;; Defined at:
 10003 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 10004 ;; Parameters:    Size  Location     Type
 10005 ;;  b               4   53[COMRAM] unsigned char 
 10006 ;;  a               4   57[COMRAM] unsigned char 
 10007 ;; Auto vars:     Size  Location     Type
 10008 ;;  grs             4   72[COMRAM] unsigned long 
 10009 ;;  rem             4   65[COMRAM] unsigned long 
 10010 ;;  new_exp         2   70[COMRAM] short 
 10011 ;;  aexp            1   77[COMRAM] unsigned char 
 10012 ;;  bexp            1   76[COMRAM] unsigned char 
 10013 ;;  sign            1   69[COMRAM] unsigned char 
 10014 ;; Return value:  Size  Location     Type
 10015 ;;                  4   53[COMRAM] unsigned char 
 10016 ;; Registers used:
 10017 ;;		wreg, status,2, status,0
 10018 ;; Tracked objects:
 10019 ;;		On entry : 0/0
 10020 ;;		On exit  : 0/0
 10021 ;;		Unchanged: 0/0
 10022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10023 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10024 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10025 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10026 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10027 ;;Total ram usage:       25 bytes
 10028 ;; Hardware stack levels used: 1
 10029 ;; Hardware stack levels required when called: 2
 10030 ;; This function calls:
 10031 ;;		Nothing
 10032 ;; This function is called by:
 10033 ;;		_colorDetect
 10034 ;;		_main
 10035 ;;		_efgtoa
 10036 ;; This function uses a non-reentrant model
 10037 ;;
 10038                           
 10039                           	psect	text41
 10040   002BBA                     __ptext41:
 10041                           	callstack 0
 10042   002BBA                     ___fldiv:
 10043                           	callstack 24
 10044   002BBA  5039               	movf	(___fldiv@b+3)^0,w,c
 10045   002BBC  0B80               	andlw	128
 10046   002BBE  6E46               	movwf	___fldiv@sign^0,c
 10047   002BC0  5039               	movf	(___fldiv@b+3)^0,w,c
 10048   002BC2  2439               	addwf	(___fldiv@b+3)^0,w,c
 10049   002BC4  6E4D               	movwf	___fldiv@bexp^0,c
 10050   002BC6  AE38               	btfss	(___fldiv@b+2)^0,7,c
 10051   002BC8  EFE8  F015         	goto	u3351
 10052   002BCC  EFEA  F015         	goto	u3350
 10053   002BD0                     u3351:
 10054   002BD0  EFEB  F015         	goto	l3457
 10055   002BD4                     u3350:
 10056   002BD4  804D               	bsf	___fldiv@bexp^0,0,c
 10057   002BD6                     l3457:
 10058   002BD6  504D               	movf	___fldiv@bexp^0,w,c
 10059   002BD8  B4D8               	btfsc	status,2,c
 10060   002BDA  EFF1  F015         	goto	u3361
 10061   002BDE  EFF3  F015         	goto	u3360
 10062   002BE2                     u3361:
 10063   002BE2  EF08  F016         	goto	l3467
 10064   002BE6                     u3360:
 10065   002BE6  284D               	incf	___fldiv@bexp^0,w,c
 10066   002BE8  A4D8               	btfss	status,2,c
 10067   002BEA  EFF9  F015         	goto	u3371
 10068   002BEE  EFFB  F015         	goto	u3370
 10069   002BF2                     u3371:
 10070   002BF2  EF03  F016         	goto	l3463
 10071   002BF6                     u3370:
 10072   002BF6  0E00               	movlw	0
 10073   002BF8  6E36               	movwf	___fldiv@b^0,c
 10074   002BFA  0E00               	movlw	0
 10075   002BFC  6E37               	movwf	(___fldiv@b+1)^0,c
 10076   002BFE  0E00               	movlw	0
 10077   002C00  6E38               	movwf	(___fldiv@b+2)^0,c
 10078   002C02  0E00               	movlw	0
 10079   002C04  6E39               	movwf	(___fldiv@b+3)^0,c
 10080   002C06                     l3463:
 10081   002C06  8E38               	bsf	(___fldiv@b+2)^0,7,c
 10082   002C08  0E00               	movlw	0
 10083   002C0A  6E39               	movwf	(___fldiv@b+3)^0,c
 10084   002C0C  EF10  F016         	goto	l3469
 10085   002C10                     l3467:
 10086   002C10  0E00               	movlw	0
 10087   002C12  6E36               	movwf	___fldiv@b^0,c
 10088   002C14  0E00               	movlw	0
 10089   002C16  6E37               	movwf	(___fldiv@b+1)^0,c
 10090   002C18  0E00               	movlw	0
 10091   002C1A  6E38               	movwf	(___fldiv@b+2)^0,c
 10092   002C1C  0E00               	movlw	0
 10093   002C1E  6E39               	movwf	(___fldiv@b+3)^0,c
 10094   002C20                     l3469:
 10095   002C20  503D               	movf	(___fldiv@a+3)^0,w,c
 10096   002C22  0B80               	andlw	128
 10097   002C24  1A46               	xorwf	___fldiv@sign^0,f,c
 10098   002C26  503D               	movf	(___fldiv@a+3)^0,w,c
 10099   002C28  243D               	addwf	(___fldiv@a+3)^0,w,c
 10100   002C2A  6E4E               	movwf	___fldiv@aexp^0,c
 10101   002C2C  AE3C               	btfss	(___fldiv@a+2)^0,7,c
 10102   002C2E  EF1B  F016         	goto	u3381
 10103   002C32  EF1D  F016         	goto	u3380
 10104   002C36                     u3381:
 10105   002C36  EF1E  F016         	goto	l3477
 10106   002C3A                     u3380:
 10107   002C3A  804E               	bsf	___fldiv@aexp^0,0,c
 10108   002C3C                     l3477:
 10109   002C3C  504E               	movf	___fldiv@aexp^0,w,c
 10110   002C3E  B4D8               	btfsc	status,2,c
 10111   002C40  EF24  F016         	goto	u3391
 10112   002C44  EF26  F016         	goto	u3390
 10113   002C48                     u3391:
 10114   002C48  EF3B  F016         	goto	l3487
 10115   002C4C                     u3390:
 10116   002C4C  284E               	incf	___fldiv@aexp^0,w,c
 10117   002C4E  A4D8               	btfss	status,2,c
 10118   002C50  EF2C  F016         	goto	u3401
 10119   002C54  EF2E  F016         	goto	u3400
 10120   002C58                     u3401:
 10121   002C58  EF36  F016         	goto	l3483
 10122   002C5C                     u3400:
 10123   002C5C  0E00               	movlw	0
 10124   002C5E  6E3A               	movwf	___fldiv@a^0,c
 10125   002C60  0E00               	movlw	0
 10126   002C62  6E3B               	movwf	(___fldiv@a+1)^0,c
 10127   002C64  0E00               	movlw	0
 10128   002C66  6E3C               	movwf	(___fldiv@a+2)^0,c
 10129   002C68  0E00               	movlw	0
 10130   002C6A  6E3D               	movwf	(___fldiv@a+3)^0,c
 10131   002C6C                     l3483:
 10132   002C6C  8E3C               	bsf	(___fldiv@a+2)^0,7,c
 10133   002C6E  0E00               	movlw	0
 10134   002C70  6E3D               	movwf	(___fldiv@a+3)^0,c
 10135   002C72  EF43  F016         	goto	l3489
 10136   002C76                     l3487:
 10137   002C76  0E00               	movlw	0
 10138   002C78  6E3A               	movwf	___fldiv@a^0,c
 10139   002C7A  0E00               	movlw	0
 10140   002C7C  6E3B               	movwf	(___fldiv@a+1)^0,c
 10141   002C7E  0E00               	movlw	0
 10142   002C80  6E3C               	movwf	(___fldiv@a+2)^0,c
 10143   002C82  0E00               	movlw	0
 10144   002C84  6E3D               	movwf	(___fldiv@a+3)^0,c
 10145   002C86                     l3489:
 10146   002C86  503A               	movf	___fldiv@a^0,w,c
 10147   002C88  103B               	iorwf	(___fldiv@a+1)^0,w,c
 10148   002C8A  103C               	iorwf	(___fldiv@a+2)^0,w,c
 10149   002C8C  103D               	iorwf	(___fldiv@a+3)^0,w,c
 10150   002C8E  A4D8               	btfss	status,2,c
 10151   002C90  EF4C  F016         	goto	u3411
 10152   002C94  EF4E  F016         	goto	u3410
 10153   002C98                     u3411:
 10154   002C98  EF66  F016         	goto	l3501
 10155   002C9C                     u3410:
 10156   002C9C  0E00               	movlw	0
 10157   002C9E  6E36               	movwf	___fldiv@b^0,c
 10158   002CA0  0E00               	movlw	0
 10159   002CA2  6E37               	movwf	(___fldiv@b+1)^0,c
 10160   002CA4  0E00               	movlw	0
 10161   002CA6  6E38               	movwf	(___fldiv@b+2)^0,c
 10162   002CA8  0E00               	movlw	0
 10163   002CAA  6E39               	movwf	(___fldiv@b+3)^0,c
 10164   002CAC  0E80               	movlw	128
 10165   002CAE  1238               	iorwf	(___fldiv@b+2)^0,f,c
 10166   002CB0  0E7F               	movlw	127
 10167   002CB2  1239               	iorwf	(___fldiv@b+3)^0,f,c
 10168   002CB4                     l3495:
 10169   002CB4  5046               	movf	___fldiv@sign^0,w,c
 10170   002CB6  1239               	iorwf	(___fldiv@b+3)^0,f,c
 10171   002CB8  C036  F036         	movff	___fldiv@b,?___fldiv
 10172   002CBC  C037  F037         	movff	___fldiv@b+1,?___fldiv+1
 10173   002CC0  C038  F038         	movff	___fldiv@b+2,?___fldiv+2
 10174   002CC4  C039  F039         	movff	___fldiv@b+3,?___fldiv+3
 10175   002CC8  EFA9  F017         	goto	l976
 10176   002CCC                     l3501:
 10177   002CCC  504D               	movf	___fldiv@bexp^0,w,c
 10178   002CCE  A4D8               	btfss	status,2,c
 10179   002CD0  EF6C  F016         	goto	u3421
 10180   002CD4  EF6E  F016         	goto	u3420
 10181   002CD8                     u3421:
 10182   002CD8  EF78  F016         	goto	l3509
 10183   002CDC                     u3420:
 10184   002CDC  0E00               	movlw	0
 10185   002CDE  6E36               	movwf	?___fldiv^0,c
 10186   002CE0  0E00               	movlw	0
 10187   002CE2  6E37               	movwf	(?___fldiv+1)^0,c
 10188   002CE4  0E00               	movlw	0
 10189   002CE6  6E38               	movwf	(?___fldiv+2)^0,c
 10190   002CE8  0E00               	movlw	0
 10191   002CEA  6E39               	movwf	(?___fldiv+3)^0,c
 10192   002CEC  EFA9  F017         	goto	l976
 10193   002CF0                     l3509:
 10194   002CF0  504E               	movf	___fldiv@aexp^0,w,c
 10195   002CF2  C04D  F03E         	movff	___fldiv@bexp,??___fldiv
 10196   002CF6  6A3F               	clrf	(??___fldiv+1)^0,c
 10197   002CF8  5E3E               	subwf	??___fldiv^0,f,c
 10198   002CFA  0E00               	movlw	0
 10199   002CFC  5A3F               	subwfb	(??___fldiv+1)^0,f,c
 10200   002CFE  0E7F               	movlw	127
 10201   002D00  243E               	addwf	??___fldiv^0,w,c
 10202   002D02  6E47               	movwf	___fldiv@new_exp^0,c
 10203   002D04  0E00               	movlw	0
 10204   002D06  203F               	addwfc	(??___fldiv+1)^0,w,c
 10205   002D08  6E48               	movwf	(___fldiv@new_exp+1)^0,c
 10206   002D0A  C036  F042         	movff	___fldiv@b,___fldiv@rem
 10207   002D0E  C037  F043         	movff	___fldiv@b+1,___fldiv@rem+1
 10208   002D12  C038  F044         	movff	___fldiv@b+2,___fldiv@rem+2
 10209   002D16  C039  F045         	movff	___fldiv@b+3,___fldiv@rem+3
 10210   002D1A  0E00               	movlw	0
 10211   002D1C  6E36               	movwf	___fldiv@b^0,c
 10212   002D1E  0E00               	movlw	0
 10213   002D20  6E37               	movwf	(___fldiv@b+1)^0,c
 10214   002D22  0E00               	movlw	0
 10215   002D24  6E38               	movwf	(___fldiv@b+2)^0,c
 10216   002D26  0E00               	movlw	0
 10217   002D28  6E39               	movwf	(___fldiv@b+3)^0,c
 10218   002D2A  0E00               	movlw	0
 10219   002D2C  6E49               	movwf	___fldiv@grs^0,c
 10220   002D2E  0E00               	movlw	0
 10221   002D30  6E4A               	movwf	(___fldiv@grs+1)^0,c
 10222   002D32  0E00               	movlw	0
 10223   002D34  6E4B               	movwf	(___fldiv@grs+2)^0,c
 10224   002D36  0E00               	movlw	0
 10225   002D38  6E4C               	movwf	(___fldiv@grs+3)^0,c
 10226   002D3A  0E00               	movlw	0
 10227   002D3C  6E4E               	movwf	___fldiv@aexp^0,c
 10228   002D3E  EFD9  F016         	goto	l978
 10229   002D42                     l3519:
 10230   002D42  504E               	movf	___fldiv@aexp^0,w,c
 10231   002D44  B4D8               	btfsc	status,2,c
 10232   002D46  EFA7  F016         	goto	u3431
 10233   002D4A  EFA9  F016         	goto	u3430
 10234   002D4E                     u3431:
 10235   002D4E  EFC0  F016         	goto	l3527
 10236   002D52                     u3430:
 10237   002D52  90D8               	bcf	status,0,c
 10238   002D54  3642               	rlcf	___fldiv@rem^0,f,c
 10239   002D56  3643               	rlcf	(___fldiv@rem+1)^0,f,c
 10240   002D58  3644               	rlcf	(___fldiv@rem+2)^0,f,c
 10241   002D5A  3645               	rlcf	(___fldiv@rem+3)^0,f,c
 10242   002D5C  90D8               	bcf	status,0,c
 10243   002D5E  3636               	rlcf	___fldiv@b^0,f,c
 10244   002D60  3637               	rlcf	(___fldiv@b+1)^0,f,c
 10245   002D62  3638               	rlcf	(___fldiv@b+2)^0,f,c
 10246   002D64  3639               	rlcf	(___fldiv@b+3)^0,f,c
 10247   002D66  AE4C               	btfss	(___fldiv@grs+3)^0,7,c
 10248   002D68  EFB8  F016         	goto	u3441
 10249   002D6C  EFBA  F016         	goto	u3440
 10250   002D70                     u3441:
 10251   002D70  EFBB  F016         	goto	l981
 10252   002D74                     u3440:
 10253   002D74  8036               	bsf	___fldiv@b^0,0,c
 10254   002D76                     l981:
 10255   002D76  90D8               	bcf	status,0,c
 10256   002D78  3649               	rlcf	___fldiv@grs^0,f,c
 10257   002D7A  364A               	rlcf	(___fldiv@grs+1)^0,f,c
 10258   002D7C  364B               	rlcf	(___fldiv@grs+2)^0,f,c
 10259   002D7E  364C               	rlcf	(___fldiv@grs+3)^0,f,c
 10260   002D80                     l3527:
 10261   002D80  503A               	movf	___fldiv@a^0,w,c
 10262   002D82  5C42               	subwf	___fldiv@rem^0,w,c
 10263   002D84  503B               	movf	(___fldiv@a+1)^0,w,c
 10264   002D86  5843               	subwfb	(___fldiv@rem+1)^0,w,c
 10265   002D88  503C               	movf	(___fldiv@a+2)^0,w,c
 10266   002D8A  5844               	subwfb	(___fldiv@rem+2)^0,w,c
 10267   002D8C  503D               	movf	(___fldiv@a+3)^0,w,c
 10268   002D8E  5845               	subwfb	(___fldiv@rem+3)^0,w,c
 10269   002D90  A0D8               	btfss	status,0,c
 10270   002D92  EFCD  F016         	goto	u3451
 10271   002D96  EFCF  F016         	goto	u3450
 10272   002D9A                     u3451:
 10273   002D9A  EFD8  F016         	goto	l3533
 10274   002D9E                     u3450:
 10275   002D9E  8C4C               	bsf	(___fldiv@grs+3)^0,6,c
 10276   002DA0  503A               	movf	___fldiv@a^0,w,c
 10277   002DA2  5E42               	subwf	___fldiv@rem^0,f,c
 10278   002DA4  503B               	movf	(___fldiv@a+1)^0,w,c
 10279   002DA6  5A43               	subwfb	(___fldiv@rem+1)^0,f,c
 10280   002DA8  503C               	movf	(___fldiv@a+2)^0,w,c
 10281   002DAA  5A44               	subwfb	(___fldiv@rem+2)^0,f,c
 10282   002DAC  503D               	movf	(___fldiv@a+3)^0,w,c
 10283   002DAE  5A45               	subwfb	(___fldiv@rem+3)^0,f,c
 10284   002DB0                     l3533:
 10285   002DB0  2A4E               	incf	___fldiv@aexp^0,f,c
 10286   002DB2                     l978:
 10287   002DB2  0E19               	movlw	25
 10288   002DB4  644E               	cpfsgt	___fldiv@aexp^0,c
 10289   002DB6  EFDF  F016         	goto	u3461
 10290   002DBA  EFE1  F016         	goto	u3460
 10291   002DBE                     u3461:
 10292   002DBE  EFA1  F016         	goto	l3519
 10293   002DC2                     u3460:
 10294   002DC2  5042               	movf	___fldiv@rem^0,w,c
 10295   002DC4  1043               	iorwf	(___fldiv@rem+1)^0,w,c
 10296   002DC6  1044               	iorwf	(___fldiv@rem+2)^0,w,c
 10297   002DC8  1045               	iorwf	(___fldiv@rem+3)^0,w,c
 10298   002DCA  B4D8               	btfsc	status,2,c
 10299   002DCC  EFEA  F016         	goto	u3471
 10300   002DD0  EFEC  F016         	goto	u3470
 10301   002DD4                     u3471:
 10302   002DD4  EF04  F017         	goto	l3545
 10303   002DD8                     u3470:
 10304   002DD8  8049               	bsf	___fldiv@grs^0,0,c
 10305   002DDA  EF04  F017         	goto	l3545
 10306   002DDE                     l3539:
 10307   002DDE  90D8               	bcf	status,0,c
 10308   002DE0  3636               	rlcf	___fldiv@b^0,f,c
 10309   002DE2  3637               	rlcf	(___fldiv@b+1)^0,f,c
 10310   002DE4  3638               	rlcf	(___fldiv@b+2)^0,f,c
 10311   002DE6  3639               	rlcf	(___fldiv@b+3)^0,f,c
 10312   002DE8  AE4C               	btfss	(___fldiv@grs+3)^0,7,c
 10313   002DEA  EFF9  F016         	goto	u3481
 10314   002DEE  EFFB  F016         	goto	u3480
 10315   002DF2                     u3481:
 10316   002DF2  EFFC  F016         	goto	l987
 10317   002DF6                     u3480:
 10318   002DF6  8036               	bsf	___fldiv@b^0,0,c
 10319   002DF8                     l987:
 10320   002DF8  90D8               	bcf	status,0,c
 10321   002DFA  3649               	rlcf	___fldiv@grs^0,f,c
 10322   002DFC  364A               	rlcf	(___fldiv@grs+1)^0,f,c
 10323   002DFE  364B               	rlcf	(___fldiv@grs+2)^0,f,c
 10324   002E00  364C               	rlcf	(___fldiv@grs+3)^0,f,c
 10325   002E02  0647               	decf	___fldiv@new_exp^0,f,c
 10326   002E04  A0D8               	btfss	status,0,c
 10327   002E06  0648               	decf	(___fldiv@new_exp+1)^0,f,c
 10328   002E08                     l3545:
 10329   002E08  AE38               	btfss	(___fldiv@b+2)^0,7,c
 10330   002E0A  EF09  F017         	goto	u3491
 10331   002E0E  EF0B  F017         	goto	u3490
 10332   002E12                     u3491:
 10333   002E12  EFEF  F016         	goto	l3539
 10334   002E16                     u3490:
 10335   002E16  0E00               	movlw	0
 10336   002E18  6E4E               	movwf	___fldiv@aexp^0,c
 10337   002E1A  AE4C               	btfss	(___fldiv@grs+3)^0,7,c
 10338   002E1C  EF12  F017         	goto	u3501
 10339   002E20  EF14  F017         	goto	u3500
 10340   002E24                     u3501:
 10341   002E24  EF38  F017         	goto	l989
 10342   002E28                     u3500:
 10343   002E28  0EFF               	movlw	255
 10344   002E2A  1449               	andwf	___fldiv@grs^0,w,c
 10345   002E2C  6E3E               	movwf	??___fldiv^0,c
 10346   002E2E  0EFF               	movlw	255
 10347   002E30  144A               	andwf	(___fldiv@grs+1)^0,w,c
 10348   002E32  6E3F               	movwf	(??___fldiv+1)^0,c
 10349   002E34  0EFF               	movlw	255
 10350   002E36  144B               	andwf	(___fldiv@grs+2)^0,w,c
 10351   002E38  6E40               	movwf	(??___fldiv+2)^0,c
 10352   002E3A  0E7F               	movlw	127
 10353   002E3C  144C               	andwf	(___fldiv@grs+3)^0,w,c
 10354   002E3E  6E41               	movwf	(??___fldiv+3)^0,c
 10355   002E40  503E               	movf	??___fldiv^0,w,c
 10356   002E42  103F               	iorwf	(??___fldiv+1)^0,w,c
 10357   002E44  1040               	iorwf	(??___fldiv+2)^0,w,c
 10358   002E46  1041               	iorwf	(??___fldiv+3)^0,w,c
 10359   002E48  B4D8               	btfsc	status,2,c
 10360   002E4A  EF29  F017         	goto	u3511
 10361   002E4E  EF2B  F017         	goto	u3510
 10362   002E52                     u3511:
 10363   002E52  EF2F  F017         	goto	l990
 10364   002E56                     u3510:
 10365   002E56                     l3553:
 10366   002E56  0E01               	movlw	1
 10367   002E58  6E4E               	movwf	___fldiv@aexp^0,c
 10368   002E5A  EF38  F017         	goto	l989
 10369   002E5E                     l990:
 10370   002E5E  A036               	btfss	___fldiv@b^0,0,c
 10371   002E60  EF34  F017         	goto	u3521
 10372   002E64  EF36  F017         	goto	u3520
 10373   002E68                     u3521:
 10374   002E68  EF38  F017         	goto	l989
 10375   002E6C                     u3520:
 10376   002E6C  EF2B  F017         	goto	l3553
 10377   002E70                     l989:
 10378   002E70  504E               	movf	___fldiv@aexp^0,w,c
 10379   002E72  B4D8               	btfsc	status,2,c
 10380   002E74  EF3E  F017         	goto	u3531
 10381   002E78  EF40  F017         	goto	u3530
 10382   002E7C                     u3531:
 10383   002E7C  EF64  F017         	goto	l3565
 10384   002E80                     u3530:
 10385   002E80  0E01               	movlw	1
 10386   002E82  2636               	addwf	___fldiv@b^0,f,c
 10387   002E84  0E00               	movlw	0
 10388   002E86  2237               	addwfc	(___fldiv@b+1)^0,f,c
 10389   002E88  2238               	addwfc	(___fldiv@b+2)^0,f,c
 10390   002E8A  2239               	addwfc	(___fldiv@b+3)^0,f,c
 10391   002E8C  A039               	btfss	(___fldiv@b+3)^0,0,c
 10392   002E8E  EF4B  F017         	goto	u3541
 10393   002E92  EF4D  F017         	goto	u3540
 10394   002E96                     u3541:
 10395   002E96  EF64  F017         	goto	l3565
 10396   002E9A                     u3540:
 10397   002E9A  C036  F03E         	movff	___fldiv@b,??___fldiv
 10398   002E9E  C037  F03F         	movff	___fldiv@b+1,??___fldiv+1
 10399   002EA2  C038  F040         	movff	___fldiv@b+2,??___fldiv+2
 10400   002EA6  C039  F041         	movff	___fldiv@b+3,??___fldiv+3
 10401   002EAA  3441               	rlcf	(??___fldiv+3)^0,w,c
 10402   002EAC  3241               	rrcf	(??___fldiv+3)^0,f,c
 10403   002EAE  3240               	rrcf	(??___fldiv+2)^0,f,c
 10404   002EB0  323F               	rrcf	(??___fldiv+1)^0,f,c
 10405   002EB2  323E               	rrcf	??___fldiv^0,f,c
 10406   002EB4  C03E  F036         	movff	??___fldiv,___fldiv@b
 10407   002EB8  C03F  F037         	movff	??___fldiv+1,___fldiv@b+1
 10408   002EBC  C040  F038         	movff	??___fldiv+2,___fldiv@b+2
 10409   002EC0  C041  F039         	movff	??___fldiv+3,___fldiv@b+3
 10410   002EC4  4A47               	infsnz	___fldiv@new_exp^0,f,c
 10411   002EC6  2A48               	incf	(___fldiv@new_exp+1)^0,f,c
 10412   002EC8                     l3565:
 10413   002EC8  BE48               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10414   002ECA  EF6F  F017         	goto	u3551
 10415   002ECE  5048               	movf	(___fldiv@new_exp+1)^0,w,c
 10416   002ED0  E108               	bnz	u3550
 10417   002ED2  2847               	incf	___fldiv@new_exp^0,w,c
 10418   002ED4  A0D8               	btfss	status,0,c
 10419   002ED6  EF6F  F017         	goto	u3551
 10420   002EDA  EF71  F017         	goto	u3550
 10421   002EDE                     u3551:
 10422   002EDE  EF7C  F017         	goto	l3569
 10423   002EE2                     u3550:
 10424   002EE2  0E00               	movlw	0
 10425   002EE4  6E48               	movwf	(___fldiv@new_exp+1)^0,c
 10426   002EE6  6847               	setf	___fldiv@new_exp^0,c
 10427   002EE8  0E00               	movlw	0
 10428   002EEA  6E36               	movwf	___fldiv@b^0,c
 10429   002EEC  0E00               	movlw	0
 10430   002EEE  6E37               	movwf	(___fldiv@b+1)^0,c
 10431   002EF0  0E00               	movlw	0
 10432   002EF2  6E38               	movwf	(___fldiv@b+2)^0,c
 10433   002EF4  0E00               	movlw	0
 10434   002EF6  6E39               	movwf	(___fldiv@b+3)^0,c
 10435   002EF8                     l3569:
 10436   002EF8  BE48               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10437   002EFA  EF89  F017         	goto	u3560
 10438   002EFE  5048               	movf	(___fldiv@new_exp+1)^0,w,c
 10439   002F00  E106               	bnz	u3561
 10440   002F02  0447               	decf	___fldiv@new_exp^0,w,c
 10441   002F04  B0D8               	btfsc	status,0,c
 10442   002F06  EF87  F017         	goto	u3561
 10443   002F0A  EF89  F017         	goto	u3560
 10444   002F0E                     u3561:
 10445   002F0E  EF97  F017         	goto	l3573
 10446   002F12                     u3560:
 10447   002F12  0E00               	movlw	0
 10448   002F14  6E48               	movwf	(___fldiv@new_exp+1)^0,c
 10449   002F16  0E00               	movlw	0
 10450   002F18  6E47               	movwf	___fldiv@new_exp^0,c
 10451   002F1A  0E00               	movlw	0
 10452   002F1C  6E36               	movwf	___fldiv@b^0,c
 10453   002F1E  0E00               	movlw	0
 10454   002F20  6E37               	movwf	(___fldiv@b+1)^0,c
 10455   002F22  0E00               	movlw	0
 10456   002F24  6E38               	movwf	(___fldiv@b+2)^0,c
 10457   002F26  0E00               	movlw	0
 10458   002F28  6E39               	movwf	(___fldiv@b+3)^0,c
 10459   002F2A  0E00               	movlw	0
 10460   002F2C  6E46               	movwf	___fldiv@sign^0,c
 10461   002F2E                     l3573:
 10462   002F2E  C047  F04D         	movff	___fldiv@new_exp,___fldiv@bexp
 10463   002F32  A04D               	btfss	___fldiv@bexp^0,0,c
 10464   002F34  EF9E  F017         	goto	u3571
 10465   002F38  EFA0  F017         	goto	u3570
 10466   002F3C                     u3571:
 10467   002F3C  EFA3  F017         	goto	l3579
 10468   002F40                     u3570:
 10469   002F40  8E38               	bsf	(___fldiv@b+2)^0,7,c
 10470   002F42  EFA4  F017         	goto	l3581
 10471   002F46                     l3579:
 10472   002F46  9E38               	bcf	(___fldiv@b+2)^0,7,c
 10473   002F48                     l3581:
 10474   002F48  90D8               	bcf	status,0,c
 10475   002F4A  304D               	rrcf	___fldiv@bexp^0,w,c
 10476   002F4C  6E39               	movwf	(___fldiv@b+3)^0,c
 10477   002F4E  EF5A  F016         	goto	l3495
 10478   002F52                     l976:
 10479   002F52  0012               	return		;funcret
 10480   002F54                     __end_of___fldiv:
 10481                           	callstack 0
 10482                           
 10483 ;; *************** function _ambientCal *****************
 10484 ;; Defined at:
 10485 ;;		line 98 in file "color.c"
 10486 ;; Parameters:    Size  Location     Type
 10487 ;;  v               2   17[COMRAM] PTR struct RGB
 10488 ;;		 -> main@ambientRGBVal(8), 
 10489 ;; Auto vars:     Size  Location     Type
 10490 ;;  i               2   21[COMRAM] int 
 10491 ;; Return value:  Size  Location     Type
 10492 ;;                  1    wreg      void 
 10493 ;; Registers used:
 10494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10495 ;; Tracked objects:
 10496 ;;		On entry : 0/0
 10497 ;;		On exit  : 0/0
 10498 ;;		Unchanged: 0/0
 10499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10500 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10501 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10502 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10503 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10504 ;;Total ram usage:        6 bytes
 10505 ;; Hardware stack levels used: 1
 10506 ;; Hardware stack levels required when called: 6
 10507 ;; This function calls:
 10508 ;;		_getColor
 10509 ;; This function is called by:
 10510 ;;		_main
 10511 ;; This function uses a non-reentrant model
 10512 ;;
 10513                           
 10514                           	psect	text42
 10515   004432                     __ptext42:
 10516                           	callstack 0
 10517   004432                     _ambientCal:
 10518                           	callstack 24
 10519   004432                     
 10520                           ;color.c: 101:     for(int i = 0;i<20;i++){
 10521   004432  0E00               	movlw	0
 10522   004434  6E17               	movwf	(ambientCal@i+1)^0,c
 10523   004436  0E00               	movlw	0
 10524   004438  6E16               	movwf	ambientCal@i^0,c
 10525   00443A                     l4493:
 10526                           
 10527                           ;color.c: 102:             LATDbits.LATD7 = !LATDbits.LATD7;
 10528   00443A  AE7C               	btfss	124,7,c	;volatile
 10529   00443C  EF22  F022         	goto	u4851
 10530   004440  EF26  F022         	goto	u4850
 10531   004444                     u4851:
 10532   004444  6A14               	clrf	??_ambientCal^0,c
 10533   004446  2A14               	incf	??_ambientCal^0,f,c
 10534   004448  EF27  F022         	goto	u4868
 10535   00444C                     u4850:
 10536   00444C  6A14               	clrf	??_ambientCal^0,c
 10537   00444E                     u4868:
 10538   00444E  3214               	rrcf	??_ambientCal^0,f,c
 10539   004450  3214               	rrcf	??_ambientCal^0,f,c
 10540   004452  507C               	movf	124,w,c	;volatile
 10541   004454  1814               	xorwf	??_ambientCal^0,w,c
 10542   004456  0B7F               	andlw	-129
 10543   004458  1814               	xorwf	??_ambientCal^0,w,c
 10544   00445A  6E7C               	movwf	124,c	;volatile
 10545   00445C                     
 10546                           ;color.c: 103:             _delay((unsigned long)((100)*(64000000/4000.0)));
 10547   00445C  0E09               	movlw	9
 10548   00445E  6E15               	movwf	(??_ambientCal+1)^0,c
 10549   004460  0E1E               	movlw	30
 10550   004462  6E14               	movwf	??_ambientCal^0,c
 10551   004464  0EE4               	movlw	228
 10552   004466                     u6497:
 10553   004466  2EE8               	decfsz	wreg,f,c
 10554   004468  D7FE               	bra	u6497
 10555   00446A  2E14               	decfsz	??_ambientCal^0,f,c
 10556   00446C  D7FC               	bra	u6497
 10557   00446E  2E15               	decfsz	(??_ambientCal+1)^0,f,c
 10558   004470  D7FA               	bra	u6497
 10559   004472  D000               	nop2	
 10560                           
 10561                           ;color.c: 104:             }
 10562   004474  4A16               	infsnz	ambientCal@i^0,f,c
 10563   004476  2A17               	incf	(ambientCal@i+1)^0,f,c
 10564   004478  BE17               	btfsc	(ambientCal@i+1)^0,7,c
 10565   00447A  EF48  F022         	goto	u4871
 10566   00447E  5017               	movf	(ambientCal@i+1)^0,w,c
 10567   004480  E109               	bnz	u4870
 10568   004482  0E14               	movlw	20
 10569   004484  5C16               	subwf	ambientCal@i^0,w,c
 10570   004486  A0D8               	btfss	status,0,c
 10571   004488  EF48  F022         	goto	u4871
 10572   00448C  EF4A  F022         	goto	u4870
 10573   004490                     u4871:
 10574   004490  EF1D  F022         	goto	l4493
 10575   004494                     u4870:
 10576   004494                     
 10577                           ;color.c: 105:             LATDbits.LATD7 = !LATDbits.LATD7;
 10578   004494  AE7C               	btfss	124,7,c	;volatile
 10579   004496  EF4F  F022         	goto	u4881
 10580   00449A  EF53  F022         	goto	u4880
 10581   00449E                     u4881:
 10582   00449E  6A14               	clrf	??_ambientCal^0,c
 10583   0044A0  2A14               	incf	??_ambientCal^0,f,c
 10584   0044A2  EF54  F022         	goto	u4898
 10585   0044A6                     u4880:
 10586   0044A6  6A14               	clrf	??_ambientCal^0,c
 10587   0044A8                     u4898:
 10588   0044A8  3214               	rrcf	??_ambientCal^0,f,c
 10589   0044AA  3214               	rrcf	??_ambientCal^0,f,c
 10590   0044AC  507C               	movf	124,w,c	;volatile
 10591   0044AE  1814               	xorwf	??_ambientCal^0,w,c
 10592   0044B0  0B7F               	andlw	-129
 10593   0044B2  1814               	xorwf	??_ambientCal^0,w,c
 10594   0044B4  6E7C               	movwf	124,c	;volatile
 10595   0044B6                     
 10596                           ;color.c: 106:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10597   0044B6  0E29               	movlw	41
 10598   0044B8  6E15               	movwf	(??_ambientCal+1)^0,c
 10599   0044BA  0E96               	movlw	150
 10600   0044BC  6E14               	movwf	??_ambientCal^0,c
 10601   0044BE  0E7F               	movlw	127
 10602   0044C0                     u6507:
 10603   0044C0  2EE8               	decfsz	wreg,f,c
 10604   0044C2  D7FE               	bra	u6507
 10605   0044C4  2E14               	decfsz	??_ambientCal^0,f,c
 10606   0044C6  D7FC               	bra	u6507
 10607   0044C8  2E15               	decfsz	(??_ambientCal+1)^0,f,c
 10608   0044CA  D7FA               	bra	u6507
 10609   0044CC  F000               	nop	
 10610   0044CE                     
 10611                           ;color.c: 107:             getColor(v);
 10612   0044CE  C012  F010         	movff	ambientCal@v,getColor@v
 10613   0044D2  C013  F011         	movff	ambientCal@v+1,getColor@v+1
 10614   0044D6  EC1E  F025         	call	_getColor	;wreg free
 10615   0044DA                     
 10616                           ;color.c: 108:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10617   0044DA  0E29               	movlw	41
 10618   0044DC  6E15               	movwf	(??_ambientCal+1)^0,c
 10619   0044DE  0E96               	movlw	150
 10620   0044E0  6E14               	movwf	??_ambientCal^0,c
 10621   0044E2  0E7F               	movlw	127
 10622   0044E4                     u6517:
 10623   0044E4  2EE8               	decfsz	wreg,f,c
 10624   0044E6  D7FE               	bra	u6517
 10625   0044E8  2E14               	decfsz	??_ambientCal^0,f,c
 10626   0044EA  D7FC               	bra	u6517
 10627   0044EC  2E15               	decfsz	(??_ambientCal+1)^0,f,c
 10628   0044EE  D7FA               	bra	u6517
 10629   0044F0  F000               	nop	
 10630   0044F2                     
 10631                           ;color.c: 109:             LATDbits.LATD7 = !LATDbits.LATD7;
 10632   0044F2  AE7C               	btfss	124,7,c	;volatile
 10633   0044F4  EF7E  F022         	goto	u4901
 10634   0044F8  EF82  F022         	goto	u4900
 10635   0044FC                     u4901:
 10636   0044FC  6A14               	clrf	??_ambientCal^0,c
 10637   0044FE  2A14               	incf	??_ambientCal^0,f,c
 10638   004500  EF83  F022         	goto	u4918
 10639   004504                     u4900:
 10640   004504  6A14               	clrf	??_ambientCal^0,c
 10641   004506                     u4918:
 10642   004506  3214               	rrcf	??_ambientCal^0,f,c
 10643   004508  3214               	rrcf	??_ambientCal^0,f,c
 10644   00450A  507C               	movf	124,w,c	;volatile
 10645   00450C  1814               	xorwf	??_ambientCal^0,w,c
 10646   00450E  0B7F               	andlw	-129
 10647   004510  1814               	xorwf	??_ambientCal^0,w,c
 10648   004512  6E7C               	movwf	124,c	;volatile
 10649   004514  0012               	return		;funcret
 10650   004516                     __end_of_ambientCal:
 10651                           	callstack 0
 10652                           
 10653 ;; *************** function _getColor *****************
 10654 ;; Defined at:
 10655 ;;		line 90 in file "color.c"
 10656 ;; Parameters:    Size  Location     Type
 10657 ;;  v               2   15[COMRAM] PTR struct RGB
 10658 ;;		 -> main@whiteRGBVal(8), main@ambientRGBVal(8), main@RGBVal(8), colorDetect@RGBVal(8), 
 10659 ;; Auto vars:     Size  Location     Type
 10660 ;;		None
 10661 ;; Return value:  Size  Location     Type
 10662 ;;                  1    wreg      void 
 10663 ;; Registers used:
 10664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10665 ;; Tracked objects:
 10666 ;;		On entry : 0/0
 10667 ;;		On exit  : 0/0
 10668 ;;		Unchanged: 0/0
 10669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10670 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10673 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10674 ;;Total ram usage:        2 bytes
 10675 ;; Hardware stack levels used: 1
 10676 ;; Hardware stack levels required when called: 5
 10677 ;; This function calls:
 10678 ;;		_color_read_Blue
 10679 ;;		_color_read_Clear
 10680 ;;		_color_read_Green
 10681 ;;		_color_read_Red
 10682 ;; This function is called by:
 10683 ;;		_ambientCal
 10684 ;;		_whiteCal
 10685 ;;		_colorDetect
 10686 ;;		_main
 10687 ;; This function uses a non-reentrant model
 10688 ;;
 10689                           
 10690                           	psect	text43
 10691   004A3C                     __ptext43:
 10692                           	callstack 0
 10693   004A3C                     _getColor:
 10694                           	callstack 24
 10695   004A3C                     
 10696                           ;color.c: 91:     v->R = color_read_Red();
 10697   004A3C  ECC9  F025         	call	_color_read_Red	;wreg free
 10698   004A40  C010  FFD9         	movff	getColor@v,fsr2l
 10699   004A44  C011  FFDA         	movff	getColor@v+1,fsr2h
 10700   004A48  C009  FFDE         	movff	?_color_read_Red,postinc2
 10701   004A4C  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
 10702                           
 10703                           ;color.c: 92:     v->G = color_read_Green();
 10704   004A50  ECF1  F025         	call	_color_read_Green	;wreg free
 10705   004A54  EE20 F002          	lfsr	2,2
 10706   004A58  5010               	movf	getColor@v^0,w,c
 10707   004A5A  26D9               	addwf	fsr2l,f,c
 10708   004A5C  5011               	movf	(getColor@v+1)^0,w,c
 10709   004A5E  22DA               	addwfc	fsr2h,f,c
 10710   004A60  C009  FFDE         	movff	?_color_read_Green,postinc2
 10711   004A64  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
 10712                           
 10713                           ;color.c: 93:     v->B = color_read_Blue();
 10714   004A68  EC41  F026         	call	_color_read_Blue	;wreg free
 10715   004A6C  EE20 F004          	lfsr	2,4
 10716   004A70  5010               	movf	getColor@v^0,w,c
 10717   004A72  26D9               	addwf	fsr2l,f,c
 10718   004A74  5011               	movf	(getColor@v+1)^0,w,c
 10719   004A76  22DA               	addwfc	fsr2h,f,c
 10720   004A78  C009  FFDE         	movff	?_color_read_Blue,postinc2
 10721   004A7C  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
 10722                           
 10723                           ;color.c: 94:     v->C = color_read_Clear();
 10724   004A80  EC19  F026         	call	_color_read_Clear	;wreg free
 10725   004A84  EE20 F006          	lfsr	2,6
 10726   004A88  5010               	movf	getColor@v^0,w,c
 10727   004A8A  26D9               	addwf	fsr2l,f,c
 10728   004A8C  5011               	movf	(getColor@v+1)^0,w,c
 10729   004A8E  22DA               	addwfc	fsr2h,f,c
 10730   004A90  C009  FFDE         	movff	?_color_read_Clear,postinc2
 10731   004A94  C00A  FFDD         	movff	?_color_read_Clear+1,postdec2
 10732   004A98  0012               	return		;funcret
 10733   004A9A                     __end_of_getColor:
 10734                           	callstack 0
 10735                           
 10736 ;; *************** function _color_read_Red *****************
 10737 ;; Defined at:
 10738 ;;		line 32 in file "color.c"
 10739 ;; Parameters:    Size  Location     Type
 10740 ;;		None
 10741 ;; Auto vars:     Size  Location     Type
 10742 ;;  tmp             2   13[COMRAM] unsigned int 
 10743 ;; Return value:  Size  Location     Type
 10744 ;;                  2    8[COMRAM] unsigned int 
 10745 ;; Registers used:
 10746 ;;		wreg, status,2, status,0, cstack
 10747 ;; Tracked objects:
 10748 ;;		On entry : 0/0
 10749 ;;		On exit  : 0/0
 10750 ;;		Unchanged: 0/0
 10751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10752 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10753 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10754 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10755 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10756 ;;Total ram usage:        7 bytes
 10757 ;; Hardware stack levels used: 1
 10758 ;; Hardware stack levels required when called: 4
 10759 ;; This function calls:
 10760 ;;		_I2C_2_Master_Read
 10761 ;;		_I2C_2_Master_RepStart
 10762 ;;		_I2C_2_Master_Start
 10763 ;;		_I2C_2_Master_Stop
 10764 ;;		_I2C_2_Master_Write
 10765 ;; This function is called by:
 10766 ;;		_getColor
 10767 ;; This function uses a non-reentrant model
 10768 ;;
 10769                           
 10770                           	psect	text44
 10771   004B92                     __ptext44:
 10772                           	callstack 0
 10773   004B92                     _color_read_Red:
 10774                           	callstack 24
 10775   004B92                     
 10776                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
 10777   004B92  EC47  F028         	call	_I2C_2_Master_Start	;wreg free
 10778                           
 10779                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
 10780   004B96  0E52               	movlw	82
 10781   004B98  EC3C  F028         	call	_I2C_2_Master_Write
 10782                           
 10783                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
 10784   004B9C  0EB6               	movlw	182
 10785   004B9E  EC3C  F028         	call	_I2C_2_Master_Write
 10786                           
 10787                           ;color.c: 38:  I2C_2_Master_RepStart();
 10788   004BA2  EC4C  F028         	call	_I2C_2_Master_RepStart	;wreg free
 10789                           
 10790                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
 10791   004BA6  0E53               	movlw	83
 10792   004BA8  EC3C  F028         	call	_I2C_2_Master_Write
 10793                           
 10794                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
 10795   004BAC  0E01               	movlw	1
 10796   004BAE  ECD0  F026         	call	_I2C_2_Master_Read
 10797   004BB2  6E0B               	movwf	??_color_read_Red^0,c
 10798   004BB4  500B               	movf	??_color_read_Red^0,w,c
 10799   004BB6  6E0E               	movwf	color_read_Red@tmp^0,c
 10800   004BB8  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
 10801                           
 10802                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 10803   004BBA  0E00               	movlw	0
 10804   004BBC  ECD0  F026         	call	_I2C_2_Master_Read
 10805   004BC0  6E0B               	movwf	??_color_read_Red^0,c
 10806   004BC2  500B               	movf	??_color_read_Red^0,w,c
 10807   004BC4  6E0D               	movwf	(??_color_read_Red+2)^0,c
 10808   004BC6  6A0C               	clrf	(??_color_read_Red+1)^0,c
 10809   004BC8  500E               	movf	color_read_Red@tmp^0,w,c
 10810   004BCA  100C               	iorwf	(??_color_read_Red+1)^0,w,c
 10811   004BCC  6E0E               	movwf	color_read_Red@tmp^0,c
 10812   004BCE  500F               	movf	(color_read_Red@tmp+1)^0,w,c
 10813   004BD0  100D               	iorwf	(??_color_read_Red+2)^0,w,c
 10814   004BD2  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
 10815                           
 10816                           ;color.c: 42:  I2C_2_Master_Stop();
 10817   004BD4  EC42  F028         	call	_I2C_2_Master_Stop	;wreg free
 10818   004BD8                     
 10819                           ;color.c: 43:  return tmp;
 10820   004BD8  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
 10821   004BDC  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
 10822   004BE0  0012               	return		;funcret
 10823   004BE2                     __end_of_color_read_Red:
 10824                           	callstack 0
 10825                           
 10826 ;; *************** function _color_read_Green *****************
 10827 ;; Defined at:
 10828 ;;		line 46 in file "color.c"
 10829 ;; Parameters:    Size  Location     Type
 10830 ;;		None
 10831 ;; Auto vars:     Size  Location     Type
 10832 ;;  tmp             2   13[COMRAM] unsigned int 
 10833 ;; Return value:  Size  Location     Type
 10834 ;;                  2    8[COMRAM] unsigned int 
 10835 ;; Registers used:
 10836 ;;		wreg, status,2, status,0, cstack
 10837 ;; Tracked objects:
 10838 ;;		On entry : 0/0
 10839 ;;		On exit  : 0/0
 10840 ;;		Unchanged: 0/0
 10841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10842 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10843 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10844 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10845 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10846 ;;Total ram usage:        7 bytes
 10847 ;; Hardware stack levels used: 1
 10848 ;; Hardware stack levels required when called: 4
 10849 ;; This function calls:
 10850 ;;		_I2C_2_Master_Read
 10851 ;;		_I2C_2_Master_RepStart
 10852 ;;		_I2C_2_Master_Start
 10853 ;;		_I2C_2_Master_Stop
 10854 ;;		_I2C_2_Master_Write
 10855 ;; This function is called by:
 10856 ;;		_getColor
 10857 ;; This function uses a non-reentrant model
 10858 ;;
 10859                           
 10860                           	psect	text45
 10861   004BE2                     __ptext45:
 10862                           	callstack 0
 10863   004BE2                     _color_read_Green:
 10864                           	callstack 24
 10865   004BE2                     
 10866                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
 10867   004BE2  EC47  F028         	call	_I2C_2_Master_Start	;wreg free
 10868                           
 10869                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
 10870   004BE6  0E52               	movlw	82
 10871   004BE8  EC3C  F028         	call	_I2C_2_Master_Write
 10872                           
 10873                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x18);
 10874   004BEC  0EB8               	movlw	184
 10875   004BEE  EC3C  F028         	call	_I2C_2_Master_Write
 10876                           
 10877                           ;color.c: 52:  I2C_2_Master_RepStart();
 10878   004BF2  EC4C  F028         	call	_I2C_2_Master_RepStart	;wreg free
 10879                           
 10880                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
 10881   004BF6  0E53               	movlw	83
 10882   004BF8  EC3C  F028         	call	_I2C_2_Master_Write
 10883                           
 10884                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
 10885   004BFC  0E01               	movlw	1
 10886   004BFE  ECD0  F026         	call	_I2C_2_Master_Read
 10887   004C02  6E0B               	movwf	??_color_read_Green^0,c
 10888   004C04  500B               	movf	??_color_read_Green^0,w,c
 10889   004C06  6E0E               	movwf	color_read_Green@tmp^0,c
 10890   004C08  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
 10891                           
 10892                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 10893   004C0A  0E00               	movlw	0
 10894   004C0C  ECD0  F026         	call	_I2C_2_Master_Read
 10895   004C10  6E0B               	movwf	??_color_read_Green^0,c
 10896   004C12  500B               	movf	??_color_read_Green^0,w,c
 10897   004C14  6E0D               	movwf	(??_color_read_Green+2)^0,c
 10898   004C16  6A0C               	clrf	(??_color_read_Green+1)^0,c
 10899   004C18  500E               	movf	color_read_Green@tmp^0,w,c
 10900   004C1A  100C               	iorwf	(??_color_read_Green+1)^0,w,c
 10901   004C1C  6E0E               	movwf	color_read_Green@tmp^0,c
 10902   004C1E  500F               	movf	(color_read_Green@tmp+1)^0,w,c
 10903   004C20  100D               	iorwf	(??_color_read_Green+2)^0,w,c
 10904   004C22  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
 10905                           
 10906                           ;color.c: 56:  I2C_2_Master_Stop();
 10907   004C24  EC42  F028         	call	_I2C_2_Master_Stop	;wreg free
 10908   004C28                     
 10909                           ;color.c: 57:  return tmp;
 10910   004C28  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
 10911   004C2C  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
 10912   004C30  0012               	return		;funcret
 10913   004C32                     __end_of_color_read_Green:
 10914                           	callstack 0
 10915                           
 10916 ;; *************** function _color_read_Clear *****************
 10917 ;; Defined at:
 10918 ;;		line 75 in file "color.c"
 10919 ;; Parameters:    Size  Location     Type
 10920 ;;		None
 10921 ;; Auto vars:     Size  Location     Type
 10922 ;;  tmp             2   13[COMRAM] unsigned int 
 10923 ;; Return value:  Size  Location     Type
 10924 ;;                  2    8[COMRAM] unsigned int 
 10925 ;; Registers used:
 10926 ;;		wreg, status,2, status,0, cstack
 10927 ;; Tracked objects:
 10928 ;;		On entry : 0/0
 10929 ;;		On exit  : 0/0
 10930 ;;		Unchanged: 0/0
 10931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10932 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10933 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10934 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10935 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10936 ;;Total ram usage:        7 bytes
 10937 ;; Hardware stack levels used: 1
 10938 ;; Hardware stack levels required when called: 4
 10939 ;; This function calls:
 10940 ;;		_I2C_2_Master_Read
 10941 ;;		_I2C_2_Master_RepStart
 10942 ;;		_I2C_2_Master_Start
 10943 ;;		_I2C_2_Master_Stop
 10944 ;;		_I2C_2_Master_Write
 10945 ;; This function is called by:
 10946 ;;		_getColor
 10947 ;; This function uses a non-reentrant model
 10948 ;;
 10949                           
 10950                           	psect	text46
 10951   004C32                     __ptext46:
 10952                           	callstack 0
 10953   004C32                     _color_read_Clear:
 10954                           	callstack 24
 10955   004C32                     
 10956                           ;color.c: 77:  unsigned int tmp;;color.c: 78:  I2C_2_Master_Start();
 10957   004C32  EC47  F028         	call	_I2C_2_Master_Start	;wreg free
 10958                           
 10959                           ;color.c: 79:  I2C_2_Master_Write(0x52 | 0x00);
 10960   004C36  0E52               	movlw	82
 10961   004C38  EC3C  F028         	call	_I2C_2_Master_Write
 10962                           
 10963                           ;color.c: 80:  I2C_2_Master_Write(0xA0 | 0x14);
 10964   004C3C  0EB4               	movlw	180
 10965   004C3E  EC3C  F028         	call	_I2C_2_Master_Write
 10966                           
 10967                           ;color.c: 81:  I2C_2_Master_RepStart();
 10968   004C42  EC4C  F028         	call	_I2C_2_Master_RepStart	;wreg free
 10969                           
 10970                           ;color.c: 82:  I2C_2_Master_Write(0x52 | 0x01);
 10971   004C46  0E53               	movlw	83
 10972   004C48  EC3C  F028         	call	_I2C_2_Master_Write
 10973                           
 10974                           ;color.c: 83:  tmp=I2C_2_Master_Read(1);
 10975   004C4C  0E01               	movlw	1
 10976   004C4E  ECD0  F026         	call	_I2C_2_Master_Read
 10977   004C52  6E0B               	movwf	??_color_read_Clear^0,c
 10978   004C54  500B               	movf	??_color_read_Clear^0,w,c
 10979   004C56  6E0E               	movwf	color_read_Clear@tmp^0,c
 10980   004C58  6A0F               	clrf	(color_read_Clear@tmp+1)^0,c
 10981                           
 10982                           ;color.c: 84:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 10983   004C5A  0E00               	movlw	0
 10984   004C5C  ECD0  F026         	call	_I2C_2_Master_Read
 10985   004C60  6E0B               	movwf	??_color_read_Clear^0,c
 10986   004C62  500B               	movf	??_color_read_Clear^0,w,c
 10987   004C64  6E0D               	movwf	(??_color_read_Clear+2)^0,c
 10988   004C66  6A0C               	clrf	(??_color_read_Clear+1)^0,c
 10989   004C68  500E               	movf	color_read_Clear@tmp^0,w,c
 10990   004C6A  100C               	iorwf	(??_color_read_Clear+1)^0,w,c
 10991   004C6C  6E0E               	movwf	color_read_Clear@tmp^0,c
 10992   004C6E  500F               	movf	(color_read_Clear@tmp+1)^0,w,c
 10993   004C70  100D               	iorwf	(??_color_read_Clear+2)^0,w,c
 10994   004C72  6E0F               	movwf	(color_read_Clear@tmp+1)^0,c
 10995                           
 10996                           ;color.c: 85:  I2C_2_Master_Stop();
 10997   004C74  EC42  F028         	call	_I2C_2_Master_Stop	;wreg free
 10998   004C78                     
 10999                           ;color.c: 86:  return tmp;
 11000   004C78  C00E  F009         	movff	color_read_Clear@tmp,?_color_read_Clear
 11001   004C7C  C00F  F00A         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
 11002   004C80  0012               	return		;funcret
 11003   004C82                     __end_of_color_read_Clear:
 11004                           	callstack 0
 11005                           
 11006 ;; *************** function _color_read_Blue *****************
 11007 ;; Defined at:
 11008 ;;		line 61 in file "color.c"
 11009 ;; Parameters:    Size  Location     Type
 11010 ;;		None
 11011 ;; Auto vars:     Size  Location     Type
 11012 ;;  tmp             2   13[COMRAM] unsigned int 
 11013 ;; Return value:  Size  Location     Type
 11014 ;;                  2    8[COMRAM] unsigned int 
 11015 ;; Registers used:
 11016 ;;		wreg, status,2, status,0, cstack
 11017 ;; Tracked objects:
 11018 ;;		On entry : 0/0
 11019 ;;		On exit  : 0/0
 11020 ;;		Unchanged: 0/0
 11021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11022 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11023 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11024 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11025 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11026 ;;Total ram usage:        7 bytes
 11027 ;; Hardware stack levels used: 1
 11028 ;; Hardware stack levels required when called: 4
 11029 ;; This function calls:
 11030 ;;		_I2C_2_Master_Read
 11031 ;;		_I2C_2_Master_RepStart
 11032 ;;		_I2C_2_Master_Start
 11033 ;;		_I2C_2_Master_Stop
 11034 ;;		_I2C_2_Master_Write
 11035 ;; This function is called by:
 11036 ;;		_getColor
 11037 ;; This function uses a non-reentrant model
 11038 ;;
 11039                           
 11040                           	psect	text47
 11041   004C82                     __ptext47:
 11042                           	callstack 0
 11043   004C82                     _color_read_Blue:
 11044                           	callstack 24
 11045   004C82                     
 11046                           ;color.c: 63:  unsigned int tmp;;color.c: 64:  I2C_2_Master_Start();
 11047   004C82  EC47  F028         	call	_I2C_2_Master_Start	;wreg free
 11048                           
 11049                           ;color.c: 65:  I2C_2_Master_Write(0x52 | 0x00);
 11050   004C86  0E52               	movlw	82
 11051   004C88  EC3C  F028         	call	_I2C_2_Master_Write
 11052                           
 11053                           ;color.c: 66:  I2C_2_Master_Write(0xA0 | 0x1A);
 11054   004C8C  0EBA               	movlw	186
 11055   004C8E  EC3C  F028         	call	_I2C_2_Master_Write
 11056                           
 11057                           ;color.c: 67:  I2C_2_Master_RepStart();
 11058   004C92  EC4C  F028         	call	_I2C_2_Master_RepStart	;wreg free
 11059                           
 11060                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x01);
 11061   004C96  0E53               	movlw	83
 11062   004C98  EC3C  F028         	call	_I2C_2_Master_Write
 11063                           
 11064                           ;color.c: 69:  tmp=I2C_2_Master_Read(1);
 11065   004C9C  0E01               	movlw	1
 11066   004C9E  ECD0  F026         	call	_I2C_2_Master_Read
 11067   004CA2  6E0B               	movwf	??_color_read_Blue^0,c
 11068   004CA4  500B               	movf	??_color_read_Blue^0,w,c
 11069   004CA6  6E0E               	movwf	color_read_Blue@tmp^0,c
 11070   004CA8  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
 11071                           
 11072                           ;color.c: 70:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 11073   004CAA  0E00               	movlw	0
 11074   004CAC  ECD0  F026         	call	_I2C_2_Master_Read
 11075   004CB0  6E0B               	movwf	??_color_read_Blue^0,c
 11076   004CB2  500B               	movf	??_color_read_Blue^0,w,c
 11077   004CB4  6E0D               	movwf	(??_color_read_Blue+2)^0,c
 11078   004CB6  6A0C               	clrf	(??_color_read_Blue+1)^0,c
 11079   004CB8  500E               	movf	color_read_Blue@tmp^0,w,c
 11080   004CBA  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
 11081   004CBC  6E0E               	movwf	color_read_Blue@tmp^0,c
 11082   004CBE  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
 11083   004CC0  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
 11084   004CC2  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
 11085                           
 11086                           ;color.c: 71:  I2C_2_Master_Stop();
 11087   004CC4  EC42  F028         	call	_I2C_2_Master_Stop	;wreg free
 11088   004CC8                     
 11089                           ;color.c: 72:  return tmp;
 11090   004CC8  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
 11091   004CCC  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
 11092   004CD0  0012               	return		;funcret
 11093   004CD2                     __end_of_color_read_Blue:
 11094                           	callstack 0
 11095                           
 11096 ;; *************** function _I2C_2_Master_Write *****************
 11097 ;; Defined at:
 11098 ;;		line 45 in file "i2c.c"
 11099 ;; Parameters:    Size  Location     Type
 11100 ;;  data_byte       1    wreg     unsigned char 
 11101 ;; Auto vars:     Size  Location     Type
 11102 ;;  data_byte       1    5[COMRAM] unsigned char 
 11103 ;; Return value:  Size  Location     Type
 11104 ;;                  1    wreg      void 
 11105 ;; Registers used:
 11106 ;;		wreg, status,2, status,0, cstack
 11107 ;; Tracked objects:
 11108 ;;		On entry : 0/0
 11109 ;;		On exit  : 0/0
 11110 ;;		Unchanged: 0/0
 11111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11113 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11115 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11116 ;;Total ram usage:        1 bytes
 11117 ;; Hardware stack levels used: 1
 11118 ;; Hardware stack levels required when called: 3
 11119 ;; This function calls:
 11120 ;;		_I2C_2_Master_Idle
 11121 ;; This function is called by:
 11122 ;;		_color_writetoaddr
 11123 ;;		_color_read_Red
 11124 ;;		_color_read_Green
 11125 ;;		_color_read_Blue
 11126 ;;		_color_read_Clear
 11127 ;; This function uses a non-reentrant model
 11128 ;;
 11129                           
 11130                           	psect	text48
 11131   005078                     __ptext48:
 11132                           	callstack 0
 11133   005078                     _I2C_2_Master_Write:
 11134                           	callstack 24
 11135                           
 11136                           ;incstack = 0
 11137                           ;I2C_2_Master_Write@data_byte stored from wreg
 11138   005078  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
 11139   00507A                     
 11140                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 11141   00507A  ECE0  F027         	call	_I2C_2_Master_Idle	;wreg free
 11142   00507E                     
 11143                           ;i2c.c: 48:   SSP2BUF = data_byte;
 11144   00507E  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 11145   005082  0012               	return		;funcret
 11146   005084                     __end_of_I2C_2_Master_Write:
 11147                           	callstack 0
 11148                           
 11149 ;; *************** function _I2C_2_Master_Stop *****************
 11150 ;; Defined at:
 11151 ;;		line 39 in file "i2c.c"
 11152 ;; Parameters:    Size  Location     Type
 11153 ;;		None
 11154 ;; Auto vars:     Size  Location     Type
 11155 ;;		None
 11156 ;; Return value:  Size  Location     Type
 11157 ;;                  1    wreg      void 
 11158 ;; Registers used:
 11159 ;;		wreg, status,2, status,0, cstack
 11160 ;; Tracked objects:
 11161 ;;		On entry : 0/0
 11162 ;;		On exit  : 0/0
 11163 ;;		Unchanged: 0/0
 11164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11169 ;;Total ram usage:        0 bytes
 11170 ;; Hardware stack levels used: 1
 11171 ;; Hardware stack levels required when called: 3
 11172 ;; This function calls:
 11173 ;;		_I2C_2_Master_Idle
 11174 ;; This function is called by:
 11175 ;;		_color_writetoaddr
 11176 ;;		_color_read_Red
 11177 ;;		_color_read_Green
 11178 ;;		_color_read_Blue
 11179 ;;		_color_read_Clear
 11180 ;; This function uses a non-reentrant model
 11181 ;;
 11182                           
 11183                           	psect	text49
 11184   005084                     __ptext49:
 11185                           	callstack 0
 11186   005084                     _I2C_2_Master_Stop:
 11187                           	callstack 24
 11188   005084                     
 11189                           ;i2c.c: 41:   I2C_2_Master_Idle();
 11190   005084  ECE0  F027         	call	_I2C_2_Master_Idle	;wreg free
 11191   005088                     
 11192                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 11193   005088  010E               	movlb	14	; () banked
 11194   00508A  85DA               	bsf	218,2,b	;volatile
 11195   00508C                     
 11196                           ; BSR set to: 14
 11197   00508C  0012               	return		;funcret
 11198   00508E                     __end_of_I2C_2_Master_Stop:
 11199                           	callstack 0
 11200                           
 11201 ;; *************** function _I2C_2_Master_Start *****************
 11202 ;; Defined at:
 11203 ;;		line 27 in file "i2c.c"
 11204 ;; Parameters:    Size  Location     Type
 11205 ;;		None
 11206 ;; Auto vars:     Size  Location     Type
 11207 ;;		None
 11208 ;; Return value:  Size  Location     Type
 11209 ;;                  1    wreg      void 
 11210 ;; Registers used:
 11211 ;;		wreg, status,2, status,0, cstack
 11212 ;; Tracked objects:
 11213 ;;		On entry : 0/0
 11214 ;;		On exit  : 0/0
 11215 ;;		Unchanged: 0/0
 11216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11221 ;;Total ram usage:        0 bytes
 11222 ;; Hardware stack levels used: 1
 11223 ;; Hardware stack levels required when called: 3
 11224 ;; This function calls:
 11225 ;;		_I2C_2_Master_Idle
 11226 ;; This function is called by:
 11227 ;;		_color_writetoaddr
 11228 ;;		_color_read_Red
 11229 ;;		_color_read_Green
 11230 ;;		_color_read_Blue
 11231 ;;		_color_read_Clear
 11232 ;; This function uses a non-reentrant model
 11233 ;;
 11234                           
 11235                           	psect	text50
 11236   00508E                     __ptext50:
 11237                           	callstack 0
 11238   00508E                     _I2C_2_Master_Start:
 11239                           	callstack 24
 11240   00508E                     
 11241                           ;i2c.c: 29:   I2C_2_Master_Idle();
 11242   00508E  ECE0  F027         	call	_I2C_2_Master_Idle	;wreg free
 11243   005092                     
 11244                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 11245   005092  010E               	movlb	14	; () banked
 11246   005094  81DA               	bsf	218,0,b	;volatile
 11247   005096                     
 11248                           ; BSR set to: 14
 11249   005096  0012               	return		;funcret
 11250   005098                     __end_of_I2C_2_Master_Start:
 11251                           	callstack 0
 11252                           
 11253 ;; *************** function _I2C_2_Master_RepStart *****************
 11254 ;; Defined at:
 11255 ;;		line 33 in file "i2c.c"
 11256 ;; Parameters:    Size  Location     Type
 11257 ;;		None
 11258 ;; Auto vars:     Size  Location     Type
 11259 ;;		None
 11260 ;; Return value:  Size  Location     Type
 11261 ;;                  1    wreg      void 
 11262 ;; Registers used:
 11263 ;;		wreg, status,2, status,0, cstack
 11264 ;; Tracked objects:
 11265 ;;		On entry : 0/0
 11266 ;;		On exit  : 0/0
 11267 ;;		Unchanged: 0/0
 11268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11273 ;;Total ram usage:        0 bytes
 11274 ;; Hardware stack levels used: 1
 11275 ;; Hardware stack levels required when called: 3
 11276 ;; This function calls:
 11277 ;;		_I2C_2_Master_Idle
 11278 ;; This function is called by:
 11279 ;;		_color_read_Red
 11280 ;;		_color_read_Green
 11281 ;;		_color_read_Blue
 11282 ;;		_color_read_Clear
 11283 ;; This function uses a non-reentrant model
 11284 ;;
 11285                           
 11286                           	psect	text51
 11287   005098                     __ptext51:
 11288                           	callstack 0
 11289   005098                     _I2C_2_Master_RepStart:
 11290                           	callstack 24
 11291   005098                     
 11292                           ;i2c.c: 35:   I2C_2_Master_Idle();
 11293   005098  ECE0  F027         	call	_I2C_2_Master_Idle	;wreg free
 11294   00509C                     
 11295                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
 11296   00509C  010E               	movlb	14	; () banked
 11297   00509E  83DA               	bsf	218,1,b	;volatile
 11298   0050A0                     
 11299                           ; BSR set to: 14
 11300   0050A0  0012               	return		;funcret
 11301   0050A2                     __end_of_I2C_2_Master_RepStart:
 11302                           	callstack 0
 11303                           
 11304 ;; *************** function _I2C_2_Master_Read *****************
 11305 ;; Defined at:
 11306 ;;		line 51 in file "i2c.c"
 11307 ;; Parameters:    Size  Location     Type
 11308 ;;  ack             1    wreg     unsigned char 
 11309 ;; Auto vars:     Size  Location     Type
 11310 ;;  ack             1    6[COMRAM] unsigned char 
 11311 ;;  tmp             1    7[COMRAM] unsigned char 
 11312 ;; Return value:  Size  Location     Type
 11313 ;;                  1    wreg      unsigned char 
 11314 ;; Registers used:
 11315 ;;		wreg, status,2, status,0, cstack
 11316 ;; Tracked objects:
 11317 ;;		On entry : 0/0
 11318 ;;		On exit  : 0/0
 11319 ;;		Unchanged: 0/0
 11320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11322 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11323 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11324 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11325 ;;Total ram usage:        3 bytes
 11326 ;; Hardware stack levels used: 1
 11327 ;; Hardware stack levels required when called: 3
 11328 ;; This function calls:
 11329 ;;		_I2C_2_Master_Idle
 11330 ;; This function is called by:
 11331 ;;		_color_read_Red
 11332 ;;		_color_read_Green
 11333 ;;		_color_read_Blue
 11334 ;;		_color_read_Clear
 11335 ;; This function uses a non-reentrant model
 11336 ;;
 11337                           
 11338                           	psect	text52
 11339   004DA0                     __ptext52:
 11340                           	callstack 0
 11341   004DA0                     _I2C_2_Master_Read:
 11342                           	callstack 24
 11343                           
 11344                           ; BSR set to: 14
 11345                           ;incstack = 0
 11346                           ;I2C_2_Master_Read@ack stored from wreg
 11347   004DA0  6E07               	movwf	I2C_2_Master_Read@ack^0,c
 11348   004DA2                     
 11349                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
 11350   004DA2  ECE0  F027         	call	_I2C_2_Master_Idle	;wreg free
 11351   004DA6                     
 11352                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
 11353   004DA6  010E               	movlb	14	; () banked
 11354   004DA8  87DA               	bsf	218,3,b	;volatile
 11355                           
 11356                           ;i2c.c: 56:   I2C_2_Master_Idle();
 11357   004DAA  ECE0  F027         	call	_I2C_2_Master_Idle	;wreg free
 11358   004DAE                     
 11359                           ;i2c.c: 57:   tmp = SSP2BUF;
 11360   004DAE  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 11361                           
 11362                           ;i2c.c: 58:   I2C_2_Master_Idle();
 11363   004DB2  ECE0  F027         	call	_I2C_2_Master_Idle	;wreg free
 11364   004DB6                     
 11365                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
 11366   004DB6  5007               	movf	I2C_2_Master_Read@ack^0,w,c
 11367   004DB8  B4D8               	btfsc	status,2,c
 11368   004DBA  EFE1  F026         	goto	u4161
 11369   004DBE  EFE5  F026         	goto	u4160
 11370   004DC2                     u4161:
 11371   004DC2  6A06               	clrf	??_I2C_2_Master_Read^0,c
 11372   004DC4  2A06               	incf	??_I2C_2_Master_Read^0,f,c
 11373   004DC6  EFE6  F026         	goto	u4178
 11374   004DCA                     u4160:
 11375   004DCA  6A06               	clrf	??_I2C_2_Master_Read^0,c
 11376   004DCC                     u4178:
 11377   004DCC  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
 11378   004DCE  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
 11379   004DD0  010E               	movlb	14	; () banked
 11380   004DD2  51DA               	movf	218,w,b	;volatile
 11381   004DD4  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
 11382   004DD6  0BDF               	andlw	-33
 11383   004DD8  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
 11384   004DDA  6FDA               	movwf	218,b	;volatile
 11385   004DDC                     
 11386                           ; BSR set to: 14
 11387                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
 11388   004DDC  89DA               	bsf	218,4,b	;volatile
 11389   004DDE                     
 11390                           ; BSR set to: 14
 11391                           ;i2c.c: 61:   return tmp;
 11392   004DDE  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
 11393   004DE0                     
 11394                           ; BSR set to: 14
 11395   004DE0  0012               	return		;funcret
 11396   004DE2                     __end_of_I2C_2_Master_Read:
 11397                           	callstack 0
 11398                           
 11399 ;; *************** function _I2C_2_Master_Idle *****************
 11400 ;; Defined at:
 11401 ;;		line 22 in file "i2c.c"
 11402 ;; Parameters:    Size  Location     Type
 11403 ;;		None
 11404 ;; Auto vars:     Size  Location     Type
 11405 ;;		None
 11406 ;; Return value:  Size  Location     Type
 11407 ;;                  1    wreg      void 
 11408 ;; Registers used:
 11409 ;;		wreg, status,2, status,0
 11410 ;; Tracked objects:
 11411 ;;		On entry : 0/0
 11412 ;;		On exit  : 0/0
 11413 ;;		Unchanged: 0/0
 11414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11417 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11418 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11419 ;;Total ram usage:        1 bytes
 11420 ;; Hardware stack levels used: 1
 11421 ;; Hardware stack levels required when called: 2
 11422 ;; This function calls:
 11423 ;;		Nothing
 11424 ;; This function is called by:
 11425 ;;		_I2C_2_Master_Start
 11426 ;;		_I2C_2_Master_RepStart
 11427 ;;		_I2C_2_Master_Stop
 11428 ;;		_I2C_2_Master_Write
 11429 ;;		_I2C_2_Master_Read
 11430 ;; This function uses a non-reentrant model
 11431 ;;
 11432                           
 11433                           	psect	text53
 11434   004FC0                     __ptext53:
 11435                           	callstack 0
 11436   004FC0                     _I2C_2_Master_Idle:
 11437                           	callstack 24
 11438   004FC0                     l103:
 11439   004FC0  010E               	movlb	14	; () banked
 11440   004FC2  B5D8               	btfsc	216,2,b	;volatile
 11441   004FC4  EFE6  F027         	goto	u3201
 11442   004FC8  EFE8  F027         	goto	u3200
 11443   004FCC                     u3201:
 11444   004FCC  EFE0  F027         	goto	l103
 11445   004FD0                     u3200:
 11446   004FD0                     
 11447                           ; BSR set to: 14
 11448   004FD0  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
 11449   004FD4  0E1F               	movlw	31
 11450   004FD6  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
 11451   004FD8  A4D8               	btfss	status,2,c
 11452   004FDA  EFF1  F027         	goto	u3211
 11453   004FDE  EFF3  F027         	goto	u3210
 11454   004FE2                     u3211:
 11455   004FE2  EFE0  F027         	goto	l103
 11456   004FE6                     u3210:
 11457   004FE6                     
 11458                           ; BSR set to: 14
 11459   004FE6  0012               	return		;funcret
 11460   004FE8                     __end_of_I2C_2_Master_Idle:
 11461                           	callstack 0
 11462                           
 11463 ;; *************** function _TxBufferedString *****************
 11464 ;; Defined at:
 11465 ;;		line 118 in file "serialTest.c"
 11466 ;; Parameters:    Size  Location     Type
 11467 ;;  string          2    5[COMRAM] PTR unsigned char 
 11468 ;;		 -> main@string4(20), 
 11469 ;; Auto vars:     Size  Location     Type
 11470 ;;		None
 11471 ;; Return value:  Size  Location     Type
 11472 ;;                  1    wreg      void 
 11473 ;; Registers used:
 11474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11475 ;; Tracked objects:
 11476 ;;		On entry : 0/0
 11477 ;;		On exit  : 0/0
 11478 ;;		Unchanged: 0/0
 11479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11483 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11484 ;;Total ram usage:        2 bytes
 11485 ;; Hardware stack levels used: 1
 11486 ;; Hardware stack levels required when called: 3
 11487 ;; This function calls:
 11488 ;;		_putCharToTxBuf
 11489 ;; This function is called by:
 11490 ;;		_main
 11491 ;; This function uses a non-reentrant model
 11492 ;;
 11493                           
 11494                           	psect	text54
 11495   004E8E                     __ptext54:
 11496                           	callstack 0
 11497   004E8E                     _TxBufferedString:
 11498                           	callstack 27
 11499   004E8E                     
 11500                           ;serialTest.c: 121:     while(*string != 0) {putCharToTxBuf(*string++);}
 11501   004E8E  EF52  F027         	goto	l4733
 11502   004E92                     l4729:
 11503   004E92  C006  FFD9         	movff	TxBufferedString@string,fsr2l
 11504   004E96  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
 11505   004E9A  50DF               	movf	indf2,w,c
 11506   004E9C  ECB6  F027         	call	_putCharToTxBuf
 11507   004EA0  4A06               	infsnz	TxBufferedString@string^0,f,c
 11508   004EA2  2A07               	incf	(TxBufferedString@string+1)^0,f,c
 11509   004EA4                     l4733:
 11510   004EA4  C006  FFD9         	movff	TxBufferedString@string,fsr2l
 11511   004EA8  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
 11512   004EAC  50DF               	movf	indf2,w,c
 11513   004EAE  A4D8               	btfss	status,2,c
 11514   004EB0  EF5C  F027         	goto	u5321
 11515   004EB4  EF5E  F027         	goto	u5320
 11516   004EB8                     u5321:
 11517   004EB8  EF49  F027         	goto	l4729
 11518   004EBC                     u5320:
 11519   004EBC  0012               	return		;funcret
 11520   004EBE                     __end_of_TxBufferedString:
 11521                           	callstack 0
 11522                           
 11523 ;; *************** function _putCharToTxBuf *****************
 11524 ;; Defined at:
 11525 ;;		line 105 in file "serialTest.c"
 11526 ;; Parameters:    Size  Location     Type
 11527 ;;  byte            1    wreg     unsigned char 
 11528 ;; Auto vars:     Size  Location     Type
 11529 ;;  byte            1    4[COMRAM] unsigned char 
 11530 ;; Return value:  Size  Location     Type
 11531 ;;                  1    wreg      void 
 11532 ;; Registers used:
 11533 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11534 ;; Tracked objects:
 11535 ;;		On entry : 0/0
 11536 ;;		On exit  : 0/0
 11537 ;;		Unchanged: 0/0
 11538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11540 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11542 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11543 ;;Total ram usage:        1 bytes
 11544 ;; Hardware stack levels used: 1
 11545 ;; Hardware stack levels required when called: 2
 11546 ;; This function calls:
 11547 ;;		Nothing
 11548 ;; This function is called by:
 11549 ;;		_TxBufferedString
 11550 ;; This function uses a non-reentrant model
 11551 ;;
 11552                           
 11553                           	psect	text55
 11554   004F6C                     __ptext55:
 11555                           	callstack 0
 11556   004F6C                     _putCharToTxBuf:
 11557                           	callstack 27
 11558                           
 11559                           ;incstack = 0
 11560                           ;putCharToTxBuf@byte stored from wreg
 11561   004F6C  6E05               	movwf	putCharToTxBuf@byte^0,c
 11562   004F6E                     
 11563                           ;serialTest.c: 106:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
 11564   004F6E  0E3B               	movlw	59
 11565   004F70  6458               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
 11566   004F72  EFBD  F027         	goto	u4711
 11567   004F76  EFBF  F027         	goto	u4710
 11568   004F7A                     u4711:
 11569   004F7A  EFC1  F027         	goto	l4413
 11570   004F7E                     u4710:
 11571   004F7E  0E00               	movlw	0
 11572   004F80  6E58               	movwf	_TxBufWriteCnt^0,c	;volatile
 11573   004F82                     l4413:
 11574                           
 11575                           ;serialTest.c: 107:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
 11576   004F82  0E00               	movlw	low _EUSART4TXbuf
 11577   004F84  2458               	addwf	_TxBufWriteCnt^0,w,c	;volatile
 11578   004F86  6ED9               	movwf	fsr2l,c
 11579   004F88  6ADA               	clrf	fsr2h,c
 11580   004F8A  0E01               	movlw	high _EUSART4TXbuf
 11581   004F8C  22DA               	addwfc	fsr2h,f,c
 11582   004F8E  C005  FFDF         	movff	putCharToTxBuf@byte,indf2
 11583   004F92  2A58               	incf	_TxBufWriteCnt^0,f,c	;volatile
 11584   004F94  0012               	return		;funcret
 11585   004F96                     __end_of_putCharToTxBuf:
 11586                           	callstack 0
 11587                           
 11588 ;; *************** function _DCmotorsInit *****************
 11589 ;; Defined at:
 11590 ;;		line 68 in file "dc_motor.c"
 11591 ;; Parameters:    Size  Location     Type
 11592 ;;  mL              2    4[COMRAM] PTR struct DC_motor
 11593 ;;		 -> main@motorLeft(9), 
 11594 ;;  mR              2    6[COMRAM] PTR struct DC_motor
 11595 ;;		 -> main@motorRight(9), 
 11596 ;; Auto vars:     Size  Location     Type
 11597 ;;		None
 11598 ;; Return value:  Size  Location     Type
 11599 ;;                  1    wreg      void 
 11600 ;; Registers used:
 11601 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11602 ;; Tracked objects:
 11603 ;;		On entry : 0/0
 11604 ;;		On exit  : 0/0
 11605 ;;		Unchanged: 0/0
 11606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11607 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11610 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11611 ;;Total ram usage:        4 bytes
 11612 ;; Hardware stack levels used: 1
 11613 ;; Hardware stack levels required when called: 2
 11614 ;; This function calls:
 11615 ;;		Nothing
 11616 ;; This function is called by:
 11617 ;;		_main
 11618 ;; This function uses a non-reentrant model
 11619 ;;
 11620                           
 11621                           	psect	text56
 11622   004516                     __ptext56:
 11623                           	callstack 0
 11624   004516                     _DCmotorsInit:
 11625                           	callstack 28
 11626   004516                     
 11627                           ;dc_motor.c: 70:     mL->power = 0;
 11628   004516  C005  FFD9         	movff	DCmotorsInit@mL,fsr2l
 11629   00451A  C006  FFDA         	movff	DCmotorsInit@mL+1,fsr2h
 11630   00451E  0E00               	movlw	0
 11631   004520  6EDF               	movwf	indf2,c
 11632   004522                     
 11633                           ;dc_motor.c: 71:     mL->direction = 1;
 11634   004522  EE20 F001          	lfsr	2,1
 11635   004526  5005               	movf	DCmotorsInit@mL^0,w,c
 11636   004528  26D9               	addwf	fsr2l,f,c
 11637   00452A  5006               	movf	(DCmotorsInit@mL+1)^0,w,c
 11638   00452C  22DA               	addwfc	fsr2h,f,c
 11639   00452E  0E01               	movlw	1
 11640   004530  6EDF               	movwf	indf2,c
 11641   004532                     
 11642                           ;dc_motor.c: 72:     mL->brakemode = 1;
 11643   004532  EE20 F002          	lfsr	2,2
 11644   004536  5005               	movf	DCmotorsInit@mL^0,w,c
 11645   004538  26D9               	addwf	fsr2l,f,c
 11646   00453A  5006               	movf	(DCmotorsInit@mL+1)^0,w,c
 11647   00453C  22DA               	addwfc	fsr2h,f,c
 11648   00453E  0E01               	movlw	1
 11649   004540  6EDF               	movwf	indf2,c
 11650   004542                     
 11651                           ;dc_motor.c: 73:     mL->posDutyHighByte = (unsigned char *)(&CCPR1H);
 11652   004542  EE20 F005          	lfsr	2,5
 11653   004546  5005               	movf	DCmotorsInit@mL^0,w,c
 11654   004548  26D9               	addwf	fsr2l,f,c
 11655   00454A  5006               	movf	(DCmotorsInit@mL+1)^0,w,c
 11656   00454C  22DA               	addwfc	fsr2h,f,c
 11657   00454E  0EAA               	movlw	170
 11658   004550  6EDE               	movwf	postinc2,c
 11659   004552  0E0F               	movlw	15
 11660   004554  6EDD               	movwf	postdec2,c
 11661   004556                     
 11662                           ;dc_motor.c: 74:     mL->negDutyHighByte = (unsigned char *)(&CCPR2H);
 11663   004556  EE20 F007          	lfsr	2,7
 11664   00455A  5005               	movf	DCmotorsInit@mL^0,w,c
 11665   00455C  26D9               	addwf	fsr2l,f,c
 11666   00455E  5006               	movf	(DCmotorsInit@mL+1)^0,w,c
 11667   004560  22DA               	addwfc	fsr2h,f,c
 11668   004562  0EA6               	movlw	166
 11669   004564  6EDE               	movwf	postinc2,c
 11670   004566  0E0F               	movlw	15
 11671   004568  6EDD               	movwf	postdec2,c
 11672   00456A                     
 11673                           ;dc_motor.c: 75:     mL->PWMperiod = 199 ;
 11674   00456A  EE20 F003          	lfsr	2,3
 11675   00456E  5005               	movf	DCmotorsInit@mL^0,w,c
 11676   004570  26D9               	addwf	fsr2l,f,c
 11677   004572  5006               	movf	(DCmotorsInit@mL+1)^0,w,c
 11678   004574  22DA               	addwfc	fsr2h,f,c
 11679   004576  0EC7               	movlw	199
 11680   004578  6EDE               	movwf	postinc2,c
 11681   00457A  0E00               	movlw	0
 11682   00457C  6EDD               	movwf	postdec2,c
 11683   00457E                     
 11684                           ;dc_motor.c: 77:     mR->power = 0;
 11685   00457E  C007  FFD9         	movff	DCmotorsInit@mR,fsr2l
 11686   004582  C008  FFDA         	movff	DCmotorsInit@mR+1,fsr2h
 11687   004586  0E00               	movlw	0
 11688   004588  6EDF               	movwf	indf2,c
 11689                           
 11690                           ;dc_motor.c: 78:     mR->direction = 1;
 11691   00458A  EE20 F001          	lfsr	2,1
 11692   00458E  5007               	movf	DCmotorsInit@mR^0,w,c
 11693   004590  26D9               	addwf	fsr2l,f,c
 11694   004592  5008               	movf	(DCmotorsInit@mR+1)^0,w,c
 11695   004594  22DA               	addwfc	fsr2h,f,c
 11696   004596  0E01               	movlw	1
 11697   004598  6EDF               	movwf	indf2,c
 11698                           
 11699                           ;dc_motor.c: 79:     mR->brakemode = 1;
 11700   00459A  EE20 F002          	lfsr	2,2
 11701   00459E  5007               	movf	DCmotorsInit@mR^0,w,c
 11702   0045A0  26D9               	addwf	fsr2l,f,c
 11703   0045A2  5008               	movf	(DCmotorsInit@mR+1)^0,w,c
 11704   0045A4  22DA               	addwfc	fsr2h,f,c
 11705   0045A6  0E01               	movlw	1
 11706   0045A8  6EDF               	movwf	indf2,c
 11707                           
 11708                           ;dc_motor.c: 80:     mR->posDutyHighByte = (unsigned char *)(&CCPR3H);
 11709   0045AA  EE20 F005          	lfsr	2,5
 11710   0045AE  5007               	movf	DCmotorsInit@mR^0,w,c
 11711   0045B0  26D9               	addwf	fsr2l,f,c
 11712   0045B2  5008               	movf	(DCmotorsInit@mR+1)^0,w,c
 11713   0045B4  22DA               	addwfc	fsr2h,f,c
 11714   0045B6  0E25               	movlw	37
 11715   0045B8  6EDE               	movwf	postinc2,c
 11716   0045BA  0E0F               	movlw	15
 11717   0045BC  6EDD               	movwf	postdec2,c
 11718                           
 11719                           ;dc_motor.c: 81:     mR->negDutyHighByte = (unsigned char *)(&CCPR4H);
 11720   0045BE  EE20 F007          	lfsr	2,7
 11721   0045C2  5007               	movf	DCmotorsInit@mR^0,w,c
 11722   0045C4  26D9               	addwf	fsr2l,f,c
 11723   0045C6  5008               	movf	(DCmotorsInit@mR+1)^0,w,c
 11724   0045C8  22DA               	addwfc	fsr2h,f,c
 11725   0045CA  0E21               	movlw	33
 11726   0045CC  6EDE               	movwf	postinc2,c
 11727   0045CE  0E0F               	movlw	15
 11728   0045D0  6EDD               	movwf	postdec2,c
 11729                           
 11730                           ;dc_motor.c: 82:     mR->PWMperiod = 199 ;
 11731   0045D2  EE20 F003          	lfsr	2,3
 11732   0045D6  5007               	movf	DCmotorsInit@mR^0,w,c
 11733   0045D8  26D9               	addwf	fsr2l,f,c
 11734   0045DA  5008               	movf	(DCmotorsInit@mR+1)^0,w,c
 11735   0045DC  22DA               	addwfc	fsr2h,f,c
 11736   0045DE  0EC7               	movlw	199
 11737   0045E0  6EDE               	movwf	postinc2,c
 11738   0045E2  0E00               	movlw	0
 11739   0045E4  6EDD               	movwf	postdec2,c
 11740   0045E6  0012               	return		;funcret
 11741   0045E8                     __end_of_DCmotorsInit:
 11742                           	callstack 0
 11743                           
 11744 ;; *************** function _HighISR *****************
 11745 ;; Defined at:
 11746 ;;		line 132 in file "serialTest.c"
 11747 ;; Parameters:    Size  Location     Type
 11748 ;;		None
 11749 ;; Auto vars:     Size  Location     Type
 11750 ;;		None
 11751 ;; Return value:  Size  Location     Type
 11752 ;;                  1    wreg      void 
 11753 ;; Registers used:
 11754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11755 ;; Tracked objects:
 11756 ;;		On entry : 0/0
 11757 ;;		On exit  : 0/0
 11758 ;;		Unchanged: 0/0
 11759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11762 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11763 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11764 ;;Total ram usage:        2 bytes
 11765 ;; Hardware stack levels used: 1
 11766 ;; Hardware stack levels required when called: 1
 11767 ;; This function calls:
 11768 ;;		_getCharFromTxBuf
 11769 ;;		_putCharToRxBuf
 11770 ;;		i2_isDataInTxBuf
 11771 ;; This function is called by:
 11772 ;;		Interrupt level 2
 11773 ;; This function uses a non-reentrant model
 11774 ;;
 11775                           
 11776                           	psect	intcode
 11777   000008                     __pintcode:
 11778                           	callstack 0
 11779   000008                     _HighISR:
 11780                           	callstack 21
 11781                           
 11782                           ;incstack = 0
 11783   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11784   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
 11785   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
 11786   000012                     
 11787                           ;serialTest.c: 134:     if (PIR4bits.RC4IF){
 11788   000012  010E               	movlb	14	; () banked
 11789   000014  A737               	btfss	55,3,b	;volatile
 11790   000016  EF0F  F000         	goto	i2u542_41
 11791   00001A  EF11  F000         	goto	i2u542_40
 11792   00001E                     i2u542_41:
 11793   00001E  EF14  F000         	goto	i2l4881
 11794   000022                     i2u542_40:
 11795   000022                     
 11796                           ; BSR set to: 14
 11797                           ;serialTest.c: 135:         putCharToRxBuf(RC4REG);
 11798   000022  51E3               	movf	227,w,b	;volatile
 11799   000024  ECCB  F027         	call	_putCharToRxBuf
 11800   000028                     i2l4881:
 11801                           
 11802                           ;serialTest.c: 138:     if (PIR4bits.TX4IF && PIE4bits.TX4IE == 1){
 11803   000028  010E               	movlb	14	; () banked
 11804   00002A  A537               	btfss	55,2,b	;volatile
 11805   00002C  EF1A  F000         	goto	i2u543_41
 11806   000030  EF1C  F000         	goto	i2u543_40
 11807   000034                     i2u543_41:
 11808   000034  EF35  F000         	goto	i2l391
 11809   000038                     i2u543_40:
 11810   000038                     
 11811                           ; BSR set to: 14
 11812   000038  A52D               	btfss	45,2,b	;volatile
 11813   00003A  EF21  F000         	goto	i2u544_41
 11814   00003E  EF23  F000         	goto	i2u544_40
 11815   000042                     i2u544_41:
 11816   000042  EF35  F000         	goto	i2l391
 11817   000046                     i2u544_40:
 11818   000046                     
 11819                           ; BSR set to: 14
 11820                           ;serialTest.c: 139:         if (isDataInTxBuf() == 1){
 11821   000046  EC30  F028         	call	i2_isDataInTxBuf	;wreg free
 11822   00004A  06E8               	decf	wreg,f,c
 11823   00004C  A4D8               	btfss	status,2,c
 11824   00004E  EF2B  F000         	goto	i2u545_41
 11825   000052  EF2D  F000         	goto	i2u545_40
 11826   000056                     i2u545_41:
 11827   000056  EF33  F000         	goto	i2l389
 11828   00005A                     i2u545_40:
 11829   00005A                     
 11830                           ;serialTest.c: 140:            TX4REG = getCharFromTxBuf();
 11831   00005A  EC76  F027         	call	_getCharFromTxBuf	;wreg free
 11832   00005E  010E               	movlb	14	; () banked
 11833   000060  6FE4               	movwf	228,b	;volatile
 11834                           
 11835                           ;serialTest.c: 141:         }
 11836   000062  EF35  F000         	goto	i2l391
 11837   000066                     i2l389:
 11838                           
 11839                           ;serialTest.c: 143:            PIE4bits.TX4IE = 0;
 11840   000066  010E               	movlb	14	; () banked
 11841   000068  952D               	bcf	45,2,b	;volatile
 11842   00006A                     i2l391:
 11843                           
 11844                           ; BSR set to: 14
 11845   00006A  C004  FFDA         	movff	??_HighISR+1,fsr2h
 11846   00006E  C003  FFD9         	movff	??_HighISR,fsr2l
 11847   000072  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11848   000074  0011               	retfie		f
 11849   000076                     __end_of_HighISR:
 11850                           	callstack 0
 11851                           
 11852 ;; *************** function i2_isDataInTxBuf *****************
 11853 ;; Defined at:
 11854 ;;		line 113 in file "serialTest.c"
 11855 ;; Parameters:    Size  Location     Type
 11856 ;;		None
 11857 ;; Auto vars:     Size  Location     Type
 11858 ;;		None
 11859 ;; Return value:  Size  Location     Type
 11860 ;;                  1    wreg      unsigned char 
 11861 ;; Registers used:
 11862 ;;		wreg, status,2, status,0
 11863 ;; Tracked objects:
 11864 ;;		On entry : 0/0
 11865 ;;		On exit  : 0/0
 11866 ;;		Unchanged: 0/0
 11867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11872 ;;Total ram usage:        0 bytes
 11873 ;; Hardware stack levels used: 1
 11874 ;; This function calls:
 11875 ;;		Nothing
 11876 ;; This function is called by:
 11877 ;;		_HighISR
 11878 ;; This function uses a non-reentrant model
 11879 ;;
 11880                           
 11881                           	psect	text58
 11882   005060                     __ptext58:
 11883                           	callstack 0
 11884   005060                     i2_isDataInTxBuf:
 11885                           	callstack 21
 11886   005060                     
 11887                           ;serialTest.c: 114:     return (TxBufWriteCnt!=TxBufReadCnt);
 11888   005060  5057               	movf	_TxBufReadCnt^0,w,c	;volatile
 11889   005062  1858               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
 11890   005064  A4D8               	btfss	status,2,c
 11891   005066  EF37  F028         	goto	i2u263_41
 11892   00506A  EF3A  F028         	goto	i2u263_40
 11893   00506E                     i2u263_41:
 11894   00506E  0E01               	movlw	1
 11895   005070  EF3B  F028         	goto	i2u264_40
 11896   005074                     i2u263_40:
 11897   005074  0E00               	movlw	0
 11898   005076                     i2u264_40:
 11899   005076  0012               	return		;funcret
 11900   005078                     __end_ofi2_isDataInTxBuf:
 11901                           	callstack 0
 11902                           
 11903 ;; *************** function _putCharToRxBuf *****************
 11904 ;; Defined at:
 11905 ;;		line 85 in file "serialTest.c"
 11906 ;; Parameters:    Size  Location     Type
 11907 ;;  byte            1    wreg     unsigned char 
 11908 ;; Auto vars:     Size  Location     Type
 11909 ;;  byte            1    0[COMRAM] unsigned char 
 11910 ;; Return value:  Size  Location     Type
 11911 ;;                  1    wreg      void 
 11912 ;; Registers used:
 11913 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11914 ;; Tracked objects:
 11915 ;;		On entry : 0/0
 11916 ;;		On exit  : 0/0
 11917 ;;		Unchanged: 0/0
 11918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11920 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11922 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11923 ;;Total ram usage:        1 bytes
 11924 ;; Hardware stack levels used: 1
 11925 ;; This function calls:
 11926 ;;		Nothing
 11927 ;; This function is called by:
 11928 ;;		_HighISR
 11929 ;; This function uses a non-reentrant model
 11930 ;;
 11931                           
 11932                           	psect	text59
 11933   004F96                     __ptext59:
 11934                           	callstack 0
 11935   004F96                     _putCharToRxBuf:
 11936                           	callstack 21
 11937                           
 11938                           ;incstack = 0
 11939                           ;putCharToRxBuf@byte stored from wreg
 11940   004F96  6E01               	movwf	putCharToRxBuf@byte^0,c
 11941   004F98                     
 11942                           ;serialTest.c: 86:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
 11943   004F98  0E13               	movlw	19
 11944   004F9A  645A               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
 11945   004F9C  EFD2  F027         	goto	i2u534_41
 11946   004FA0  EFD4  F027         	goto	i2u534_40
 11947   004FA4                     i2u534_41:
 11948   004FA4  EFD6  F027         	goto	i2l4743
 11949   004FA8                     i2u534_40:
 11950   004FA8  0E00               	movlw	0
 11951   004FAA  6E5A               	movwf	_RxBufWriteCnt^0,c	;volatile
 11952   004FAC                     i2l4743:
 11953                           
 11954                           ;serialTest.c: 87:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
 11955   004FAC  0ED7               	movlw	low _EUSART4RXbuf
 11956   004FAE  245A               	addwf	_RxBufWriteCnt^0,w,c	;volatile
 11957   004FB0  6ED9               	movwf	fsr2l,c
 11958   004FB2  6ADA               	clrf	fsr2h,c
 11959   004FB4  0E00               	movlw	high _EUSART4RXbuf
 11960   004FB6  22DA               	addwfc	fsr2h,f,c
 11961   004FB8  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
 11962   004FBC  2A5A               	incf	_RxBufWriteCnt^0,f,c	;volatile
 11963   004FBE  0012               	return		;funcret
 11964   004FC0                     __end_of_putCharToRxBuf:
 11965                           	callstack 0
 11966                           
 11967 ;; *************** function _getCharFromTxBuf *****************
 11968 ;; Defined at:
 11969 ;;		line 99 in file "serialTest.c"
 11970 ;; Parameters:    Size  Location     Type
 11971 ;;		None
 11972 ;; Auto vars:     Size  Location     Type
 11973 ;;		None
 11974 ;; Return value:  Size  Location     Type
 11975 ;;                  1    wreg      unsigned char 
 11976 ;; Registers used:
 11977 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11978 ;; Tracked objects:
 11979 ;;		On entry : 0/0
 11980 ;;		On exit  : 0/0
 11981 ;;		Unchanged: 0/0
 11982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11985 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11986 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11987 ;;Total ram usage:        2 bytes
 11988 ;; Hardware stack levels used: 1
 11989 ;; This function calls:
 11990 ;;		Nothing
 11991 ;; This function is called by:
 11992 ;;		_HighISR
 11993 ;; This function uses a non-reentrant model
 11994 ;;
 11995                           
 11996                           	psect	text60
 11997   004EEC                     __ptext60:
 11998                           	callstack 0
 11999   004EEC                     _getCharFromTxBuf:
 12000                           	callstack 21
 12001   004EEC                     
 12002                           ;serialTest.c: 100:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
 12003   004EEC  0E3B               	movlw	59
 12004   004EEE  6457               	cpfsgt	_TxBufReadCnt^0,c	;volatile
 12005   004EF0  EF7C  F027         	goto	i2u535_41
 12006   004EF4  EF7E  F027         	goto	i2u535_40
 12007   004EF8                     i2u535_41:
 12008   004EF8  EF80  F027         	goto	i2l4751
 12009   004EFC                     i2u535_40:
 12010   004EFC  0E00               	movlw	0
 12011   004EFE  6E57               	movwf	_TxBufReadCnt^0,c	;volatile
 12012   004F00                     i2l4751:
 12013                           
 12014                           ;serialTest.c: 101:     return EUSART4TXbuf[TxBufReadCnt++];
 12015   004F00  2A57               	incf	_TxBufReadCnt^0,f,c	;volatile
 12016   004F02  0457               	decf	_TxBufReadCnt^0,w,c	;volatile
 12017   004F04  6E01               	movwf	??_getCharFromTxBuf^0,c
 12018   004F06  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
 12019   004F08  0E00               	movlw	low _EUSART4TXbuf
 12020   004F0A  2401               	addwf	??_getCharFromTxBuf^0,w,c
 12021   004F0C  6ED9               	movwf	fsr2l,c
 12022   004F0E  0E01               	movlw	high _EUSART4TXbuf
 12023   004F10  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
 12024   004F12  6EDA               	movwf	fsr2h,c
 12025   004F14  50DF               	movf	indf2,w,c
 12026   004F16  0012               	return		;funcret
 12027   004F18                     __end_of_getCharFromTxBuf:
 12028                           	callstack 0
 12029                           
 12030                           	psect	rparam
 12031   000000                     
 12032                           	psect	temp
 12033   00005B                     btemp:
 12034                           	callstack 0
 12035   00005B                     	ds	1
 12036   000000                     int$flags	set	btemp
 12037   000000                     wtemp8	set	btemp+1
 12038   000000                     ttemp5	set	btemp+1
 12039   000000                     ttemp6	set	btemp+4
 12040   000000                     ttemp7	set	btemp+8
 12041                           
 12042                           	psect	idloc
 12043                           
 12044                           ;Config register IDLOC0 @ 0x200000
 12045                           ;	unspecified, using default values
 12046   200000                     	org	2097152
 12047   200000  0FFF               	dw	4095
 12048                           
 12049                           ;Config register IDLOC1 @ 0x200002
 12050                           ;	unspecified, using default values
 12051   200002                     	org	2097154
 12052   200002  0FFF               	dw	4095
 12053                           
 12054                           ;Config register IDLOC2 @ 0x200004
 12055                           ;	unspecified, using default values
 12056   200004                     	org	2097156
 12057   200004  0FFF               	dw	4095
 12058                           
 12059                           ;Config register IDLOC3 @ 0x200006
 12060                           ;	unspecified, using default values
 12061   200006                     	org	2097158
 12062   200006  0FFF               	dw	4095
 12063                           
 12064                           ;Config register IDLOC4 @ 0x200008
 12065                           ;	unspecified, using default values
 12066   200008                     	org	2097160
 12067   200008  0FFF               	dw	4095
 12068                           
 12069                           ;Config register IDLOC5 @ 0x20000A
 12070                           ;	unspecified, using default values
 12071   20000A                     	org	2097162
 12072   20000A  0FFF               	dw	4095
 12073                           
 12074                           ;Config register IDLOC6 @ 0x20000C
 12075                           ;	unspecified, using default values
 12076   20000C                     	org	2097164
 12077   20000C  0FFF               	dw	4095
 12078                           
 12079                           ;Config register IDLOC7 @ 0x20000E
 12080                           ;	unspecified, using default values
 12081   20000E                     	org	2097166
 12082   20000E  0FFF               	dw	4095
 12083                           
 12084                           	psect	config
 12085                           
 12086                           ;Config register CONFIG1L @ 0x300000
 12087                           ;	External Oscillator mode Selection bits
 12088                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 12089                           ;	Power-up default value for COSC bits
 12090                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 12091   300000                     	org	3145728
 12092   300000  AA                 	db	170
 12093                           
 12094                           ;Config register CONFIG1H @ 0x300001
 12095                           ;	unspecified, using default values
 12096                           ;	Clock Out Enable bit
 12097                           ;	CLKOUTEN = 0x1, unprogrammed default
 12098                           ;	Clock Switch Enable bit
 12099                           ;	CSWEN = 0x1, unprogrammed default
 12100                           ;	Fail-Safe Clock Monitor Enable bit
 12101                           ;	FCMEN = 0x1, unprogrammed default
 12102   300001                     	org	3145729
 12103   300001  FF                 	db	255
 12104                           
 12105                           ;Config register CONFIG2L @ 0x300002
 12106                           ;	unspecified, using default values
 12107                           ;	Master Clear Enable bit
 12108                           ;	MCLRE = 0x1, unprogrammed default
 12109                           ;	Power-up Timer Enable bit
 12110                           ;	PWRTE = 0x1, unprogrammed default
 12111                           ;	Low-power BOR enable bit
 12112                           ;	LPBOREN = 0x1, unprogrammed default
 12113                           ;	Brown-out Reset Enable bits
 12114                           ;	BOREN = 0x3, unprogrammed default
 12115   300002                     	org	3145730
 12116   300002  FF                 	db	255
 12117                           
 12118                           ;Config register CONFIG2H @ 0x300003
 12119                           ;	unspecified, using default values
 12120                           ;	Brown Out Reset Voltage selection bits
 12121                           ;	BORV = 0x3, unprogrammed default
 12122                           ;	ZCD Disable bit
 12123                           ;	ZCD = 0x1, unprogrammed default
 12124                           ;	PPSLOCK bit One-Way Set Enable bit
 12125                           ;	PPS1WAY = 0x1, unprogrammed default
 12126                           ;	Stack Full/Underflow Reset Enable bit
 12127                           ;	STVREN = 0x1, unprogrammed default
 12128                           ;	Debugger Enable bit
 12129                           ;	DEBUG = 0x1, unprogrammed default
 12130                           ;	Extended Instruction Set Enable bit
 12131                           ;	XINST = 0x1, unprogrammed default
 12132   300003                     	org	3145731
 12133   300003  FF                 	db	255
 12134                           
 12135                           ;Config register CONFIG3L @ 0x300004
 12136                           ;	WDT Period Select bits
 12137                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 12138                           ;	WDT operating mode
 12139                           ;	WDTE = OFF, WDT Disabled
 12140   300004                     	org	3145732
 12141   300004  9F                 	db	159
 12142                           
 12143                           ;Config register CONFIG3H @ 0x300005
 12144                           ;	unspecified, using default values
 12145                           ;	WDT Window Select bits
 12146                           ;	WDTCWS = 0x7, unprogrammed default
 12147                           ;	WDT input clock selector
 12148                           ;	WDTCCS = 0x7, unprogrammed default
 12149   300005                     	org	3145733
 12150   300005  FF                 	db	255
 12151                           
 12152                           ;Config register CONFIG4L @ 0x300006
 12153                           ;	unspecified, using default values
 12154                           ;	Write Protection Block 0
 12155                           ;	WRT0 = 0x1, unprogrammed default
 12156                           ;	Write Protection Block 1
 12157                           ;	WRT1 = 0x1, unprogrammed default
 12158                           ;	Write Protection Block 2
 12159                           ;	WRT2 = 0x1, unprogrammed default
 12160                           ;	Write Protection Block 3
 12161                           ;	WRT3 = 0x1, unprogrammed default
 12162                           ;	Write Protection Block 3
 12163                           ;	WRT4 = 0x1, unprogrammed default
 12164                           ;	Write Protection Block 3
 12165                           ;	WRT5 = 0x1, unprogrammed default
 12166                           ;	Write Protection Block 3
 12167                           ;	WRT6 = 0x1, unprogrammed default
 12168                           ;	Write Protection Block 3
 12169                           ;	WRT7 = 0x1, unprogrammed default
 12170   300006                     	org	3145734
 12171   300006  FF                 	db	255
 12172                           
 12173                           ;Config register CONFIG4H @ 0x300007
 12174                           ;	unspecified, using default values
 12175                           ;	Configuration Register Write Protection bit
 12176                           ;	WRTC = 0x1, unprogrammed default
 12177                           ;	Boot Block Write Protection bit
 12178                           ;	WRTB = 0x1, unprogrammed default
 12179                           ;	Data EEPROM Write Protection bit
 12180                           ;	WRTD = 0x1, unprogrammed default
 12181                           ;	Scanner Enable bit
 12182                           ;	SCANE = 0x1, unprogrammed default
 12183                           ;	Low Voltage Programming Enable bit
 12184                           ;	LVP = 0x1, unprogrammed default
 12185   300007                     	org	3145735
 12186   300007  FF                 	db	255
 12187                           
 12188                           ;Config register CONFIG5L @ 0x300008
 12189                           ;	unspecified, using default values
 12190                           ;	UserNVM Program Memory Code Protection bit
 12191                           ;	CP = 0x1, unprogrammed default
 12192                           ;	DataNVM Memory Code Protection bit
 12193                           ;	CPD = 0x1, unprogrammed default
 12194   300008                     	org	3145736
 12195   300008  FF                 	db	255
 12196                           
 12197                           ;Config register CONFIG5H @ 0x300009
 12198                           ;	unspecified, using default values
 12199   300009                     	org	3145737
 12200   300009  FF                 	db	255
 12201                           
 12202                           ;Config register CONFIG6L @ 0x30000A
 12203                           ;	unspecified, using default values
 12204                           ;	Table Read Protection Block 0
 12205                           ;	EBTR0 = 0x1, unprogrammed default
 12206                           ;	Table Read Protection Block 1
 12207                           ;	EBTR1 = 0x1, unprogrammed default
 12208                           ;	Table Read Protection Block 2
 12209                           ;	EBTR2 = 0x1, unprogrammed default
 12210                           ;	Table Read Protection Block 3
 12211                           ;	EBTR3 = 0x1, unprogrammed default
 12212                           ;	Table Read Protection Block 4
 12213                           ;	EBTR4 = 0x1, unprogrammed default
 12214                           ;	Table Read Protection Block 5
 12215                           ;	EBTR5 = 0x1, unprogrammed default
 12216                           ;	Table Read Protection Block 6
 12217                           ;	EBTR6 = 0x1, unprogrammed default
 12218                           ;	Table Read Protection Block 7
 12219                           ;	EBTR7 = 0x1, unprogrammed default
 12220   30000A                     	org	3145738
 12221   30000A  FF                 	db	255
 12222                           
 12223                           ;Config register CONFIG6H @ 0x30000B
 12224                           ;	unspecified, using default values
 12225                           ;	Boot Block Table Read Protection bit
 12226                           ;	EBTRB = 0x1, unprogrammed default
 12227   30000B                     	org	3145739
 12228   30000B  FF                 	db	255
 12229                           tosu	equ	0xFFF
 12230                           tosh	equ	0xFFE
 12231                           tosl	equ	0xFFD
 12232                           stkptr	equ	0xFFC
 12233                           pclatu	equ	0xFFB
 12234                           pclath	equ	0xFFA
 12235                           pcl	equ	0xFF9
 12236                           tblptru	equ	0xFF8
 12237                           tblptrh	equ	0xFF7
 12238                           tblptrl	equ	0xFF6
 12239                           tablat	equ	0xFF5
 12240                           prodh	equ	0xFF4
 12241                           prodl	equ	0xFF3
 12242                           indf0	equ	0xFEF
 12243                           postinc0	equ	0xFEE
 12244                           postdec0	equ	0xFED
 12245                           preinc0	equ	0xFEC
 12246                           plusw0	equ	0xFEB
 12247                           fsr0h	equ	0xFEA
 12248                           fsr0l	equ	0xFE9
 12249                           wreg	equ	0xFE8
 12250                           indf1	equ	0xFE7
 12251                           postinc1	equ	0xFE6
 12252                           postdec1	equ	0xFE5
 12253                           preinc1	equ	0xFE4
 12254                           plusw1	equ	0xFE3
 12255                           fsr1h	equ	0xFE2
 12256                           fsr1l	equ	0xFE1
 12257                           bsr	equ	0xFE0
 12258                           indf2	equ	0xFDF
 12259                           postinc2	equ	0xFDE
 12260                           postdec2	equ	0xFDD
 12261                           preinc2	equ	0xFDC
 12262                           plusw2	equ	0xFDB
 12263                           fsr2h	equ	0xFDA
 12264                           fsr2l	equ	0xFD9
 12265                           status	equ	0xFD8

Data Sizes:
    Strings     41
    Constant    0
    Data        0
    BSS         177
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160    119     152
    BANK1           256     70     210
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[15]), STR_1(CODE[18]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[15]), STR_1(CODE[18]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[15]), STR_1(CODE[18]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2474$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[15]), STR_1(CODE[18]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> ADC2String@buf(COMRAM[40]), main@string4(BANK1[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2390$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2390$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 20
		 -> main@string4(BANK1[20]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhllllll[1]), CCPR2H(BITBIGSFRhhhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhllllll[1]), CCPR1H(BITBIGSFRhhhhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorRight(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhllllll[1]), CCPR2H(BITBIGSFRhhhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhllllll[1]), CCPR1H(BITBIGSFRhhhhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorLeft(BANK1[9]), 

    right45@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhllllll[1]), CCPR2H(BITBIGSFRhhhhlll[1]), 

    right45@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhllllll[1]), CCPR1H(BITBIGSFRhhhhlll[1]), 

    right45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorRight(BANK1[9]), 

    right45@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhllllll[1]), CCPR2H(BITBIGSFRhhhhlll[1]), 

    right45@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhllllll[1]), CCPR1H(BITBIGSFRhhhhlll[1]), 

    right45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorLeft(BANK1[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhllllll[1]), CCPR2H(BITBIGSFRhhhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhllllll[1]), CCPR1H(BITBIGSFRhhhhlll[1]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhllllll[1]), CCPR2H(BITBIGSFRhhhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhllllll[1]), CCPR1H(BITBIGSFRhhhhlll[1]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhllllll[1]), CCPR2H(BITBIGSFRhhhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhllllll[1]), CCPR1H(BITBIGSFRhhhhlll[1]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhllllll[1]), CCPR2H(BITBIGSFRhhhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhllllll[1]), CCPR1H(BITBIGSFRhhhhlll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhllllll[1]), CCPR2H(BITBIGSFRhhhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhllllll[1]), CCPR1H(BITBIGSFRhhhhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorRight(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhllllll[1]), CCPR2H(BITBIGSFRhhhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhllllll[1]), CCPR1H(BITBIGSFRhhhhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorLeft(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhllllll[1]), CCPR2H(BITBIGSFRhhhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhllllll[1]), CCPR1H(BITBIGSFRhhhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorRight(BANK1[9]), main@motorLeft(BANK1[9]), 

    DCmotorsInit@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhllllll[1]), CCPR2H(BITBIGSFRhhhhlll[1]), 

    DCmotorsInit@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhllllll[1]), CCPR1H(BITBIGSFRhhhhlll[1]), 

    DCmotorsInit@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorRight(BANK1[9]), 

    DCmotorsInit@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhllllll[1]), CCPR2H(BITBIGSFRhhhhlll[1]), 

    DCmotorsInit@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhllllll[1]), CCPR1H(BITBIGSFRhhhhlll[1]), 

    DCmotorsInit@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorLeft(BANK1[9]), 

    motorRight.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhllllll[1]), CCPR2H(BITBIGSFRhhhhlll[1]), 

    motorRight.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhllllll[1]), CCPR1H(BITBIGSFRhhhhlll[1]), 

    S107DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhllllll[1]), CCPR2H(BITBIGSFRhhhhlll[1]), 

    motorLeft.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhllllll[1]), CCPR2H(BITBIGSFRhhhhlll[1]), 

    S107DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhllllll[1]), CCPR1H(BITBIGSFRhhhhlll[1]), 

    motorLeft.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhllllll[1]), CCPR1H(BITBIGSFRhhhhlll[1]), 

    colorDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorRight(BANK1[9]), 

    colorDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorLeft(BANK1[9]), 

    colorDetect@whiteRGBVal	PTR struct RGB size(2) Largest target is 8
		 -> main@whiteRGBVal(BANK1[8]), 

    colorDetect@ambientRGBVal	PTR struct RGB size(2) Largest target is 8
		 -> main@ambientRGBVal(BANK1[8]), 

    whiteCal@v	PTR struct RGB size(2) Largest target is 8
		 -> main@whiteRGBVal(BANK1[8]), 

    ambientCal@v	PTR struct RGB size(2) Largest target is 8
		 -> main@ambientRGBVal(BANK1[8]), 

    getColor@v	PTR struct RGB size(2) Largest target is 8
		 -> main@whiteRGBVal(BANK1[8]), main@ambientRGBVal(BANK1[8]), main@RGBVal(BANK1[8]), colorDetect@RGBVal(BANK0[8]), 


Critical Paths under _main in COMRAM

    _whiteCal->_getColor
    _stop->_setMotorPWM
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _colorDetect->___fldiv
    _right45->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flsub
    ___fldiv->___flsub
    _ambientCal->_getColor
    _getColor->_color_read_Blue
    _getColor->_color_read_Clear
    _getColor->_color_read_Green
    _getColor->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               172   172      0   75011
                                            117 BANK0      2     2      0
                                              0 BANK1     70    70      0
                       _DCmotorsInit
                   _TxBufferedString
                            ___fldiv
                             ___flge
                           ___xxtofl
                         _ambientCal
                        _colorDetect
                   _color_click_init
                           _getColor
                    _initDCmotorsPWM
                         _initUSART4
                          _sendTxBuf
                            _sprintf
                               _stop
                           _whiteCal
 ---------------------------------------------------------------------------------
 (1) _whiteCal                                             6     4      2     988
                                             17 COMRAM     6     4      2
                           _getColor
 ---------------------------------------------------------------------------------
 (1) _stop                                                 4     0      4    2331
                                             23 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12   34345
                                             92 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   33667
                                             84 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   33197
                                             84 COMRAM     2     2      0
                                             67 BANK0     17    11      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   27048
                                             82 COMRAM     2     2      0
                                             16 BANK0     51    44      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             78 COMRAM     4     0      4
                                              0 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             31 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colorDetect                                         56    44     12   24436
                                             78 COMRAM     2     2      0
                                              0 BANK0     50    38     12
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _fullSpeedAhead
                           _getColor
                            _right45
 ---------------------------------------------------------------------------------
 (2) _right45                                              6     2      4    2441
                                             23 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       4     0      4    2309
                                             23 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1981
                                             17 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             10 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1126
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4257
                                             45 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2960
                                             20 COMRAM    25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    5350
                                             53 COMRAM    12     4      8
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2615
                                             53 COMRAM    25    17      8
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _ambientCal                                           6     4      2     988
                                             17 COMRAM     6     4      2
                           _getColor
 ---------------------------------------------------------------------------------
 (2) _getColor                                             2     0      2     844
                                             15 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     143
                                              5 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DCmotorsInit                                         4     0      4     416
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
                    i2_isDataInTxBuf
 ---------------------------------------------------------------------------------
 (10) i2_isDataInTxBuf                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DCmotorsInit
   _TxBufferedString
     _putCharToTxBuf
   ___fldiv
     ___flmul (ARG)
       ___fladd (ARG)
       ___xxtofl (ARG)
     ___flsub (ARG)
       ___fladd
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flge
     ___flmul (ARG)
     ___flsub (ARG)
   ___xxtofl
   _ambientCal
     _getColor
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
   _colorDetect
     ___fldiv
     ___flge
     ___flmul
     ___flsub
     ___xxtofl
     _fullSpeedAhead
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _getColor
     _right45
       _setMotorPWM
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _getColor
   _initDCmotorsPWM
   _initUSART4
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
   _stop
     _setMotorPWM
   _whiteCal
     _getColor

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf
   i2_isDataInTxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     46      D2       7       82.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     77      98       5       95.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBIGSFRlhlh       52      0       0      41        0.0%
BITBIGSFRlhlllh     37      0       0      43        0.0%
BITBIGSFRhhhhhl     32      0       0      33        0.0%
BITBIGSFRllllhl     2A      0       0      54        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRlllhh      20      0       0      46        0.0%
BITBIGSFRllllhh     1E      0       0      48        0.0%
BITBIGSFRhhhhll     17      0       0      37        0.0%
BITBIGSFRllllhh     11      0       0      49        0.0%
BITBIGSFRhhhhlh      E      0       0      34        0.0%
BITBIGSFRhhhhhh      D      0       0      32        0.0%
BITBIGSFRlllhl       C      0       0      47        0.0%
BITBIGSFRllllhl      9      0       0      56        0.0%
BITBIGSFRllllhl      9      0       0      55        0.0%
BITBIGSFRlhllll      8      0       0      44        0.0%
BITBIGSFRlllllh      6      0       0      58        0.0%
BITBIGSFRllllhl      6      0       0      53        0.0%
BITBIGSFRllllhl      5      0       0      52        0.0%
BITBIGSFRhhhl        5      0       0      38        0.0%
BITBIGSFRllllhl      5      0       0      57        0.0%
BITBIGSFRllllhh      3      0       0      51        0.0%
BITBIGSFRlhllh       2      0       0      42        0.0%
BITBIGSFRhhhhll      2      0       0      36        0.0%
BITBIGSFRhhhhlh      1      0       0      35        0.0%
BITBIGSFRllllhh      1      0       0      50        0.0%
BITBIGSFRlhh         1      0       0      40        0.0%
BITBIGSFRhlh         1      0       0      39        0.0%
BITBIGSFRllh         1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C4      60        0.0%
DATA                 0      0     1C4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Dec 13 17:19:45 2022

               _color_read_Red 4B92                   ___fldiv@aexp 004E                   ___fldiv@bexp 004D  
                 ___fldiv@sign 0046                _color_read_Blue 4C82                             l31 4BE0  
                           l40 4C80                             l25 4E8C                             l34 4C30  
                           l43 4A98                             l28 502C                             l37 4CD0  
                           l53 4430                             l48 4514                             l73 18D4  
          ___wmul@multiplicand 0007               _color_read_Clear 4C32               _color_read_Green 4BE2  
                          l100 4F6A                            l103 4FC0                            l112 50A0  
                          l121 4DE0                            l106 4FE6                            l115 508C  
                          l109 5096                            l118 5082                            l250 47EA  
                          l260 3DDA                            l253 45E6                            l281 414A  
                          l329 4EEA                            l521 3F3E                            l266 4874  
                          l275 40C4                            l284 49D4                            l372 505E  
                          l508 3C6E                            l382 5046                            l369 4F94  
                          l378 4EBC                            l394 500C                            l653 475A  
                          l664 424E                            l922 24BE                            l659 4208  
                          l931 278E                            l923 24AC                            l691 4044  
                          l924 2472                            l668 4E58                            l939 25D8  
                          l948 26A8                            l964 4D16                            l892 4962  
                          l981 2D76                            l949 2696                            l885 495A  
                          l990 2E5E                            l976 2F52                            l978 2DB2  
                          l987 2DF8                            l989 2E70                            _abs 4DE2  
                          _pad 4876                            wreg 000FE8                   ___flmul@aexp 0026  
                 ___flmul@bexp 0027                   ___flmul@sign 0021                   ___flmul@temp 002C  
                 ___flmul@prod 0028                   ___fltol@exp1 000E                           l1012 2BB8  
                         l1015 2A4A                           l1008 2854                           l1104 4898  
                         l1025 2B7A                           l1017 2AC2                           l1113 32E6  
                         l1018 2AB0                           l1115 32EE                           ?_abs 0017  
                         l1052 3AE6                           l1108 48EE                           l1116 3334  
                         l1141 1C68                           l1063 3A7E                           l1223 4E18  
                         l1127 34D6                           l1143 1AAE                           l1056 3A22  
                         l1232 3932                           l1208 4AEE                           l1072 4B40  
                         l1049 398A                           l1226 4E20                           l1218 434C  
                         l1138 22CE                           l1235 3876                           l1243 4A2A  
                         l1171 20B0                           l1252 4B90                           l1246 4A3A  
                         l1264 46B0                           l1272 4D9E                           l3201 23C2  
                         l4001 3476                           l1281 4D5A                           l1186 3258  
                         l3211 23E0                           l3203 23D0                           l1275 50A2  
                         l4003 3490                           l3301 261C                           l3221 23F4  
                         l3213 23E4                           l3205 23D4                           l4005 34A0  
                         l3311 2646                           l3303 262A                           l3231 2408  
                         l3223 23F8                           l3215 23E8                           l3207 23D8  
                         l3151 4634                           l3143 45E8                           l4007 34A6  
                         l3321 2678                           l3313 2656                           l3305 262C  
                         l3241 245A                           l3233 240C                           l3225 23FC  
                         l3217 23EC                           l3209 23DC                           l3161 22EA  
                         l3401 3C04                           l3153 466A                           l3145 45FA  
                         l4009 34B6                           l5001 3912                           l3331 26D2  
                         l3323 268E                           l3307 263A                           l3315 2658  
                         l3251 249E                           l3243 246A                           l3227 2400  
                         l3219 23F0                           l3235 2410                           l3171 231E  
                         l3163 22EC                           l3411 3C4E                           l3403 3C06  
                         l3147 460C                           l5003 3922                           l5011 18EC  
                         l3501 2CCC                           l3341 274E                           l3333 270C  
                         l3309 2642                           l3317 2666                           l3253 24A0  
                         l3245 2480                           l3237 2414                           l3229 2404  
                         l3181 2350                           l3165 22FC                           l3173 2326  
                         l3157 22D0                           l3405 3C18                           l3421 3E0E  
                         l3149 4616                           l5101 1C94                           l5021 1934  
                         l5013 18FA                           l3511 2D0A                           l3503 2CDC  
                         l3351 276E                           l3343 2752                           l3327 26B8  
                         l3335 270E                           l3319 266A                           l3271 2528  
                         l3263 24F0                           l3255 24AA                           l3247 248C  
                         l3239 243E                           l3191 2386                           l3183 2356  
                         l3175 2336                           l3167 230C                           l3159 22DC  
                         l3407 3C1E                           l3431 3E66                           l3423 3E12  
                         l3415 3DDC                           l5111 1CD8                           l5103 1C9C  
                         l5023 1944                           l5031 196C                           l5015 18FE  
                         l5007 18D6                           l4241 4BE2                           l3521 2D52  
                         l3513 2D1A                           l3505 2CDC                           l3601 27DC  
                         l3353 277C                           l3345 2760                           l3337 271E  
                         l3329 26C4                           l3273 252C                           l3265 2500  
                         l3257 24CC                           l3281 254C                           l3249 2490  
                         l3193 2396                           l3185 2364                           l3177 233C  
                         l3169 231C                           l4401 410C                           l3409 3C2E  
                         l3441 3EE8                           l3433 3E7A                           l3425 3E20  
                         l3417 3DE0                           l3361 4D68                           l5201 21CC  
                         l5121 1D1E                           l5113 1CEA                           l5105 1CA0  
                         l5041 19B6                           l5033 1992                           l5025 1954  
                         l5017 1922                           l5009 18DC                           l4411 4F7E  
                         l4243 4C28                           l4235 4B92                           l3531 2DA0  
                         l3523 2D66                           l3515 2D2A                           l3451 2BBA  
                         l3611 280C                           l3603 27E2                           l3355 277E  
                         l3347 2766                           l3339 272E                           l3283 2572  
                         l3291 25C8                           l3275 253A                           l3267 250E  
                         l3259 24DC                           l3195 2398                           l3187 2366  
                         l3179 234E                           l4403 4118                           l3371 3AE8  
                         l3435 3E88                           l3443 3EEE                           l3427 3E40  
                         l3419 3DEE                           l3363 4D7A                           l5211 221A  
                         l5203 21D4                           l5131 1E32                           l5123 1D82  
                         l5107 1CB2                           l5115 1CF2                           l5051 1A1E  
                         l5043 19CE                           l5035 19A4                           l5027 1960  
                         l5019 192C                           l4413 4F82                           l4253 4C32  
                         l4237 4BD8                           l4501 44B6                           l3541 2DE8  
                         l3533 2DB0                           l3525 2D74                           l3517 2D3A  
                         l3509 2CF0                           l3461 2BF6                           l3453 2BC6  
                         l3701 2B48                           l3621 2844                           l3613 280E  
                         l3605 27F2                           l3349 2768                           l3293 25EE  
                         l3285 25A6                           l3277 253C                           l3269 251C  
                         l3189 2376                           l3197 23A0                           l4421 3936  
                         l4261 3C8C                           l4405 4124                           l3381 3B2C  
                         l3373 3AEC                           l3445 3EFE                           l3437 3EB6  
                         l3429 3E5E                           l3365 4D7E                           l5221 2290  
                         l5213 222A                           l5205 21D8                           l5141 1EF0  
                         l5133 1E66                           l5125 1DDA                           l5117 1CFA  
                         l5109 1CC0                           l5053 1A30                           l5045 19D8  
                         l5037 19A8                           l5029 1968                           l4415 4F92  
                         l3367 4FC0                           l4247 4C82                           l4255 4C78  
                         l4503 44CE                           l3551 2E28                           l3543 2DF6  
                         l3535 2DC2                           l3527 2D80                           l3519 2D42  
                         l3471 2C26                           l3463 2C06                           l3455 2BD4  
                         l3711 2B9E                           l3703 2B62                           l3631 2894  
                         l3623 2864                           l3615 281E                           l3607 27F8  
                         l3295 25FE                           l3287 25A8                           l3279 2546  
                         l3199 23B0                           l4423 3946                           l4271 3D56  
                         l4263 3CE0                           l4407 4132                           l3391 3B82  
                         l3383 3B4C                           l3375 3AFA                           l3447 3F1E  
                         l3439 3ED6                           l3359 4D5C                           l5223 22A6  
                         l5215 225A                           l5207 21F6                           l5151 1FC4  
                         l5143 1F00                           l5135 1E98                           l5127 1E0E  
                         l5119 1D0A                           l5055 1A34                           l5039 19AE  
                         l5231 2F7C                           l5311 4A9A                           l4409 4F6E  
                         l3369 4FD0                           l4249 4CC8                           l4505 44DA  
                         l3561 2E9A                           l3553 2E56                           l3537 2DD8  
                         l3545 2E08                           l3529 2D9E                           l3481 2C5C  
                         l3473 2C2C                           l3465 2C08                           l3457 2BD6  
                         l3705 2B7E                           l3713 2BA4                           l3641 28E4  
                         l3633 289E                           l3625 2874                           l3617 282E  
                         l3609 27FE                           l3289 25B8                           l3721 4CE2  
                         l4441 3A0C                           l4433 39C4                           l4425 3954  
                         l4273 3D9A                           l4265 3CF4                           l5401 15A6  
                         l5321 0E2C                           l4361 4F52                           l4417 5048  
                         l3393 3B96                           l3385 3B50                           l3377 3B1A  
                         l5225 22AE                           l5217 2268                           l5209 2212  
                         l5161 1FFA                           l5153 1FD8                           l5145 1F34  
                         l5137 1EAE                           l5129 1E14                           l5081 1B68  
                         l5073 1ABE                           l5057 1A3A                           l5049 19F8  
                         l5241 2FCC                           l5233 2F8A                           l5313 4AA6  
                         l4521 43B0                           l4371 4A3C                           l4507 44F2  
                         l3571 2F12                           l3563 2EC4                           l3547 2E16  
                         l3539 2DDE                           l3491 2C9C                           l3483 2C6C  
                         l3475 2C3A                           l3459 2BE6                           l3467 2C10  
                         l3715 2BA8                           l3707 2B8E                           l3651 2926  
                         l3643 28F0                           l3635 28B4                           l3619 283E  
                         l3299 2612                           l4451 3A8C                           l4443 3A18  
                         l4435 39CC                           l4427 399A                           l4267 3CF8  
                         l4259 3C70                           l5411 16C4                           l5403 15FC  
                         l5331 0EA4                           l5323 0E38                           l4363 4F54  
                         l3395 3BA4                           l3387 3B5C                           l3379 3B1E  
                         l3731 471E                           l3811 4034                           l3803 3FF8  
                         l5219 2280                           l5171 20C2                           l5163 2002  
                         l5147 1F8A                           l5155 1FDC                           l5139 1EE0  
                         l5083 1BA6                           l5075 1AC4                           l5059 1A42  
                         l5067 1A5E                           l5251 3082                           l5243 2FEC  
                         l5235 2F98                           l5315 4AC4                           l4523 43D2  
                         l4515 4356                           l4701 4556                           l3581 2F48  
                         l3573 2F2E                           l3557 2E80                           l3565 2EC8  
                         l3549 2E1A                           l3493 2CAC                           l3485 2C6E  
                         l3477 2C3C                           l3469 2C20                           l3741 414C  
                         l3709 2B9C                           l3661 2988                           l3653 2936  
                         l3645 28FE                           l3637 28C0                           l3629 2888  
                         l4461 3AD4                           l4453 3A8E                           l4445 3A54  
                         l4437 39D8                           l4429 39B0                           l4269 3D3A  
                         l4381 49AC                           l4373 4964                           l5421 17BE  
                         l5413 171A                           l5405 162E                           l5341 1098  
                         l5333 0EDC                           l5325 0E48                           l4365 4F56  
                         l4357 4F42                           l3397 3BB6                           l3389 3B7A  
                         l3821 48A4                           l3733 472E                           l3725 46B2  
                         l3805 4004                           l3901 4B76                           l5181 20F2  
                         l5173 20D0                           l5165 200E                           l5157 1FEC  
                         l5149 1F90                           l5085 1BBA                           l5093 1C36  
                         l5077 1AF8                           l5069 1A78                           l5253 3098  
                         l5261 30B0                           l5245 3042                           l5237 2F9C  
                         l5229 2F54                           l5317 4AE4                           l4525 43EA  
                         l4517 4378                           l4509 434E                           l5501 351C  
                         ?_pad 0015                           l4703 456A                           l3903 508E  
                         l3911 5084                           l3575 2F32                           l3567 2EE2  
                         l3559 2E8C                           l3495 2CB4                           l3479 2C4C  
                         l3487 2C76                           l3751 41D6                           l3743 417A  
                         l3671 2A30                           l3663 29A4                           l3655 2950  
                         l3647 290A                           l3639 28D8                           l3591 279C  
                         l3719 4CD2                           l4463 3AD6                           l4455 3A92  
                         l4447 3A60                           l4439 3A0A                           l4383 49BC  
                         l4375 497C                           l4391 409E                           l5431 1894  
                         l5423 17CC                           l5415 1728                           l5407 163C  
                         l5351 11AA                           l5343 1146                           l5335 0F14  
                         l5327 0E5E                           l4367 4F58                           l4359 4F4C  
                         l3399 3BE4                           l3831 4DFC                           l3823 48B8  
                         l3815 4876                           l3735 4752                           l3727 46E0  
                         l3807 4014                           l5191 2124                           l5183 2102  
                         l5175 20E0                           l5167 2086                           l5159 1FF4  
                         l5095 1C70                           l5087 1BEE                           l5079 1B36  
                         l5271 316E                           l5255 30A0                           l5263 30E2  
                         l5239 2FAC                           l4711 4844                           l4527 43F6  
                         l4519 4394                           l5511 3528                           l5503 351E  
                         l4705 457E                           l3921 4DA6                           l3905 5092  
                         l3913 5088                           l3577 2F40                           l3569 2EF8  
                         l3497 2CB8                           l3489 2C86                           l3753 41E8  
                         l3745 418A                           l3681 2A6C                           l3673 2A3A  
                         l3665 29CE                           l3657 2960                           l3649 291A  
                         l3593 27AA                           l4457 3AB6                           l4449 3A6E  
                         l4385 49C8                           l4377 498C                           l4393 40AA  
                         l5433 18C6                           l5425 17FE                           l5417 175A  
                         l5409 1692                           l5361 1242                           l5353 11DC  
                         l5345 1156                           l5337 0F3C                           l5329 0E72  
                         l4369 5010                           l4481 4E68                           l3825 48BC  
                         l3817 4884                           l3737 4758                           l3729 46F0  
                         l3809 4024                           l3841 42E2                           l3833 4250  
                         l5193 2136                           l5185 2106                           l5177 20E4  
                         l5169 20A6                           l5097 1C80                           l5089 1BF6  
                         l5281 31EA                           l5273 3198                           l5265 3106  
                         l5257 30A8                           l5249 3072                           l5441 4B12  
                         l4713 485C                           l4529 440E                           l5521 3556  
                         l5513 3528                           l5505 3520                           l4731 4EA0  
                         l3923 4DAE                           l3915 5098                           l3907 507A  
                         l3579 2F46                           l3755 41F6                           l3747 41B8  
                         l3691 2ADE                           l3683 2A7A                           l3675 2A48  
                         l3667 2A04                           l3659 297C                           l3595 27AC  
                         l4459 3AC6                           l4379 499C                           l4395 40B6  
                         l4387 4046                           l5427 1830                           l5419 178C  
                         l5371 12FA                           l5363 1274                           l5355 11EE  
                         l5347 1188                           l5339 0FEA                           l4483 4E78  
                         l4651 4ECE                           l3827 48DA                           l3819 4890  
                         l3763 4E22                           l3771 3F40                           l3851 4344  
                         l3835 4270                           l5195 213A                           l5187 210C  
                         l5179 20EA                           l5099 1C8C                           l5275 31B8  
                         l5267 313A                           l5283 321A                           l5443 4B2E  
                         l5435 4AF0                           l4707 47EC                           l5531 35C6  
                         l5523 3562                           l5515 3528                           l5507 3524  
                         l5451 34E0                           l4733 4EA4                           l3925 4DB6  
                         l3917 509C                           l3909 507E                           l4493 443A  
                         l3757 4246                           l3749 41C8                           l3693 2AEC  
                         l3685 2AA8                           l3677 2A5A                           l3669 2A12  
                         l3597 27BC                           l3589 2790                           l3941 48F8  
                         l3933 4FE8                           l4397 40DC                           l4389 408A  
                         l5429 1862                           l5381 13FA                           l5365 12A6  
                         l5373 1308                           l5357 11FE                           l5349 119A  
                         l4485 4E82                           l4477 4E5A                           l4661 4EE0  
                         l4653 4ED0                           l4645 4EBE                           l3829 4DE2  
                         l3765 4E38                           l3781 3F96                           l3773 3F56  
                         l3837 42AE                           l3845 42EE                           l3861 49F4  
                         l5197 2140                           l5189 2112                           l5437 4B02  
                         l4709 4830                           l5541 36A4                           l5533 360C  
                         l5525 3570                           l5517 353C                           l5509 3526  
                         l5461 34F4                           l5453 34EC                           l4727 4E8E  
                         l3927 4DDC                           l3919 4DA2                           l4495 445C  
                         l4487 4432                           l3759 424C                           l3695 2B16  
                         l3679 2A68                           l3599 27CC                           l3951 492E  
                         l3943 490A                           l3935 5004                           l4399 40F8  
                         l5391 14AC                           l5375 133A                           l5383 1408  
                         l5367 12D8                           l5359 1230                           l4479 4E5E  
                         l4671 475C                           l4663 4EE2                           l4655 4ED2  
                         l4647 4EC4                           l4735 502E                           l3767 4E48  
                         l3783 3FA6                           l3847 4300                           l3839 42D6  
                         l3855 4D18                           l5199 2198                           l5287 322C  
                         l5439 4B0A                           l5543 36BE                           l5535 363E  
                         l5527 357C                           l5519 3548                           l5471 34FE  
                         l5463 34F6                           l5455 34EE                           l5447 34D8  
                         l4729 4E92                           l3929 4DDE                           l4497 4478  
                         l3689 2AD2                           l3697 2B1A                           l3953 4944  
                         l3945 4912                           l5393 14DE                           l5385 143A  
                         l5377 1390                           l5369 12E6                           l4681 47C6  
                         l4673 476C                           l4665 4EE4                           l4657 4EDC  
                         l4649 4ECC                           l4737 5042                           l3961 325A  
                         l3793 3FD0                           l3785 3FAA                           l3777 3F6A  
                         l3857 4D28                           l5545 36F4                           l5537 3674  
                         l5529 35A4                           l5481 3508                           l5473 3500  
                         l5465 34F8                           l5457 34F0                           l5449 34DC  
                         l4499 4494                           l3699 2B34                           l3955 494C  
                         l3947 491A                           l3939 48F0                           l5395 1510  
                         l5387 146C                           l5379 13E6                           l4691 47E8  
                         l4683 47D0                           l4675 4796                           l4667 4EE6  
                         l4659 4EDE                           l3971 32DA                           l3963 327A  
                         l3795 3FDA                           l3787 3FB8                           l3779 3F94  
                         l3859 49D6                           l3891 4B42                           l5547 3700  
                         l5539 3690                           l5491 3512                           l5483 350A  
                         l5475 3502                           l5467 34FA                           l5459 34F2  
                         l4693 4516                           l3957 494E                           l3949 4928  
                         l5397 1542                           l5389 149E                           l4685 47D2  
                         l4677 47BA                           l4669 4EE8                           l3981 3328  
                         l3973 32F6                           l3965 328E                           l3797 3FE4  
                         l3893 4B56                           l5645 30C4                           l5549 3704  
                         l5493 3514                           l5485 350C                           l5477 3504  
                         l5469 34FC                           l4695 4522                           l3959 4954  
                         l5399 1550                           l4687 47DC                           l4679 47C4  
                         l3991 33CE                           l3983 3330                           l3975 3306  
                         l3967 329E                           l3895 4B62                           l5647 3182  
                         l5495 3516                           l5487 350E                           l5479 3506  
                         l4697 4532                           l4689 47DE                           l3993 33D4  
                         l3985 333C                           l3977 330C                           l3969 32BE  
                         l3897 4B66                           l5649 320C                           l5497 3518  
                         l5489 3510                           l4699 4542                           l3995 33DA  
                         l3987 3346                           l3979 331C                           l3899 4B72  
                         l5499 351A                           l3989 334C                           l3997 343E  
                         l4981 373E                           l3999 3458                           l4991 382A  
                         l4983 3796                           l4993 3866                           l4985 37AA  
                         l4987 37B8                           l4995 389A                           l4979 371E  
                         l4997 38D6                           l4999 38EA                           STR_1 0E01  
                         STR_2 0E13                           STR_3 0E22                           STR_6 0E26  
                         u3000 2572                           u3001 256E                           u3010 25B8  
                         u3011 25B4                           u3100 26A4                           u3020 25EE  
                         u3101 26A0                           u3021 25EA                           u3110 26B8  
                         u3030 25FE                           u3111 26B4                           u3031 25FA  
                         u3200 4FD0                           u3120 26D2                           u3040 262A  
                 _BAUD4CONbits 000EE9                           u3201 4FCC                           u3121 26CE  
                         u3041 2626                           u3210 4FE6                           u3130 270C  
                         u3050 263A                           u4010 433A                           u3211 4FE2  
                         u3131 2708                           u3051 2636                           u4011 4334  
                         u3140 271E                           u3060 2656                           u3220 3AFA  
                         u3300 3E20                           u4020 433C                           u3141 271A  
                         u3061 2652                           u3221 3AF6                           u3301 3E1C  
                         u4005 4312                           u3150 272E                           u3070 2666  
                         u3230 3B2C                           u3310 3E5E                           u4030 4D5A  
                         u3151 272A                           u3071 2662                           u3231 3B28  
                         u3311 3E5A                           u4031 4D56                           u3400 2C5C  
                         u3160 274E                           u3080 2678                           u4200 4944  
                         u3320 3E88                           u4040 49F4                           u3401 2C58  
                         u3161 274A                           u3081 2674                           u4201 4940  
                         u3241 3B56                           u3321 3E84                           u4041 49F0  
                         u3410 2C9C                           u3170 2760                           u3090 268E  
                         u3250 3B7A                           u3330 3EB6                           u4210 328A  
                         _T2PR 000FBC                           u3411 2C98                           u3171 275C  
                         u3091 268A                           u3251 3B76                           u3331 3EB2  
                         u4211 3284                           u3500 2E28                           u3420 2CDC  
                         u3180 277C                           u3260 3BA4                           u3340 3EFE  
                         u4300 34A0                           u4220 328C                           u3501 2E24  
                         u3421 2CD8                           u3181 2778                           u3261 3BA0  
                         u3341 3EFA                           u4301 349C                           u3510 2E56  
                         u3430 2D52                           u3350 2BD4                           u3270 3BE4  
                         u3190 4D9E                           u4230 329E                           u4150 4B90  
                         u3511 2E52                           u3431 2D4E                           u3351 2BD0  
                         u3271 3BE0                           u3191 4D9A                           u4231 329A  
                         u4151 4B8C                           u4160 4DCA                           u3520 2E6C  
                         u3440 2D74                           u3360 2BE6                           u3600 27CC  
                         u2800 22EA                           u6000 12A6                           u3280 3C2E  
                         u4240 32DA                           u4161 4DC2                           u3521 2E68  
                         u3441 2D70                           u3361 2BE2                           u3601 27C8  
                         u2801 22E6                           u6001 12A2                           u3281 3C2A  
                         u4241 32D6                           u3530 2E80                           u3450 2D9E  
                         u3370 2BF6                           u3610 280C                           u2810 22FC  
                         u6010 12D8                           u3290 3DEE                           u4250 3306  
                         u3531 2E7C                           u3451 2D9A                           u3371 2BF2  
                         u3611 2808                           u2811 22F8                           u6011 12D4  
                         u3291 3DEA                           u4251 3302                           u3540 2E9A  
                         u3460 2DC2                           u3380 2C3A                           u3700 2AA8  
                         u3620 281E                           u2900 2456                           u2820 230C  
                         u4180 490A                           u6100 1542                           u6020 133A  
                         u4260 331C                           u3541 2E96                           u3461 2DBE  
                         u3381 2C36                           u3701 2AA4                           u3621 281A  
                         u2901 2450                           u2821 2308                           u4181 4906  
                         u6101 153E                           u6021 1336                           u4261 3318  
                         u3550 2EE2                           u3470 2DD8                           u3390 2C4C  
                         u3710 2ABE                           u3630 282E                           u2910 2458  
                         u2830 234E                           u4190 4928                           u6110 15A6  
                         u6030 1390                           u4270 3458                           u5310 485C  
                         u3551 2EDE                           u3471 2DD4                           u3391 2C48  
                         u3711 2ABA                           u3631 282A                           u2831 234A  
                         u4191 4924                           u6111 15A2                           u6031 138C  
                         u4271 3454                           u5311 4858                           u5320 4EBC  
                         u3560 2F12                           u3480 2DF6                           u3800 417A  
                         u3720 2AD2                           u3640 2864                           u2920 2480  
                         u2840 2364                           u6200 17FE                           u6120 15FC  
                         u6040 13E6                           u2760 45FA                           u4280 3476  
                         u5321 4EB8                           u3561 2F0E                           u3481 2DF2  
                         u3801 4176                           u3721 2ACE                           u3641 2860  
                         u2921 247C                           u2841 2360                           u6201 17FA  
                         u6121 15F8                           u6041 13E2                           u2761 45F6  
                         u4281 3472                           u4178 4DCC                           u3570 2F40  
                         u3490 2E16                           u3810 41B8                           u3730 2AEC  
                         u3650 2874                           u2930 249E                           u2850 2376  
                         u6210 1830                           u6130 162E                           u6050 143A  
                         u5330 5042                           u2770 460C                           u4290 3490  
                         u3571 2F3C                           u3491 2E12                           u3811 41B4  
                         u3731 2AE8                           u3651 2870                           u2931 249A  
                         u2851 2372                           u6211 182C                           u6131 162A  
                         u6051 1436                           u5331 503E                           u2771 4608  
                         u4291 348C                           u3820 41D6                           u3740 2B34  
                         u3660 29EE                           u3580 27AA                           u2940 24BE  
                         u2860 2386                           u4700 414A                           u6220 1862  
                         u6140 1692                           u6060 146C                           u2780 4634  
                         u3900 3FF4                           u5500 3826                           u3821 41D2  
                         u3741 2B30                           u3581 27A6                           u2941 24BA  
                         u2861 2382                           u4701 4146                           u6221 185E  
                         u6141 168E                           u6061 1468                           u2781 4630  
                         u3901 3FF0                           u5501 3822                           u4710 4F7E  
                         u3830 41F6                           u3750 2B62                           u3670 2A48  
                         u3590 27BC                           u2950 24CC                           u2870 23C2  
                         u4630 3C8C                           u6230 1894                           u6150 16C4  
                         u6070 149E                           u2790 466A                           u3910 4014  
                         u5510 384A                           u4711 4F7A                           u3831 41F2  
                         u3751 2B5E                           u3671 2A44                           u3591 27B8  
                         u2951 24C8                           u2871 23BE                           u4631 3C88  
                         u6231 1890                           u6151 16C0                           u6071 149A  
                         u2791 4666                           u3911 4010                           u3840 4246  
                         u3760 2B9C                           u3680 2A68                           u2960 24DC  
                         u2880 23D0                           u4800 3A7E                           u4640 3D56  
                         u6240 18C6                           u6160 171A                           u6080 14DE  
                         u4720 505C                           u3920 4024                           u5520 3866  
                         u5600 19A4                           u3841 4242                           u3761 2B98  
                         u3681 2A64                           u3665 29E4                           u2961 24D8  
                         u2881 23CC                           u4801 3A7A                           u4641 3D52  
                         u6241 18C2                           u6161 1716                           u6081 14DA  
                         u4721 5056                           u3921 4020                           u5521 3862  
                         u5601 19A0                           u3690 2A7A                           u2970 250E  
                         u2890 243E                           u4810 3A8C                           u6170 175A  
                         u6090 1510                           u4730 505E                           u3930 4884  
                         u3770 46E0                           u3850 4E38                           u5530 38BA  
                         u5610 1A1E                           u6250 3556                           u3691 2A76  
                         u2971 250A                           u2891 243A                           u4811 3A88  
                         u6171 1756                           u6091 150C                           u3931 4880  
                         u3771 46DC                           u3851 4E34                           u5515 3840  
                         u5611 1A1A                           u6307 3680                           u6251 3552  
                         u4900 4504                           u2980 251C                           u4820 3AC6  
                         u4740 3946                           u6180 178C                           u3940 48DA  
                         u3780 471E                           u3860 3F56                           u5540 38D6  
                         u5460 3768                           u5700 1CB2                           u5620 1A30  
                         u6260 3570                           u4901 44FC                           u2981 2518  
                         u4821 3AC2                           u4741 3942                           u6181 1788  
                         u3941 48D6                           u3781 471A                           u3861 3F52  
                         u5541 38D2                           u5701 1CAE                           u5621 1A2C  
                         u6317 36B0                           u6261 356C                           u2990 253A  
                         u4830 3AD4                           u4750 3954                           u6190 17BE  
                         u3950 4DFC                           u3790 4752                           u3870 3F8A  
                         u5550 3912                           u5470 3796                           u5710 1CC0  
                         u5630 1AAA                           u6270 3590                           u2991 2536  
                         u4831 3AD0                           u4751 3950                           u6191 17BA  
                         u6407 14A4                           u3951 4DF8                           u3791 474E  
                         u5551 390E                           u5535 38B0                           u5471 3792  
                         u5711 1CBC                           u5631 1AA6                           u6327 370C  
                         u6271 3586                           u4760 39B0                           u3880 3FB8  
                         u3960 4290                           u5480 37B8                           u5800 20C2  
                         u5720 1CEA                           u5640 1B36                           u5560 18FA  
                         u4920 4368                           u4761 39AC                           u6417 1548  
                         u3881 3FB4                           u5481 37B4                           u5465 375E  
                         u5801 20BE                           u5721 1CE6                           u5641 1B32  
                         u5561 18F6                           u6337 4382                           u4921 4360  
                         u4850 444C                           u4770 3A06                           u4690 40DC  
                         u3890 3FCC                           u3970 42AE                           u5810 20D0  
                         u5730 1E32                           u5650 1B68                           u5570 1944  
                         u6290 363E                           u6507 44C0                           u4851 4444  
                         u4771 3A02                           u4691 40D8                           u6427 1634  
                         u3891 3FC8                           u3875 3F80                           u3971 42AA  
                         u5811 20CC                           u5731 1E2E                           u5651 1B64  
                         u5571 1940                           u6347 43DC                           u6291 363A  
                         u4780 3A50                           u3980 42D6                           u5820 2124  
                         u5740 1E98                           u5660 1BA6                           u5580 1954  
                         u5900 2FEC                           u4940 43B0                           u6517 44E4  
                         u4781 3A4C                           u6437 1720                           u3981 42D2  
                         u3965 4286                           u5821 2120                           u5741 1E94  
                         u5661 1BA2                           u5581 1950                           u5901 2FE8  
                         u6357 4400                           u4941 43AC                           u4918 4506  
                         u4870 4494                           u4790 3A6E                           u3990 4300  
                         u5830 21F6                           u5750 1EE0                           u5670 1C32  
                         u5590 1992                           u5910 3102                           u4950 43C2  
                         u4871 4490                           u4791 3A6A                           u6447 17C4  
                         u6367 4E6E                           u3991 42FC                           u5495 37CC  
                         u5831 21F2                           u5751 1EDC                           u5671 1C2E  
                         u5591 198E                           u5911 30FE                           u4951 43BA  
                         u4880 44A6                           u5496 37D6                           u5840 2212  
                         u5760 1EF0                           u5680 1C68                           u5920 4AE4  
                         u6288 3594                           u4881 449E                           u6457 18CC  
                         u6377 12DE                           u5497 37E6                           u5841 220E  
                         u5761 1EEC                           u5681 1C64                           u5921 4AE0  
                         u5930 1156                           u5850 227A                           u5770 1F8A  
                         u5690 1C80                           u4970 4420                           u4938 436A  
                         u6467 40BC                           u6387 1300                           u5931 1152  
                         u5851 2274                           u5771 1F86                           u5691 1C7C  
                         u4971 4418                           u4868 444E                           u5940 1188  
                         u5860 227C                           u5780 1FD8                           u6477 40E6  
                         u6397 1400                           u5941 1184                           u5781 1FD4  
                         u5950 11AA                           u5870 2290                           u5790 2086  
                         u6487 412A                           u5951 11A6                           u5871 228C  
                         u5791 2082                           u5960 11DC                           u5880 2F7C  
                         u4968 43C4                           u6497 4466                           u5961 11D8  
                         u5881 2F78                           u4898 44A8                           u5970 11FE  
                         u5890 2FCC                           u5971 11FA                           u5891 2FC8  
                         u5980 1230                           u4988 4422                           u5981 122C  
                         u5990 1274                           u5991 1270                           abs@a 0017  
                         _dbuf 013C                           _labs 49D6                           _main 34D8  
                         _dtoa 325A                           _prec 00F5                           pad@i 001C  
                         pad@p 0019                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001E  
                         fsr2l 000FD9                           btemp 005B                           _stop 47EC  
                ___fpclassifyf 4250                           prodh 000FF4                           prodl 000FF3  
                         start 0076                ___fldiv@new_exp 0047                    main@string4 018C  
       __end_of_color_read_Red 4BE2                __end_of_HighISR 0076                   ___param_bank 000000  
                 main@clearRef 01A4                          ??_abs 0019                          ??_pad 001B  
                ___fltol@sign1 000D                __end_of___aodiv 3C70                          ?_labs 0005  
              __end_of___fladd 2790                          ?_main 0001                          ?_dtoa 0020  
              __end_of___aomod 3F40                __end_of___fldiv 2F54                __end_of___flneg 4E5A  
              __end_of___flmul 2BBA                __end_of___flsub 4D18                __end_of___fltol 4046  
                        ?_stop 0018                __end_of___lwdiv 4964                          i2l372 5076  
                        i2l365 4F16                          i2l358 4FBE                          i2l391 006A  
                        i2l389 0066                   vfpfcnvrt@fmt 00A5     __end_of_I2C_2_Master_Start 5098  
   __end_of_I2C_2_Master_Write 5084                          _flags 00F7                          _fputc 45E8  
                        _fputs 4D5C                          labs@a 0005                          pad@fp 0015  
                        _width 00F3                          _putch 50A2                          dtoa@d 0022  
                        dtoa@i 0040                __end_of_right45 414C                          dtoa@n 0038  
                        dtoa@p 0034                          dtoa@s 0042                          dtoa@w 0036  
                        tablat 000FF5                          ttemp5 005C                          ttemp6 005F  
                        ttemp7 0063                          status 000FD8                          wtemp8 005C  
              __end_of_sprintf 4B42                 ?___fpclassifyf 0005        __end_of_color_read_Blue 4CD2  
        _I2C_2_Master_RepStart 5098             putCharToRxBuf@byte 0001                ?_color_read_Red 0009  
              __initialization 4F18                   __end_of_labs 4A3C                   __end_of_main 371E  
                 __end_of_dtoa 34D8                i2_isDataInTxBuf 5060                   __end_of_stop 4876  
           putCharToTxBuf@byte 0005                  colorDetect@mL 0068                         ??_labs 0009  
                colorDetect@mR 006A                         ??_main 00D5                         ??_dtoa 002A  
                       ??_stop 001C                  __activetblptr 000003                   ?_setMotorPWM 0012  
                       ?_fputc 0005                         ?_fputs 000E                         _CCPR1H 000FAA  
                       _CCPR2H 000FA6                         _CCPR3H 000F25                         _CCPR4H 000F21  
                       ?_putch 0001          colorDetect@greenPrint 008A                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RD5PPS 000E6F  
                       _RC7PPS 000E69                         _RE4PPS 000E76                         _RD6PPS 000E70  
                       i2l2907 5060                         _RG6PPS 000E88                         i2l4741 4FA8  
                       i2l4751 4F00                         i2l4743 4FAC                         i2l4745 4FBC  
                       i2l4747 4EEC                         i2l4739 4F98                         i2l4749 4EFC  
                       i2l4881 0028                         i2l4883 0038                         i2l4885 0046  
                       i2l4877 0012                         i2l4887 005A                         i2l4879 0022  
                    ??_HighISR 0003       __end_of_color_click_init 4E8E                         _RX4PPS 000E15  
                       _TX4REG 000EE4               __end_of___xxtofl 3AE8               __end_of_getColor 4A9A  
                 _CCPTMRS0bits 000FAD                   vfprintf@cfmt 00BA                         ___flge 414C  
             _getCharFromTxBuf 4EEC                         ___fleq 46B2                      ??___aodiv 0015  
                    ??___fladd 000D                      ??___aomod 0015                         ___wmul 4FE8  
                    ??___fldiv 003E                      ??___flneg 0009                      ??___flmul 001D  
                    ??___flsub 0036                      ??___fltol 0009                         _efgtoa 18D6  
                    ??___lwdiv 000F                         _floorf 371E                         _memcpy 4B42  
                       clear_0 4F1E                         clear_1 4F2A                         isa$std 000001  
                       pad@buf 0017                  main@motorLeft 01C9                         dtoa@fp 0020  
                       _strcpy 4D18                         fputc@c 0005              ?_TxBufferedString 0006  
                       fputs@c 0012                         fputs@i 0013                         fputs@s 000E  
              ___fpclassifyf@e 000D                ___fpclassifyf@u 000F                ___fpclassifyf@x 0005  
                    ??_right45 001C                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8             ??_TxBufferedString 0008  
             __end_of_whiteCal 4432                         putch@c 0001               __end_of_vfprintf 4AF0  
                       stop@mL 0018                         stop@mR 001A              ??_initDCmotorsPWM 0007  
                    ??_sprintf 0057                     ___flge@ff1 0036                     ___flge@ff2 003A  
              ??___fpclassifyf 0009                   ___xxtofl@arg 000F                   ___xxtofl@exp 000E  
                 ___xxtofl@val 0005                     ___fleq@ff1 0005                     ___fleq@ff2 0009  
        __end_of_isDataInTxBuf 5060                     __accesstop 0060        __end_of__initialization 4F38  
     __end_of_color_read_Clear 4C82                     ___flneg@f1 0005       __end_of_color_read_Green 4C32  
       ?_I2C_2_Master_RepStart 0001        __end_ofi2_isDataInTxBuf 5078                  ___rparam_used 000001  
                   ___fltol@f1 0005               ?_color_read_Blue 0009              main@ambientRGBVal 01A8  
               __pcstackCOMRAM 0001                  ?_DCmotorsInit 0005                  __end_of_fputc 46B2  
                __end_of_fputs 4DA0                  __end_of_putch 50A4                        ??_fputc 0009  
                      ??_fputs 0012                        ??_putch 0005                     __pbssBANK0 00D7  
                   __pbssBANK1 0100                     _ambientCal 4432              _color_writetoaddr 500E  
                 _T2CLKCONbits 000FBF                 ??_DCmotorsInit 0009                        ?___flge 0036  
                      ?___fleq 0005             ?_color_writetoaddr 0007                        ?___wmul 0005  
                      ?_efgtoa 0070                        ?_floorf 004F                        ?_memcpy 0005  
          ??_color_writetoaddr 0008                        ?_strcpy 0005                      ?___xxtofl 0005  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5                      ?_getColor 0010  
                      _SSP2ADD 000ED6                        _SSP2BUF 000ED5         color_writetoaddr@value 0007  
             ??_color_read_Red 000B                        _HighISR 0008      __end_of_color_writetoaddr 502E  
             ?i2_isDataInTxBuf 0001             _I2C_2_Master_Start 508E                     _initUSART4 4EBE  
           _I2C_2_Master_Write 5078                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000E                        ___aodiv 3AE8                        ___fladd 22D0  
                      ___aomod 3DDC                        ___fldiv 2BBA                        ___flneg 4E22  
                      ___flmul 2790                      ?_whiteCal 0012                        ___flsub 4CD2  
                      ___fltol 3F40            ?_I2C_2_Master_Start 0001                        ___lwdiv 48F0  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 00B4                   __psmallconst 0E00  
                      __pcinit 4F18                        __ramtop 0E00                        __ptext0 34D8  
                      __ptext1 434E                        __ptext2 47EC                        __ptext3 4AF0  
                      __ptext4 4A9A                        __ptext5 2F54                        __ptext6 18D6  
                      __ptext7 4D18                        __ptext8 4B42                        __ptext9 49D6  
            colorDetect@RGBVal 007E                      _T2CONbits 000FBD                     ??___xxtofl 0009  
                      _right45 4046                      _T2HLTbits 000FBE                        efgtoa@c 0076  
                      efgtoa@d 0082                        efgtoa@e 0086                        efgtoa@f 0072  
                      efgtoa@g 0099                        efgtoa@h 0090                        efgtoa@i 008E  
                      efgtoa@l 0094                        efgtoa@m 0084                        efgtoa@n 009D  
                      efgtoa@p 0079                        efgtoa@t 007B                        efgtoa@u 009F  
                      efgtoa@w 0088                     ??_getColor 0012                  _RxBufWriteCnt 005A  
     __end_of_getCharFromTxBuf 4F18                 main@motorRight 01C0                        _sprintf 4AF0  
         ??_I2C_2_Master_Start 0006           ??_I2C_2_Master_Write 0006           end_of_initialization 4F38  
            __end_of_sendTxBuf 5048                        floorf@e 006A                        floorf@m 0066  
                      floorf@u 006C                        floorf@x 004F                 DCmotorsInit@mL 0005  
               DCmotorsInit@mR 0007                        memcpy@d 000B                        memcpy@n 0009  
                      memcpy@s 000D                    ?_ambientCal 0012                        fputc@fp 0007  
                      fputs@fp 0010              ?_color_click_init 0001              colorDetect@whiteB 0074  
            colorDetect@whiteG 0070              colorDetect@whiteR 006C             ??_color_click_init 0009  
            __end_of_vfpfcnvrt 325A                     efgtoa@mode 0080                     efgtoa@sign 0098  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 00A9                     ??_whiteCal 0014  
                   ??_vfprintf 0057                        strcpy@d 000B                        strcpy@s 0009  
              _initDCmotorsPWM 475C                      _PORTFbits 000F8E             setMotorPWM@negDuty 0017  
                  ___fladd@grs 0014                     main@RGBVal 01B0                  ___xxtofl@sign 000D  
                    _TRISAbits 000F81             setMotorPWM@posDuty 0016                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87                      _TRISHbits 000F88           __end_of_DCmotorsInit 45E8  
                  ___fldiv@grs 0049                    ___fldiv@rem 0042               fullSpeedAhead@mL 0018  
             fullSpeedAhead@mR 001A       color_writetoaddr@address 0008        ??_I2C_2_Master_RepStart 0006  
                  ___flmul@grs 0022                    _CCP1CONbits 000FAB              ?_color_read_Clear 0009  
                 _EUSART4RXbuf 00D7                   _EUSART4TXbuf 0100                    _CCP2CONbits 000FA7  
            ?_color_read_Green 0009                    _CCP3CONbits 000F26                    ?_initUSART4 0001  
                  _CCP4CONbits 000F22                     main@whiteC 01A0             ??_color_read_Clear 000B  
           ??_color_read_Green 000B                  ??_colorDetect 004F                 __end_of___flge 4250  
               __end_of___fleq 475C                 _fullSpeedAhead 4964                    vfpfcnvrt@ap 00A7  
                  vfpfcnvrt@cp 00B2                    vfpfcnvrt@fp 00A3                 __end_of___wmul 500E  
               __end_of_efgtoa 22D0                 __end_of_floorf 3934                 __end_of_memcpy 4B92  
                   floorf@F526 00EB         colorDetect@whiteRGBVal 0066                 __end_of_strcpy 4D5C  
          color_read_Clear@tmp 000E            start_initialization 4F18           colorDetect@bluePrint 008E  
                  __end_of_abs 4E22                    __end_of_pad 48F0                  _TxBufWriteCnt 0058  
        __end_of___fpclassifyf 434E            color_read_Green@tmp 000E        __end_of_initDCmotorsPWM 47EC  
                  vfprintf@fmt 00B6         __end_of_fullSpeedAhead 49D6                       ??___flge 003E  
                     ??___fleq 000D                       ??___wmul 0009                       ??_efgtoa 0053  
               _putCharToRxBuf 4F96                 _putCharToTxBuf 4F6C                       ??_floorf 0060  
                     ??_memcpy 000B            __end_of_colorDetect 18D6                       ??_strcpy 0009  
                    ___fladd@a 0009                      ___fladd@b 0005                      ___fldiv@a 003A  
                    ___fldiv@b 0036                      ___flmul@a 0019                      ___flmul@b 0015  
                  __pbssCOMRAM 0057                      ___flsub@a 0032                      ___flsub@b 002E  
                __pcstackBANK0 0060                  __pcstackBANK1 018C               ___aodiv@dividend 0005  
                     ?_HighISR 0001                    _efgtoa$2533 007D               ___lwdiv@dividend 000B  
                    _dtoa$2502 0032         __end_of_putCharToRxBuf 4FC0         __end_of_putCharToTxBuf 4F96  
              ?_fullSpeedAhead 0018                      __pintcode 0008                       ?___aodiv 0005  
                     ?___fladd 0005                       ?___aomod 0005                       ?___fldiv 0036  
             ___aodiv@quotient 0017                       ?___flneg 0005                       ?___flmul 0015  
                     ?___flsub 002E                       ?___fltol 0005                       ?___lwdiv 000B  
       TxBufferedString@string 0006           I2C_2_Master_Read@ack 0007           I2C_2_Master_Read@tmp 0008  
                  __smallconst 0E00              _I2C_2_Master_Idle 4FC0              _I2C_2_Master_Init 4F42  
            _I2C_2_Master_Read 4DA0                       ?_right45 0018              _I2C_2_Master_Stop 5084  
                 _RxBufReadCnt 0059             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0014             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 000F       initDCmotorsPWM@PWMperiod 0005                       ?_sprintf 00BC  
            ?_getCharFromTxBuf 0001             ??_getCharFromTxBuf 0001                   ??_ambientCal 0014  
          ??_I2C_2_Master_Idle 0005            ??_I2C_2_Master_Init 0005            ??_I2C_2_Master_Read 0006  
               ___wmul@product 0009                       _LATAbits 000F79            ??_I2C_2_Master_Stop 0006  
                     _LATCbits 000F7B                  _isDataInTxBuf 5048                       _LATDbits 000F7C  
                     _LATEbits 000F7D                       _LATFbits 000F7E               _TxBufferedString 4E8E  
                     _LATGbits 000F7F                       _LATHbits 000F80                      _sendTxBuf 502E  
                     _IPR4bits 000E23                       _PIE4bits 000E2D                      getColor@v 0010  
                     i2u263_40 5074                       i2u263_41 506E                       i2u264_40 5076  
                     i2u534_40 4FA8                       i2u542_40 0022                       i2u534_41 4FA4  
                     i2u542_41 001E                       i2u535_40 4EFC                       i2u543_40 0038  
                     i2u535_41 4EF8                       i2u543_41 0034                       _PIR4bits 000E37  
                     i2u544_40 0046                       i2u544_41 0042                       i2u545_40 005A  
                     i2u545_41 0056                ?_putCharToRxBuf 0001               ?_initDCmotorsPWM 0005  
                  _colorDetect 0E2C                ?_putCharToTxBuf 0001                   _DCmotorsInit 4516  
                     _SSP2CON2 000EDA                       _SSP2STAT 000ED8                      _vfpfcnvrt 2F54  
    __end_of_I2C_2_Master_Idle 4FE8      __end_of_I2C_2_Master_Init 4F6C      __end_of_I2C_2_Master_Read 4DE2  
            ___wmul@multiplier 0005      __end_of_I2C_2_Master_Stop 508E                   setMotorPWM@m 0012  
  I2C_2_Master_Write@data_byte 0006             __end_of_ambientCal 4516              ??_color_read_Blue 000B  
                 _TxBufReadCnt 0057                     vfpfcnvrt@c 00B1            colorDetect@ambientB 007C  
          colorDetect@ambientG 007A            colorDetect@ambientR 0078            colorDetect@clearRef 0060  
               ?_isDataInTxBuf 0001  __end_of_I2C_2_Master_RepStart 50A2             color_read_Blue@tmp 000E  
          __end_of_setMotorPWM 3DDC                     ?_sendTxBuf 0001                   ??_initUSART4 0005  
                     __Hrparam 0000            colorDetect@redPrint 0086                      memcpy@tmp 000F  
                   vfprintf@ap 00B8                       __Lrparam 0000                     vfprintf@fp 00B4  
                   ?_vfpfcnvrt 00A3       colorDetect@ambientRGBVal 0064                ___aodiv@divisor 000D  
              ___aodiv@counter 0015                     _ANSELDbits 000EA7             ___fpclassifyf@F465 00EF  
                   _ANSELFbits 000EB4                     sprintf@fmt 00BE                       ___xxtofl 3934  
                    right45@mL 0018                      right45@mR 001A                ___lwdiv@divisor 000D  
           __end_of_initUSART4 4EEC                       _getColor 4A3C                ___lwdiv@counter 0011  
                     __ptext10 371E                       __ptext11 4250                       __ptext20 4DE2  
                     __ptext12 3F40                       __ptext21 3DDC                       __ptext13 4E22  
                     __ptext30 0E2C                       __ptext22 3AE8                       __ptext14 46B2  
                     __ptext31 4046                       __ptext23 502E                       __ptext15 325A  
                     __ptext40 414C                       __ptext32 4964                       __ptext24 5048  
                     __ptext16 4876                       __ptext41 2BBA                       __ptext33 3C70  
                     __ptext25 4EBE                       __ptext17 4D5C                       __ptext50 508E  
                     __ptext42 4432                       __ptext34 4FE8                       __ptext26 475C  
                     __ptext18 45E8                       __ptext51 5098                       __ptext43 4A3C  
                     __ptext35 48F0                       __ptext27 4E5A                       __ptext19 50A2  
                     __ptext60 4EEC                       __ptext52 4DA0                       __ptext44 4B92  
                     __ptext36 3934                       __ptext28 500E                       __ptext53 4FC0  
                     __ptext45 4BE2                       __ptext37 4CD2                       __ptext29 4F42  
                     __ptext54 4E8E                       __ptext46 4C32                       __ptext38 22D0  
                     __ptext55 4F6C                       __ptext47 4C82                       __ptext39 2790  
                     __ptext56 4516                       __ptext48 5078                       __ptext49 5084  
                     __ptext58 5060                       __ptext59 4F96                    ambientCal@i 0016  
                  ambientCal@v 0012                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                   strcpy@dest 0005                       efgtoa@fp 0070                       efgtoa@ne 0077  
                     efgtoa@pp 007F                       efgtoa@ou 008A                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       int$flags 005B                       _whiteCal 434E  
                     _vfprintf 4A9A               ___aomod@dividend 0005                      whiteCal@i 0016  
                    whiteCal@v 0012                     _INTCONbits 000FF2              ??i2_isDataInTxBuf 0001  
                     memcpy@d1 0005                       memcpy@s1 0007                    _setMotorPWM 3C70  
              ??_isDataInTxBuf 0005                       intlevel2 0000                      sprintf@ap 00C8  
             ??_fullSpeedAhead 001C                    ??_sendTxBuf 0005                main@whiteRGBVal 01B8  
                    strcpy@src 0007                    efgtoa@nmode 0081                ___aomod@divisor 000D  
                  ??_vfpfcnvrt 0055                ___aomod@counter 0015               _color_click_init 4E5A  
     __end_of_TxBufferedString 4EBE                       sprintf@f 00CA                       sprintf@s 00BC  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C                  ___fladd@signs 0011  
                   _TX4STAbits 000EE8                   ___aodiv@sign 0016                   ___fladd@aexp 0012  
                 ___fladd@bexp 0013               ??_putCharToRxBuf 0001               ??_putCharToTxBuf 0005  
                 ___aomod@sign 0016                   ?_colorDetect 0060  



Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Dec 10 15:49:51 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    69                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    71   000000                     
    72                           ; Version 2.35
    73                           ; Generated 05/05/2021 GMT
    74                           ; 
    75                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution. Publication is not required when
    89                           ;        this file is used in an embedded application.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC18F67K40 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107   000000                     _TX4REG	set	3812
   108   000000                     _RC4STAbits	set	3815
   109   000000                     _SP4BRGH	set	3814
   110   000000                     _TRISEbits	set	3973
   111   000000                     _TRISGbits	set	3975
   112   000000                     _LATEbits	set	3965
   113   000000                     _LATGbits	set	3967
   114   000000                     _TRISFbits	set	3974
   115   000000                     _LATFbits	set	3966
   116   000000                     _TRISHbits	set	3976
   117   000000                     _LATHbits	set	3968
   118   000000                     _SSP2CON2bits	set	3802
   119   000000                     _RX4PPS	set	3605
   120   000000                     _SSP2CLKPPS	set	3612
   121   000000                     _SSP2DATPPS	set	3613
   122   000000                     _ANSELDbits	set	3751
   123   000000                     _SSP2ADD	set	3798
   124   000000                     _SSP2CON1bits	set	3801
   125   000000                     _RC4REG	set	3811
   126   000000                     _SP4BRGL	set	3813
   127   000000                     _TX4STAbits	set	3816
   128   000000                     _BAUD4CONbits	set	3817
   129   000000                     _LATAbits	set	3961
   130   000000                     _LATDbits	set	3964
   131   000000                     _SSP2CON2	set	3802
   132   000000                     _TRISDbits	set	3972
   133   000000                     _CCPR4H	set	3873
   134   000000                     _CCPR3H	set	3877
   135   000000                     _SSP2STAT	set	3800
   136   000000                     _ANSELFbits	set	3764
   137   000000                     _SSP2BUF	set	3797
   138   000000                     _IPR4bits	set	3619
   139   000000                     _PIE4bits	set	3629
   140   000000                     _RC0PPS	set	3682
   141   000000                     _RC7PPS	set	3689
   142   000000                     _RD5PPS	set	3695
   143   000000                     _RE2PPS	set	3700
   144   000000                     _RD6PPS	set	3696
   145   000000                     _TRISCbits	set	3971
   146   000000                     _TRISAbits	set	3969
   147   000000                     _PORTFbits	set	3982
   148   000000                     _LATCbits	set	3963
   149   000000                     _T2PR	set	4028
   150   000000                     _T2CONbits	set	4029
   151   000000                     _CCPR2H	set	4006
   152   000000                     _CCPR1H	set	4010
   153   000000                     _RE4PPS	set	3702
   154   000000                     _RG6PPS	set	3720
   155   000000                     _INTCONbits	set	4082
   156   000000                     _T2CLKCONbits	set	4031
   157   000000                     _T2HLTbits	set	4030
   158   000000                     _CCP1CONbits	set	4011
   159   000000                     _CCPTMRS0bits	set	4013
   160   000000                     _CCP2CONbits	set	4007
   161   000000                     _CCP3CONbits	set	3878
   162   000000                     _CCP4CONbits	set	3874
   163   000000                     _PIR4bits	set	3639
   164                           
   165                           	psect	smallconst
   166   000E00                     __psmallconst:
   167                           	callstack 0
   168   000E00  00                 	db	0
   169   000E01  25                 	db	37
   170   000E02  64                 	db	100	;'d'
   171   000E03  2C                 	db	44
   172   000E04  25                 	db	37
   173   000E05  64                 	db	100	;'d'
   174   000E06  2C                 	db	44
   175   000E07  25                 	db	37
   176   000E08  64                 	db	100	;'d'
   177   000E09  2C                 	db	44
   178   000E0A  25                 	db	37
   179   000E0B  64                 	db	100	;'d'
   180   000E0C  20                 	db	32
   181   000E0D  0D                 	db	13
   182   000E0E  0A                 	db	10
   183   000E0F  00                 	db	0
   184   000E10                     STR_11:
   185   000E10  42                 	db	66	;'B'
   186   000E11  6C                 	db	108	;'l'
   187   000E12  75                 	db	117	;'u'
   188   000E13  65                 	db	101	;'e'
   189   000E14  3A                 	db	58	;':'
   190   000E15  20                 	db	32
   191   000E16  20                 	db	32
   192   000E17  25                 	db	37
   193   000E18  66                 	db	102	;'f'
   194   000E19  20                 	db	32
   195   000E1A  0D                 	db	13
   196   000E1B  00                 	db	0
   197   000E1C                     STR_9:
   198   000E1C  52                 	db	82	;'R'
   199   000E1D  65                 	db	101	;'e'
   200   000E1E  64                 	db	100	;'d'
   201   000E1F  3A                 	db	58	;':'
   202   000E20  20                 	db	32
   203   000E21  25                 	db	37
   204   000E22  66                 	db	102	;'f'
   205   000E23  20                 	db	32
   206   000E24  25                 	db	37
   207   000E25  64                 	db	100	;'d'
   208   000E26  20                 	db	32
   209   000E27  00                 	db	0
   210   000E28                     STR_10:
   211   000E28  47                 	db	71	;'G'
   212   000E29  72                 	db	114	;'r'
   213   000E2A  65                 	db	101	;'e'
   214   000E2B  65                 	db	101	;'e'
   215   000E2C  6E                 	db	110	;'n'
   216   000E2D  3A                 	db	58	;':'
   217   000E2E  20                 	db	32
   218   000E2F  25                 	db	37
   219   000E30  66                 	db	102	;'f'
   220   000E31  20                 	db	32
   221   000E32  00                 	db	0
   222   000E33                     STR_7:
   223   000E33  4C                 	db	76	;'L'
   224   000E34  69                 	db	105	;'i'
   225   000E35  67                 	db	103	;'g'
   226   000E36  68                 	db	104	;'h'
   227   000E37  74                 	db	116	;'t'
   228   000E38  20                 	db	32
   229   000E39  42                 	db	66	;'B'
   230   000E3A  6C                 	db	108	;'l'
   231   000E3B  75                 	db	117	;'u'
   232   000E3C  65                 	db	101	;'e'
   233   000E3D  00                 	db	0
   234   000E3E                     STR_8:
   235   000E3E  20                 	db	32
   236   000E3F  20                 	db	32
   237   000E40  43                 	db	67	;'C'
   238   000E41  3A                 	db	58	;':'
   239   000E42  20                 	db	32
   240   000E43  20                 	db	32
   241   000E44  25                 	db	37
   242   000E45  66                 	db	102	;'f'
   243   000E46  20                 	db	32
   244   000E47  00                 	db	0
   245   000E48                     STR_3:
   246   000E48  4F                 	db	79	;'O'
   247   000E49  72                 	db	114	;'r'
   248   000E4A  61                 	db	97	;'a'
   249   000E4B  6E                 	db	110	;'n'
   250   000E4C  67                 	db	103	;'g'
   251   000E4D  65                 	db	101	;'e'
   252   000E4E  00                 	db	0
   253   000E4F                     STR_4:
   254   000E4F  59                 	db	89	;'Y'
   255   000E50  65                 	db	101	;'e'
   256   000E51  6C                 	db	108	;'l'
   257   000E52  6C                 	db	108	;'l'
   258   000E53  6F                 	db	111	;'o'
   259   000E54  77                 	db	119	;'w'
   260   000E55  00                 	db	0
   261   000E56                     STR_1:
   262   000E56  57                 	db	87	;'W'
   263   000E57  68                 	db	104	;'h'
   264   000E58  69                 	db	105	;'i'
   265   000E59  74                 	db	116	;'t'
   266   000E5A  65                 	db	101	;'e'
   267   000E5B  00                 	db	0
   268   000E5C                     STR_6:
   269   000E5C  47                 	db	71	;'G'
   270   000E5D  72                 	db	114	;'r'
   271   000E5E  65                 	db	101	;'e'
   272   000E5F  65                 	db	101	;'e'
   273   000E60  6E                 	db	110	;'n'
   274   000E61  00                 	db	0
   275   000E62                     STR_13:
   276   000E62  69                 	db	105	;'i'
   277   000E63  6E                 	db	110	;'n'
   278   000E64  66                 	db	102	;'f'
   279   000E65  00                 	db	0
   280   000E66                     STR_16:
   281   000E66  6E                 	db	110	;'n'
   282   000E67  61                 	db	97	;'a'
   283   000E68  6E                 	db	110	;'n'
   284   000E69  00                 	db	0
   285   000E6A                     STR_2:
   286   000E6A  52                 	db	82	;'R'
   287   000E6B  65                 	db	101	;'e'
   288   000E6C  64                 	db	100	;'d'
   289   000E6D  00                 	db	0
   290   000E6E  00                 	db	0	; dummy byte at the end
   291   000000                     
   292                           ; #config settings
   293                           
   294                           	psect	cinit
   295   004C14                     __pcinit:
   296                           	callstack 0
   297   004C14                     start_initialization:
   298                           	callstack 0
   299   004C14                     __initialization:
   300                           	callstack 0
   301                           
   302                           ; Clear objects allocated to BANK2 (60 bytes)
   303   004C14  EE02  F000         	lfsr	0,__pbssBANK2
   304   004C18  0E3C               	movlw	60
   305   004C1A                     clear_0:
   306   004C1A  6AEE               	clrf	postinc0,c
   307   004C1C  06E8               	decf	wreg,f,c
   308   004C1E  E1FD               	bnz	clear_0
   309                           
   310                           ; Clear objects allocated to BANK1 (80 bytes)
   311   004C20  EE01  F09A         	lfsr	0,__pbssBANK1
   312   004C24  0E50               	movlw	80
   313   004C26                     clear_1:
   314   004C26  6AEE               	clrf	postinc0,c
   315   004C28  06E8               	decf	wreg,f,c
   316   004C2A  E1FD               	bnz	clear_1
   317                           
   318                           ; Clear objects allocated to BANK0 (33 bytes)
   319   004C2C  EE00  F0D7         	lfsr	0,__pbssBANK0
   320   004C30  0E21               	movlw	33
   321   004C32                     clear_2:
   322   004C32  6AEE               	clrf	postinc0,c
   323   004C34  06E8               	decf	wreg,f,c
   324   004C36  E1FD               	bnz	clear_2
   325                           
   326                           ; Clear objects allocated to COMRAM (4 bytes)
   327   004C38  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   328   004C3A  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   329   004C3C  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   330   004C3E  6A57               	clrf	__pbssCOMRAM& (0+255),c
   331   004C40                     end_of_initialization:
   332                           	callstack 0
   333   004C40                     __end_of__initialization:
   334                           	callstack 0
   335   004C40  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   336   004C42  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   337   004C44  0100               	movlb	0
   338   004C46  EF38  F007         	goto	_main	;jump to C main() function
   339                           
   340                           	psect	bssCOMRAM
   341   000057                     __pbssCOMRAM:
   342                           	callstack 0
   343   000057                     _TxBufReadCnt:
   344                           	callstack 0
   345   000057                     	ds	1
   346   000058                     _TxBufWriteCnt:
   347                           	callstack 0
   348   000058                     	ds	1
   349   000059                     _RxBufReadCnt:
   350                           	callstack 0
   351   000059                     	ds	1
   352   00005A                     _RxBufWriteCnt:
   353                           	callstack 0
   354   00005A                     	ds	1
   355                           
   356                           	psect	bssBANK0
   357   0000D7                     __pbssBANK0:
   358                           	callstack 0
   359   0000D7                     _EUSART4RXbuf:
   360                           	callstack 0
   361   0000D7                     	ds	20
   362   0000EB                     floorf@F526:
   363                           	callstack 0
   364   0000EB                     	ds	4
   365   0000EF                     ___fpclassifyf@F465:
   366                           	callstack 0
   367   0000EF                     	ds	4
   368   0000F3                     _width:
   369                           	callstack 0
   370   0000F3                     	ds	2
   371   0000F5                     _prec:
   372                           	callstack 0
   373   0000F5                     	ds	2
   374   0000F7                     _flags:
   375                           	callstack 0
   376   0000F7                     	ds	1
   377                           
   378                           	psect	bssBANK1
   379   00019A                     __pbssBANK1:
   380                           	callstack 0
   381   00019A                     _dbuf:
   382                           	callstack 0
   383   00019A                     	ds	80
   384                           
   385                           	psect	bssBANK2
   386   000200                     __pbssBANK2:
   387                           	callstack 0
   388   000200                     _EUSART4TXbuf:
   389                           	callstack 0
   390   000200                     	ds	60
   391                           
   392                           	psect	cstackBANK1
   393   000100                     __pcstackBANK1:
   394                           	callstack 0
   395   000100                     main@string1:
   396                           	callstack 0
   397                           
   398                           ; 20 bytes @ 0x0
   399   000100                     	ds	20
   400   000114                     main@string2:
   401                           	callstack 0
   402                           
   403                           ; 20 bytes @ 0x14
   404   000114                     	ds	20
   405   000128                     main@string3:
   406                           	callstack 0
   407                           
   408                           ; 20 bytes @ 0x28
   409   000128                     	ds	20
   410   00013C                     main@string4:
   411                           	callstack 0
   412                           
   413                           ; 20 bytes @ 0x3C
   414   00013C                     	ds	20
   415   000150                     main@string5:
   416                           	callstack 0
   417                           
   418                           ; 20 bytes @ 0x50
   419   000150                     	ds	20
   420   000164                     main@whiteC:
   421                           	callstack 0
   422                           
   423                           ; 4 bytes @ 0x64
   424   000164                     	ds	4
   425   000168                     main@whiteR:
   426                           	callstack 0
   427                           
   428                           ; 4 bytes @ 0x68
   429   000168                     	ds	4
   430   00016C                     main@whiteG:
   431                           	callstack 0
   432                           
   433                           ; 4 bytes @ 0x6C
   434   00016C                     	ds	4
   435   000170                     main@whiteB:
   436                           	callstack 0
   437                           
   438                           ; 4 bytes @ 0x70
   439   000170                     	ds	4
   440   000174                     main@i:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x74
   444   000174                     	ds	2
   445   000176                     main@i_873:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x76
   449   000176                     	ds	2
   450   000178                     _main$2762:
   451                           	callstack 0
   452                           
   453                           ; 4 bytes @ 0x78
   454   000178                     	ds	4
   455   00017C                     main@ambientG:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x7C
   459   00017C                     	ds	2
   460   00017E                     main@ambientB:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x7E
   464   00017E                     	ds	2
   465   000180                     main@ambientR:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x80
   469   000180                     	ds	2
   470   000182                     main@clearRef:
   471                           	callstack 0
   472                           
   473                           ; 4 bytes @ 0x82
   474   000182                     	ds	4
   475   000186                     main@bluePrint:
   476                           	callstack 0
   477                           
   478                           ; 4 bytes @ 0x86
   479   000186                     	ds	4
   480   00018A                     main@greenPrint:
   481                           	callstack 0
   482                           
   483                           ; 4 bytes @ 0x8A
   484   00018A                     	ds	4
   485   00018E                     main@redPrint:
   486                           	callstack 0
   487                           
   488                           ; 4 bytes @ 0x8E
   489   00018E                     	ds	4
   490   000192                     main@RGBVal:
   491                           	callstack 0
   492                           
   493                           ; 8 bytes @ 0x92
   494   000192                     	ds	8
   495                           
   496                           	psect	cstackBANK0
   497   000060                     __pcstackBANK0:
   498                           	callstack 0
   499   000060                     ??_floorf:
   500                           
   501                           ; 1 bytes @ 0x0
   502   000060                     	ds	6
   503   000066                     floorf@m:
   504                           	callstack 0
   505                           
   506                           ; 4 bytes @ 0x6
   507   000066                     	ds	4
   508   00006A                     floorf@e:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0xA
   512   00006A                     	ds	2
   513   00006C                     floorf@u:
   514                           	callstack 0
   515                           
   516                           ; 4 bytes @ 0xC
   517   00006C                     	ds	4
   518   000070                     efgtoa@fp:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x10
   522   000070                     	ds	2
   523   000072                     efgtoa@f:
   524                           	callstack 0
   525                           
   526                           ; 4 bytes @ 0x12
   527   000072                     	ds	4
   528   000076                     efgtoa@c:
   529                           	callstack 0
   530                           
   531                           ; 1 bytes @ 0x16
   532   000076                     	ds	1
   533   000077                     efgtoa@ne:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x17
   537   000077                     	ds	2
   538   000079                     efgtoa@p:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x19
   542   000079                     	ds	2
   543   00007B                     efgtoa@t:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x1B
   547   00007B                     	ds	2
   548   00007D                     _efgtoa$2417:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x1D
   552   00007D                     	ds	2
   553   00007F                     efgtoa@pp:
   554                           	callstack 0
   555                           
   556                           ; 1 bytes @ 0x1F
   557   00007F                     	ds	1
   558   000080                     efgtoa@mode:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0x20
   562   000080                     	ds	1
   563   000081                     efgtoa@nmode:
   564                           	callstack 0
   565                           
   566                           ; 1 bytes @ 0x21
   567   000081                     	ds	1
   568   000082                     efgtoa@d:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x22
   572   000082                     	ds	2
   573   000084                     efgtoa@m:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x24
   577   000084                     	ds	2
   578   000086                     efgtoa@e:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x26
   582   000086                     	ds	2
   583   000088                     efgtoa@w:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x28
   587   000088                     	ds	2
   588   00008A                     efgtoa@ou:
   589                           	callstack 0
   590                           
   591                           ; 4 bytes @ 0x2A
   592   00008A                     	ds	4
   593   00008E                     efgtoa@i:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x2E
   597   00008E                     	ds	2
   598   000090                     efgtoa@h:
   599                           	callstack 0
   600                           
   601                           ; 4 bytes @ 0x30
   602   000090                     	ds	4
   603   000094                     efgtoa@l:
   604                           	callstack 0
   605                           
   606                           ; 4 bytes @ 0x34
   607   000094                     	ds	4
   608   000098                     efgtoa@sign:
   609                           	callstack 0
   610                           
   611                           ; 1 bytes @ 0x38
   612   000098                     	ds	1
   613   000099                     efgtoa@g:
   614                           	callstack 0
   615                           
   616                           ; 4 bytes @ 0x39
   617   000099                     	ds	4
   618   00009D                     efgtoa@n:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x3D
   622   00009D                     	ds	2
   623   00009F                     efgtoa@u:
   624                           	callstack 0
   625                           
   626                           ; 4 bytes @ 0x3F
   627   00009F                     	ds	4
   628   0000A3                     vfpfcnvrt@fp:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x43
   632   0000A3                     	ds	2
   633   0000A5                     vfpfcnvrt@fmt:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x45
   637   0000A5                     	ds	2
   638   0000A7                     vfpfcnvrt@ap:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x47
   642   0000A7                     	ds	2
   643   0000A9                     vfpfcnvrt@convarg:
   644                           	callstack 0
   645                           
   646                           ; 8 bytes @ 0x49
   647   0000A9                     	ds	8
   648   0000B1                     vfpfcnvrt@c:
   649                           	callstack 0
   650                           
   651                           ; 1 bytes @ 0x51
   652   0000B1                     	ds	1
   653   0000B2                     vfpfcnvrt@cp:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x52
   657   0000B2                     	ds	2
   658   0000B4                     ?_vfprintf:
   659                           	callstack 0
   660   0000B4                     vfprintf@fp:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x54
   664   0000B4                     	ds	2
   665   0000B6                     vfprintf@fmt:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x56
   669   0000B6                     	ds	2
   670   0000B8                     vfprintf@ap:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x58
   674   0000B8                     	ds	2
   675   0000BA                     vfprintf@cfmt:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x5A
   679   0000BA                     	ds	2
   680   0000BC                     ?_sprintf:
   681                           	callstack 0
   682   0000BC                     sprintf@s:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x5C
   686   0000BC                     	ds	2
   687   0000BE                     sprintf@fmt:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x5E
   691   0000BE                     	ds	10
   692   0000C8                     sprintf@ap:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x68
   696   0000C8                     	ds	2
   697   0000CA                     sprintf@f:
   698                           	callstack 0
   699                           
   700                           ; 11 bytes @ 0x6A
   701   0000CA                     	ds	11
   702   0000D5                     ??_main:
   703                           
   704                           ; 1 bytes @ 0x75
   705   0000D5                     	ds	2
   706                           
   707                           	psect	cstackCOMRAM
   708   000001                     __pcstackCOMRAM:
   709                           	callstack 0
   710   000001                     ??_getCharFromTxBuf:
   711   000001                     putCharToRxBuf@byte:
   712                           	callstack 0
   713   000001                     
   714                           ; 1 bytes @ 0x0
   715   000001                     	ds	2
   716   000003                     ??_HighISR:
   717                           
   718                           ; 1 bytes @ 0x2
   719   000003                     	ds	2
   720   000005                     ??_I2C_2_Master_Idle:
   721   000005                     ?___fpclassifyf:
   722                           	callstack 0
   723   000005                     ?___fladd:
   724                           	callstack 0
   725   000005                     ?_labs:
   726                           	callstack 0
   727   000005                     ?___flneg:
   728                           	callstack 0
   729   000005                     ?___fltol:
   730                           	callstack 0
   731   000005                     ?___xxtofl:
   732                           	callstack 0
   733   000005                     ?___aodiv:
   734                           	callstack 0
   735   000005                     ?___aomod:
   736                           	callstack 0
   737   000005                     putCharToTxBuf@byte:
   738                           	callstack 0
   739   000005                     memcpy@d1:
   740                           	callstack 0
   741   000005                     fputc@c:
   742                           	callstack 0
   743   000005                     strcpy@dest:
   744                           	callstack 0
   745   000005                     ___fleq@ff1:
   746                           	callstack 0
   747   000005                     ___flneg@f1:
   748                           	callstack 0
   749   000005                     ___fltol@f1:
   750                           	callstack 0
   751   000005                     ___fladd@b:
   752                           	callstack 0
   753   000005                     ___xxtofl@val:
   754                           	callstack 0
   755   000005                     ___fpclassifyf@x:
   756                           	callstack 0
   757   000005                     labs@a:
   758                           	callstack 0
   759   000005                     ___aodiv@dividend:
   760                           	callstack 0
   761   000005                     ___aomod@dividend:
   762                           	callstack 0
   763   000005                     LRmotorsInit@motorLeft:
   764                           	callstack 0
   765                           
   766                           ; 9 bytes @ 0x4
   767   000005                     	ds	1
   768   000006                     ??_I2C_2_Master_Read:
   769   000006                     I2C_2_Master_Write@data_byte:
   770                           	callstack 0
   771   000006                     TxBufferedString@string:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x5
   775   000006                     	ds	1
   776   000007                     color_writetoaddr@value:
   777                           	callstack 0
   778   000007                     I2C_2_Master_Read@ack:
   779                           	callstack 0
   780   000007                     memcpy@s1:
   781                           	callstack 0
   782   000007                     fputc@fp:
   783                           	callstack 0
   784   000007                     strcpy@src:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x6
   788   000007                     	ds	1
   789   000008                     color_writetoaddr@address:
   790                           	callstack 0
   791   000008                     I2C_2_Master_Read@tmp:
   792                           	callstack 0
   793                           
   794                           ; 1 bytes @ 0x7
   795   000008                     	ds	1
   796   000009                     ??_fputc:
   797   000009                     ??___fpclassifyf:
   798   000009                     ??_labs:
   799   000009                     ??_color_click_init:
   800   000009                     ??___fltol:
   801   000009                     ??___xxtofl:
   802   000009                     ?_color_read_Red:
   803                           	callstack 0
   804   000009                     ?_color_read_Green:
   805                           	callstack 0
   806   000009                     ?_color_read_Blue:
   807                           	callstack 0
   808   000009                     ?_color_read_Clear:
   809                           	callstack 0
   810   000009                     memcpy@n:
   811                           	callstack 0
   812   000009                     strcpy@s:
   813                           	callstack 0
   814   000009                     ___fleq@ff2:
   815                           	callstack 0
   816   000009                     ___fladd@a:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x8
   820   000009                     	ds	2
   821   00000B                     ??_color_read_Red:
   822   00000B                     ??_color_read_Green:
   823   00000B                     ??_color_read_Blue:
   824   00000B                     ??_color_read_Clear:
   825   00000B                     memcpy@d:
   826                           	callstack 0
   827   00000B                     strcpy@d:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0xA
   831   00000B                     	ds	2
   832   00000D                     ??___fladd:
   833   00000D                     ??___fleq:
   834   00000D                     ___fltol@sign1:
   835                           	callstack 0
   836   00000D                     ___xxtofl@sign:
   837                           	callstack 0
   838   00000D                     ___fpclassifyf@e:
   839                           	callstack 0
   840   00000D                     memcpy@s:
   841                           	callstack 0
   842   00000D                     ___aodiv@divisor:
   843                           	callstack 0
   844   00000D                     ___aomod@divisor:
   845                           	callstack 0
   846                           
   847                           ; 8 bytes @ 0xC
   848   00000D                     	ds	1
   849   00000E                     ___fltol@exp1:
   850                           	callstack 0
   851   00000E                     ___xxtofl@exp:
   852                           	callstack 0
   853   00000E                     color_read_Red@tmp:
   854                           	callstack 0
   855   00000E                     color_read_Green@tmp:
   856                           	callstack 0
   857   00000E                     color_read_Blue@tmp:
   858                           	callstack 0
   859   00000E                     color_read_Clear@tmp:
   860                           	callstack 0
   861   00000E                     fputs@s:
   862                           	callstack 0
   863   00000E                     LRmotorsInit@motorRight:
   864                           	callstack 0
   865                           
   866                           ; 9 bytes @ 0xD
   867   00000E                     	ds	1
   868   00000F                     memcpy@tmp:
   869                           	callstack 0
   870   00000F                     ___xxtofl@arg:
   871                           	callstack 0
   872   00000F                     ___fpclassifyf@u:
   873                           	callstack 0
   874                           
   875                           ; 4 bytes @ 0xE
   876   00000F                     	ds	1
   877   000010                     getColor@v:
   878                           	callstack 0
   879   000010                     fputs@fp:
   880                           	callstack 0
   881                           
   882                           ; 2 bytes @ 0xF
   883   000010                     	ds	1
   884   000011                     ___fladd@signs:
   885                           	callstack 0
   886                           
   887                           ; 1 bytes @ 0x10
   888   000011                     	ds	1
   889   000012                     ___fladd@aexp:
   890                           	callstack 0
   891   000012                     fputs@c:
   892                           	callstack 0
   893                           
   894                           ; 1 bytes @ 0x11
   895   000012                     	ds	1
   896   000013                     ___fladd@bexp:
   897                           	callstack 0
   898   000013                     fputs@i:
   899                           	callstack 0
   900                           
   901                           ; 2 bytes @ 0x12
   902   000013                     	ds	1
   903   000014                     ___fladd@grs:
   904                           	callstack 0
   905                           
   906                           ; 1 bytes @ 0x13
   907   000014                     	ds	1
   908   000015                     ?___flsub:
   909                           	callstack 0
   910   000015                     ___aodiv@counter:
   911                           	callstack 0
   912   000015                     ___aomod@counter:
   913                           	callstack 0
   914   000015                     pad@fp:
   915                           	callstack 0
   916   000015                     ___flsub@b:
   917                           	callstack 0
   918                           
   919                           ; 4 bytes @ 0x14
   920   000015                     	ds	1
   921   000016                     ___aodiv@sign:
   922                           	callstack 0
   923   000016                     ___aomod@sign:
   924                           	callstack 0
   925                           
   926                           ; 1 bytes @ 0x15
   927   000016                     	ds	1
   928   000017                     ?_abs:
   929                           	callstack 0
   930   000017                     initDCmotorsPWM@PWMperiod:
   931                           	callstack 0
   932   000017                     pad@buf:
   933                           	callstack 0
   934   000017                     abs@a:
   935                           	callstack 0
   936   000017                     ___aodiv@quotient:
   937                           	callstack 0
   938                           
   939                           ; 8 bytes @ 0x16
   940   000017                     	ds	2
   941   000019                     ??_abs:
   942   000019                     pad@p:
   943                           	callstack 0
   944   000019                     ___flsub@a:
   945                           	callstack 0
   946                           
   947                           ; 4 bytes @ 0x18
   948   000019                     	ds	2
   949   00001B                     ??_pad:
   950                           
   951                           ; 1 bytes @ 0x1A
   952   00001B                     	ds	1
   953   00001C                     pad@i:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x1B
   957   00001C                     	ds	1
   958   00001D                     ?___flmul:
   959                           	callstack 0
   960   00001D                     ___flmul@b:
   961                           	callstack 0
   962                           
   963                           ; 4 bytes @ 0x1C
   964   00001D                     	ds	1
   965   00001E                     pad@w:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0x1D
   969   00001E                     	ds	2
   970   000020                     dtoa@fp:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0x1F
   974   000020                     	ds	1
   975   000021                     ___flmul@a:
   976                           	callstack 0
   977                           
   978                           ; 4 bytes @ 0x20
   979   000021                     	ds	1
   980   000022                     dtoa@d:
   981                           	callstack 0
   982                           
   983                           ; 8 bytes @ 0x21
   984   000022                     	ds	3
   985   000025                     ??___flmul:
   986                           
   987                           ; 1 bytes @ 0x24
   988   000025                     	ds	4
   989   000029                     ___flmul@sign:
   990                           	callstack 0
   991                           
   992                           ; 1 bytes @ 0x28
   993   000029                     	ds	1
   994   00002A                     ??_dtoa:
   995   00002A                     ___flmul@grs:
   996                           	callstack 0
   997                           
   998                           ; 4 bytes @ 0x29
   999   00002A                     	ds	4
  1000   00002E                     ___flmul@aexp:
  1001                           	callstack 0
  1002                           
  1003                           ; 1 bytes @ 0x2D
  1004   00002E                     	ds	1
  1005   00002F                     ___flmul@bexp:
  1006                           	callstack 0
  1007                           
  1008                           ; 1 bytes @ 0x2E
  1009   00002F                     	ds	1
  1010   000030                     ___flmul@prod:
  1011                           	callstack 0
  1012                           
  1013                           ; 4 bytes @ 0x2F
  1014   000030                     	ds	2
  1015   000032                     _dtoa$2386:
  1016                           	callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x31
  1019   000032                     	ds	2
  1020   000034                     ___flmul@temp:
  1021                           	callstack 0
  1022   000034                     dtoa@p:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x33
  1026   000034                     	ds	2
  1027   000036                     ?___fldiv:
  1028                           	callstack 0
  1029   000036                     dtoa@w:
  1030                           	callstack 0
  1031   000036                     ___flge@ff1:
  1032                           	callstack 0
  1033   000036                     ___fldiv@b:
  1034                           	callstack 0
  1035                           
  1036                           ; 4 bytes @ 0x35
  1037   000036                     	ds	2
  1038   000038                     dtoa@n:
  1039                           	callstack 0
  1040                           
  1041                           ; 8 bytes @ 0x37
  1042   000038                     	ds	2
  1043   00003A                     ___flge@ff2:
  1044                           	callstack 0
  1045   00003A                     ___fldiv@a:
  1046                           	callstack 0
  1047                           
  1048                           ; 4 bytes @ 0x39
  1049   00003A                     	ds	4
  1050   00003E                     ??___fldiv:
  1051   00003E                     ??___flge:
  1052                           
  1053                           ; 1 bytes @ 0x3D
  1054   00003E                     	ds	2
  1055   000040                     dtoa@i:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x3F
  1059   000040                     	ds	2
  1060   000042                     dtoa@s:
  1061                           	callstack 0
  1062   000042                     ___fldiv@rem:
  1063                           	callstack 0
  1064                           
  1065                           ; 4 bytes @ 0x41
  1066   000042                     	ds	4
  1067   000046                     ___fldiv@sign:
  1068                           	callstack 0
  1069                           
  1070                           ; 1 bytes @ 0x45
  1071   000046                     	ds	1
  1072   000047                     ___fldiv@new_exp:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x46
  1076   000047                     	ds	2
  1077   000049                     ___fldiv@grs:
  1078                           	callstack 0
  1079                           
  1080                           ; 4 bytes @ 0x48
  1081   000049                     	ds	4
  1082   00004D                     ___fldiv@bexp:
  1083                           	callstack 0
  1084                           
  1085                           ; 1 bytes @ 0x4C
  1086   00004D                     	ds	1
  1087   00004E                     ___fldiv@aexp:
  1088                           	callstack 0
  1089                           
  1090                           ; 1 bytes @ 0x4D
  1091   00004E                     	ds	1
  1092   00004F                     ?_floorf:
  1093                           	callstack 0
  1094   00004F                     floorf@x:
  1095                           	callstack 0
  1096                           
  1097                           ; 4 bytes @ 0x4E
  1098   00004F                     	ds	4
  1099   000053                     ??_efgtoa:
  1100                           
  1101                           ; 1 bytes @ 0x52
  1102   000053                     	ds	2
  1103   000055                     ??_vfpfcnvrt:
  1104                           
  1105                           ; 1 bytes @ 0x54
  1106   000055                     	ds	2
  1107   000057                     
  1108                           ; 1 bytes @ 0x56
  1109 ;;
  1110 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1111 ;;
  1112 ;; *************** function _main *****************
  1113 ;; Defined at:
  1114 ;;		line 22 in file "newmain.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;		None
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;  i               2  118[BANK1 ] int 
  1119 ;;  i               2  116[BANK1 ] int 
  1120 ;;  string5        20   80[BANK1 ] unsigned char [20]
  1121 ;;  string4        20   60[BANK1 ] unsigned char [20]
  1122 ;;  string3        20   40[BANK1 ] unsigned char [20]
  1123 ;;  string2        20   20[BANK1 ] unsigned char [20]
  1124 ;;  string1        20    0[BANK1 ] unsigned char [20]
  1125 ;;  testString     20    0        unsigned char [20]
  1126 ;;  RGBVal          8  146[BANK1 ] struct RGB
  1127 ;;  redPrint        4  142[BANK1 ] float 
  1128 ;;  greenPrint      4  138[BANK1 ] float 
  1129 ;;  bluePrint       4  134[BANK1 ] float 
  1130 ;;  clearRef        4  130[BANK1 ] float 
  1131 ;;  whiteB          4  112[BANK1 ] float 
  1132 ;;  whiteG          4  108[BANK1 ] float 
  1133 ;;  whiteR          4  104[BANK1 ] float 
  1134 ;;  whiteC          4  100[BANK1 ] float 
  1135 ;;  ambientC        4    0        float 
  1136 ;;  ambientR        2  128[BANK1 ] unsigned int 
  1137 ;;  ambientB        2  126[BANK1 ] unsigned int 
  1138 ;;  ambientG        2  124[BANK1 ] unsigned int 
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  1    wreg      void 
  1141 ;; Registers used:
  1142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1149 ;;      Locals:         0       0     154       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1150 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1151 ;;      Totals:         0       2     154       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1152 ;;Total ram usage:      156 bytes
  1153 ;; Hardware stack levels required when called: 10
  1154 ;; This function calls:
  1155 ;;		_TxBufferedString
  1156 ;;		___fldiv
  1157 ;;		___flge
  1158 ;;		___flmul
  1159 ;;		___flsub
  1160 ;;		___xxtofl
  1161 ;;		_color_click_init
  1162 ;;		_getColor
  1163 ;;		_initDCmotorsPWM
  1164 ;;		_initUSART4
  1165 ;;		_sendTxBuf
  1166 ;;		_sprintf
  1167 ;; This function is called by:
  1168 ;;		Startup code after reset
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           	psect	text0
  1173   000E70                     __ptext0:
  1174                           	callstack 0
  1175   000E70                     _main:
  1176                           	callstack 21
  1177   000E70                     
  1178                           ;newmain.c: 24:     color_click_init();
  1179   000E70  EC25  F026         	call	_color_click_init	;wreg free
  1180   000E74                     
  1181                           ;newmain.c: 25:     initUSART4();
  1182   000E74  EC57  F026         	call	_initUSART4	;wreg free
  1183   000E78                     
  1184                           ;newmain.c: 26:     initDCmotorsPWM(199);
  1185   000E78  0E00               	movlw	0
  1186   000E7A  6E18               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1187   000E7C  0EC7               	movlw	199
  1188   000E7E  6E17               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1189   000E80  EC1C  F023         	call	_initDCmotorsPWM	;wreg free
  1190   000E84                     
  1191                           ;newmain.c: 33:     LATDbits.LATD7=0;
  1192   000E84  9E7C               	bcf	124,7,c	;volatile
  1193   000E86                     
  1194                           ;newmain.c: 34:     TRISDbits.TRISD7=0;
  1195   000E86  9E84               	bcf	132,7,c	;volatile
  1196   000E88                     
  1197                           ;newmain.c: 36:     LATHbits.LATH3=0;
  1198   000E88  9680               	bcf	128,3,c	;volatile
  1199   000E8A                     
  1200                           ;newmain.c: 37:     TRISHbits.TRISH3=0;
  1201   000E8A  9688               	bcf	136,3,c	;volatile
  1202   000E8C                     
  1203                           ;newmain.c: 39:     LATDbits.LATD4 = 0;
  1204   000E8C  987C               	bcf	124,4,c	;volatile
  1205   000E8E                     
  1206                           ;newmain.c: 40:     TRISDbits.TRISD4 = 0;
  1207   000E8E  9884               	bcf	132,4,c	;volatile
  1208   000E90                     
  1209                           ;newmain.c: 42:     LATHbits.LATH0 = 0;
  1210   000E90  9080               	bcf	128,0,c	;volatile
  1211   000E92                     
  1212                           ;newmain.c: 43:     TRISHbits.TRISH0 = 0;
  1213   000E92  9088               	bcf	136,0,c	;volatile
  1214   000E94                     
  1215                           ;newmain.c: 45:     LATFbits.LATF0 = 0;
  1216   000E94  907E               	bcf	126,0,c	;volatile
  1217   000E96                     
  1218                           ;newmain.c: 46:     TRISFbits.TRISF0 = 0;
  1219   000E96  9086               	bcf	134,0,c	;volatile
  1220   000E98                     
  1221                           ;newmain.c: 48:     LATHbits.LATH1 = 0;
  1222   000E98  9280               	bcf	128,1,c	;volatile
  1223   000E9A                     
  1224                           ;newmain.c: 49:     TRISHbits.TRISH1 = 0;
  1225   000E9A  9288               	bcf	136,1,c	;volatile
  1226   000E9C                     
  1227                           ;newmain.c: 51:     LATDbits.LATD3 = 0;
  1228   000E9C  967C               	bcf	124,3,c	;volatile
  1229   000E9E                     
  1230                           ;newmain.c: 52:     TRISDbits.TRISD3 = 0;
  1231   000E9E  9684               	bcf	132,3,c	;volatile
  1232   000EA0                     
  1233                           ;newmain.c: 55:     LATDbits.LATD4 = 1;
  1234   000EA0  887C               	bsf	124,4,c	;volatile
  1235   000EA2                     
  1236                           ;newmain.c: 56:     LATFbits.LATF0 = 1;
  1237   000EA2  807E               	bsf	126,0,c	;volatile
  1238   000EA4                     
  1239                           ;newmain.c: 57:     LATHbits.LATH0 = 1;
  1240   000EA4  8080               	bsf	128,0,c	;volatile
  1241   000EA6                     
  1242                           ;newmain.c: 58:     LATFbits.LATF0 = 1;
  1243   000EA6  807E               	bsf	126,0,c	;volatile
  1244   000EA8                     
  1245                           ;newmain.c: 59:     LATDbits.LATD3 = 1;
  1246   000EA8  867C               	bsf	124,3,c	;volatile
  1247   000EAA                     
  1248                           ;newmain.c: 64:     LATGbits.LATG0=1;
  1249   000EAA  807F               	bsf	127,0,c	;volatile
  1250   000EAC                     
  1251                           ;newmain.c: 65:     LATEbits.LATE7=1;
  1252   000EAC  8E7D               	bsf	125,7,c	;volatile
  1253   000EAE                     
  1254                           ;newmain.c: 66:     LATAbits.LATA3=1;
  1255   000EAE  8679               	bsf	121,3,c	;volatile
  1256   000EB0                     
  1257                           ;newmain.c: 68:     TRISGbits.TRISG0=0;
  1258   000EB0  9087               	bcf	135,0,c	;volatile
  1259   000EB2                     
  1260                           ;newmain.c: 69:     TRISEbits.TRISE7=0;
  1261   000EB2  9E85               	bcf	133,7,c	;volatile
  1262   000EB4                     
  1263                           ;newmain.c: 70:     TRISAbits.TRISA3=0;
  1264   000EB4  9681               	bcf	129,3,c	;volatile
  1265   000EB6                     
  1266                           ;newmain.c: 73:     TRISFbits.TRISF2=1;
  1267   000EB6  8486               	bsf	134,2,c	;volatile
  1268   000EB8                     
  1269                           ;newmain.c: 74:     ANSELFbits.ANSELF2=0;
  1270   000EB8  010E               	movlb	14	; () banked
  1271   000EBA  95B4               	bcf	180,2,b	;volatile
  1272   000EBC                     
  1273                           ; BSR set to: 14
  1274                           ;newmain.c: 76:     TRISFbits.TRISF3=1;
  1275   000EBC  8686               	bsf	134,3,c	;volatile
  1276   000EBE                     
  1277                           ; BSR set to: 14
  1278                           ;newmain.c: 77:     ANSELFbits.ANSELF3=0;
  1279   000EBE  97B4               	bcf	180,3,b	;volatile
  1280   000EC0                     
  1281                           ; BSR set to: 14
  1282                           ;newmain.c: 79:     char testString[20];;newmain.c: 80:     char string1[20];;newmain.c:
      +                           81:     char string2[20];;newmain.c: 82:     char string3[20];;newmain.c: 83:     char 
      +                          string4[20];;newmain.c: 84:     char string5[20];;newmain.c: 87:     RGB RGBVal;;newmain
      +                          .c: 88:     RGBVal.R = 0;
  1283   000EC0  0E00               	movlw	0
  1284   000EC2  0101               	movlb	1	; () banked
  1285   000EC4  6F93               	movwf	(main@RGBVal+1)& (0+255),b
  1286   000EC6  0E00               	movlw	0
  1287   000EC8  6F92               	movwf	main@RGBVal& (0+255),b
  1288   000ECA                     
  1289                           ; BSR set to: 1
  1290                           ;newmain.c: 89:     RGBVal.G = 0;
  1291   000ECA  0E00               	movlw	0
  1292   000ECC  6F95               	movwf	(main@RGBVal+3)& (0+255),b
  1293   000ECE  0E00               	movlw	0
  1294   000ED0  6F94               	movwf	(main@RGBVal+2)& (0+255),b
  1295   000ED2                     
  1296                           ; BSR set to: 1
  1297                           ;newmain.c: 90:     RGBVal.B = 0;
  1298   000ED2  0E00               	movlw	0
  1299   000ED4  6F97               	movwf	(main@RGBVal+5)& (0+255),b
  1300   000ED6  0E00               	movlw	0
  1301   000ED8  6F96               	movwf	(main@RGBVal+4)& (0+255),b
  1302   000EDA                     
  1303                           ; BSR set to: 1
  1304                           ;newmain.c: 91:     RGBVal.C = 0;
  1305   000EDA  0E00               	movlw	0
  1306   000EDC  6F99               	movwf	(main@RGBVal+7)& (0+255),b
  1307   000EDE  0E00               	movlw	0
  1308   000EE0  6F98               	movwf	(main@RGBVal+6)& (0+255),b
  1309   000EE2                     
  1310                           ; BSR set to: 1
  1311                           ;newmain.c: 94:     unsigned int ambientR = 30;
  1312   000EE2  0E00               	movlw	0
  1313   000EE4  6F81               	movwf	(main@ambientR+1)& (0+255),b
  1314   000EE6  0E1E               	movlw	30
  1315   000EE8  6F80               	movwf	main@ambientR& (0+255),b
  1316   000EEA                     
  1317                           ; BSR set to: 1
  1318                           ;newmain.c: 95:     unsigned int ambientG = 12;
  1319   000EEA  0E00               	movlw	0
  1320   000EEC  6F7D               	movwf	(main@ambientG+1)& (0+255),b
  1321   000EEE  0E0C               	movlw	12
  1322   000EF0  6F7C               	movwf	main@ambientG& (0+255),b
  1323   000EF2                     
  1324                           ; BSR set to: 1
  1325                           ;newmain.c: 96:     unsigned int ambientB = 10;
  1326   000EF2  0E00               	movlw	0
  1327   000EF4  6F7F               	movwf	(main@ambientB+1)& (0+255),b
  1328   000EF6  0E0A               	movlw	10
  1329   000EF8  6F7E               	movwf	main@ambientB& (0+255),b
  1330   000EFA                     
  1331                           ; BSR set to: 1
  1332                           ;newmain.c: 99:     float whiteR = 68.0;
  1333   000EFA  0E00               	movlw	0
  1334   000EFC  6F68               	movwf	main@whiteR& (0+255),b
  1335   000EFE  0E00               	movlw	0
  1336   000F00  6F69               	movwf	(main@whiteR+1)& (0+255),b
  1337   000F02  0E88               	movlw	136
  1338   000F04  6F6A               	movwf	(main@whiteR+2)& (0+255),b
  1339   000F06  0E42               	movlw	66
  1340   000F08  6F6B               	movwf	(main@whiteR+3)& (0+255),b
  1341   000F0A                     
  1342                           ; BSR set to: 1
  1343                           ;newmain.c: 100:     float whiteG = 57.0;
  1344   000F0A  0E00               	movlw	0
  1345   000F0C  6F6C               	movwf	main@whiteG& (0+255),b
  1346   000F0E  0E00               	movlw	0
  1347   000F10  6F6D               	movwf	(main@whiteG+1)& (0+255),b
  1348   000F12  0E64               	movlw	100
  1349   000F14  6F6E               	movwf	(main@whiteG+2)& (0+255),b
  1350   000F16  0E42               	movlw	66
  1351   000F18  6F6F               	movwf	(main@whiteG+3)& (0+255),b
  1352   000F1A                     
  1353                           ; BSR set to: 1
  1354                           ;newmain.c: 101:     float whiteB = 54.0;
  1355   000F1A  0E00               	movlw	0
  1356   000F1C  6F70               	movwf	main@whiteB& (0+255),b
  1357   000F1E  0E00               	movlw	0
  1358   000F20  6F71               	movwf	(main@whiteB+1)& (0+255),b
  1359   000F22  0E58               	movlw	88
  1360   000F24  6F72               	movwf	(main@whiteB+2)& (0+255),b
  1361   000F26  0E42               	movlw	66
  1362   000F28  6F73               	movwf	(main@whiteB+3)& (0+255),b
  1363   000F2A                     
  1364                           ; BSR set to: 1
  1365                           ;newmain.c: 102:     float whiteC = 195.0;
  1366   000F2A  0E00               	movlw	0
  1367   000F2C  6F64               	movwf	main@whiteC& (0+255),b
  1368   000F2E  0E00               	movlw	0
  1369   000F30  6F65               	movwf	(main@whiteC+1)& (0+255),b
  1370   000F32  0E43               	movlw	67
  1371   000F34  6F66               	movwf	(main@whiteC+2)& (0+255),b
  1372   000F36  0E43               	movlw	67
  1373   000F38  6F67               	movwf	(main@whiteC+3)& (0+255),b
  1374   000F3A                     
  1375                           ; BSR set to: 1
  1376                           ;newmain.c: 105:     float redPrint = 0.0;
  1377   000F3A  0E00               	movlw	0
  1378   000F3C  6F8E               	movwf	main@redPrint& (0+255),b
  1379   000F3E  0E00               	movlw	0
  1380   000F40  6F8F               	movwf	(main@redPrint+1)& (0+255),b
  1381   000F42  0E00               	movlw	0
  1382   000F44  6F90               	movwf	(main@redPrint+2)& (0+255),b
  1383   000F46  0E00               	movlw	0
  1384   000F48  6F91               	movwf	(main@redPrint+3)& (0+255),b
  1385   000F4A                     
  1386                           ; BSR set to: 1
  1387                           ;newmain.c: 106:     float bluePrint = 0.0;
  1388   000F4A  0E00               	movlw	0
  1389   000F4C  6F86               	movwf	main@bluePrint& (0+255),b
  1390   000F4E  0E00               	movlw	0
  1391   000F50  6F87               	movwf	(main@bluePrint+1)& (0+255),b
  1392   000F52  0E00               	movlw	0
  1393   000F54  6F88               	movwf	(main@bluePrint+2)& (0+255),b
  1394   000F56  0E00               	movlw	0
  1395   000F58  6F89               	movwf	(main@bluePrint+3)& (0+255),b
  1396   000F5A                     
  1397                           ; BSR set to: 1
  1398                           ;newmain.c: 107:     float greenPrint = 0.0;
  1399   000F5A  0E00               	movlw	0
  1400   000F5C  6F8A               	movwf	main@greenPrint& (0+255),b
  1401   000F5E  0E00               	movlw	0
  1402   000F60  6F8B               	movwf	(main@greenPrint+1)& (0+255),b
  1403   000F62  0E00               	movlw	0
  1404   000F64  6F8C               	movwf	(main@greenPrint+2)& (0+255),b
  1405   000F66  0E00               	movlw	0
  1406   000F68  6F8D               	movwf	(main@greenPrint+3)& (0+255),b
  1407   000F6A                     l5303:
  1408                           
  1409                           ;newmain.c: 113:         if (!PORTFbits.RF2){
  1410   000F6A  B48E               	btfsc	142,2,c	;volatile
  1411   000F6C  EFBA  F007         	goto	u5581
  1412   000F70  EFBC  F007         	goto	u5580
  1413   000F74                     u5581:
  1414   000F74  EF46  F008         	goto	l5333
  1415   000F78                     u5580:
  1416   000F78                     
  1417                           ;newmain.c: 115:             for(int i = 0;i<20;i++){
  1418   000F78  0E00               	movlw	0
  1419   000F7A  0101               	movlb	1	; () banked
  1420   000F7C  6F75               	movwf	(main@i+1)& (0+255),b
  1421   000F7E  0E00               	movlw	0
  1422   000F80  6F74               	movwf	main@i& (0+255),b
  1423   000F82                     l5307:
  1424                           
  1425                           ; BSR set to: 1
  1426   000F82  BF75               	btfsc	(main@i+1)& (0+255),7,b
  1427   000F84  EFCD  F007         	goto	u5591
  1428   000F88  5175               	movf	(main@i+1)& (0+255),w,b
  1429   000F8A  E109               	bnz	u5590
  1430   000F8C  0E14               	movlw	20
  1431   000F8E  5D74               	subwf	main@i& (0+255),w,b
  1432   000F90  A0D8               	btfss	status,0,c
  1433   000F92  EFCD  F007         	goto	u5591
  1434   000F96  EFCF  F007         	goto	u5590
  1435   000F9A                     u5591:
  1436   000F9A  EFD1  F007         	goto	l5311
  1437   000F9E                     u5590:
  1438   000F9E  EFF6  F007         	goto	l5317
  1439   000FA2                     l5311:
  1440                           
  1441                           ; BSR set to: 1
  1442                           ;newmain.c: 116:             LATDbits.LATD7 = !LATDbits.LATD7;
  1443   000FA2  AE7C               	btfss	124,7,c	;volatile
  1444   000FA4  EFD6  F007         	goto	u5601
  1445   000FA8  EFDB  F007         	goto	u5600
  1446   000FAC                     u5601:
  1447   000FAC  0100               	movlb	0	; () banked
  1448   000FAE  6BD5               	clrf	??_main& (0+255),b
  1449   000FB0  2BD5               	incf	??_main& (0+255),f,b
  1450   000FB2  EFDD  F007         	goto	u5618
  1451   000FB6                     u5600:
  1452   000FB6  0100               	movlb	0	; () banked
  1453   000FB8  6BD5               	clrf	??_main& (0+255),b
  1454   000FBA                     u5618:
  1455   000FBA  33D5               	rrcf	??_main& (0+255),f,b
  1456   000FBC  33D5               	rrcf	??_main& (0+255),f,b
  1457   000FBE  507C               	movf	124,w,c	;volatile
  1458   000FC0  19D5               	xorwf	??_main& (0+255),w,b
  1459   000FC2  0B7F               	andlw	-129
  1460   000FC4  19D5               	xorwf	??_main& (0+255),w,b
  1461   000FC6  6E7C               	movwf	124,c	;volatile
  1462   000FC8                     
  1463                           ; BSR set to: 0
  1464                           ;newmain.c: 117:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1465   000FC8  0E09               	movlw	9
  1466   000FCA  0100               	movlb	0	; () banked
  1467   000FCC  6FD6               	movwf	(??_main+1)& (0+255),b
  1468   000FCE  0E1E               	movlw	30
  1469   000FD0  6FD5               	movwf	??_main& (0+255),b
  1470   000FD2  0EE4               	movlw	228
  1471   000FD4                     u5997:
  1472   000FD4  2EE8               	decfsz	wreg,f,c
  1473   000FD6  D7FE               	bra	u5997
  1474   000FD8  2FD5               	decfsz	??_main& (0+255),f,b
  1475   000FDA  D7FC               	bra	u5997
  1476   000FDC  2FD6               	decfsz	(??_main+1)& (0+255),f,b
  1477   000FDE  D7FA               	bra	u5997
  1478   000FE0  F000               	nop	
  1479                           
  1480                           ;newmain.c: 118:             }
  1481   000FE2  0101               	movlb	1	; () banked
  1482   000FE4  4B74               	infsnz	main@i& (0+255),f,b
  1483   000FE6  2B75               	incf	(main@i+1)& (0+255),f,b
  1484   000FE8  EFC1  F007         	goto	l5307
  1485   000FEC                     l5317:
  1486                           
  1487                           ; BSR set to: 1
  1488                           ;newmain.c: 119:             LATDbits.LATD7 = !LATDbits.LATD7;
  1489   000FEC  AE7C               	btfss	124,7,c	;volatile
  1490   000FEE  EFFB  F007         	goto	u5621
  1491   000FF2  EF00  F008         	goto	u5620
  1492   000FF6                     u5621:
  1493   000FF6  0100               	movlb	0	; () banked
  1494   000FF8  6BD5               	clrf	??_main& (0+255),b
  1495   000FFA  2BD5               	incf	??_main& (0+255),f,b
  1496   000FFC  EF02  F008         	goto	u5638
  1497   001000                     u5620:
  1498   001000  0100               	movlb	0	; () banked
  1499   001002  6BD5               	clrf	??_main& (0+255),b
  1500   001004                     u5638:
  1501   001004  33D5               	rrcf	??_main& (0+255),f,b
  1502   001006  33D5               	rrcf	??_main& (0+255),f,b
  1503   001008  507C               	movf	124,w,c	;volatile
  1504   00100A  19D5               	xorwf	??_main& (0+255),w,b
  1505   00100C  0B7F               	andlw	-129
  1506   00100E  19D5               	xorwf	??_main& (0+255),w,b
  1507   001010  6E7C               	movwf	124,c	;volatile
  1508   001012                     
  1509                           ; BSR set to: 0
  1510                           ;newmain.c: 120:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1511   001012  0E29               	movlw	41
  1512   001014  0100               	movlb	0	; () banked
  1513   001016  6FD6               	movwf	(??_main+1)& (0+255),b
  1514   001018  0E96               	movlw	150
  1515   00101A  6FD5               	movwf	??_main& (0+255),b
  1516   00101C  0E7F               	movlw	127
  1517   00101E                     u6007:
  1518   00101E  2EE8               	decfsz	wreg,f,c
  1519   001020  D7FE               	bra	u6007
  1520   001022  2FD5               	decfsz	??_main& (0+255),f,b
  1521   001024  D7FC               	bra	u6007
  1522   001026  2FD6               	decfsz	(??_main+1)& (0+255),f,b
  1523   001028  D7FA               	bra	u6007
  1524   00102A                     
  1525                           ;newmain.c: 121:             getColor(&RGBVal);
  1526   00102A  0E92               	movlw	low main@RGBVal
  1527   00102C  6E10               	movwf	getColor@v^0,c
  1528   00102E  0E01               	movlw	high main@RGBVal
  1529   001030  6E11               	movwf	(getColor@v+1)^0,c
  1530   001032  ECD6  F023         	call	_getColor	;wreg free
  1531   001036                     
  1532                           ;newmain.c: 122:             ambientR = RGBVal.R;
  1533   001036  C192  F180         	movff	main@RGBVal,main@ambientR
  1534   00103A  C193  F181         	movff	main@RGBVal+1,main@ambientR+1
  1535   00103E                     
  1536                           ;newmain.c: 123:             ambientG = RGBVal.G;
  1537   00103E  C194  F17C         	movff	main@RGBVal+2,main@ambientG
  1538   001042  C195  F17D         	movff	main@RGBVal+3,main@ambientG+1
  1539   001046                     
  1540                           ;newmain.c: 124:             ambientB = RGBVal.B;
  1541   001046  C196  F17E         	movff	main@RGBVal+4,main@ambientB
  1542   00104A  C197  F17F         	movff	main@RGBVal+5,main@ambientB+1
  1543   00104E                     
  1544                           ;newmain.c: 125:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1545   00104E  0E29               	movlw	41
  1546   001050  0100               	movlb	0	; () banked
  1547   001052  6FD6               	movwf	(??_main+1)& (0+255),b
  1548   001054  0E96               	movlw	150
  1549   001056  6FD5               	movwf	??_main& (0+255),b
  1550   001058  0E7F               	movlw	127
  1551   00105A                     u6017:
  1552   00105A  2EE8               	decfsz	wreg,f,c
  1553   00105C  D7FE               	bra	u6017
  1554   00105E  2FD5               	decfsz	??_main& (0+255),f,b
  1555   001060  D7FC               	bra	u6017
  1556   001062  2FD6               	decfsz	(??_main+1)& (0+255),f,b
  1557   001064  D7FA               	bra	u6017
  1558   001066                     
  1559                           ;newmain.c: 126:             LATDbits.LATD7 = !LATDbits.LATD7;
  1560   001066  AE7C               	btfss	124,7,c	;volatile
  1561   001068  EF38  F008         	goto	u5641
  1562   00106C  EF3D  F008         	goto	u5640
  1563   001070                     u5641:
  1564   001070  0100               	movlb	0	; () banked
  1565   001072  6BD5               	clrf	??_main& (0+255),b
  1566   001074  2BD5               	incf	??_main& (0+255),f,b
  1567   001076  EF3F  F008         	goto	u5658
  1568   00107A                     u5640:
  1569   00107A  0100               	movlb	0	; () banked
  1570   00107C  6BD5               	clrf	??_main& (0+255),b
  1571   00107E                     u5658:
  1572   00107E  33D5               	rrcf	??_main& (0+255),f,b
  1573   001080  33D5               	rrcf	??_main& (0+255),f,b
  1574   001082  507C               	movf	124,w,c	;volatile
  1575   001084  19D5               	xorwf	??_main& (0+255),w,b
  1576   001086  0B7F               	andlw	-129
  1577   001088  19D5               	xorwf	??_main& (0+255),w,b
  1578   00108A  6E7C               	movwf	124,c	;volatile
  1579   00108C                     l5333:
  1580                           
  1581                           ;newmain.c: 129:         if (!PORTFbits.RF3){
  1582   00108C  B68E               	btfsc	142,3,c	;volatile
  1583   00108E  EF4B  F008         	goto	u5661
  1584   001092  EF4D  F008         	goto	u5660
  1585   001096                     u5661:
  1586   001096  EF0F  F009         	goto	l150
  1587   00109A                     u5660:
  1588   00109A                     
  1589                           ;newmain.c: 131:             for(int i = 0;i<20;i++){
  1590   00109A  0E00               	movlw	0
  1591   00109C  0101               	movlb	1	; () banked
  1592   00109E  6F77               	movwf	(main@i_873+1)& (0+255),b
  1593   0010A0  0E00               	movlw	0
  1594   0010A2  6F76               	movwf	main@i_873& (0+255),b
  1595   0010A4                     l5337:
  1596                           
  1597                           ; BSR set to: 1
  1598   0010A4  BF77               	btfsc	(main@i_873+1)& (0+255),7,b
  1599   0010A6  EF5E  F008         	goto	u5671
  1600   0010AA  5177               	movf	(main@i_873+1)& (0+255),w,b
  1601   0010AC  E109               	bnz	u5670
  1602   0010AE  0E14               	movlw	20
  1603   0010B0  5D76               	subwf	main@i_873& (0+255),w,b
  1604   0010B2  A0D8               	btfss	status,0,c
  1605   0010B4  EF5E  F008         	goto	u5671
  1606   0010B8  EF60  F008         	goto	u5670
  1607   0010BC                     u5671:
  1608   0010BC  EF62  F008         	goto	l5341
  1609   0010C0                     u5670:
  1610   0010C0  EF87  F008         	goto	l5347
  1611   0010C4                     l5341:
  1612                           
  1613                           ; BSR set to: 1
  1614                           ;newmain.c: 132:             LATDbits.LATD7 = !LATDbits.LATD7;
  1615   0010C4  AE7C               	btfss	124,7,c	;volatile
  1616   0010C6  EF67  F008         	goto	u5681
  1617   0010CA  EF6C  F008         	goto	u5680
  1618   0010CE                     u5681:
  1619   0010CE  0100               	movlb	0	; () banked
  1620   0010D0  6BD5               	clrf	??_main& (0+255),b
  1621   0010D2  2BD5               	incf	??_main& (0+255),f,b
  1622   0010D4  EF6E  F008         	goto	u5698
  1623   0010D8                     u5680:
  1624   0010D8  0100               	movlb	0	; () banked
  1625   0010DA  6BD5               	clrf	??_main& (0+255),b
  1626   0010DC                     u5698:
  1627   0010DC  33D5               	rrcf	??_main& (0+255),f,b
  1628   0010DE  33D5               	rrcf	??_main& (0+255),f,b
  1629   0010E0  507C               	movf	124,w,c	;volatile
  1630   0010E2  19D5               	xorwf	??_main& (0+255),w,b
  1631   0010E4  0B7F               	andlw	-129
  1632   0010E6  19D5               	xorwf	??_main& (0+255),w,b
  1633   0010E8  6E7C               	movwf	124,c	;volatile
  1634   0010EA                     
  1635                           ; BSR set to: 0
  1636                           ;newmain.c: 133:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1637   0010EA  0E09               	movlw	9
  1638   0010EC  0100               	movlb	0	; () banked
  1639   0010EE  6FD6               	movwf	(??_main+1)& (0+255),b
  1640   0010F0  0E1E               	movlw	30
  1641   0010F2  6FD5               	movwf	??_main& (0+255),b
  1642   0010F4  0EE4               	movlw	228
  1643   0010F6                     u6027:
  1644   0010F6  2EE8               	decfsz	wreg,f,c
  1645   0010F8  D7FE               	bra	u6027
  1646   0010FA  2FD5               	decfsz	??_main& (0+255),f,b
  1647   0010FC  D7FC               	bra	u6027
  1648   0010FE  2FD6               	decfsz	(??_main+1)& (0+255),f,b
  1649   001100  D7FA               	bra	u6027
  1650   001102  F000               	nop	
  1651                           
  1652                           ;newmain.c: 134:             }
  1653   001104  0101               	movlb	1	; () banked
  1654   001106  4B76               	infsnz	main@i_873& (0+255),f,b
  1655   001108  2B77               	incf	(main@i_873+1)& (0+255),f,b
  1656   00110A  EF52  F008         	goto	l5337
  1657   00110E                     l5347:
  1658                           
  1659                           ; BSR set to: 1
  1660                           ;newmain.c: 135:             LATDbits.LATD7 = !LATDbits.LATD7;
  1661   00110E  AE7C               	btfss	124,7,c	;volatile
  1662   001110  EF8C  F008         	goto	u5701
  1663   001114  EF91  F008         	goto	u5700
  1664   001118                     u5701:
  1665   001118  0100               	movlb	0	; () banked
  1666   00111A  6BD5               	clrf	??_main& (0+255),b
  1667   00111C  2BD5               	incf	??_main& (0+255),f,b
  1668   00111E  EF93  F008         	goto	u5718
  1669   001122                     u5700:
  1670   001122  0100               	movlb	0	; () banked
  1671   001124  6BD5               	clrf	??_main& (0+255),b
  1672   001126                     u5718:
  1673   001126  33D5               	rrcf	??_main& (0+255),f,b
  1674   001128  33D5               	rrcf	??_main& (0+255),f,b
  1675   00112A  507C               	movf	124,w,c	;volatile
  1676   00112C  19D5               	xorwf	??_main& (0+255),w,b
  1677   00112E  0B7F               	andlw	-129
  1678   001130  19D5               	xorwf	??_main& (0+255),w,b
  1679   001132  6E7C               	movwf	124,c	;volatile
  1680   001134                     
  1681                           ; BSR set to: 0
  1682                           ;newmain.c: 136:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1683   001134  0E29               	movlw	41
  1684   001136  0100               	movlb	0	; () banked
  1685   001138  6FD6               	movwf	(??_main+1)& (0+255),b
  1686   00113A  0E96               	movlw	150
  1687   00113C  6FD5               	movwf	??_main& (0+255),b
  1688   00113E  0E7F               	movlw	127
  1689   001140                     u6037:
  1690   001140  2EE8               	decfsz	wreg,f,c
  1691   001142  D7FE               	bra	u6037
  1692   001144  2FD5               	decfsz	??_main& (0+255),f,b
  1693   001146  D7FC               	bra	u6037
  1694   001148  2FD6               	decfsz	(??_main+1)& (0+255),f,b
  1695   00114A  D7FA               	bra	u6037
  1696   00114C                     
  1697                           ;newmain.c: 137:             getColor(&RGBVal);
  1698   00114C  0E92               	movlw	low main@RGBVal
  1699   00114E  6E10               	movwf	getColor@v^0,c
  1700   001150  0E01               	movlw	high main@RGBVal
  1701   001152  6E11               	movwf	(getColor@v+1)^0,c
  1702   001154  ECD6  F023         	call	_getColor	;wreg free
  1703   001158                     
  1704                           ;newmain.c: 138:             whiteR = RGBVal.R;
  1705   001158  C192  F005         	movff	main@RGBVal,___xxtofl@val
  1706   00115C  C193  F006         	movff	main@RGBVal+1,___xxtofl@val+1
  1707   001160  6A07               	clrf	(___xxtofl@val+2)^0,c
  1708   001162  6A08               	clrf	(___xxtofl@val+3)^0,c
  1709   001164  0E00               	movlw	0
  1710   001166  EC8E  F01E         	call	___xxtofl
  1711   00116A  C005  F168         	movff	?___xxtofl,main@whiteR
  1712   00116E  C006  F169         	movff	?___xxtofl+1,main@whiteR+1
  1713   001172  C007  F16A         	movff	?___xxtofl+2,main@whiteR+2
  1714   001176  C008  F16B         	movff	?___xxtofl+3,main@whiteR+3
  1715   00117A                     
  1716                           ;newmain.c: 139:             whiteG = RGBVal.G;
  1717   00117A  C194  F005         	movff	main@RGBVal+2,___xxtofl@val
  1718   00117E  C195  F006         	movff	main@RGBVal+3,___xxtofl@val+1
  1719   001182  6A07               	clrf	(___xxtofl@val+2)^0,c
  1720   001184  6A08               	clrf	(___xxtofl@val+3)^0,c
  1721   001186  0E00               	movlw	0
  1722   001188  EC8E  F01E         	call	___xxtofl
  1723   00118C  C005  F16C         	movff	?___xxtofl,main@whiteG
  1724   001190  C006  F16D         	movff	?___xxtofl+1,main@whiteG+1
  1725   001194  C007  F16E         	movff	?___xxtofl+2,main@whiteG+2
  1726   001198  C008  F16F         	movff	?___xxtofl+3,main@whiteG+3
  1727   00119C                     
  1728                           ;newmain.c: 140:             whiteB = RGBVal.B;
  1729   00119C  C196  F005         	movff	main@RGBVal+4,___xxtofl@val
  1730   0011A0  C197  F006         	movff	main@RGBVal+5,___xxtofl@val+1
  1731   0011A4  6A07               	clrf	(___xxtofl@val+2)^0,c
  1732   0011A6  6A08               	clrf	(___xxtofl@val+3)^0,c
  1733   0011A8  0E00               	movlw	0
  1734   0011AA  EC8E  F01E         	call	___xxtofl
  1735   0011AE  C005  F170         	movff	?___xxtofl,main@whiteB
  1736   0011B2  C006  F171         	movff	?___xxtofl+1,main@whiteB+1
  1737   0011B6  C007  F172         	movff	?___xxtofl+2,main@whiteB+2
  1738   0011BA  C008  F173         	movff	?___xxtofl+3,main@whiteB+3
  1739   0011BE                     
  1740                           ;newmain.c: 141:             whiteC = RGBVal.C;
  1741   0011BE  C198  F005         	movff	main@RGBVal+6,___xxtofl@val
  1742   0011C2  C199  F006         	movff	main@RGBVal+7,___xxtofl@val+1
  1743   0011C6  6A07               	clrf	(___xxtofl@val+2)^0,c
  1744   0011C8  6A08               	clrf	(___xxtofl@val+3)^0,c
  1745   0011CA  0E00               	movlw	0
  1746   0011CC  EC8E  F01E         	call	___xxtofl
  1747   0011D0  C005  F164         	movff	?___xxtofl,main@whiteC
  1748   0011D4  C006  F165         	movff	?___xxtofl+1,main@whiteC+1
  1749   0011D8  C007  F166         	movff	?___xxtofl+2,main@whiteC+2
  1750   0011DC  C008  F167         	movff	?___xxtofl+3,main@whiteC+3
  1751   0011E0                     
  1752                           ;newmain.c: 142:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1753   0011E0  0E29               	movlw	41
  1754   0011E2  0100               	movlb	0	; () banked
  1755   0011E4  6FD6               	movwf	(??_main+1)& (0+255),b
  1756   0011E6  0E96               	movlw	150
  1757   0011E8  6FD5               	movwf	??_main& (0+255),b
  1758   0011EA  0E7F               	movlw	127
  1759   0011EC                     u6047:
  1760   0011EC  2EE8               	decfsz	wreg,f,c
  1761   0011EE  D7FE               	bra	u6047
  1762   0011F0  2FD5               	decfsz	??_main& (0+255),f,b
  1763   0011F2  D7FC               	bra	u6047
  1764   0011F4  2FD6               	decfsz	(??_main+1)& (0+255),f,b
  1765   0011F6  D7FA               	bra	u6047
  1766   0011F8                     
  1767                           ;newmain.c: 143:             LATDbits.LATD7 = !LATDbits.LATD7;
  1768   0011F8  AE7C               	btfss	124,7,c	;volatile
  1769   0011FA  EF01  F009         	goto	u5721
  1770   0011FE  EF06  F009         	goto	u5720
  1771   001202                     u5721:
  1772   001202  0100               	movlb	0	; () banked
  1773   001204  6BD5               	clrf	??_main& (0+255),b
  1774   001206  2BD5               	incf	??_main& (0+255),f,b
  1775   001208  EF08  F009         	goto	u5738
  1776   00120C                     u5720:
  1777   00120C  0100               	movlb	0	; () banked
  1778   00120E  6BD5               	clrf	??_main& (0+255),b
  1779   001210                     u5738:
  1780   001210  33D5               	rrcf	??_main& (0+255),f,b
  1781   001212  33D5               	rrcf	??_main& (0+255),f,b
  1782   001214  507C               	movf	124,w,c	;volatile
  1783   001216  19D5               	xorwf	??_main& (0+255),w,b
  1784   001218  0B7F               	andlw	-129
  1785   00121A  19D5               	xorwf	??_main& (0+255),w,b
  1786   00121C  6E7C               	movwf	124,c	;volatile
  1787   00121E                     l150:
  1788                           
  1789                           ;newmain.c: 146:         getColor(&RGBVal);
  1790   00121E  0E92               	movlw	low main@RGBVal
  1791   001220  6E10               	movwf	getColor@v^0,c
  1792   001222  0E01               	movlw	high main@RGBVal
  1793   001224  6E11               	movwf	(getColor@v+1)^0,c
  1794   001226  ECD6  F023         	call	_getColor	;wreg free
  1795   00122A                     
  1796                           ;newmain.c: 147:         LATHbits.LATH3=!LATHbits.LATH3;
  1797   00122A  A680               	btfss	128,3,c	;volatile
  1798   00122C  EF1A  F009         	goto	u5741
  1799   001230  EF1F  F009         	goto	u5740
  1800   001234                     u5741:
  1801   001234  0100               	movlb	0	; () banked
  1802   001236  6BD5               	clrf	??_main& (0+255),b
  1803   001238  2BD5               	incf	??_main& (0+255),f,b
  1804   00123A  EF21  F009         	goto	u5758
  1805   00123E                     u5740:
  1806   00123E  0100               	movlb	0	; () banked
  1807   001240  6BD5               	clrf	??_main& (0+255),b
  1808   001242                     u5758:
  1809   001242  47D5               	rlncf	??_main& (0+255),f,b
  1810   001244  47D5               	rlncf	??_main& (0+255),f,b
  1811   001246  47D5               	rlncf	??_main& (0+255),f,b
  1812   001248  5080               	movf	128,w,c	;volatile
  1813   00124A  19D5               	xorwf	??_main& (0+255),w,b
  1814   00124C  0BF7               	andlw	-9
  1815   00124E  19D5               	xorwf	??_main& (0+255),w,b
  1816   001250  6E80               	movwf	128,c	;volatile
  1817   001252                     
  1818                           ; BSR set to: 0
  1819                           ;newmain.c: 149:         clearRef = RGBVal.C/whiteC;
  1820   001252  C198  F005         	movff	main@RGBVal+6,___xxtofl@val
  1821   001256  C199  F006         	movff	main@RGBVal+7,___xxtofl@val+1
  1822   00125A  6A07               	clrf	(___xxtofl@val+2)^0,c
  1823   00125C  6A08               	clrf	(___xxtofl@val+3)^0,c
  1824   00125E  0E00               	movlw	0
  1825   001260  EC8E  F01E         	call	___xxtofl
  1826   001264  C005  F036         	movff	?___xxtofl,___fldiv@b
  1827   001268  C006  F037         	movff	?___xxtofl+1,___fldiv@b+1
  1828   00126C  C007  F038         	movff	?___xxtofl+2,___fldiv@b+2
  1829   001270  C008  F039         	movff	?___xxtofl+3,___fldiv@b+3
  1830   001274  C164  F03A         	movff	main@whiteC,___fldiv@a
  1831   001278  C165  F03B         	movff	main@whiteC+1,___fldiv@a+1
  1832   00127C  C166  F03C         	movff	main@whiteC+2,___fldiv@a+2
  1833   001280  C167  F03D         	movff	main@whiteC+3,___fldiv@a+3
  1834   001284  ECF4  F018         	call	___fldiv	;wreg free
  1835   001288  C036  F182         	movff	?___fldiv,main@clearRef
  1836   00128C  C037  F183         	movff	?___fldiv+1,main@clearRef+1
  1837   001290  C038  F184         	movff	?___fldiv+2,main@clearRef+2
  1838   001294  C039  F185         	movff	?___fldiv+3,main@clearRef+3
  1839   001298                     
  1840                           ;newmain.c: 152:         redPrint = (RGBVal.R-ambientR)/((whiteR-(float)ambientR)*(clear
      +                          Ref));
  1841   001298  0101               	movlb	1	; () banked
  1842   00129A  5180               	movf	main@ambientR& (0+255),w,b
  1843   00129C  5D92               	subwf	main@RGBVal& (0+255),w,b
  1844   00129E  0100               	movlb	0	; () banked
  1845   0012A0  6FD5               	movwf	??_main& (0+255),b
  1846   0012A2  0101               	movlb	1	; () banked
  1847   0012A4  5181               	movf	(main@ambientR+1)& (0+255),w,b
  1848   0012A6  5993               	subwfb	(main@RGBVal+1)& (0+255),w,b
  1849   0012A8  0100               	movlb	0	; () banked
  1850   0012AA  6FD6               	movwf	(??_main+1)& (0+255),b
  1851   0012AC  C0D5  F005         	movff	??_main,___xxtofl@val
  1852   0012B0  C0D6  F006         	movff	??_main+1,___xxtofl@val+1
  1853   0012B4  6A07               	clrf	(___xxtofl@val+2)^0,c
  1854   0012B6  6A08               	clrf	(___xxtofl@val+3)^0,c
  1855   0012B8  0E00               	movlw	0
  1856   0012BA  EC8E  F01E         	call	___xxtofl
  1857   0012BE  C005  F036         	movff	?___xxtofl,___fldiv@b
  1858   0012C2  C006  F037         	movff	?___xxtofl+1,___fldiv@b+1
  1859   0012C6  C007  F038         	movff	?___xxtofl+2,___fldiv@b+2
  1860   0012CA  C008  F039         	movff	?___xxtofl+3,___fldiv@b+3
  1861   0012CE  C182  F021         	movff	main@clearRef,___flmul@a
  1862   0012D2  C183  F022         	movff	main@clearRef+1,___flmul@a+1
  1863   0012D6  C184  F023         	movff	main@clearRef+2,___flmul@a+2
  1864   0012DA  C185  F024         	movff	main@clearRef+3,___flmul@a+3
  1865   0012DE  C180  F005         	movff	main@ambientR,___xxtofl@val
  1866   0012E2  C181  F006         	movff	main@ambientR+1,___xxtofl@val+1
  1867   0012E6  6A07               	clrf	(___xxtofl@val+2)^0,c
  1868   0012E8  6A08               	clrf	(___xxtofl@val+3)^0,c
  1869   0012EA  0E00               	movlw	0
  1870   0012EC  EC8E  F01E         	call	___xxtofl
  1871   0012F0  C005  F019         	movff	?___xxtofl,___flsub@a
  1872   0012F4  C006  F01A         	movff	?___xxtofl+1,___flsub@a+1
  1873   0012F8  C007  F01B         	movff	?___xxtofl+2,___flsub@a+2
  1874   0012FC  C008  F01C         	movff	?___xxtofl+3,___flsub@a+3
  1875   001300  C168  F015         	movff	main@whiteR,___flsub@b
  1876   001304  C169  F016         	movff	main@whiteR+1,___flsub@b+1
  1877   001308  C16A  F017         	movff	main@whiteR+2,___flsub@b+2
  1878   00130C  C16B  F018         	movff	main@whiteR+3,___flsub@b+3
  1879   001310  EC46  F025         	call	___flsub	;wreg free
  1880   001314  C015  F01D         	movff	?___flsub,___flmul@b
  1881   001318  C016  F01E         	movff	?___flsub+1,___flmul@b+1
  1882   00131C  C017  F01F         	movff	?___flsub+2,___flmul@b+2
  1883   001320  C018  F020         	movff	?___flsub+3,___flmul@b+3
  1884   001324  ECDF  F016         	call	___flmul	;wreg free
  1885   001328  C01D  F03A         	movff	?___flmul,___fldiv@a
  1886   00132C  C01E  F03B         	movff	?___flmul+1,___fldiv@a+1
  1887   001330  C01F  F03C         	movff	?___flmul+2,___fldiv@a+2
  1888   001334  C020  F03D         	movff	?___flmul+3,___fldiv@a+3
  1889   001338  ECF4  F018         	call	___fldiv	;wreg free
  1890   00133C  C036  F18E         	movff	?___fldiv,main@redPrint
  1891   001340  C037  F18F         	movff	?___fldiv+1,main@redPrint+1
  1892   001344  C038  F190         	movff	?___fldiv+2,main@redPrint+2
  1893   001348  C039  F191         	movff	?___fldiv+3,main@redPrint+3
  1894   00134C                     
  1895                           ;newmain.c: 153:         greenPrint = (RGBVal.G-ambientG)/((whiteG-(float)ambientG)*(cle
      +                          arRef));
  1896   00134C  0101               	movlb	1	; () banked
  1897   00134E  517C               	movf	main@ambientG& (0+255),w,b
  1898   001350  5D94               	subwf	(main@RGBVal+2)& (0+255),w,b
  1899   001352  0100               	movlb	0	; () banked
  1900   001354  6FD5               	movwf	??_main& (0+255),b
  1901   001356  0101               	movlb	1	; () banked
  1902   001358  517D               	movf	(main@ambientG+1)& (0+255),w,b
  1903   00135A  5995               	subwfb	(main@RGBVal+3)& (0+255),w,b
  1904   00135C  0100               	movlb	0	; () banked
  1905   00135E  6FD6               	movwf	(??_main+1)& (0+255),b
  1906   001360  C0D5  F005         	movff	??_main,___xxtofl@val
  1907   001364  C0D6  F006         	movff	??_main+1,___xxtofl@val+1
  1908   001368  6A07               	clrf	(___xxtofl@val+2)^0,c
  1909   00136A  6A08               	clrf	(___xxtofl@val+3)^0,c
  1910   00136C  0E00               	movlw	0
  1911   00136E  EC8E  F01E         	call	___xxtofl
  1912   001372  C005  F036         	movff	?___xxtofl,___fldiv@b
  1913   001376  C006  F037         	movff	?___xxtofl+1,___fldiv@b+1
  1914   00137A  C007  F038         	movff	?___xxtofl+2,___fldiv@b+2
  1915   00137E  C008  F039         	movff	?___xxtofl+3,___fldiv@b+3
  1916   001382  C182  F021         	movff	main@clearRef,___flmul@a
  1917   001386  C183  F022         	movff	main@clearRef+1,___flmul@a+1
  1918   00138A  C184  F023         	movff	main@clearRef+2,___flmul@a+2
  1919   00138E  C185  F024         	movff	main@clearRef+3,___flmul@a+3
  1920   001392  C17C  F005         	movff	main@ambientG,___xxtofl@val
  1921   001396  C17D  F006         	movff	main@ambientG+1,___xxtofl@val+1
  1922   00139A  6A07               	clrf	(___xxtofl@val+2)^0,c
  1923   00139C  6A08               	clrf	(___xxtofl@val+3)^0,c
  1924   00139E  0E00               	movlw	0
  1925   0013A0  EC8E  F01E         	call	___xxtofl
  1926   0013A4  C005  F019         	movff	?___xxtofl,___flsub@a
  1927   0013A8  C006  F01A         	movff	?___xxtofl+1,___flsub@a+1
  1928   0013AC  C007  F01B         	movff	?___xxtofl+2,___flsub@a+2
  1929   0013B0  C008  F01C         	movff	?___xxtofl+3,___flsub@a+3
  1930   0013B4  C16C  F015         	movff	main@whiteG,___flsub@b
  1931   0013B8  C16D  F016         	movff	main@whiteG+1,___flsub@b+1
  1932   0013BC  C16E  F017         	movff	main@whiteG+2,___flsub@b+2
  1933   0013C0  C16F  F018         	movff	main@whiteG+3,___flsub@b+3
  1934   0013C4  EC46  F025         	call	___flsub	;wreg free
  1935   0013C8  C015  F01D         	movff	?___flsub,___flmul@b
  1936   0013CC  C016  F01E         	movff	?___flsub+1,___flmul@b+1
  1937   0013D0  C017  F01F         	movff	?___flsub+2,___flmul@b+2
  1938   0013D4  C018  F020         	movff	?___flsub+3,___flmul@b+3
  1939   0013D8  ECDF  F016         	call	___flmul	;wreg free
  1940   0013DC  C01D  F03A         	movff	?___flmul,___fldiv@a
  1941   0013E0  C01E  F03B         	movff	?___flmul+1,___fldiv@a+1
  1942   0013E4  C01F  F03C         	movff	?___flmul+2,___fldiv@a+2
  1943   0013E8  C020  F03D         	movff	?___flmul+3,___fldiv@a+3
  1944   0013EC  ECF4  F018         	call	___fldiv	;wreg free
  1945   0013F0  C036  F18A         	movff	?___fldiv,main@greenPrint
  1946   0013F4  C037  F18B         	movff	?___fldiv+1,main@greenPrint+1
  1947   0013F8  C038  F18C         	movff	?___fldiv+2,main@greenPrint+2
  1948   0013FC  C039  F18D         	movff	?___fldiv+3,main@greenPrint+3
  1949   001400                     
  1950                           ;newmain.c: 154:         bluePrint = (RGBVal.B-ambientB)/((whiteB-(float)ambientB)*(clea
      +                          rRef));
  1951   001400  0101               	movlb	1	; () banked
  1952   001402  517E               	movf	main@ambientB& (0+255),w,b
  1953   001404  5D96               	subwf	(main@RGBVal+4)& (0+255),w,b
  1954   001406  0100               	movlb	0	; () banked
  1955   001408  6FD5               	movwf	??_main& (0+255),b
  1956   00140A  0101               	movlb	1	; () banked
  1957   00140C  517F               	movf	(main@ambientB+1)& (0+255),w,b
  1958   00140E  5997               	subwfb	(main@RGBVal+5)& (0+255),w,b
  1959   001410  0100               	movlb	0	; () banked
  1960   001412  6FD6               	movwf	(??_main+1)& (0+255),b
  1961   001414  C0D5  F005         	movff	??_main,___xxtofl@val
  1962   001418  C0D6  F006         	movff	??_main+1,___xxtofl@val+1
  1963   00141C  6A07               	clrf	(___xxtofl@val+2)^0,c
  1964   00141E  6A08               	clrf	(___xxtofl@val+3)^0,c
  1965   001420  0E00               	movlw	0
  1966   001422  EC8E  F01E         	call	___xxtofl
  1967   001426  C005  F036         	movff	?___xxtofl,___fldiv@b
  1968   00142A  C006  F037         	movff	?___xxtofl+1,___fldiv@b+1
  1969   00142E  C007  F038         	movff	?___xxtofl+2,___fldiv@b+2
  1970   001432  C008  F039         	movff	?___xxtofl+3,___fldiv@b+3
  1971   001436  C182  F021         	movff	main@clearRef,___flmul@a
  1972   00143A  C183  F022         	movff	main@clearRef+1,___flmul@a+1
  1973   00143E  C184  F023         	movff	main@clearRef+2,___flmul@a+2
  1974   001442  C185  F024         	movff	main@clearRef+3,___flmul@a+3
  1975   001446  C17E  F005         	movff	main@ambientB,___xxtofl@val
  1976   00144A  C17F  F006         	movff	main@ambientB+1,___xxtofl@val+1
  1977   00144E  6A07               	clrf	(___xxtofl@val+2)^0,c
  1978   001450  6A08               	clrf	(___xxtofl@val+3)^0,c
  1979   001452  0E00               	movlw	0
  1980   001454  EC8E  F01E         	call	___xxtofl
  1981   001458  C005  F019         	movff	?___xxtofl,___flsub@a
  1982   00145C  C006  F01A         	movff	?___xxtofl+1,___flsub@a+1
  1983   001460  C007  F01B         	movff	?___xxtofl+2,___flsub@a+2
  1984   001464  C008  F01C         	movff	?___xxtofl+3,___flsub@a+3
  1985   001468  C170  F015         	movff	main@whiteB,___flsub@b
  1986   00146C  C171  F016         	movff	main@whiteB+1,___flsub@b+1
  1987   001470  C172  F017         	movff	main@whiteB+2,___flsub@b+2
  1988   001474  C173  F018         	movff	main@whiteB+3,___flsub@b+3
  1989   001478  EC46  F025         	call	___flsub	;wreg free
  1990   00147C  C015  F01D         	movff	?___flsub,___flmul@b
  1991   001480  C016  F01E         	movff	?___flsub+1,___flmul@b+1
  1992   001484  C017  F01F         	movff	?___flsub+2,___flmul@b+2
  1993   001488  C018  F020         	movff	?___flsub+3,___flmul@b+3
  1994   00148C  ECDF  F016         	call	___flmul	;wreg free
  1995   001490  C01D  F03A         	movff	?___flmul,___fldiv@a
  1996   001494  C01E  F03B         	movff	?___flmul+1,___fldiv@a+1
  1997   001498  C01F  F03C         	movff	?___flmul+2,___fldiv@a+2
  1998   00149C  C020  F03D         	movff	?___flmul+3,___fldiv@a+3
  1999   0014A0  ECF4  F018         	call	___fldiv	;wreg free
  2000   0014A4  C036  F186         	movff	?___fldiv,main@bluePrint
  2001   0014A8  C037  F187         	movff	?___fldiv+1,main@bluePrint+1
  2002   0014AC  C038  F188         	movff	?___fldiv+2,main@bluePrint+2
  2003   0014B0  C039  F189         	movff	?___fldiv+3,main@bluePrint+3
  2004   0014B4                     
  2005                           ;newmain.c: 157:         if (clearRef > 0.12){
  2006   0014B4  0E8F               	movlw	143
  2007   0014B6  6E36               	movwf	___flge@ff1^0,c
  2008   0014B8  0EC2               	movlw	194
  2009   0014BA  6E37               	movwf	(___flge@ff1+1)^0,c
  2010   0014BC  0EF5               	movlw	245
  2011   0014BE  6E38               	movwf	(___flge@ff1+2)^0,c
  2012   0014C0  0E3D               	movlw	61
  2013   0014C2  6E39               	movwf	(___flge@ff1+3)^0,c
  2014   0014C4  C182  F03A         	movff	main@clearRef,___flge@ff2
  2015   0014C8  C183  F03B         	movff	main@clearRef+1,___flge@ff2+1
  2016   0014CC  C184  F03C         	movff	main@clearRef+2,___flge@ff2+2
  2017   0014D0  C185  F03D         	movff	main@clearRef+3,___flge@ff2+3
  2018   0014D4  EC61  F021         	call	___flge	;wreg free
  2019   0014D8  B0D8               	btfsc	status,0,c
  2020   0014DA  EF71  F00A         	goto	u5761
  2021   0014DE  EF73  F00A         	goto	u5760
  2022   0014E2                     u5761:
  2023   0014E2  EFC9  F00D         	goto	l5477
  2024   0014E6                     u5760:
  2025   0014E6                     
  2026                           ;newmain.c: 159:         if ((redPrint > 0.9) & (greenPrint > 0.9) & (bluePrint > 0.9)){
  2027   0014E6  0E66               	movlw	102
  2028   0014E8  6E36               	movwf	___flge@ff1^0,c
  2029   0014EA  0E66               	movlw	102
  2030   0014EC  6E37               	movwf	(___flge@ff1+1)^0,c
  2031   0014EE  0E66               	movlw	102
  2032   0014F0  6E38               	movwf	(___flge@ff1+2)^0,c
  2033   0014F2  0E3F               	movlw	63
  2034   0014F4  6E39               	movwf	(___flge@ff1+3)^0,c
  2035   0014F6  C18E  F03A         	movff	main@redPrint,___flge@ff2
  2036   0014FA  C18F  F03B         	movff	main@redPrint+1,___flge@ff2+1
  2037   0014FE  C190  F03C         	movff	main@redPrint+2,___flge@ff2+2
  2038   001502  C191  F03D         	movff	main@redPrint+3,___flge@ff2+3
  2039   001506  EC61  F021         	call	___flge	;wreg free
  2040   00150A  B0D8               	btfsc	status,0,c
  2041   00150C  EF8A  F00A         	goto	u5771
  2042   001510  EF8C  F00A         	goto	u5770
  2043   001514                     u5771:
  2044   001514  EFDA  F00A         	goto	l5391
  2045   001518                     u5770:
  2046   001518  0E66               	movlw	102
  2047   00151A  6E36               	movwf	___flge@ff1^0,c
  2048   00151C  0E66               	movlw	102
  2049   00151E  6E37               	movwf	(___flge@ff1+1)^0,c
  2050   001520  0E66               	movlw	102
  2051   001522  6E38               	movwf	(___flge@ff1+2)^0,c
  2052   001524  0E3F               	movlw	63
  2053   001526  6E39               	movwf	(___flge@ff1+3)^0,c
  2054   001528  C18A  F03A         	movff	main@greenPrint,___flge@ff2
  2055   00152C  C18B  F03B         	movff	main@greenPrint+1,___flge@ff2+1
  2056   001530  C18C  F03C         	movff	main@greenPrint+2,___flge@ff2+2
  2057   001534  C18D  F03D         	movff	main@greenPrint+3,___flge@ff2+3
  2058   001538  EC61  F021         	call	___flge	;wreg free
  2059   00153C  B0D8               	btfsc	status,0,c
  2060   00153E  EFA3  F00A         	goto	u5781
  2061   001542  EFA5  F00A         	goto	u5780
  2062   001546                     u5781:
  2063   001546  EFDA  F00A         	goto	l5391
  2064   00154A                     u5780:
  2065   00154A  0E66               	movlw	102
  2066   00154C  6E36               	movwf	___flge@ff1^0,c
  2067   00154E  0E66               	movlw	102
  2068   001550  6E37               	movwf	(___flge@ff1+1)^0,c
  2069   001552  0E66               	movlw	102
  2070   001554  6E38               	movwf	(___flge@ff1+2)^0,c
  2071   001556  0E3F               	movlw	63
  2072   001558  6E39               	movwf	(___flge@ff1+3)^0,c
  2073   00155A  C186  F03A         	movff	main@bluePrint,___flge@ff2
  2074   00155E  C187  F03B         	movff	main@bluePrint+1,___flge@ff2+1
  2075   001562  C188  F03C         	movff	main@bluePrint+2,___flge@ff2+2
  2076   001566  C189  F03D         	movff	main@bluePrint+3,___flge@ff2+3
  2077   00156A  EC61  F021         	call	___flge	;wreg free
  2078   00156E  B0D8               	btfsc	status,0,c
  2079   001570  EFBC  F00A         	goto	u5791
  2080   001574  EFBE  F00A         	goto	u5790
  2081   001578                     u5791:
  2082   001578  EFDA  F00A         	goto	l5391
  2083   00157C                     u5790:
  2084   00157C                     
  2085                           ;newmain.c: 160:         sprintf(string5,"White");
  2086   00157C  0E50               	movlw	low main@string5
  2087   00157E  0100               	movlb	0	; () banked
  2088   001580  6FBC               	movwf	sprintf@s& (0+255),b
  2089   001582  0E01               	movlw	high main@string5
  2090   001584  6FBD               	movwf	(sprintf@s+1)& (0+255),b
  2091   001586  0E56               	movlw	low STR_1
  2092   001588  6FBE               	movwf	sprintf@fmt& (0+255),b
  2093   00158A  0E0E               	movlw	high STR_1
  2094   00158C  6FBF               	movwf	(sprintf@fmt+1)& (0+255),b
  2095   00158E  EC30  F024         	call	_sprintf	;wreg free
  2096   001592                     
  2097                           ;newmain.c: 161:         TxBufferedString(string5);
  2098   001592  0E50               	movlw	low main@string5
  2099   001594  6E06               	movwf	TxBufferedString@string^0,c
  2100   001596  0E01               	movlw	high main@string5
  2101   001598  6E07               	movwf	(TxBufferedString@string+1)^0,c
  2102   00159A  EC3F  F026         	call	_TxBufferedString	;wreg free
  2103   00159E                     
  2104                           ;newmain.c: 162:         sendTxBuf();
  2105   00159E  ECE7  F026         	call	_sendTxBuf	;wreg free
  2106   0015A2                     
  2107                           ;newmain.c: 163:         _delay((unsigned long)((2)*(64000000/4000.0)));
  2108   0015A2  0E2A               	movlw	42
  2109   0015A4  0100               	movlb	0	; () banked
  2110   0015A6  6FD5               	movwf	??_main& (0+255),b
  2111   0015A8  0E8D               	movlw	141
  2112   0015AA                     u6057:
  2113   0015AA  2EE8               	decfsz	wreg,f,c
  2114   0015AC  D7FE               	bra	u6057
  2115   0015AE  2FD5               	decfsz	??_main& (0+255),f,b
  2116   0015B0  D7FC               	bra	u6057
  2117   0015B2  D000               	nop2	
  2118   0015B4                     l5391:
  2119                           
  2120                           ;newmain.c: 166:         if ((redPrint > 1.5) & (redPrint - greenPrint > 0.8) & (redPrin
      +                          t -bluePrint > 0.8)){
  2121   0015B4  0E00               	movlw	0
  2122   0015B6  6E36               	movwf	___flge@ff1^0,c
  2123   0015B8  0E00               	movlw	0
  2124   0015BA  6E37               	movwf	(___flge@ff1+1)^0,c
  2125   0015BC  0EC0               	movlw	192
  2126   0015BE  6E38               	movwf	(___flge@ff1+2)^0,c
  2127   0015C0  0E3F               	movlw	63
  2128   0015C2  6E39               	movwf	(___flge@ff1+3)^0,c
  2129   0015C4  C18E  F03A         	movff	main@redPrint,___flge@ff2
  2130   0015C8  C18F  F03B         	movff	main@redPrint+1,___flge@ff2+1
  2131   0015CC  C190  F03C         	movff	main@redPrint+2,___flge@ff2+2
  2132   0015D0  C191  F03D         	movff	main@redPrint+3,___flge@ff2+3
  2133   0015D4  EC61  F021         	call	___flge	;wreg free
  2134   0015D8  B0D8               	btfsc	status,0,c
  2135   0015DA  EFF1  F00A         	goto	u5801
  2136   0015DE  EFF3  F00A         	goto	u5800
  2137   0015E2                     u5801:
  2138   0015E2  EF65  F00B         	goto	l5405
  2139   0015E6                     u5800:
  2140   0015E6  0ECD               	movlw	205
  2141   0015E8  6E36               	movwf	___flge@ff1^0,c
  2142   0015EA  0ECC               	movlw	204
  2143   0015EC  6E37               	movwf	(___flge@ff1+1)^0,c
  2144   0015EE  0E4C               	movlw	76
  2145   0015F0  6E38               	movwf	(___flge@ff1+2)^0,c
  2146   0015F2  0E3F               	movlw	63
  2147   0015F4  6E39               	movwf	(___flge@ff1+3)^0,c
  2148   0015F6  C18A  F019         	movff	main@greenPrint,___flsub@a
  2149   0015FA  C18B  F01A         	movff	main@greenPrint+1,___flsub@a+1
  2150   0015FE  C18C  F01B         	movff	main@greenPrint+2,___flsub@a+2
  2151   001602  C18D  F01C         	movff	main@greenPrint+3,___flsub@a+3
  2152   001606  C18E  F015         	movff	main@redPrint,___flsub@b
  2153   00160A  C18F  F016         	movff	main@redPrint+1,___flsub@b+1
  2154   00160E  C190  F017         	movff	main@redPrint+2,___flsub@b+2
  2155   001612  C191  F018         	movff	main@redPrint+3,___flsub@b+3
  2156   001616  EC46  F025         	call	___flsub	;wreg free
  2157   00161A  C015  F03A         	movff	?___flsub,___flge@ff2
  2158   00161E  C016  F03B         	movff	?___flsub+1,___flge@ff2+1
  2159   001622  C017  F03C         	movff	?___flsub+2,___flge@ff2+2
  2160   001626  C018  F03D         	movff	?___flsub+3,___flge@ff2+3
  2161   00162A  EC61  F021         	call	___flge	;wreg free
  2162   00162E  B0D8               	btfsc	status,0,c
  2163   001630  EF1C  F00B         	goto	u5811
  2164   001634  EF1E  F00B         	goto	u5810
  2165   001638                     u5811:
  2166   001638  EF65  F00B         	goto	l5405
  2167   00163C                     u5810:
  2168   00163C  0ECD               	movlw	205
  2169   00163E  6E36               	movwf	___flge@ff1^0,c
  2170   001640  0ECC               	movlw	204
  2171   001642  6E37               	movwf	(___flge@ff1+1)^0,c
  2172   001644  0E4C               	movlw	76
  2173   001646  6E38               	movwf	(___flge@ff1+2)^0,c
  2174   001648  0E3F               	movlw	63
  2175   00164A  6E39               	movwf	(___flge@ff1+3)^0,c
  2176   00164C  C186  F019         	movff	main@bluePrint,___flsub@a
  2177   001650  C187  F01A         	movff	main@bluePrint+1,___flsub@a+1
  2178   001654  C188  F01B         	movff	main@bluePrint+2,___flsub@a+2
  2179   001658  C189  F01C         	movff	main@bluePrint+3,___flsub@a+3
  2180   00165C  C18E  F015         	movff	main@redPrint,___flsub@b
  2181   001660  C18F  F016         	movff	main@redPrint+1,___flsub@b+1
  2182   001664  C190  F017         	movff	main@redPrint+2,___flsub@b+2
  2183   001668  C191  F018         	movff	main@redPrint+3,___flsub@b+3
  2184   00166C  EC46  F025         	call	___flsub	;wreg free
  2185   001670  C015  F03A         	movff	?___flsub,___flge@ff2
  2186   001674  C016  F03B         	movff	?___flsub+1,___flge@ff2+1
  2187   001678  C017  F03C         	movff	?___flsub+2,___flge@ff2+2
  2188   00167C  C018  F03D         	movff	?___flsub+3,___flge@ff2+3
  2189   001680  EC61  F021         	call	___flge	;wreg free
  2190   001684  B0D8               	btfsc	status,0,c
  2191   001686  EF47  F00B         	goto	u5821
  2192   00168A  EF49  F00B         	goto	u5820
  2193   00168E                     u5821:
  2194   00168E  EF65  F00B         	goto	l5405
  2195   001692                     u5820:
  2196   001692                     
  2197                           ;newmain.c: 167:         sprintf(string5,"Red");
  2198   001692  0E50               	movlw	low main@string5
  2199   001694  0100               	movlb	0	; () banked
  2200   001696  6FBC               	movwf	sprintf@s& (0+255),b
  2201   001698  0E01               	movlw	high main@string5
  2202   00169A  6FBD               	movwf	(sprintf@s+1)& (0+255),b
  2203   00169C  0E6A               	movlw	low STR_2
  2204   00169E  6FBE               	movwf	sprintf@fmt& (0+255),b
  2205   0016A0  0E0E               	movlw	high STR_2
  2206   0016A2  6FBF               	movwf	(sprintf@fmt+1)& (0+255),b
  2207   0016A4  EC30  F024         	call	_sprintf	;wreg free
  2208   0016A8                     
  2209                           ;newmain.c: 168:         TxBufferedString(string5);
  2210   0016A8  0E50               	movlw	low main@string5
  2211   0016AA  6E06               	movwf	TxBufferedString@string^0,c
  2212   0016AC  0E01               	movlw	high main@string5
  2213   0016AE  6E07               	movwf	(TxBufferedString@string+1)^0,c
  2214   0016B0  EC3F  F026         	call	_TxBufferedString	;wreg free
  2215   0016B4                     
  2216                           ;newmain.c: 169:         sendTxBuf();
  2217   0016B4  ECE7  F026         	call	_sendTxBuf	;wreg free
  2218   0016B8                     
  2219                           ;newmain.c: 170:         _delay((unsigned long)((2)*(64000000/4000.0)));
  2220   0016B8  0E2A               	movlw	42
  2221   0016BA  0100               	movlb	0	; () banked
  2222   0016BC  6FD5               	movwf	??_main& (0+255),b
  2223   0016BE  0E8D               	movlw	141
  2224   0016C0                     u6067:
  2225   0016C0  2EE8               	decfsz	wreg,f,c
  2226   0016C2  D7FE               	bra	u6067
  2227   0016C4  2FD5               	decfsz	??_main& (0+255),f,b
  2228   0016C6  D7FC               	bra	u6067
  2229   0016C8  D000               	nop2	
  2230   0016CA                     l5405:
  2231                           
  2232                           ;newmain.c: 173:         if ((redPrint > 1.3) & (greenPrint > 0.5) & (bluePrint > 0.5)){
  2233   0016CA  0E66               	movlw	102
  2234   0016CC  6E36               	movwf	___flge@ff1^0,c
  2235   0016CE  0E66               	movlw	102
  2236   0016D0  6E37               	movwf	(___flge@ff1+1)^0,c
  2237   0016D2  0EA6               	movlw	166
  2238   0016D4  6E38               	movwf	(___flge@ff1+2)^0,c
  2239   0016D6  0E3F               	movlw	63
  2240   0016D8  6E39               	movwf	(___flge@ff1+3)^0,c
  2241   0016DA  C18E  F03A         	movff	main@redPrint,___flge@ff2
  2242   0016DE  C18F  F03B         	movff	main@redPrint+1,___flge@ff2+1
  2243   0016E2  C190  F03C         	movff	main@redPrint+2,___flge@ff2+2
  2244   0016E6  C191  F03D         	movff	main@redPrint+3,___flge@ff2+3
  2245   0016EA  EC61  F021         	call	___flge	;wreg free
  2246   0016EE  B0D8               	btfsc	status,0,c
  2247   0016F0  EF7C  F00B         	goto	u5831
  2248   0016F4  EF7E  F00B         	goto	u5830
  2249   0016F8                     u5831:
  2250   0016F8  EFCC  F00B         	goto	l5419
  2251   0016FC                     u5830:
  2252   0016FC  0E00               	movlw	0
  2253   0016FE  6E36               	movwf	___flge@ff1^0,c
  2254   001700  0E00               	movlw	0
  2255   001702  6E37               	movwf	(___flge@ff1+1)^0,c
  2256   001704  0E00               	movlw	0
  2257   001706  6E38               	movwf	(___flge@ff1+2)^0,c
  2258   001708  0E3F               	movlw	63
  2259   00170A  6E39               	movwf	(___flge@ff1+3)^0,c
  2260   00170C  C18A  F03A         	movff	main@greenPrint,___flge@ff2
  2261   001710  C18B  F03B         	movff	main@greenPrint+1,___flge@ff2+1
  2262   001714  C18C  F03C         	movff	main@greenPrint+2,___flge@ff2+2
  2263   001718  C18D  F03D         	movff	main@greenPrint+3,___flge@ff2+3
  2264   00171C  EC61  F021         	call	___flge	;wreg free
  2265   001720  B0D8               	btfsc	status,0,c
  2266   001722  EF95  F00B         	goto	u5841
  2267   001726  EF97  F00B         	goto	u5840
  2268   00172A                     u5841:
  2269   00172A  EFCC  F00B         	goto	l5419
  2270   00172E                     u5840:
  2271   00172E  0E00               	movlw	0
  2272   001730  6E36               	movwf	___flge@ff1^0,c
  2273   001732  0E00               	movlw	0
  2274   001734  6E37               	movwf	(___flge@ff1+1)^0,c
  2275   001736  0E00               	movlw	0
  2276   001738  6E38               	movwf	(___flge@ff1+2)^0,c
  2277   00173A  0E3F               	movlw	63
  2278   00173C  6E39               	movwf	(___flge@ff1+3)^0,c
  2279   00173E  C186  F03A         	movff	main@bluePrint,___flge@ff2
  2280   001742  C187  F03B         	movff	main@bluePrint+1,___flge@ff2+1
  2281   001746  C188  F03C         	movff	main@bluePrint+2,___flge@ff2+2
  2282   00174A  C189  F03D         	movff	main@bluePrint+3,___flge@ff2+3
  2283   00174E  EC61  F021         	call	___flge	;wreg free
  2284   001752  B0D8               	btfsc	status,0,c
  2285   001754  EFAE  F00B         	goto	u5851
  2286   001758  EFB0  F00B         	goto	u5850
  2287   00175C                     u5851:
  2288   00175C  EFCC  F00B         	goto	l5419
  2289   001760                     u5850:
  2290   001760                     
  2291                           ;newmain.c: 174:         sprintf(string5,"Orange");
  2292   001760  0E50               	movlw	low main@string5
  2293   001762  0100               	movlb	0	; () banked
  2294   001764  6FBC               	movwf	sprintf@s& (0+255),b
  2295   001766  0E01               	movlw	high main@string5
  2296   001768  6FBD               	movwf	(sprintf@s+1)& (0+255),b
  2297   00176A  0E48               	movlw	low STR_3
  2298   00176C  6FBE               	movwf	sprintf@fmt& (0+255),b
  2299   00176E  0E0E               	movlw	high STR_3
  2300   001770  6FBF               	movwf	(sprintf@fmt+1)& (0+255),b
  2301   001772  EC30  F024         	call	_sprintf	;wreg free
  2302   001776                     
  2303                           ;newmain.c: 175:         TxBufferedString(string5);
  2304   001776  0E50               	movlw	low main@string5
  2305   001778  6E06               	movwf	TxBufferedString@string^0,c
  2306   00177A  0E01               	movlw	high main@string5
  2307   00177C  6E07               	movwf	(TxBufferedString@string+1)^0,c
  2308   00177E  EC3F  F026         	call	_TxBufferedString	;wreg free
  2309   001782                     
  2310                           ;newmain.c: 176:         sendTxBuf();
  2311   001782  ECE7  F026         	call	_sendTxBuf	;wreg free
  2312   001786                     
  2313                           ;newmain.c: 177:         _delay((unsigned long)((2)*(64000000/4000.0)));
  2314   001786  0E2A               	movlw	42
  2315   001788  0100               	movlb	0	; () banked
  2316   00178A  6FD5               	movwf	??_main& (0+255),b
  2317   00178C  0E8D               	movlw	141
  2318   00178E                     u6077:
  2319   00178E  2EE8               	decfsz	wreg,f,c
  2320   001790  D7FE               	bra	u6077
  2321   001792  2FD5               	decfsz	??_main& (0+255),f,b
  2322   001794  D7FC               	bra	u6077
  2323   001796  D000               	nop2	
  2324   001798                     l5419:
  2325                           
  2326                           ;newmain.c: 180:         if ((redPrint > 1.0) & (greenPrint > 0.8) & (bluePrint < 0.8)){
  2327   001798  0E00               	movlw	0
  2328   00179A  6E36               	movwf	___flge@ff1^0,c
  2329   00179C  0E00               	movlw	0
  2330   00179E  6E37               	movwf	(___flge@ff1+1)^0,c
  2331   0017A0  0E80               	movlw	128
  2332   0017A2  6E38               	movwf	(___flge@ff1+2)^0,c
  2333   0017A4  0E3F               	movlw	63
  2334   0017A6  6E39               	movwf	(___flge@ff1+3)^0,c
  2335   0017A8  C18E  F03A         	movff	main@redPrint,___flge@ff2
  2336   0017AC  C18F  F03B         	movff	main@redPrint+1,___flge@ff2+1
  2337   0017B0  C190  F03C         	movff	main@redPrint+2,___flge@ff2+2
  2338   0017B4  C191  F03D         	movff	main@redPrint+3,___flge@ff2+3
  2339   0017B8  EC61  F021         	call	___flge	;wreg free
  2340   0017BC  B0D8               	btfsc	status,0,c
  2341   0017BE  EFE3  F00B         	goto	u5861
  2342   0017C2  EFE5  F00B         	goto	u5860
  2343   0017C6                     u5861:
  2344   0017C6  EF33  F00C         	goto	l5433
  2345   0017CA                     u5860:
  2346   0017CA  0ECD               	movlw	205
  2347   0017CC  6E36               	movwf	___flge@ff1^0,c
  2348   0017CE  0ECC               	movlw	204
  2349   0017D0  6E37               	movwf	(___flge@ff1+1)^0,c
  2350   0017D2  0E4C               	movlw	76
  2351   0017D4  6E38               	movwf	(___flge@ff1+2)^0,c
  2352   0017D6  0E3F               	movlw	63
  2353   0017D8  6E39               	movwf	(___flge@ff1+3)^0,c
  2354   0017DA  C18A  F03A         	movff	main@greenPrint,___flge@ff2
  2355   0017DE  C18B  F03B         	movff	main@greenPrint+1,___flge@ff2+1
  2356   0017E2  C18C  F03C         	movff	main@greenPrint+2,___flge@ff2+2
  2357   0017E6  C18D  F03D         	movff	main@greenPrint+3,___flge@ff2+3
  2358   0017EA  EC61  F021         	call	___flge	;wreg free
  2359   0017EE  B0D8               	btfsc	status,0,c
  2360   0017F0  EFFC  F00B         	goto	u5871
  2361   0017F4  EFFE  F00B         	goto	u5870
  2362   0017F8                     u5871:
  2363   0017F8  EF33  F00C         	goto	l5433
  2364   0017FC                     u5870:
  2365   0017FC  C186  F036         	movff	main@bluePrint,___flge@ff1
  2366   001800  C187  F037         	movff	main@bluePrint+1,___flge@ff1+1
  2367   001804  C188  F038         	movff	main@bluePrint+2,___flge@ff1+2
  2368   001808  C189  F039         	movff	main@bluePrint+3,___flge@ff1+3
  2369   00180C  0ECD               	movlw	205
  2370   00180E  6E3A               	movwf	___flge@ff2^0,c
  2371   001810  0ECC               	movlw	204
  2372   001812  6E3B               	movwf	(___flge@ff2+1)^0,c
  2373   001814  0E4C               	movlw	76
  2374   001816  6E3C               	movwf	(___flge@ff2+2)^0,c
  2375   001818  0E3F               	movlw	63
  2376   00181A  6E3D               	movwf	(___flge@ff2+3)^0,c
  2377   00181C  EC61  F021         	call	___flge	;wreg free
  2378   001820  B0D8               	btfsc	status,0,c
  2379   001822  EF15  F00C         	goto	u5881
  2380   001826  EF17  F00C         	goto	u5880
  2381   00182A                     u5881:
  2382   00182A  EF33  F00C         	goto	l5433
  2383   00182E                     u5880:
  2384   00182E                     
  2385                           ;newmain.c: 181:         sprintf(string5,"Yellow");
  2386   00182E  0E50               	movlw	low main@string5
  2387   001830  0100               	movlb	0	; () banked
  2388   001832  6FBC               	movwf	sprintf@s& (0+255),b
  2389   001834  0E01               	movlw	high main@string5
  2390   001836  6FBD               	movwf	(sprintf@s+1)& (0+255),b
  2391   001838  0E4F               	movlw	low STR_4
  2392   00183A  6FBE               	movwf	sprintf@fmt& (0+255),b
  2393   00183C  0E0E               	movlw	high STR_4
  2394   00183E  6FBF               	movwf	(sprintf@fmt+1)& (0+255),b
  2395   001840  EC30  F024         	call	_sprintf	;wreg free
  2396   001844                     
  2397                           ;newmain.c: 182:         TxBufferedString(string5);
  2398   001844  0E50               	movlw	low main@string5
  2399   001846  6E06               	movwf	TxBufferedString@string^0,c
  2400   001848  0E01               	movlw	high main@string5
  2401   00184A  6E07               	movwf	(TxBufferedString@string+1)^0,c
  2402   00184C  EC3F  F026         	call	_TxBufferedString	;wreg free
  2403   001850                     
  2404                           ;newmain.c: 183:         sendTxBuf();
  2405   001850  ECE7  F026         	call	_sendTxBuf	;wreg free
  2406   001854                     
  2407                           ;newmain.c: 184:         _delay((unsigned long)((2)*(64000000/4000.0)));
  2408   001854  0E2A               	movlw	42
  2409   001856  0100               	movlb	0	; () banked
  2410   001858  6FD5               	movwf	??_main& (0+255),b
  2411   00185A  0E8D               	movlw	141
  2412   00185C                     u6087:
  2413   00185C  2EE8               	decfsz	wreg,f,c
  2414   00185E  D7FE               	bra	u6087
  2415   001860  2FD5               	decfsz	??_main& (0+255),f,b
  2416   001862  D7FC               	bra	u6087
  2417   001864  D000               	nop2	
  2418   001866                     l5433:
  2419                           
  2420                           ;newmain.c: 187:         if ((bluePrint - redPrint > 0.5 & redPrint < 0.5) & (bluePrint 
      +                          - greenPrint > 0.5) & (bluePrint > 0.8 )){
  2421   001866  0E00               	movlw	0
  2422   001868  6E36               	movwf	___flge@ff1^0,c
  2423   00186A  0E00               	movlw	0
  2424   00186C  6E37               	movwf	(___flge@ff1+1)^0,c
  2425   00186E  0E00               	movlw	0
  2426   001870  6E38               	movwf	(___flge@ff1+2)^0,c
  2427   001872  0E3F               	movlw	63
  2428   001874  6E39               	movwf	(___flge@ff1+3)^0,c
  2429   001876  C18E  F019         	movff	main@redPrint,___flsub@a
  2430   00187A  C18F  F01A         	movff	main@redPrint+1,___flsub@a+1
  2431   00187E  C190  F01B         	movff	main@redPrint+2,___flsub@a+2
  2432   001882  C191  F01C         	movff	main@redPrint+3,___flsub@a+3
  2433   001886  C186  F015         	movff	main@bluePrint,___flsub@b
  2434   00188A  C187  F016         	movff	main@bluePrint+1,___flsub@b+1
  2435   00188E  C188  F017         	movff	main@bluePrint+2,___flsub@b+2
  2436   001892  C189  F018         	movff	main@bluePrint+3,___flsub@b+3
  2437   001896  EC46  F025         	call	___flsub	;wreg free
  2438   00189A  C015  F03A         	movff	?___flsub,___flge@ff2
  2439   00189E  C016  F03B         	movff	?___flsub+1,___flge@ff2+1
  2440   0018A2  C017  F03C         	movff	?___flsub+2,___flge@ff2+2
  2441   0018A6  C018  F03D         	movff	?___flsub+3,___flge@ff2+3
  2442   0018AA  EC61  F021         	call	___flge	;wreg free
  2443   0018AE  B0D8               	btfsc	status,0,c
  2444   0018B0  EF5C  F00C         	goto	u5891
  2445   0018B4  EF5E  F00C         	goto	u5890
  2446   0018B8                     u5891:
  2447   0018B8  EFD7  F00C         	goto	l5449
  2448   0018BC                     u5890:
  2449   0018BC  C18E  F036         	movff	main@redPrint,___flge@ff1
  2450   0018C0  C18F  F037         	movff	main@redPrint+1,___flge@ff1+1
  2451   0018C4  C190  F038         	movff	main@redPrint+2,___flge@ff1+2
  2452   0018C8  C191  F039         	movff	main@redPrint+3,___flge@ff1+3
  2453   0018CC  0E00               	movlw	0
  2454   0018CE  6E3A               	movwf	___flge@ff2^0,c
  2455   0018D0  0E00               	movlw	0
  2456   0018D2  6E3B               	movwf	(___flge@ff2+1)^0,c
  2457   0018D4  0E00               	movlw	0
  2458   0018D6  6E3C               	movwf	(___flge@ff2+2)^0,c
  2459   0018D8  0E3F               	movlw	63
  2460   0018DA  6E3D               	movwf	(___flge@ff2+3)^0,c
  2461   0018DC  EC61  F021         	call	___flge	;wreg free
  2462   0018E0  B0D8               	btfsc	status,0,c
  2463   0018E2  EF75  F00C         	goto	u5901
  2464   0018E6  EF77  F00C         	goto	u5900
  2465   0018EA                     u5901:
  2466   0018EA  EFD7  F00C         	goto	l5449
  2467   0018EE                     u5900:
  2468   0018EE  0E00               	movlw	0
  2469   0018F0  6E36               	movwf	___flge@ff1^0,c
  2470   0018F2  0E00               	movlw	0
  2471   0018F4  6E37               	movwf	(___flge@ff1+1)^0,c
  2472   0018F6  0E00               	movlw	0
  2473   0018F8  6E38               	movwf	(___flge@ff1+2)^0,c
  2474   0018FA  0E3F               	movlw	63
  2475   0018FC  6E39               	movwf	(___flge@ff1+3)^0,c
  2476   0018FE  C18A  F019         	movff	main@greenPrint,___flsub@a
  2477   001902  C18B  F01A         	movff	main@greenPrint+1,___flsub@a+1
  2478   001906  C18C  F01B         	movff	main@greenPrint+2,___flsub@a+2
  2479   00190A  C18D  F01C         	movff	main@greenPrint+3,___flsub@a+3
  2480   00190E  C186  F015         	movff	main@bluePrint,___flsub@b
  2481   001912  C187  F016         	movff	main@bluePrint+1,___flsub@b+1
  2482   001916  C188  F017         	movff	main@bluePrint+2,___flsub@b+2
  2483   00191A  C189  F018         	movff	main@bluePrint+3,___flsub@b+3
  2484   00191E  EC46  F025         	call	___flsub	;wreg free
  2485   001922  C015  F03A         	movff	?___flsub,___flge@ff2
  2486   001926  C016  F03B         	movff	?___flsub+1,___flge@ff2+1
  2487   00192A  C017  F03C         	movff	?___flsub+2,___flge@ff2+2
  2488   00192E  C018  F03D         	movff	?___flsub+3,___flge@ff2+3
  2489   001932  EC61  F021         	call	___flge	;wreg free
  2490   001936  B0D8               	btfsc	status,0,c
  2491   001938  EFA0  F00C         	goto	u5911
  2492   00193C  EFA2  F00C         	goto	u5910
  2493   001940                     u5911:
  2494   001940  EFD7  F00C         	goto	l5449
  2495   001944                     u5910:
  2496   001944  0ECD               	movlw	205
  2497   001946  6E36               	movwf	___flge@ff1^0,c
  2498   001948  0ECC               	movlw	204
  2499   00194A  6E37               	movwf	(___flge@ff1+1)^0,c
  2500   00194C  0E4C               	movlw	76
  2501   00194E  6E38               	movwf	(___flge@ff1+2)^0,c
  2502   001950  0E3F               	movlw	63
  2503   001952  6E39               	movwf	(___flge@ff1+3)^0,c
  2504   001954  C186  F03A         	movff	main@bluePrint,___flge@ff2
  2505   001958  C187  F03B         	movff	main@bluePrint+1,___flge@ff2+1
  2506   00195C  C188  F03C         	movff	main@bluePrint+2,___flge@ff2+2
  2507   001960  C189  F03D         	movff	main@bluePrint+3,___flge@ff2+3
  2508   001964  EC61  F021         	call	___flge	;wreg free
  2509   001968  B0D8               	btfsc	status,0,c
  2510   00196A  EFB9  F00C         	goto	u5921
  2511   00196E  EFBB  F00C         	goto	u5920
  2512   001972                     u5921:
  2513   001972  EFD7  F00C         	goto	l5449
  2514   001976                     u5920:
  2515   001976                     
  2516                           ;newmain.c: 188:         sprintf(string5,"Blue");
  2517   001976  0E50               	movlw	low main@string5
  2518   001978  0100               	movlb	0	; () banked
  2519   00197A  6FBC               	movwf	sprintf@s& (0+255),b
  2520   00197C  0E01               	movlw	high main@string5
  2521   00197E  6FBD               	movwf	(sprintf@s+1)& (0+255),b
  2522   001980  0E39               	movlw	low (STR_7+6)
  2523   001982  6FBE               	movwf	sprintf@fmt& (0+255),b
  2524   001984  0E0E               	movlw	high (STR_7+6)
  2525   001986  6FBF               	movwf	(sprintf@fmt+1)& (0+255),b
  2526   001988  EC30  F024         	call	_sprintf	;wreg free
  2527   00198C                     
  2528                           ;newmain.c: 189:         TxBufferedString(string5);
  2529   00198C  0E50               	movlw	low main@string5
  2530   00198E  6E06               	movwf	TxBufferedString@string^0,c
  2531   001990  0E01               	movlw	high main@string5
  2532   001992  6E07               	movwf	(TxBufferedString@string+1)^0,c
  2533   001994  EC3F  F026         	call	_TxBufferedString	;wreg free
  2534   001998                     
  2535                           ;newmain.c: 190:         sendTxBuf();
  2536   001998  ECE7  F026         	call	_sendTxBuf	;wreg free
  2537   00199C                     
  2538                           ;newmain.c: 191:         _delay((unsigned long)((2)*(64000000/4000.0)));
  2539   00199C  0E2A               	movlw	42
  2540   00199E  0100               	movlb	0	; () banked
  2541   0019A0  6FD5               	movwf	??_main& (0+255),b
  2542   0019A2  0E8D               	movlw	141
  2543   0019A4                     u6097:
  2544   0019A4  2EE8               	decfsz	wreg,f,c
  2545   0019A6  D7FE               	bra	u6097
  2546   0019A8  2FD5               	decfsz	??_main& (0+255),f,b
  2547   0019AA  D7FC               	bra	u6097
  2548   0019AC  D000               	nop2	
  2549   0019AE                     l5449:
  2550                           
  2551                           ;newmain.c: 194:         if ((greenPrint - redPrint > 0.4 ) & (greenPrint > 1) & (greenP
      +                          rint - bluePrint > 0.4 )){
  2552   0019AE  0ECD               	movlw	205
  2553   0019B0  6E36               	movwf	___flge@ff1^0,c
  2554   0019B2  0ECC               	movlw	204
  2555   0019B4  6E37               	movwf	(___flge@ff1+1)^0,c
  2556   0019B6  0ECC               	movlw	204
  2557   0019B8  6E38               	movwf	(___flge@ff1+2)^0,c
  2558   0019BA  0E3E               	movlw	62
  2559   0019BC  6E39               	movwf	(___flge@ff1+3)^0,c
  2560   0019BE  C18E  F019         	movff	main@redPrint,___flsub@a
  2561   0019C2  C18F  F01A         	movff	main@redPrint+1,___flsub@a+1
  2562   0019C6  C190  F01B         	movff	main@redPrint+2,___flsub@a+2
  2563   0019CA  C191  F01C         	movff	main@redPrint+3,___flsub@a+3
  2564   0019CE  C18A  F015         	movff	main@greenPrint,___flsub@b
  2565   0019D2  C18B  F016         	movff	main@greenPrint+1,___flsub@b+1
  2566   0019D6  C18C  F017         	movff	main@greenPrint+2,___flsub@b+2
  2567   0019DA  C18D  F018         	movff	main@greenPrint+3,___flsub@b+3
  2568   0019DE  EC46  F025         	call	___flsub	;wreg free
  2569   0019E2  C015  F03A         	movff	?___flsub,___flge@ff2
  2570   0019E6  C016  F03B         	movff	?___flsub+1,___flge@ff2+1
  2571   0019EA  C017  F03C         	movff	?___flsub+2,___flge@ff2+2
  2572   0019EE  C018  F03D         	movff	?___flsub+3,___flge@ff2+3
  2573   0019F2  EC61  F021         	call	___flge	;wreg free
  2574   0019F6  B0D8               	btfsc	status,0,c
  2575   0019F8  EF00  F00D         	goto	u5931
  2576   0019FC  EF02  F00D         	goto	u5930
  2577   001A00                     u5931:
  2578   001A00  EF62  F00D         	goto	l5463
  2579   001A04                     u5930:
  2580   001A04  0E00               	movlw	0
  2581   001A06  6E36               	movwf	___flge@ff1^0,c
  2582   001A08  0E00               	movlw	0
  2583   001A0A  6E37               	movwf	(___flge@ff1+1)^0,c
  2584   001A0C  0E80               	movlw	128
  2585   001A0E  6E38               	movwf	(___flge@ff1+2)^0,c
  2586   001A10  0E3F               	movlw	63
  2587   001A12  6E39               	movwf	(___flge@ff1+3)^0,c
  2588   001A14  C18A  F03A         	movff	main@greenPrint,___flge@ff2
  2589   001A18  C18B  F03B         	movff	main@greenPrint+1,___flge@ff2+1
  2590   001A1C  C18C  F03C         	movff	main@greenPrint+2,___flge@ff2+2
  2591   001A20  C18D  F03D         	movff	main@greenPrint+3,___flge@ff2+3
  2592   001A24  EC61  F021         	call	___flge	;wreg free
  2593   001A28  B0D8               	btfsc	status,0,c
  2594   001A2A  EF19  F00D         	goto	u5941
  2595   001A2E  EF1B  F00D         	goto	u5940
  2596   001A32                     u5941:
  2597   001A32  EF62  F00D         	goto	l5463
  2598   001A36                     u5940:
  2599   001A36  0ECD               	movlw	205
  2600   001A38  6E36               	movwf	___flge@ff1^0,c
  2601   001A3A  0ECC               	movlw	204
  2602   001A3C  6E37               	movwf	(___flge@ff1+1)^0,c
  2603   001A3E  0ECC               	movlw	204
  2604   001A40  6E38               	movwf	(___flge@ff1+2)^0,c
  2605   001A42  0E3E               	movlw	62
  2606   001A44  6E39               	movwf	(___flge@ff1+3)^0,c
  2607   001A46  C186  F019         	movff	main@bluePrint,___flsub@a
  2608   001A4A  C187  F01A         	movff	main@bluePrint+1,___flsub@a+1
  2609   001A4E  C188  F01B         	movff	main@bluePrint+2,___flsub@a+2
  2610   001A52  C189  F01C         	movff	main@bluePrint+3,___flsub@a+3
  2611   001A56  C18A  F015         	movff	main@greenPrint,___flsub@b
  2612   001A5A  C18B  F016         	movff	main@greenPrint+1,___flsub@b+1
  2613   001A5E  C18C  F017         	movff	main@greenPrint+2,___flsub@b+2
  2614   001A62  C18D  F018         	movff	main@greenPrint+3,___flsub@b+3
  2615   001A66  EC46  F025         	call	___flsub	;wreg free
  2616   001A6A  C015  F03A         	movff	?___flsub,___flge@ff2
  2617   001A6E  C016  F03B         	movff	?___flsub+1,___flge@ff2+1
  2618   001A72  C017  F03C         	movff	?___flsub+2,___flge@ff2+2
  2619   001A76  C018  F03D         	movff	?___flsub+3,___flge@ff2+3
  2620   001A7A  EC61  F021         	call	___flge	;wreg free
  2621   001A7E  B0D8               	btfsc	status,0,c
  2622   001A80  EF44  F00D         	goto	u5951
  2623   001A84  EF46  F00D         	goto	u5950
  2624   001A88                     u5951:
  2625   001A88  EF62  F00D         	goto	l5463
  2626   001A8C                     u5950:
  2627   001A8C                     
  2628                           ;newmain.c: 195:         sprintf(string5,"Green");
  2629   001A8C  0E50               	movlw	low main@string5
  2630   001A8E  0100               	movlb	0	; () banked
  2631   001A90  6FBC               	movwf	sprintf@s& (0+255),b
  2632   001A92  0E01               	movlw	high main@string5
  2633   001A94  6FBD               	movwf	(sprintf@s+1)& (0+255),b
  2634   001A96  0E5C               	movlw	low STR_6
  2635   001A98  6FBE               	movwf	sprintf@fmt& (0+255),b
  2636   001A9A  0E0E               	movlw	high STR_6
  2637   001A9C  6FBF               	movwf	(sprintf@fmt+1)& (0+255),b
  2638   001A9E  EC30  F024         	call	_sprintf	;wreg free
  2639   001AA2                     
  2640                           ;newmain.c: 196:         TxBufferedString(string5);
  2641   001AA2  0E50               	movlw	low main@string5
  2642   001AA4  6E06               	movwf	TxBufferedString@string^0,c
  2643   001AA6  0E01               	movlw	high main@string5
  2644   001AA8  6E07               	movwf	(TxBufferedString@string+1)^0,c
  2645   001AAA  EC3F  F026         	call	_TxBufferedString	;wreg free
  2646   001AAE                     
  2647                           ;newmain.c: 197:         sendTxBuf();
  2648   001AAE  ECE7  F026         	call	_sendTxBuf	;wreg free
  2649   001AB2                     
  2650                           ;newmain.c: 198:         _delay((unsigned long)((2)*(64000000/4000.0)));
  2651   001AB2  0E2A               	movlw	42
  2652   001AB4  0100               	movlb	0	; () banked
  2653   001AB6  6FD5               	movwf	??_main& (0+255),b
  2654   001AB8  0E8D               	movlw	141
  2655   001ABA                     u6107:
  2656   001ABA  2EE8               	decfsz	wreg,f,c
  2657   001ABC  D7FE               	bra	u6107
  2658   001ABE  2FD5               	decfsz	??_main& (0+255),f,b
  2659   001AC0  D7FC               	bra	u6107
  2660   001AC2  D000               	nop2	
  2661   001AC4                     l5463:
  2662                           
  2663                           ;newmain.c: 201:         if ((redPrint < 0.7) & (greenPrint > 1.0)& (bluePrint > 1.0)){
  2664   001AC4  C18E  F036         	movff	main@redPrint,___flge@ff1
  2665   001AC8  C18F  F037         	movff	main@redPrint+1,___flge@ff1+1
  2666   001ACC  C190  F038         	movff	main@redPrint+2,___flge@ff1+2
  2667   001AD0  C191  F039         	movff	main@redPrint+3,___flge@ff1+3
  2668   001AD4  0E33               	movlw	51
  2669   001AD6  6E3A               	movwf	___flge@ff2^0,c
  2670   001AD8  0E33               	movlw	51
  2671   001ADA  6E3B               	movwf	(___flge@ff2+1)^0,c
  2672   001ADC  0E33               	movlw	51
  2673   001ADE  6E3C               	movwf	(___flge@ff2+2)^0,c
  2674   001AE0  0E3F               	movlw	63
  2675   001AE2  6E3D               	movwf	(___flge@ff2+3)^0,c
  2676   001AE4  EC61  F021         	call	___flge	;wreg free
  2677   001AE8  B0D8               	btfsc	status,0,c
  2678   001AEA  EF79  F00D         	goto	u5961
  2679   001AEE  EF7B  F00D         	goto	u5960
  2680   001AF2                     u5961:
  2681   001AF2  EFC9  F00D         	goto	l5477
  2682   001AF6                     u5960:
  2683   001AF6  0E00               	movlw	0
  2684   001AF8  6E36               	movwf	___flge@ff1^0,c
  2685   001AFA  0E00               	movlw	0
  2686   001AFC  6E37               	movwf	(___flge@ff1+1)^0,c
  2687   001AFE  0E80               	movlw	128
  2688   001B00  6E38               	movwf	(___flge@ff1+2)^0,c
  2689   001B02  0E3F               	movlw	63
  2690   001B04  6E39               	movwf	(___flge@ff1+3)^0,c
  2691   001B06  C18A  F03A         	movff	main@greenPrint,___flge@ff2
  2692   001B0A  C18B  F03B         	movff	main@greenPrint+1,___flge@ff2+1
  2693   001B0E  C18C  F03C         	movff	main@greenPrint+2,___flge@ff2+2
  2694   001B12  C18D  F03D         	movff	main@greenPrint+3,___flge@ff2+3
  2695   001B16  EC61  F021         	call	___flge	;wreg free
  2696   001B1A  B0D8               	btfsc	status,0,c
  2697   001B1C  EF92  F00D         	goto	u5971
  2698   001B20  EF94  F00D         	goto	u5970
  2699   001B24                     u5971:
  2700   001B24  EFC9  F00D         	goto	l5477
  2701   001B28                     u5970:
  2702   001B28  0E00               	movlw	0
  2703   001B2A  6E36               	movwf	___flge@ff1^0,c
  2704   001B2C  0E00               	movlw	0
  2705   001B2E  6E37               	movwf	(___flge@ff1+1)^0,c
  2706   001B30  0E80               	movlw	128
  2707   001B32  6E38               	movwf	(___flge@ff1+2)^0,c
  2708   001B34  0E3F               	movlw	63
  2709   001B36  6E39               	movwf	(___flge@ff1+3)^0,c
  2710   001B38  C186  F03A         	movff	main@bluePrint,___flge@ff2
  2711   001B3C  C187  F03B         	movff	main@bluePrint+1,___flge@ff2+1
  2712   001B40  C188  F03C         	movff	main@bluePrint+2,___flge@ff2+2
  2713   001B44  C189  F03D         	movff	main@bluePrint+3,___flge@ff2+3
  2714   001B48  EC61  F021         	call	___flge	;wreg free
  2715   001B4C  B0D8               	btfsc	status,0,c
  2716   001B4E  EFAB  F00D         	goto	u5981
  2717   001B52  EFAD  F00D         	goto	u5980
  2718   001B56                     u5981:
  2719   001B56  EFC9  F00D         	goto	l5477
  2720   001B5A                     u5980:
  2721   001B5A                     
  2722                           ;newmain.c: 202:         sprintf(string5,"Light Blue");
  2723   001B5A  0E50               	movlw	low main@string5
  2724   001B5C  0100               	movlb	0	; () banked
  2725   001B5E  6FBC               	movwf	sprintf@s& (0+255),b
  2726   001B60  0E01               	movlw	high main@string5
  2727   001B62  6FBD               	movwf	(sprintf@s+1)& (0+255),b
  2728   001B64  0E33               	movlw	low STR_7
  2729   001B66  6FBE               	movwf	sprintf@fmt& (0+255),b
  2730   001B68  0E0E               	movlw	high STR_7
  2731   001B6A  6FBF               	movwf	(sprintf@fmt+1)& (0+255),b
  2732   001B6C  EC30  F024         	call	_sprintf	;wreg free
  2733   001B70                     
  2734                           ;newmain.c: 203:         TxBufferedString(string5);
  2735   001B70  0E50               	movlw	low main@string5
  2736   001B72  6E06               	movwf	TxBufferedString@string^0,c
  2737   001B74  0E01               	movlw	high main@string5
  2738   001B76  6E07               	movwf	(TxBufferedString@string+1)^0,c
  2739   001B78  EC3F  F026         	call	_TxBufferedString	;wreg free
  2740   001B7C                     
  2741                           ;newmain.c: 204:         sendTxBuf();
  2742   001B7C  ECE7  F026         	call	_sendTxBuf	;wreg free
  2743   001B80                     
  2744                           ;newmain.c: 205:         _delay((unsigned long)((2)*(64000000/4000.0)));
  2745   001B80  0E2A               	movlw	42
  2746   001B82  0100               	movlb	0	; () banked
  2747   001B84  6FD5               	movwf	??_main& (0+255),b
  2748   001B86  0E8D               	movlw	141
  2749   001B88                     u6117:
  2750   001B88  2EE8               	decfsz	wreg,f,c
  2751   001B8A  D7FE               	bra	u6117
  2752   001B8C  2FD5               	decfsz	??_main& (0+255),f,b
  2753   001B8E  D7FC               	bra	u6117
  2754   001B90  D000               	nop2	
  2755   001B92                     l5477:
  2756                           
  2757                           ;newmain.c: 213:         sprintf(string4,"  C:  %f ",clearRef);
  2758   001B92  0E3C               	movlw	low main@string4
  2759   001B94  0100               	movlb	0	; () banked
  2760   001B96  6FBC               	movwf	sprintf@s& (0+255),b
  2761   001B98  0E01               	movlw	high main@string4
  2762   001B9A  6FBD               	movwf	(sprintf@s+1)& (0+255),b
  2763   001B9C  0E3E               	movlw	low STR_8
  2764   001B9E  6FBE               	movwf	sprintf@fmt& (0+255),b
  2765   001BA0  0E0E               	movlw	high STR_8
  2766   001BA2  6FBF               	movwf	(sprintf@fmt+1)& (0+255),b
  2767   001BA4  C182  F0C0         	movff	main@clearRef,?_sprintf+4
  2768   001BA8  C183  F0C1         	movff	main@clearRef+1,?_sprintf+5
  2769   001BAC  C184  F0C2         	movff	main@clearRef+2,?_sprintf+6
  2770   001BB0  C185  F0C3         	movff	main@clearRef+3,?_sprintf+7
  2771   001BB4  EC30  F024         	call	_sprintf	;wreg free
  2772   001BB8                     
  2773                           ;newmain.c: 214:         TxBufferedString(string4);
  2774   001BB8  0E3C               	movlw	low main@string4
  2775   001BBA  6E06               	movwf	TxBufferedString@string^0,c
  2776   001BBC  0E01               	movlw	high main@string4
  2777   001BBE  6E07               	movwf	(TxBufferedString@string+1)^0,c
  2778   001BC0  EC3F  F026         	call	_TxBufferedString	;wreg free
  2779   001BC4                     
  2780                           ;newmain.c: 215:         sendTxBuf();
  2781   001BC4  ECE7  F026         	call	_sendTxBuf	;wreg free
  2782                           
  2783                           ;newmain.c: 216:         _delay((unsigned long)((2)*(64000000/4000.0)));
  2784   001BC8  0E2A               	movlw	42
  2785   001BCA  0100               	movlb	0	; () banked
  2786   001BCC  6FD5               	movwf	??_main& (0+255),b
  2787   001BCE  0E8D               	movlw	141
  2788   001BD0                     u6127:
  2789   001BD0  2EE8               	decfsz	wreg,f,c
  2790   001BD2  D7FE               	bra	u6127
  2791   001BD4  2FD5               	decfsz	??_main& (0+255),f,b
  2792   001BD6  D7FC               	bra	u6127
  2793   001BD8  D000               	nop2	
  2794   001BDA                     
  2795                           ;newmain.c: 218:         sprintf(string1,"Red: %f %d ",(RGBVal.R-ambientR)/((whiteR-(flo
      +                          at)ambientR)*(clearRef)), RGBVal.R-ambientR);
  2796   001BDA  0101               	movlb	1	; () banked
  2797   001BDC  5180               	movf	main@ambientR& (0+255),w,b
  2798   001BDE  5D92               	subwf	main@RGBVal& (0+255),w,b
  2799   001BE0  0100               	movlb	0	; () banked
  2800   001BE2  6FD5               	movwf	??_main& (0+255),b
  2801   001BE4  0101               	movlb	1	; () banked
  2802   001BE6  5181               	movf	(main@ambientR+1)& (0+255),w,b
  2803   001BE8  5993               	subwfb	(main@RGBVal+1)& (0+255),w,b
  2804   001BEA  0100               	movlb	0	; () banked
  2805   001BEC  6FD6               	movwf	(??_main+1)& (0+255),b
  2806   001BEE  C0D5  F005         	movff	??_main,___xxtofl@val
  2807   001BF2  C0D6  F006         	movff	??_main+1,___xxtofl@val+1
  2808   001BF6  6A07               	clrf	(___xxtofl@val+2)^0,c
  2809   001BF8  6A08               	clrf	(___xxtofl@val+3)^0,c
  2810   001BFA  0E00               	movlw	0
  2811   001BFC  EC8E  F01E         	call	___xxtofl
  2812   001C00  C005  F036         	movff	?___xxtofl,___fldiv@b
  2813   001C04  C006  F037         	movff	?___xxtofl+1,___fldiv@b+1
  2814   001C08  C007  F038         	movff	?___xxtofl+2,___fldiv@b+2
  2815   001C0C  C008  F039         	movff	?___xxtofl+3,___fldiv@b+3
  2816   001C10  C182  F021         	movff	main@clearRef,___flmul@a
  2817   001C14  C183  F022         	movff	main@clearRef+1,___flmul@a+1
  2818   001C18  C184  F023         	movff	main@clearRef+2,___flmul@a+2
  2819   001C1C  C185  F024         	movff	main@clearRef+3,___flmul@a+3
  2820   001C20  C180  F005         	movff	main@ambientR,___xxtofl@val
  2821   001C24  C181  F006         	movff	main@ambientR+1,___xxtofl@val+1
  2822   001C28  6A07               	clrf	(___xxtofl@val+2)^0,c
  2823   001C2A  6A08               	clrf	(___xxtofl@val+3)^0,c
  2824   001C2C  0E00               	movlw	0
  2825   001C2E  EC8E  F01E         	call	___xxtofl
  2826   001C32  C005  F019         	movff	?___xxtofl,___flsub@a
  2827   001C36  C006  F01A         	movff	?___xxtofl+1,___flsub@a+1
  2828   001C3A  C007  F01B         	movff	?___xxtofl+2,___flsub@a+2
  2829   001C3E  C008  F01C         	movff	?___xxtofl+3,___flsub@a+3
  2830   001C42  C168  F015         	movff	main@whiteR,___flsub@b
  2831   001C46  C169  F016         	movff	main@whiteR+1,___flsub@b+1
  2832   001C4A  C16A  F017         	movff	main@whiteR+2,___flsub@b+2
  2833   001C4E  C16B  F018         	movff	main@whiteR+3,___flsub@b+3
  2834   001C52  EC46  F025         	call	___flsub	;wreg free
  2835   001C56  C015  F01D         	movff	?___flsub,___flmul@b
  2836   001C5A  C016  F01E         	movff	?___flsub+1,___flmul@b+1
  2837   001C5E  C017  F01F         	movff	?___flsub+2,___flmul@b+2
  2838   001C62  C018  F020         	movff	?___flsub+3,___flmul@b+3
  2839   001C66  ECDF  F016         	call	___flmul	;wreg free
  2840   001C6A  C01D  F03A         	movff	?___flmul,___fldiv@a
  2841   001C6E  C01E  F03B         	movff	?___flmul+1,___fldiv@a+1
  2842   001C72  C01F  F03C         	movff	?___flmul+2,___fldiv@a+2
  2843   001C76  C020  F03D         	movff	?___flmul+3,___fldiv@a+3
  2844   001C7A  ECF4  F018         	call	___fldiv	;wreg free
  2845   001C7E  C036  F178         	movff	?___fldiv,_main$2762
  2846   001C82  C037  F179         	movff	?___fldiv+1,_main$2762+1
  2847   001C86  C038  F17A         	movff	?___fldiv+2,_main$2762+2
  2848   001C8A  C039  F17B         	movff	?___fldiv+3,_main$2762+3
  2849   001C8E                     
  2850                           ;newmain.c: 218:         sprintf(string1,"Red: %f %d ",(RGBVal.R-ambientR)/((whiteR-(flo
      +                          at)ambientR)*(clearRef)), RGBVal.R-ambientR);
  2851   001C8E  0E00               	movlw	low main@string1
  2852   001C90  0100               	movlb	0	; () banked
  2853   001C92  6FBC               	movwf	sprintf@s& (0+255),b
  2854   001C94  0E01               	movlw	high main@string1
  2855   001C96  6FBD               	movwf	(sprintf@s+1)& (0+255),b
  2856   001C98  0E1C               	movlw	low STR_9
  2857   001C9A  6FBE               	movwf	sprintf@fmt& (0+255),b
  2858   001C9C  0E0E               	movlw	high STR_9
  2859   001C9E  6FBF               	movwf	(sprintf@fmt+1)& (0+255),b
  2860   001CA0  C178  F0C0         	movff	_main$2762,?_sprintf+4
  2861   001CA4  C179  F0C1         	movff	_main$2762+1,?_sprintf+5
  2862   001CA8  C17A  F0C2         	movff	_main$2762+2,?_sprintf+6
  2863   001CAC  C17B  F0C3         	movff	_main$2762+3,?_sprintf+7
  2864   001CB0  0101               	movlb	1	; () banked
  2865   001CB2  5180               	movf	main@ambientR& (0+255),w,b
  2866   001CB4  5D92               	subwf	main@RGBVal& (0+255),w,b
  2867   001CB6  0100               	movlb	0	; () banked
  2868   001CB8  6FC4               	movwf	(?_sprintf+8)& (0+255),b
  2869   001CBA  0101               	movlb	1	; () banked
  2870   001CBC  5181               	movf	(main@ambientR+1)& (0+255),w,b
  2871   001CBE  5993               	subwfb	(main@RGBVal+1)& (0+255),w,b
  2872   001CC0  0100               	movlb	0	; () banked
  2873   001CC2  6FC5               	movwf	(?_sprintf+9)& (0+255),b
  2874   001CC4  EC30  F024         	call	_sprintf	;wreg free
  2875   001CC8                     
  2876                           ;newmain.c: 219:         TxBufferedString(string1);
  2877   001CC8  0E00               	movlw	low main@string1
  2878   001CCA  6E06               	movwf	TxBufferedString@string^0,c
  2879   001CCC  0E01               	movlw	high main@string1
  2880   001CCE  6E07               	movwf	(TxBufferedString@string+1)^0,c
  2881   001CD0  EC3F  F026         	call	_TxBufferedString	;wreg free
  2882   001CD4                     
  2883                           ;newmain.c: 220:         sendTxBuf();
  2884   001CD4  ECE7  F026         	call	_sendTxBuf	;wreg free
  2885   001CD8                     
  2886                           ;newmain.c: 221:         _delay((unsigned long)((2)*(64000000/4000.0)));
  2887   001CD8  0E2A               	movlw	42
  2888   001CDA  0100               	movlb	0	; () banked
  2889   001CDC  6FD5               	movwf	??_main& (0+255),b
  2890   001CDE  0E8D               	movlw	141
  2891   001CE0                     u6137:
  2892   001CE0  2EE8               	decfsz	wreg,f,c
  2893   001CE2  D7FE               	bra	u6137
  2894   001CE4  2FD5               	decfsz	??_main& (0+255),f,b
  2895   001CE6  D7FC               	bra	u6137
  2896   001CE8  D000               	nop2	
  2897   001CEA                     
  2898                           ;newmain.c: 223:         sprintf(string2,"Green: %f ",(RGBVal.G-ambientG)/((whiteG-(floa
      +                          t)ambientG)*(clearRef)));
  2899   001CEA  0101               	movlb	1	; () banked
  2900   001CEC  517C               	movf	main@ambientG& (0+255),w,b
  2901   001CEE  5D94               	subwf	(main@RGBVal+2)& (0+255),w,b
  2902   001CF0  0100               	movlb	0	; () banked
  2903   001CF2  6FD5               	movwf	??_main& (0+255),b
  2904   001CF4  0101               	movlb	1	; () banked
  2905   001CF6  517D               	movf	(main@ambientG+1)& (0+255),w,b
  2906   001CF8  5995               	subwfb	(main@RGBVal+3)& (0+255),w,b
  2907   001CFA  0100               	movlb	0	; () banked
  2908   001CFC  6FD6               	movwf	(??_main+1)& (0+255),b
  2909   001CFE  C0D5  F005         	movff	??_main,___xxtofl@val
  2910   001D02  C0D6  F006         	movff	??_main+1,___xxtofl@val+1
  2911   001D06  6A07               	clrf	(___xxtofl@val+2)^0,c
  2912   001D08  6A08               	clrf	(___xxtofl@val+3)^0,c
  2913   001D0A  0E00               	movlw	0
  2914   001D0C  EC8E  F01E         	call	___xxtofl
  2915   001D10  C005  F036         	movff	?___xxtofl,___fldiv@b
  2916   001D14  C006  F037         	movff	?___xxtofl+1,___fldiv@b+1
  2917   001D18  C007  F038         	movff	?___xxtofl+2,___fldiv@b+2
  2918   001D1C  C008  F039         	movff	?___xxtofl+3,___fldiv@b+3
  2919   001D20  C182  F021         	movff	main@clearRef,___flmul@a
  2920   001D24  C183  F022         	movff	main@clearRef+1,___flmul@a+1
  2921   001D28  C184  F023         	movff	main@clearRef+2,___flmul@a+2
  2922   001D2C  C185  F024         	movff	main@clearRef+3,___flmul@a+3
  2923   001D30  C17C  F005         	movff	main@ambientG,___xxtofl@val
  2924   001D34  C17D  F006         	movff	main@ambientG+1,___xxtofl@val+1
  2925   001D38  6A07               	clrf	(___xxtofl@val+2)^0,c
  2926   001D3A  6A08               	clrf	(___xxtofl@val+3)^0,c
  2927   001D3C  0E00               	movlw	0
  2928   001D3E  EC8E  F01E         	call	___xxtofl
  2929   001D42  C005  F019         	movff	?___xxtofl,___flsub@a
  2930   001D46  C006  F01A         	movff	?___xxtofl+1,___flsub@a+1
  2931   001D4A  C007  F01B         	movff	?___xxtofl+2,___flsub@a+2
  2932   001D4E  C008  F01C         	movff	?___xxtofl+3,___flsub@a+3
  2933   001D52  C16C  F015         	movff	main@whiteG,___flsub@b
  2934   001D56  C16D  F016         	movff	main@whiteG+1,___flsub@b+1
  2935   001D5A  C16E  F017         	movff	main@whiteG+2,___flsub@b+2
  2936   001D5E  C16F  F018         	movff	main@whiteG+3,___flsub@b+3
  2937   001D62  EC46  F025         	call	___flsub	;wreg free
  2938   001D66  C015  F01D         	movff	?___flsub,___flmul@b
  2939   001D6A  C016  F01E         	movff	?___flsub+1,___flmul@b+1
  2940   001D6E  C017  F01F         	movff	?___flsub+2,___flmul@b+2
  2941   001D72  C018  F020         	movff	?___flsub+3,___flmul@b+3
  2942   001D76  ECDF  F016         	call	___flmul	;wreg free
  2943   001D7A  C01D  F03A         	movff	?___flmul,___fldiv@a
  2944   001D7E  C01E  F03B         	movff	?___flmul+1,___fldiv@a+1
  2945   001D82  C01F  F03C         	movff	?___flmul+2,___fldiv@a+2
  2946   001D86  C020  F03D         	movff	?___flmul+3,___fldiv@a+3
  2947   001D8A  ECF4  F018         	call	___fldiv	;wreg free
  2948   001D8E  C036  F178         	movff	?___fldiv,_main$2762
  2949   001D92  C037  F179         	movff	?___fldiv+1,_main$2762+1
  2950   001D96  C038  F17A         	movff	?___fldiv+2,_main$2762+2
  2951   001D9A  C039  F17B         	movff	?___fldiv+3,_main$2762+3
  2952   001D9E                     
  2953                           ;newmain.c: 223:         sprintf(string2,"Green: %f ",(RGBVal.G-ambientG)/((whiteG-(floa
      +                          t)ambientG)*(clearRef)));
  2954   001D9E  0E14               	movlw	low main@string2
  2955   001DA0  0100               	movlb	0	; () banked
  2956   001DA2  6FBC               	movwf	sprintf@s& (0+255),b
  2957   001DA4  0E01               	movlw	high main@string2
  2958   001DA6  6FBD               	movwf	(sprintf@s+1)& (0+255),b
  2959   001DA8  0E28               	movlw	low STR_10
  2960   001DAA  6FBE               	movwf	sprintf@fmt& (0+255),b
  2961   001DAC  0E0E               	movlw	high STR_10
  2962   001DAE  6FBF               	movwf	(sprintf@fmt+1)& (0+255),b
  2963   001DB0  C178  F0C0         	movff	_main$2762,?_sprintf+4
  2964   001DB4  C179  F0C1         	movff	_main$2762+1,?_sprintf+5
  2965   001DB8  C17A  F0C2         	movff	_main$2762+2,?_sprintf+6
  2966   001DBC  C17B  F0C3         	movff	_main$2762+3,?_sprintf+7
  2967   001DC0  EC30  F024         	call	_sprintf	;wreg free
  2968   001DC4                     
  2969                           ;newmain.c: 224:         TxBufferedString(string2);
  2970   001DC4  0E14               	movlw	low main@string2
  2971   001DC6  6E06               	movwf	TxBufferedString@string^0,c
  2972   001DC8  0E01               	movlw	high main@string2
  2973   001DCA  6E07               	movwf	(TxBufferedString@string+1)^0,c
  2974   001DCC  EC3F  F026         	call	_TxBufferedString	;wreg free
  2975                           
  2976                           ;newmain.c: 225:         sendTxBuf();
  2977   001DD0  ECE7  F026         	call	_sendTxBuf	;wreg free
  2978   001DD4                     
  2979                           ;newmain.c: 226:         _delay((unsigned long)((2)*(64000000/4000.0)));
  2980   001DD4  0E2A               	movlw	42
  2981   001DD6  0100               	movlb	0	; () banked
  2982   001DD8  6FD5               	movwf	??_main& (0+255),b
  2983   001DDA  0E8D               	movlw	141
  2984   001DDC                     u6147:
  2985   001DDC  2EE8               	decfsz	wreg,f,c
  2986   001DDE  D7FE               	bra	u6147
  2987   001DE0  2FD5               	decfsz	??_main& (0+255),f,b
  2988   001DE2  D7FC               	bra	u6147
  2989   001DE4  D000               	nop2	
  2990   001DE6                     
  2991                           ;newmain.c: 228:         sprintf(string3,"Blue:  %f \r",(RGBVal.B-ambientB)/((whiteB-(fl
      +                          oat)ambientB)*(clearRef)));
  2992   001DE6  0101               	movlb	1	; () banked
  2993   001DE8  517E               	movf	main@ambientB& (0+255),w,b
  2994   001DEA  5D96               	subwf	(main@RGBVal+4)& (0+255),w,b
  2995   001DEC  0100               	movlb	0	; () banked
  2996   001DEE  6FD5               	movwf	??_main& (0+255),b
  2997   001DF0  0101               	movlb	1	; () banked
  2998   001DF2  517F               	movf	(main@ambientB+1)& (0+255),w,b
  2999   001DF4  5997               	subwfb	(main@RGBVal+5)& (0+255),w,b
  3000   001DF6  0100               	movlb	0	; () banked
  3001   001DF8  6FD6               	movwf	(??_main+1)& (0+255),b
  3002   001DFA  C0D5  F005         	movff	??_main,___xxtofl@val
  3003   001DFE  C0D6  F006         	movff	??_main+1,___xxtofl@val+1
  3004   001E02  6A07               	clrf	(___xxtofl@val+2)^0,c
  3005   001E04  6A08               	clrf	(___xxtofl@val+3)^0,c
  3006   001E06  0E00               	movlw	0
  3007   001E08  EC8E  F01E         	call	___xxtofl
  3008   001E0C  C005  F036         	movff	?___xxtofl,___fldiv@b
  3009   001E10  C006  F037         	movff	?___xxtofl+1,___fldiv@b+1
  3010   001E14  C007  F038         	movff	?___xxtofl+2,___fldiv@b+2
  3011   001E18  C008  F039         	movff	?___xxtofl+3,___fldiv@b+3
  3012   001E1C  C182  F021         	movff	main@clearRef,___flmul@a
  3013   001E20  C183  F022         	movff	main@clearRef+1,___flmul@a+1
  3014   001E24  C184  F023         	movff	main@clearRef+2,___flmul@a+2
  3015   001E28  C185  F024         	movff	main@clearRef+3,___flmul@a+3
  3016   001E2C  C17E  F005         	movff	main@ambientB,___xxtofl@val
  3017   001E30  C17F  F006         	movff	main@ambientB+1,___xxtofl@val+1
  3018   001E34  6A07               	clrf	(___xxtofl@val+2)^0,c
  3019   001E36  6A08               	clrf	(___xxtofl@val+3)^0,c
  3020   001E38  0E00               	movlw	0
  3021   001E3A  EC8E  F01E         	call	___xxtofl
  3022   001E3E  C005  F019         	movff	?___xxtofl,___flsub@a
  3023   001E42  C006  F01A         	movff	?___xxtofl+1,___flsub@a+1
  3024   001E46  C007  F01B         	movff	?___xxtofl+2,___flsub@a+2
  3025   001E4A  C008  F01C         	movff	?___xxtofl+3,___flsub@a+3
  3026   001E4E  C170  F015         	movff	main@whiteB,___flsub@b
  3027   001E52  C171  F016         	movff	main@whiteB+1,___flsub@b+1
  3028   001E56  C172  F017         	movff	main@whiteB+2,___flsub@b+2
  3029   001E5A  C173  F018         	movff	main@whiteB+3,___flsub@b+3
  3030   001E5E  EC46  F025         	call	___flsub	;wreg free
  3031   001E62  C015  F01D         	movff	?___flsub,___flmul@b
  3032   001E66  C016  F01E         	movff	?___flsub+1,___flmul@b+1
  3033   001E6A  C017  F01F         	movff	?___flsub+2,___flmul@b+2
  3034   001E6E  C018  F020         	movff	?___flsub+3,___flmul@b+3
  3035   001E72  ECDF  F016         	call	___flmul	;wreg free
  3036   001E76  C01D  F03A         	movff	?___flmul,___fldiv@a
  3037   001E7A  C01E  F03B         	movff	?___flmul+1,___fldiv@a+1
  3038   001E7E  C01F  F03C         	movff	?___flmul+2,___fldiv@a+2
  3039   001E82  C020  F03D         	movff	?___flmul+3,___fldiv@a+3
  3040   001E86  ECF4  F018         	call	___fldiv	;wreg free
  3041   001E8A  C036  F178         	movff	?___fldiv,_main$2762
  3042   001E8E  C037  F179         	movff	?___fldiv+1,_main$2762+1
  3043   001E92  C038  F17A         	movff	?___fldiv+2,_main$2762+2
  3044   001E96  C039  F17B         	movff	?___fldiv+3,_main$2762+3
  3045   001E9A                     
  3046                           ;newmain.c: 228:         sprintf(string3,"Blue:  %f \r",(RGBVal.B-ambientB)/((whiteB-(fl
      +                          oat)ambientB)*(clearRef)));
  3047   001E9A  0E28               	movlw	low main@string3
  3048   001E9C  0100               	movlb	0	; () banked
  3049   001E9E  6FBC               	movwf	sprintf@s& (0+255),b
  3050   001EA0  0E01               	movlw	high main@string3
  3051   001EA2  6FBD               	movwf	(sprintf@s+1)& (0+255),b
  3052   001EA4  0E10               	movlw	low STR_11
  3053   001EA6  6FBE               	movwf	sprintf@fmt& (0+255),b
  3054   001EA8  0E0E               	movlw	high STR_11
  3055   001EAA  6FBF               	movwf	(sprintf@fmt+1)& (0+255),b
  3056   001EAC  C178  F0C0         	movff	_main$2762,?_sprintf+4
  3057   001EB0  C179  F0C1         	movff	_main$2762+1,?_sprintf+5
  3058   001EB4  C17A  F0C2         	movff	_main$2762+2,?_sprintf+6
  3059   001EB8  C17B  F0C3         	movff	_main$2762+3,?_sprintf+7
  3060   001EBC  EC30  F024         	call	_sprintf	;wreg free
  3061   001EC0                     
  3062                           ;newmain.c: 229:         TxBufferedString(string3);
  3063   001EC0  0E28               	movlw	low main@string3
  3064   001EC2  6E06               	movwf	TxBufferedString@string^0,c
  3065   001EC4  0E01               	movlw	high main@string3
  3066   001EC6  6E07               	movwf	(TxBufferedString@string+1)^0,c
  3067   001EC8  EC3F  F026         	call	_TxBufferedString	;wreg free
  3068   001ECC                     
  3069                           ;newmain.c: 230:         sendTxBuf();
  3070   001ECC  ECE7  F026         	call	_sendTxBuf	;wreg free
  3071   001ED0                     
  3072                           ;newmain.c: 231:         _delay((unsigned long)((2)*(64000000/4000.0)));
  3073   001ED0  0E2A               	movlw	42
  3074   001ED2  0100               	movlb	0	; () banked
  3075   001ED4  6FD5               	movwf	??_main& (0+255),b
  3076   001ED6  0E8D               	movlw	141
  3077   001ED8                     u6157:
  3078   001ED8  2EE8               	decfsz	wreg,f,c
  3079   001EDA  D7FE               	bra	u6157
  3080   001EDC  2FD5               	decfsz	??_main& (0+255),f,b
  3081   001EDE  D7FC               	bra	u6157
  3082   001EE0  D000               	nop2	
  3083   001EE2                     
  3084                           ;newmain.c: 235:         _delay((unsigned long)((300)*(64000000/4000.0)));
  3085   001EE2  0E19               	movlw	25
  3086   001EE4  0100               	movlb	0	; () banked
  3087   001EE6  6FD6               	movwf	(??_main+1)& (0+255),b
  3088   001EE8  0E5A               	movlw	90
  3089   001EEA  6FD5               	movwf	??_main& (0+255),b
  3090   001EEC  0EB1               	movlw	177
  3091   001EEE                     u6167:
  3092   001EEE  2EE8               	decfsz	wreg,f,c
  3093   001EF0  D7FE               	bra	u6167
  3094   001EF2  2FD5               	decfsz	??_main& (0+255),f,b
  3095   001EF4  D7FC               	bra	u6167
  3096   001EF6  2FD6               	decfsz	(??_main+1)& (0+255),f,b
  3097   001EF8  D7FA               	bra	u6167
  3098   001EFA  D000               	nop2	
  3099   001EFC  EFB5  F007         	goto	l5303
  3100   001F00  EF3B  F000         	goto	start
  3101   001F04                     __end_of_main:
  3102                           	callstack 0
  3103                           
  3104 ;; *************** function _sprintf *****************
  3105 ;; Defined at:
  3106 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;  s               2   92[BANK0 ] PTR unsigned char 
  3109 ;;		 -> ADC2String@buf(40), main@string3(20), main@string2(20), main@string1(20), 
  3110 ;;		 -> main@string4(20), main@string5(20), 
  3111 ;;  fmt             2   94[BANK0 ] PTR const unsigned char 
  3112 ;;		 -> STR_12(15), STR_11(12), STR_10(11), STR_9(12), 
  3113 ;;		 -> STR_8(10), STR_7(11), STR_6(6), STR_5(5), 
  3114 ;;		 -> STR_4(7), STR_3(7), STR_2(4), STR_1(6), 
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;  f              11  106[BANK0 ] struct _IO_FILE
  3117 ;;  ap              2  104[BANK0 ] PTR void [1]
  3118 ;;		 -> ?_sprintf(2), 
  3119 ;;  ret             2    0        int 
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  2   92[BANK0 ] int 
  3122 ;; Registers used:
  3123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3129 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3130 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3132 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3133 ;;Total ram usage:       25 bytes
  3134 ;; Hardware stack levels used: 1
  3135 ;; Hardware stack levels required when called: 9
  3136 ;; This function calls:
  3137 ;;		_vfprintf
  3138 ;; This function is called by:
  3139 ;;		_main
  3140 ;;		_ADC2String
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           	psect	text1
  3145   004860                     __ptext1:
  3146                           	callstack 0
  3147   004860                     _sprintf:
  3148                           	callstack 21
  3149   004860  0EC0               	movlw	low (?_sprintf+4)
  3150   004862  0100               	movlb	0	; () banked
  3151   004864  6FC8               	movwf	sprintf@ap& (0+255),b
  3152   004866  0E00               	movlw	high (?_sprintf+4)
  3153   004868  6FC9               	movwf	(sprintf@ap+1)& (0+255),b
  3154   00486A  C0BC  F0CA         	movff	sprintf@s,sprintf@f
  3155   00486E  C0BD  F0CB         	movff	sprintf@s+1,sprintf@f+1
  3156   004872                     
  3157                           ; BSR set to: 0
  3158   004872  0E00               	movlw	0
  3159   004874  6FCE               	movwf	(sprintf@f+4)& (0+255),b
  3160   004876  0E00               	movlw	0
  3161   004878  6FCD               	movwf	(sprintf@f+3)& (0+255),b
  3162   00487A                     
  3163                           ; BSR set to: 0
  3164   00487A  0E00               	movlw	0
  3165   00487C  6FD4               	movwf	(sprintf@f+10)& (0+255),b
  3166   00487E  0E00               	movlw	0
  3167   004880  6FD3               	movwf	(sprintf@f+9)& (0+255),b
  3168   004882                     
  3169                           ; BSR set to: 0
  3170   004882  0ECA               	movlw	low sprintf@f
  3171   004884  6FB4               	movwf	vfprintf@fp& (0+255),b
  3172   004886  0E00               	movlw	high sprintf@f
  3173   004888  6FB5               	movwf	(vfprintf@fp+1)& (0+255),b
  3174   00488A  C0BE  F0B6         	movff	sprintf@fmt,vfprintf@fmt
  3175   00488E  C0BF  F0B7         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3176   004892  0EC8               	movlw	low sprintf@ap
  3177   004894  6FB8               	movwf	vfprintf@ap& (0+255),b
  3178   004896  0E00               	movlw	high sprintf@ap
  3179   004898  6FB9               	movwf	(vfprintf@ap+1)& (0+255),b
  3180   00489A  EC05  F024         	call	_vfprintf	;wreg free
  3181   00489E  0100               	movlb	0	; () banked
  3182   0048A0  51CD               	movf	(sprintf@f+3)& (0+255),w,b
  3183   0048A2  25BC               	addwf	sprintf@s& (0+255),w,b
  3184   0048A4  6ED9               	movwf	fsr2l,c
  3185   0048A6  51CE               	movf	(sprintf@f+4)& (0+255),w,b
  3186   0048A8  21BD               	addwfc	(sprintf@s+1)& (0+255),w,b
  3187   0048AA  6EDA               	movwf	fsr2h,c
  3188   0048AC  0E00               	movlw	0
  3189   0048AE  6EDF               	movwf	indf2,c
  3190   0048B0                     
  3191                           ; BSR set to: 0
  3192   0048B0  0012               	return		;funcret
  3193   0048B2                     __end_of_sprintf:
  3194                           	callstack 0
  3195                           
  3196 ;; *************** function _vfprintf *****************
  3197 ;; Defined at:
  3198 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;  fp              2   84[BANK0 ] PTR struct _IO_FILE
  3201 ;;		 -> sprintf@f(11), 
  3202 ;;  fmt             2   86[BANK0 ] PTR const unsigned char 
  3203 ;;		 -> STR_12(15), STR_11(12), STR_10(11), STR_9(12), 
  3204 ;;		 -> STR_8(10), STR_7(11), STR_6(6), STR_5(5), 
  3205 ;;		 -> STR_4(7), STR_3(7), STR_2(4), STR_1(6), 
  3206 ;;  ap              2   88[BANK0 ] PTR PTR void 
  3207 ;;		 -> sprintf@ap(2), 
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;  cfmt            2   90[BANK0 ] PTR unsigned char 
  3210 ;;		 -> STR_12(15), STR_11(12), STR_10(11), STR_9(12), 
  3211 ;;		 -> STR_8(10), STR_7(11), STR_6(6), STR_5(5), 
  3212 ;;		 -> STR_4(7), STR_3(7), STR_2(4), STR_1(6), 
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  2   84[BANK0 ] int 
  3215 ;; Registers used:
  3216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3222 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3223 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3225 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3226 ;;Total ram usage:        8 bytes
  3227 ;; Hardware stack levels used: 1
  3228 ;; Hardware stack levels required when called: 8
  3229 ;; This function calls:
  3230 ;;		_vfpfcnvrt
  3231 ;; This function is called by:
  3232 ;;		_sprintf
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text2
  3237   00480A                     __ptext2:
  3238                           	callstack 0
  3239   00480A                     _vfprintf:
  3240                           	callstack 21
  3241   00480A                     
  3242                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  3243   00480A  C0B6  F0BA         	movff	vfprintf@fmt,vfprintf@cfmt
  3244   00480E  C0B7  F0BB         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3245                           
  3246                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3247   004812  EF1A  F024         	goto	l5189
  3248   004816                     l5187:
  3249                           
  3250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3251   004816  C0B4  F0A3         	movff	vfprintf@fp,vfpfcnvrt@fp
  3252   00481A  C0B5  F0A4         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3253   00481E  0EBA               	movlw	low vfprintf@cfmt
  3254   004820  0100               	movlb	0	; () banked
  3255   004822  6FA5               	movwf	vfpfcnvrt@fmt& (0+255),b
  3256   004824  0E00               	movlw	high vfprintf@cfmt
  3257   004826  6FA6               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3258   004828  C0B8  F0A7         	movff	vfprintf@ap,vfpfcnvrt@ap
  3259   00482C  C0B9  F0A8         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3260   004830  ECC1  F01A         	call	_vfpfcnvrt	;wreg free
  3261   004834                     l5189:
  3262                           
  3263                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3264   004834  C0BA  FFF6         	movff	vfprintf@cfmt,tblptrl
  3265   004838  C0BB  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3266   00483C                     	if	0	;tblptru may be non-zero
  3267   00483C                     	endif
  3268   00483C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3269   00483C  0E00               	movlw	low (__mediumconst shr (0+16))
  3270   00483E  6EF8               	movwf	tblptru,c
  3271   004840                     	endif
  3272   004840  0008               	tblrd		*
  3273   004842  50F5               	movf	tablat,w,c
  3274   004844  0900               	iorlw	0
  3275   004846  A4D8               	btfss	status,2,c
  3276   004848  EF28  F024         	goto	u5571
  3277   00484C  EF2A  F024         	goto	u5570
  3278   004850                     u5571:
  3279   004850  EF0B  F024         	goto	l5187
  3280   004854                     u5570:
  3281   004854                     
  3282                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  3283   004854  0E00               	movlw	0
  3284   004856  0100               	movlb	0	; () banked
  3285   004858  6FB5               	movwf	(?_vfprintf+1)& (0+255),b
  3286   00485A  0E00               	movlw	0
  3287   00485C  6FB4               	movwf	?_vfprintf& (0+255),b
  3288   00485E                     
  3289                           ; BSR set to: 0
  3290   00485E  0012               	return		;funcret
  3291   004860                     __end_of_vfprintf:
  3292                           	callstack 0
  3293                           
  3294 ;; *************** function _vfpfcnvrt *****************
  3295 ;; Defined at:
  3296 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;  fp              2   67[BANK0 ] PTR struct _IO_FILE
  3299 ;;		 -> sprintf@f(11), 
  3300 ;;  fmt             2   69[BANK0 ] PTR PTR unsigned char 
  3301 ;;		 -> vfprintf@cfmt(2), 
  3302 ;;  ap              2   71[BANK0 ] PTR PTR void 
  3303 ;;		 -> sprintf@ap(2), 
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;  convarg         8   73[BANK0 ] struct .
  3306 ;;  cp              2   82[BANK0 ] PTR unsigned char 
  3307 ;;		 -> STR_12(15), STR_11(12), STR_10(11), STR_9(12), 
  3308 ;;		 -> STR_8(10), STR_7(11), STR_6(6), STR_5(5), 
  3309 ;;		 -> STR_4(7), STR_3(7), STR_2(4), STR_1(6), 
  3310 ;;  i               2    0        int 
  3311 ;;  done            2    0        int 
  3312 ;;  c               1   81[BANK0 ] unsigned char 
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  1    wreg      void 
  3315 ;; Registers used:
  3316 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3322 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3323 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3324 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3325 ;;      Totals:         2      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3326 ;;Total ram usage:       19 bytes
  3327 ;; Hardware stack levels used: 1
  3328 ;; Hardware stack levels required when called: 7
  3329 ;; This function calls:
  3330 ;;		_dtoa
  3331 ;;		_efgtoa
  3332 ;;		_fputc
  3333 ;; This function is called by:
  3334 ;;		_vfprintf
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text3
  3339   003582                     __ptext3:
  3340                           	callstack 0
  3341   003582                     _vfpfcnvrt:
  3342                           	callstack 21
  3343   003582                     
  3344                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  3345   003582  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3346   003586  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3347   00358A  CFDE FFF6          	movff	postinc2,tblptrl
  3348   00358E  CFDD FFF7          	movff	postdec2,tblptrh
  3349   003592                     	if	0	;tblptru may be non-zero
  3350   003592                     	endif
  3351   003592                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3352   003592  0E00               	movlw	low (__mediumconst shr (0+16))
  3353   003594  6EF8               	movwf	tblptru,c
  3354   003596                     	endif
  3355   003596  0008               	tblrd		*
  3356   003598  50F5               	movf	tablat,w,c
  3357   00359A  0A25               	xorlw	37
  3358   00359C  A4D8               	btfss	status,2,c
  3359   00359E  EFD3  F01A         	goto	u5531
  3360   0035A2  EFD5  F01A         	goto	u5530
  3361   0035A6                     u5531:
  3362   0035A6  EF2D  F01C         	goto	l5161
  3363   0035AA                     u5530:
  3364   0035AA                     
  3365                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  3366   0035AA  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3367   0035AE  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3368   0035B2  2ADE               	incf	postinc2,f,c
  3369   0035B4  0E00               	movlw	0
  3370   0035B6  22DD               	addwfc	postdec2,f,c
  3371   0035B8                     
  3372                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  3373   0035B8  0E00               	movlw	0
  3374   0035BA  0100               	movlb	0	; () banked
  3375   0035BC  6FF4               	movwf	(_width+1)& (0+255),b
  3376   0035BE  0E00               	movlw	0
  3377   0035C0  6FF3               	movwf	_width& (0+255),b
  3378   0035C2  C0F3  F0F7         	movff	_width,_flags
  3379   0035C6                     
  3380                           ; BSR set to: 0
  3381                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  3382   0035C6  69F5               	setf	_prec& (0+255),b
  3383   0035C8  69F6               	setf	(_prec+1)& (0+255),b
  3384   0035CA                     
  3385                           ; BSR set to: 0
  3386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  3387   0035CA  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3388   0035CE  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3389   0035D2  CFDE F0B2          	movff	postinc2,vfpfcnvrt@cp
  3390   0035D6  CFDD F0B3          	movff	postdec2,vfpfcnvrt@cp+1
  3391   0035DA                     
  3392                           ; BSR set to: 0
  3393                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3394   0035DA  C0B2  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3395   0035DE  C0B3  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3396   0035E2                     	if	0	;tblptru may be non-zero
  3397   0035E2                     	endif
  3398   0035E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3399   0035E2  0E00               	movlw	low (__mediumconst shr (0+16))
  3400   0035E4  6EF8               	movwf	tblptru,c
  3401   0035E6                     	endif
  3402   0035E6  0008               	tblrd		*
  3403   0035E8  50F5               	movf	tablat,w,c
  3404   0035EA  0A64               	xorlw	100
  3405   0035EC  B4D8               	btfsc	status,2,c
  3406   0035EE  EFFB  F01A         	goto	u5541
  3407   0035F2  EFFD  F01A         	goto	u5540
  3408   0035F6                     u5541:
  3409   0035F6  EF0D  F01B         	goto	l5117
  3410   0035FA                     u5540:
  3411   0035FA                     
  3412                           ; BSR set to: 0
  3413   0035FA  C0B2  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3414   0035FE  C0B3  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3415   003602                     	if	0	;tblptru may be non-zero
  3416   003602                     	endif
  3417   003602                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3418   003602  0E00               	movlw	low (__mediumconst shr (0+16))
  3419   003604  6EF8               	movwf	tblptru,c
  3420   003606                     	endif
  3421   003606  0008               	tblrd		*
  3422   003608  50F5               	movf	tablat,w,c
  3423   00360A  0A69               	xorlw	105
  3424   00360C  A4D8               	btfss	status,2,c
  3425   00360E  EF0B  F01B         	goto	u5551
  3426   003612  EF0D  F01B         	goto	u5550
  3427   003616                     u5551:
  3428   003616  EF50  F01B         	goto	l5123
  3429   00361A                     u5550:
  3430   00361A                     l5117:
  3431                           
  3432                           ; BSR set to: 0
  3433                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3434   00361A  C0A7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3435   00361E  C0A8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3436   003622  CFDF F055          	movff	indf2,??_vfpfcnvrt
  3437   003626  0E02               	movlw	2
  3438   003628  26DE               	addwf	postinc2,f,c
  3439   00362A  CFDF F056          	movff	indf2,??_vfpfcnvrt+1
  3440   00362E  0E00               	movlw	0
  3441   003630  22DD               	addwfc	postdec2,f,c
  3442   003632  C055  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3443   003636  C056  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3444   00363A  CFDE F0A9          	movff	postinc2,vfpfcnvrt@convarg
  3445   00363E  CFDD F0AA          	movff	postdec2,vfpfcnvrt@convarg+1
  3446   003642  0E00               	movlw	0
  3447   003644  BFAA               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  3448   003646  0EFF               	movlw	-1
  3449   003648  6FAB               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  3450   00364A  6FAC               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  3451   00364C  6FAD               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  3452   00364E  6FAE               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  3453   003650  6FAF               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  3454   003652  6FB0               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  3455                           
  3456                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  3457   003654  0E01               	movlw	1
  3458   003656  25B2               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3459   003658  6E55               	movwf	??_vfpfcnvrt^0,c
  3460   00365A  0E00               	movlw	0
  3461   00365C  21B3               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3462   00365E  6E56               	movwf	(??_vfpfcnvrt+1)^0,c
  3463   003660  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3464   003664  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3465   003668  C055  FFDE         	movff	??_vfpfcnvrt,postinc2
  3466   00366C  C056  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3467   003670                     
  3468                           ; BSR set to: 0
  3469                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  3470   003670  C0A3  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  3471   003674  C0A4  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3472   003678  C0A9  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  3473   00367C  C0AA  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3474   003680  C0AB  F024         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  3475   003684  C0AC  F025         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  3476   003688  C0AD  F026         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  3477   00368C  C0AE  F027         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  3478   003690  C0AF  F028         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  3479   003694  C0B0  F029         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  3480   003698  EC44  F01C         	call	_dtoa	;wreg free
  3481   00369C  EF43  F01C         	goto	l1138
  3482   0036A0                     l5123:
  3483                           
  3484                           ; BSR set to: 0
  3485                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  3486   0036A0  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3487   0036A4  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3488   0036A8  CFDE F0B2          	movff	postinc2,vfpfcnvrt@cp
  3489   0036AC  CFDD F0B3          	movff	postdec2,vfpfcnvrt@cp+1
  3490   0036B0                     
  3491                           ; BSR set to: 0
  3492                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  3493   0036B0  C0B2  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3494   0036B4  C0B3  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3495   0036B8                     	if	0	;tblptru may be non-zero
  3496   0036B8                     	endif
  3497   0036B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3498   0036B8  0E00               	movlw	low (__mediumconst shr (0+16))
  3499   0036BA  6EF8               	movwf	tblptru,c
  3500   0036BC                     	endif
  3501   0036BC  0008               	tblrd		*
  3502   0036BE  CFF5 F0B1          	movff	tablat,vfpfcnvrt@c
  3503                           
  3504                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  3505   0036C2  EF6F  F01B         	goto	l5135
  3506   0036C6                     l5127:
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  3510   0036C6  4BB2               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  3511   0036C8  2BB3               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  3512                           
  3513                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  3514   0036CA  EF88  F01B         	goto	l5137
  3515   0036CE                     l5129:
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  3519   0036CE  0E6C               	movlw	108
  3520   0036D0  6FB1               	movwf	vfpfcnvrt@c& (0+255),b
  3521                           
  3522                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  3523   0036D2  EF88  F01B         	goto	l5137
  3524   0036D6                     l5131:
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  3528   0036D6  0E00               	movlw	0
  3529   0036D8  6FB1               	movwf	vfpfcnvrt@c& (0+255),b
  3530                           
  3531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  3532   0036DA  EF88  F01B         	goto	l5137
  3533   0036DE                     l5135:
  3534                           
  3535                           ; BSR set to: 0
  3536   0036DE  51B1               	movf	vfpfcnvrt@c& (0+255),w,b
  3537   0036E0  6E55               	movwf	??_vfpfcnvrt^0,c
  3538   0036E2  6A56               	clrf	(??_vfpfcnvrt+1)^0,c
  3539                           
  3540                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3541                           ; Switch size 1, requested type "simple"
  3542                           ; Number of cases is 1, Range of values is 0 to 0
  3543                           ; switch strategies available:
  3544                           ; Name         Instructions Cycles
  3545                           ; simple_byte            4     3 (average)
  3546                           ;	Chosen strategy is simple_byte
  3547   0036E4  5056               	movf	(??_vfpfcnvrt+1)^0,w,c
  3548   0036E6  0A00               	xorlw	0	; case 0
  3549   0036E8  B4D8               	btfsc	status,2,c
  3550   0036EA  EF79  F01B         	goto	l5607
  3551   0036EE  EF6B  F01B         	goto	l5131
  3552   0036F2                     l5607:
  3553                           
  3554                           ; BSR set to: 0
  3555                           ; Switch size 1, requested type "simple"
  3556                           ; Number of cases is 3, Range of values is 76 to 108
  3557                           ; switch strategies available:
  3558                           ; Name         Instructions Cycles
  3559                           ; simple_byte           10     6 (average)
  3560                           ;	Chosen strategy is simple_byte
  3561   0036F2  5055               	movf	??_vfpfcnvrt^0,w,c
  3562   0036F4  0A4C               	xorlw	76	; case 76
  3563   0036F6  B4D8               	btfsc	status,2,c
  3564   0036F8  EF63  F01B         	goto	l5127
  3565   0036FC  0A2A               	xorlw	42	; case 102
  3566   0036FE  B4D8               	btfsc	status,2,c
  3567   003700  EF67  F01B         	goto	l5129
  3568   003704  0A0A               	xorlw	10	; case 108
  3569   003706  B4D8               	btfsc	status,2,c
  3570   003708  EF63  F01B         	goto	l5127
  3571   00370C  EF6B  F01B         	goto	l5131
  3572   003710                     l5137:
  3573                           
  3574                           ; BSR set to: 0
  3575   003710  C0B2  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3576   003714  C0B3  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3577   003718                     	if	0	;tblptru may be non-zero
  3578   003718                     	endif
  3579   003718                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3580   003718  0E00               	movlw	low (__mediumconst shr (0+16))
  3581   00371A  6EF8               	movwf	tblptru,c
  3582   00371C                     	endif
  3583   00371C  0008               	tblrd		*
  3584   00371E  50F5               	movf	tablat,w,c
  3585   003720  0A66               	xorlw	102
  3586   003722  A4D8               	btfss	status,2,c
  3587   003724  EF96  F01B         	goto	u5561
  3588   003728  EF98  F01B         	goto	u5560
  3589   00372C                     u5561:
  3590   00372C  EF24  F01C         	goto	l5157
  3591   003730                     u5560:
  3592   003730  EFCE  F01B         	goto	l5145
  3593   003734                     l5139:
  3594                           
  3595                           ; BSR set to: 0
  3596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3597   003734  C0A7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3598   003738  C0A8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3599   00373C  CFDF F055          	movff	indf2,??_vfpfcnvrt
  3600   003740  0E04               	movlw	4
  3601   003742  26DE               	addwf	postinc2,f,c
  3602   003744  CFDF F056          	movff	indf2,??_vfpfcnvrt+1
  3603   003748  0E00               	movlw	0
  3604   00374A  22DD               	addwfc	postdec2,f,c
  3605   00374C  C055  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3606   003750  C056  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3607   003754  CFDE F0A9          	movff	postinc2,vfpfcnvrt@convarg
  3608   003758  CFDE F0AA          	movff	postinc2,vfpfcnvrt@convarg+1
  3609   00375C  CFDE F0AB          	movff	postinc2,vfpfcnvrt@convarg+2
  3610   003760  CFDE F0AC          	movff	postinc2,vfpfcnvrt@convarg+3
  3611                           
  3612                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  3613   003764  EFE3  F01B         	goto	l5147
  3614   003768                     l5141:
  3615                           
  3616                           ; BSR set to: 0
  3617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3618   003768  C0A7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3619   00376C  C0A8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3620   003770  CFDF F055          	movff	indf2,??_vfpfcnvrt
  3621   003774  0E04               	movlw	4
  3622   003776  26DE               	addwf	postinc2,f,c
  3623   003778  CFDF F056          	movff	indf2,??_vfpfcnvrt+1
  3624   00377C  0E00               	movlw	0
  3625   00377E  22DD               	addwfc	postdec2,f,c
  3626   003780  C055  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3627   003784  C056  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3628   003788  CFDE F0A9          	movff	postinc2,vfpfcnvrt@convarg
  3629   00378C  CFDE F0AA          	movff	postinc2,vfpfcnvrt@convarg+1
  3630   003790  CFDE F0AB          	movff	postinc2,vfpfcnvrt@convarg+2
  3631   003794  CFDE F0AC          	movff	postinc2,vfpfcnvrt@convarg+3
  3632                           
  3633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  3634   003798  EFE3  F01B         	goto	l5147
  3635   00379C                     l5145:
  3636                           
  3637                           ; BSR set to: 0
  3638   00379C  51B1               	movf	vfpfcnvrt@c& (0+255),w,b
  3639   00379E  6E55               	movwf	??_vfpfcnvrt^0,c
  3640   0037A0  6A56               	clrf	(??_vfpfcnvrt+1)^0,c
  3641                           
  3642                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3643                           ; Switch size 1, requested type "simple"
  3644                           ; Number of cases is 1, Range of values is 0 to 0
  3645                           ; switch strategies available:
  3646                           ; Name         Instructions Cycles
  3647                           ; simple_byte            4     3 (average)
  3648                           ;	Chosen strategy is simple_byte
  3649   0037A2  5056               	movf	(??_vfpfcnvrt+1)^0,w,c
  3650   0037A4  0A00               	xorlw	0	; case 0
  3651   0037A6  B4D8               	btfsc	status,2,c
  3652   0037A8  EFD8  F01B         	goto	l5609
  3653   0037AC  EFE3  F01B         	goto	l5147
  3654   0037B0                     l5609:
  3655                           
  3656                           ; BSR set to: 0
  3657                           ; Switch size 1, requested type "simple"
  3658                           ; Number of cases is 2, Range of values is 76 to 108
  3659                           ; switch strategies available:
  3660                           ; Name         Instructions Cycles
  3661                           ; simple_byte            7     4 (average)
  3662                           ;	Chosen strategy is simple_byte
  3663   0037B0  5055               	movf	??_vfpfcnvrt^0,w,c
  3664   0037B2  0A4C               	xorlw	76	; case 76
  3665   0037B4  B4D8               	btfsc	status,2,c
  3666   0037B6  EFB4  F01B         	goto	l5141
  3667   0037BA  0A20               	xorlw	32	; case 108
  3668   0037BC  B4D8               	btfsc	status,2,c
  3669   0037BE  EF9A  F01B         	goto	l5139
  3670   0037C2  EFE3  F01B         	goto	l5147
  3671   0037C6                     l5147:
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  3675   0037C6  0E01               	movlw	1
  3676   0037C8  25B2               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3677   0037CA  6E55               	movwf	??_vfpfcnvrt^0,c
  3678   0037CC  0E00               	movlw	0
  3679   0037CE  21B3               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3680   0037D0  6E56               	movwf	(??_vfpfcnvrt+1)^0,c
  3681   0037D2  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3682   0037D6  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3683   0037DA  C055  FFDE         	movff	??_vfpfcnvrt,postinc2
  3684   0037DE  C056  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3685                           
  3686                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  3687   0037E2  EF0C  F01C         	goto	l5155
  3688   0037E6                     l5149:
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3692   0037E6  C0A3  F070         	movff	vfpfcnvrt@fp,efgtoa@fp
  3693   0037EA  C0A4  F071         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3694   0037EE  C0A9  F072         	movff	vfpfcnvrt@convarg,efgtoa@f
  3695   0037F2  C0AA  F073         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3696   0037F6  C0AB  F074         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3697   0037FA  C0AC  F075         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3698   0037FE  C0B2  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3699   003802  C0B3  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3700   003806                     	if	0	;tblptru may be non-zero
  3701   003806                     	endif
  3702   003806                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3703   003806  0E00               	movlw	low (__mediumconst shr (0+16))
  3704   003808  6EF8               	movwf	tblptru,c
  3705   00380A                     	endif
  3706   00380A  0008               	tblrd		*
  3707   00380C  CFF5 F076          	movff	tablat,efgtoa@c
  3708   003810  EC82  F00F         	call	_efgtoa	;wreg free
  3709   003814  EF43  F01C         	goto	l1138
  3710   003818                     l5155:
  3711                           
  3712                           ; BSR set to: 0
  3713   003818  C0B2  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3714   00381C  C0B3  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3715   003820                     	if	0	;tblptru may be non-zero
  3716   003820                     	endif
  3717   003820                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3718   003820  0E00               	movlw	low (__mediumconst shr (0+16))
  3719   003822  6EF8               	movwf	tblptru,c
  3720   003824                     	endif
  3721   003824  0008               	tblrd		*
  3722   003826  50F5               	movf	tablat,w,c
  3723   003828  6E55               	movwf	??_vfpfcnvrt^0,c
  3724   00382A  6A56               	clrf	(??_vfpfcnvrt+1)^0,c
  3725                           
  3726                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3727                           ; Switch size 1, requested type "simple"
  3728                           ; Number of cases is 1, Range of values is 0 to 0
  3729                           ; switch strategies available:
  3730                           ; Name         Instructions Cycles
  3731                           ; simple_byte            4     3 (average)
  3732                           ;	Chosen strategy is simple_byte
  3733   00382C  5056               	movf	(??_vfpfcnvrt+1)^0,w,c
  3734   00382E  0A00               	xorlw	0	; case 0
  3735   003830  B4D8               	btfsc	status,2,c
  3736   003832  EF1D  F01C         	goto	l5611
  3737   003836  EF24  F01C         	goto	l5157
  3738   00383A                     l5611:
  3739                           
  3740                           ; BSR set to: 0
  3741                           ; Switch size 1, requested type "simple"
  3742                           ; Number of cases is 1, Range of values is 102 to 102
  3743                           ; switch strategies available:
  3744                           ; Name         Instructions Cycles
  3745                           ; simple_byte            4     3 (average)
  3746                           ;	Chosen strategy is simple_byte
  3747   00383A  5055               	movf	??_vfpfcnvrt^0,w,c
  3748   00383C  0A66               	xorlw	102	; case 102
  3749   00383E  B4D8               	btfsc	status,2,c
  3750   003840  EFF3  F01B         	goto	l5149
  3751   003844  EF24  F01C         	goto	l5157
  3752   003848                     l5157:
  3753                           
  3754                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3755   003848  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3756   00384C  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3757   003850  2ADE               	incf	postinc2,f,c
  3758   003852  0E00               	movlw	0
  3759   003854  22DD               	addwfc	postdec2,f,c
  3760   003856  EF43  F01C         	goto	l1138
  3761   00385A                     l5161:
  3762                           
  3763                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3764   00385A  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3765   00385E  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3766   003862  CFDE FFF6          	movff	postinc2,tblptrl
  3767   003866  CFDD FFF7          	movff	postdec2,tblptrh
  3768   00386A                     	if	0	;tblptru may be non-zero
  3769   00386A                     	endif
  3770   00386A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3771   00386A  0E00               	movlw	low (__mediumconst shr (0+16))
  3772   00386C  6EF8               	movwf	tblptru,c
  3773   00386E                     	endif
  3774   00386E  0008               	tblrd		*
  3775   003870  50F5               	movf	tablat,w,c
  3776   003872  6E05               	movwf	fputc@c^0,c
  3777   003874  6A06               	clrf	(fputc@c+1)^0,c
  3778   003876  C0A3  F007         	movff	vfpfcnvrt@fp,fputc@fp
  3779   00387A  C0A4  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3780   00387E  EC62  F022         	call	_fputc	;wreg free
  3781   003882  EF24  F01C         	goto	l5157
  3782   003886                     l1138:
  3783   003886  0012               	return		;funcret
  3784   003888                     __end_of_vfpfcnvrt:
  3785                           	callstack 0
  3786                           
  3787 ;; *************** function _efgtoa *****************
  3788 ;; Defined at:
  3789 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  3792 ;;		 -> sprintf@f(11), 
  3793 ;;  f               4   18[BANK0 ] PTR struct _IO_FILE
  3794 ;;  c               1   22[BANK0 ] unsigned char 
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;  u               4   63[BANK0 ] struct flui
  3797 ;;  g               4   57[BANK0 ] struct flui
  3798 ;;  l               4   52[BANK0 ] struct flui
  3799 ;;  h               4   48[BANK0 ] struct flui
  3800 ;;  ou              4   42[BANK0 ] struct flui
  3801 ;;  n               2   61[BANK0 ] int 
  3802 ;;  i               2   46[BANK0 ] int 
  3803 ;;  w               2   40[BANK0 ] int 
  3804 ;;  e               2   38[BANK0 ] int 
  3805 ;;  m               2   36[BANK0 ] int 
  3806 ;;  d               2   34[BANK0 ] int 
  3807 ;;  t               2   27[BANK0 ] int 
  3808 ;;  p               2   25[BANK0 ] int 
  3809 ;;  ne              2   23[BANK0 ] int 
  3810 ;;  sign            1   56[BANK0 ] unsigned char 
  3811 ;;  nmode           1   33[BANK0 ] unsigned char 
  3812 ;;  mode            1   32[BANK0 ] unsigned char 
  3813 ;;  pp              1   31[BANK0 ] unsigned char 
  3814 ;;  esign           1    0        unsigned char 
  3815 ;; Return value:  Size  Location     Type
  3816 ;;                  1    wreg      void 
  3817 ;; Registers used:
  3818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3819 ;; Tracked objects:
  3820 ;;		On entry : 0/0
  3821 ;;		On exit  : 0/0
  3822 ;;		Unchanged: 0/0
  3823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3824 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3825 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3826 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3827 ;;      Totals:         2      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3828 ;;Total ram usage:       53 bytes
  3829 ;; Hardware stack levels used: 1
  3830 ;; Hardware stack levels required when called: 6
  3831 ;; This function calls:
  3832 ;;		___fladd
  3833 ;;		___fldiv
  3834 ;;		___fleq
  3835 ;;		___flge
  3836 ;;		___flmul
  3837 ;;		___flneg
  3838 ;;		___flsub
  3839 ;;		___fltol
  3840 ;;		___fpclassifyf
  3841 ;;		_floorf
  3842 ;;		_labs
  3843 ;;		_memcpy
  3844 ;;		_pad
  3845 ;;		_strcpy
  3846 ;; This function is called by:
  3847 ;;		_vfpfcnvrt
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           	psect	text4
  3852   001F04                     __ptext4:
  3853                           	callstack 0
  3854   001F04                     _efgtoa:
  3855                           	callstack 21
  3856   001F04                     
  3857                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  3858   001F04  0E00               	movlw	0
  3859   001F06  0100               	movlb	0	; () banked
  3860   001F08  6F98               	movwf	efgtoa@sign& (0+255),b
  3861   001F0A                     
  3862                           ; BSR set to: 0
  3863                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  3864   001F0A  C072  F099         	movff	efgtoa@f,efgtoa@g
  3865   001F0E  C073  F09A         	movff	efgtoa@f+1,efgtoa@g+1
  3866   001F12  C074  F09B         	movff	efgtoa@f+2,efgtoa@g+2
  3867   001F16  C075  F09C         	movff	efgtoa@f+3,efgtoa@g+3
  3868   001F1A                     
  3869                           ; BSR set to: 0
  3870                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  3871   001F1A  BF9C               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3872   001F1C  EF94  F00F         	goto	u5210
  3873   001F20  EF92  F00F         	goto	u5211
  3874   001F24                     u5211:
  3875   001F24  EFA8  F00F         	goto	l4891
  3876   001F28                     u5210:
  3877   001F28                     
  3878                           ; BSR set to: 0
  3879                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  3880   001F28  0E01               	movlw	1
  3881   001F2A  6F98               	movwf	efgtoa@sign& (0+255),b
  3882   001F2C                     
  3883                           ; BSR set to: 0
  3884                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  3885   001F2C  C099  F005         	movff	efgtoa@g,___flneg@f1
  3886   001F30  C09A  F006         	movff	efgtoa@g+1,___flneg@f1+1
  3887   001F34  C09B  F007         	movff	efgtoa@g+2,___flneg@f1+2
  3888   001F38  C09C  F008         	movff	efgtoa@g+3,___flneg@f1+3
  3889   001F3C  ECEE  F025         	call	___flneg	;wreg free
  3890   001F40  C005  F099         	movff	?___flneg,efgtoa@g
  3891   001F44  C006  F09A         	movff	?___flneg+1,efgtoa@g+1
  3892   001F48  C007  F09B         	movff	?___flneg+2,efgtoa@g+2
  3893   001F4C  C008  F09C         	movff	?___flneg+3,efgtoa@g+3
  3894   001F50                     l4891:
  3895                           
  3896                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  3897   001F50  0E00               	movlw	0
  3898   001F52  0100               	movlb	0	; () banked
  3899   001F54  6F9E               	movwf	(efgtoa@n+1)& (0+255),b
  3900   001F56  0E00               	movlw	0
  3901   001F58  6F9D               	movwf	efgtoa@n& (0+255),b
  3902   001F5A                     
  3903                           ; BSR set to: 0
  3904                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  3905   001F5A  C0F3  F088         	movff	_width,efgtoa@w
  3906   001F5E  C0F4  F089         	movff	_width+1,efgtoa@w+1
  3907   001F62                     
  3908                           ; BSR set to: 0
  3909                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  3910   001F62  5198               	movf	efgtoa@sign& (0+255),w,b
  3911   001F64  B4D8               	btfsc	status,2,c
  3912   001F66  EFB7  F00F         	goto	u5221
  3913   001F6A  EFB9  F00F         	goto	u5220
  3914   001F6E                     u5221:
  3915   001F6E  EFCD  F00F         	goto	l4905
  3916   001F72                     u5220:
  3917   001F72                     
  3918                           ; BSR set to: 0
  3919                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  3920   001F72  5198               	movf	efgtoa@sign& (0+255),w,b
  3921   001F74  A4D8               	btfss	status,2,c
  3922   001F76  EFBF  F00F         	goto	u5231
  3923   001F7A  EFC1  F00F         	goto	u5230
  3924   001F7E                     u5231:
  3925   001F7E  EFC7  F00F         	goto	l4901
  3926   001F82                     u5230:
  3927   001F82                     
  3928                           ; BSR set to: 0
  3929   001F82  0E00               	movlw	0
  3930   001F84  6F7E               	movwf	(_efgtoa$2417+1)& (0+255),b
  3931   001F86  0E2B               	movlw	43
  3932   001F88  6F7D               	movwf	_efgtoa$2417& (0+255),b
  3933   001F8A  EFCB  F00F         	goto	l4903
  3934   001F8E                     l4901:
  3935                           
  3936                           ; BSR set to: 0
  3937   001F8E  0E00               	movlw	0
  3938   001F90  6F7E               	movwf	(_efgtoa$2417+1)& (0+255),b
  3939   001F92  0E2D               	movlw	45
  3940   001F94  6F7D               	movwf	_efgtoa$2417& (0+255),b
  3941   001F96                     l4903:
  3942                           
  3943                           ; BSR set to: 0
  3944   001F96  C07D  F098         	movff	_efgtoa$2417,efgtoa@sign
  3945   001F9A                     l4905:
  3946                           
  3947                           ; BSR set to: 0
  3948                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3949   001F9A  C099  F005         	movff	efgtoa@g,___fpclassifyf@x
  3950   001F9E  C09A  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3951   001FA2  C09B  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3952   001FA6  C09C  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3953   001FAA  ECE3  F021         	call	___fpclassifyf	;wreg free
  3954   001FAE  0405               	decf	?___fpclassifyf^0,w,c
  3955   001FB0  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  3956   001FB2  A4D8               	btfss	status,2,c
  3957   001FB4  EFDE  F00F         	goto	u5241
  3958   001FB8  EFE0  F00F         	goto	u5240
  3959   001FBC                     u5241:
  3960   001FBC  EF13  F010         	goto	l4923
  3961   001FC0                     u5240:
  3962   001FC0                     
  3963                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3964   001FC0  0100               	movlb	0	; () banked
  3965   001FC2  5198               	movf	efgtoa@sign& (0+255),w,b
  3966   001FC4  B4D8               	btfsc	status,2,c
  3967   001FC6  EFE7  F00F         	goto	u5251
  3968   001FCA  EFE9  F00F         	goto	u5250
  3969   001FCE                     u5251:
  3970   001FCE  EFF2  F00F         	goto	l4915
  3971   001FD2                     u5250:
  3972   001FD2                     
  3973                           ; BSR set to: 0
  3974                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3975   001FD2  C098  F19A         	movff	efgtoa@sign,_dbuf
  3976   001FD6                     
  3977                           ; BSR set to: 0
  3978                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3979   001FD6  0788               	decf	efgtoa@w& (0+255),f,b
  3980   001FD8  A0D8               	btfss	status,0,c
  3981   001FDA  0789               	decf	(efgtoa@w+1)& (0+255),f,b
  3982   001FDC                     
  3983                           ; BSR set to: 0
  3984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3985   001FDC  0E00               	movlw	0
  3986   001FDE  6F9E               	movwf	(efgtoa@n+1)& (0+255),b
  3987   001FE0  0E01               	movlw	1
  3988   001FE2  6F9D               	movwf	efgtoa@n& (0+255),b
  3989   001FE4                     l4915:
  3990                           
  3991                           ; BSR set to: 0
  3992                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3993   001FE4  0E9A               	movlw	low _dbuf
  3994   001FE6  259D               	addwf	efgtoa@n& (0+255),w,b
  3995   001FE8  6E05               	movwf	strcpy@dest^0,c
  3996   001FEA  0E01               	movlw	high _dbuf
  3997   001FEC  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3998   001FEE  6E06               	movwf	(strcpy@dest+1)^0,c
  3999   001FF0  0E62               	movlw	low STR_13
  4000   001FF2  6E07               	movwf	strcpy@src^0,c
  4001   001FF4  0E0E               	movlw	high STR_13
  4002   001FF6  6E08               	movwf	(strcpy@src+1)^0,c
  4003   001FF8  EC69  F025         	call	_strcpy	;wreg free
  4004   001FFC                     l4917:
  4005                           
  4006                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  4007   001FFC  0100               	movlb	0	; () banked
  4008   001FFE  0EFD               	movlw	253
  4009   002000  2788               	addwf	efgtoa@w& (0+255),f,b
  4010   002002  0EFF               	movlw	255
  4011   002004  2389               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4012   002006                     
  4013                           ; BSR set to: 0
  4014                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  4015   002006  C070  F015         	movff	efgtoa@fp,pad@fp
  4016   00200A  C071  F016         	movff	efgtoa@fp+1,pad@fp+1
  4017   00200E  0E9A               	movlw	low _dbuf
  4018   002010  6E17               	movwf	pad@buf^0,c
  4019   002012  0E01               	movlw	high _dbuf
  4020   002014  6E18               	movwf	(pad@buf+1)^0,c
  4021   002016  C088  F019         	movff	efgtoa@w,pad@p
  4022   00201A  C089  F01A         	movff	efgtoa@w+1,pad@p+1
  4023   00201E  EC66  F023         	call	_pad	;wreg free
  4024   002022  EF7E  F014         	goto	l1090
  4025   002026                     l4923:
  4026                           
  4027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  4028   002026  C099  F005         	movff	efgtoa@g,___fpclassifyf@x
  4029   00202A  C09A  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4030   00202E  C09B  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4031   002032  C09C  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4032   002036  ECE3  F021         	call	___fpclassifyf	;wreg free
  4033   00203A  5005               	movf	?___fpclassifyf^0,w,c
  4034   00203C  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  4035   00203E  A4D8               	btfss	status,2,c
  4036   002040  EF24  F010         	goto	u5261
  4037   002044  EF26  F010         	goto	u5260
  4038   002048                     u5261:
  4039   002048  EF46  F010         	goto	l4941
  4040   00204C                     u5260:
  4041   00204C                     
  4042                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  4043   00204C  0100               	movlb	0	; () banked
  4044   00204E  5198               	movf	efgtoa@sign& (0+255),w,b
  4045   002050  B4D8               	btfsc	status,2,c
  4046   002052  EF2D  F010         	goto	u5271
  4047   002056  EF2F  F010         	goto	u5270
  4048   00205A                     u5271:
  4049   00205A  EF38  F010         	goto	l4933
  4050   00205E                     u5270:
  4051   00205E                     
  4052                           ; BSR set to: 0
  4053                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  4054   00205E  C098  F19A         	movff	efgtoa@sign,_dbuf
  4055   002062                     
  4056                           ; BSR set to: 0
  4057                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  4058   002062  0788               	decf	efgtoa@w& (0+255),f,b
  4059   002064  A0D8               	btfss	status,0,c
  4060   002066  0789               	decf	(efgtoa@w+1)& (0+255),f,b
  4061   002068                     
  4062                           ; BSR set to: 0
  4063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  4064   002068  0E00               	movlw	0
  4065   00206A  6F9E               	movwf	(efgtoa@n+1)& (0+255),b
  4066   00206C  0E01               	movlw	1
  4067   00206E  6F9D               	movwf	efgtoa@n& (0+255),b
  4068   002070                     l4933:
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  4072   002070  0E9A               	movlw	low _dbuf
  4073   002072  259D               	addwf	efgtoa@n& (0+255),w,b
  4074   002074  6E05               	movwf	strcpy@dest^0,c
  4075   002076  0E01               	movlw	high _dbuf
  4076   002078  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4077   00207A  6E06               	movwf	(strcpy@dest+1)^0,c
  4078   00207C  0E66               	movlw	low STR_16
  4079   00207E  6E07               	movwf	strcpy@src^0,c
  4080   002080  0E0E               	movlw	high STR_16
  4081   002082  6E08               	movwf	(strcpy@src+1)^0,c
  4082   002084  EC69  F025         	call	_strcpy	;wreg free
  4083   002088  EFFE  F00F         	goto	l4917
  4084   00208C                     l4941:
  4085                           
  4086                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  4087   00208C  0E00               	movlw	0
  4088   00208E  0100               	movlb	0	; () banked
  4089   002090  6F9F               	movwf	efgtoa@u& (0+255),b
  4090   002092  0E00               	movlw	0
  4091   002094  6FA0               	movwf	(efgtoa@u+1)& (0+255),b
  4092   002096  0E80               	movlw	128
  4093   002098  6FA1               	movwf	(efgtoa@u+2)& (0+255),b
  4094   00209A  0E3F               	movlw	63
  4095   00209C  6FA2               	movwf	(efgtoa@u+3)& (0+255),b
  4096                           
  4097                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  4098   00209E  0E00               	movlw	0
  4099   0020A0  6F87               	movwf	(efgtoa@e+1)& (0+255),b
  4100   0020A2  0E00               	movlw	0
  4101   0020A4  6F86               	movwf	efgtoa@e& (0+255),b
  4102   0020A6                     
  4103                           ; BSR set to: 0
  4104                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  4105   0020A6  C099  F005         	movff	efgtoa@g,___fleq@ff1
  4106   0020AA  C09A  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  4107   0020AE  C09B  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  4108   0020B2  C09C  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  4109   0020B6  0E00               	movlw	0
  4110   0020B8  6E09               	movwf	___fleq@ff2^0,c
  4111   0020BA  0E00               	movlw	0
  4112   0020BC  6E0A               	movwf	(___fleq@ff2+1)^0,c
  4113   0020BE  0E00               	movlw	0
  4114   0020C0  6E0B               	movwf	(___fleq@ff2+2)^0,c
  4115   0020C2  0E00               	movlw	0
  4116   0020C4  6E0C               	movwf	(___fleq@ff2+3)^0,c
  4117   0020C6  ECC7  F022         	call	___fleq	;wreg free
  4118   0020CA  B0D8               	btfsc	status,0,c
  4119   0020CC  EF6A  F010         	goto	u5281
  4120   0020D0  EF6C  F010         	goto	u5280
  4121   0020D4                     u5281:
  4122   0020D4  EF4B  F011         	goto	l1093
  4123   0020D8                     u5280:
  4124   0020D8  EF79  F010         	goto	l4949
  4125   0020DC                     l1095:
  4126                           
  4127                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  4128   0020DC  C08A  F09F         	movff	efgtoa@ou,efgtoa@u
  4129   0020E0  C08B  F0A0         	movff	efgtoa@ou+1,efgtoa@u+1
  4130   0020E4  C08C  F0A1         	movff	efgtoa@ou+2,efgtoa@u+2
  4131   0020E8  C08D  F0A2         	movff	efgtoa@ou+3,efgtoa@u+3
  4132   0020EC                     
  4133                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  4134   0020EC  0100               	movlb	0	; () banked
  4135   0020EE  4B86               	infsnz	efgtoa@e& (0+255),f,b
  4136   0020F0  2B87               	incf	(efgtoa@e+1)& (0+255),f,b
  4137   0020F2                     l4949:
  4138                           
  4139                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  4140   0020F2  C09F  F01D         	movff	efgtoa@u,___flmul@b
  4141   0020F6  C0A0  F01E         	movff	efgtoa@u+1,___flmul@b+1
  4142   0020FA  C0A1  F01F         	movff	efgtoa@u+2,___flmul@b+2
  4143   0020FE  C0A2  F020         	movff	efgtoa@u+3,___flmul@b+3
  4144   002102  0E00               	movlw	0
  4145   002104  6E21               	movwf	___flmul@a^0,c
  4146   002106  0E00               	movlw	0
  4147   002108  6E22               	movwf	(___flmul@a+1)^0,c
  4148   00210A  0E20               	movlw	32
  4149   00210C  6E23               	movwf	(___flmul@a+2)^0,c
  4150   00210E  0E41               	movlw	65
  4151   002110  6E24               	movwf	(___flmul@a+3)^0,c
  4152   002112  ECDF  F016         	call	___flmul	;wreg free
  4153   002116  C01D  F08A         	movff	?___flmul,efgtoa@ou
  4154   00211A  C01E  F08B         	movff	?___flmul+1,efgtoa@ou+1
  4155   00211E  C01F  F08C         	movff	?___flmul+2,efgtoa@ou+2
  4156   002122  C020  F08D         	movff	?___flmul+3,efgtoa@ou+3
  4157   002126  0100               	movlb	0	; () banked
  4158   002128  518A               	movf	efgtoa@ou& (0+255),w,b
  4159   00212A  5D99               	subwf	efgtoa@g& (0+255),w,b
  4160   00212C  6E05               	movwf	labs@a^0,c
  4161   00212E  518B               	movf	(efgtoa@ou+1)& (0+255),w,b
  4162   002130  599A               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4163   002132  6E06               	movwf	(labs@a+1)^0,c
  4164   002134  518C               	movf	(efgtoa@ou+2)& (0+255),w,b
  4165   002136  599B               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4166   002138  6E07               	movwf	(labs@a+2)^0,c
  4167   00213A  518D               	movf	(efgtoa@ou+3)& (0+255),w,b
  4168   00213C  599C               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4169   00213E  6E08               	movwf	(labs@a+3)^0,c
  4170   002140  ECA3  F023         	call	_labs	;wreg free
  4171   002144  BE08               	btfsc	(?_labs+3)^0,7,c
  4172   002146  EFB0  F010         	goto	u5291
  4173   00214A  5008               	movf	(?_labs+3)^0,w,c
  4174   00214C  1007               	iorwf	(?_labs+2)^0,w,c
  4175   00214E  1006               	iorwf	(?_labs+1)^0,w,c
  4176   002150  E109               	bnz	u5290
  4177   002152  0E02               	movlw	2
  4178   002154  5C05               	subwf	?_labs^0,w,c
  4179   002156  A0D8               	btfss	status,0,c
  4180   002158  EFB0  F010         	goto	u5291
  4181   00215C  EFB2  F010         	goto	u5290
  4182   002160                     u5291:
  4183   002160  EF6E  F010         	goto	l1095
  4184   002164                     u5290:
  4185   002164  C08A  F036         	movff	efgtoa@ou,___flge@ff1
  4186   002168  C08B  F037         	movff	efgtoa@ou+1,___flge@ff1+1
  4187   00216C  C08C  F038         	movff	efgtoa@ou+2,___flge@ff1+2
  4188   002170  C08D  F039         	movff	efgtoa@ou+3,___flge@ff1+3
  4189   002174  C099  F03A         	movff	efgtoa@g,___flge@ff2
  4190   002178  C09A  F03B         	movff	efgtoa@g+1,___flge@ff2+1
  4191   00217C  C09B  F03C         	movff	efgtoa@g+2,___flge@ff2+2
  4192   002180  C09C  F03D         	movff	efgtoa@g+3,___flge@ff2+3
  4193   002184  EC61  F021         	call	___flge	;wreg free
  4194   002188  A0D8               	btfss	status,0,c
  4195   00218A  EFC9  F010         	goto	u5301
  4196   00218E  EFCB  F010         	goto	u5300
  4197   002192                     u5301:
  4198   002192  EF6E  F010         	goto	l1095
  4199   002196                     u5300:
  4200   002196                     
  4201                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  4202   002196  0100               	movlb	0	; () banked
  4203   002198  519F               	movf	efgtoa@u& (0+255),w,b
  4204   00219A  5D99               	subwf	efgtoa@g& (0+255),w,b
  4205   00219C  6E05               	movwf	labs@a^0,c
  4206   00219E  51A0               	movf	(efgtoa@u+1)& (0+255),w,b
  4207   0021A0  599A               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4208   0021A2  6E06               	movwf	(labs@a+1)^0,c
  4209   0021A4  51A1               	movf	(efgtoa@u+2)& (0+255),w,b
  4210   0021A6  599B               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4211   0021A8  6E07               	movwf	(labs@a+2)^0,c
  4212   0021AA  51A2               	movf	(efgtoa@u+3)& (0+255),w,b
  4213   0021AC  599C               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4214   0021AE  6E08               	movwf	(labs@a+3)^0,c
  4215   0021B0  ECA3  F023         	call	_labs	;wreg free
  4216   0021B4  BE08               	btfsc	(?_labs+3)^0,7,c
  4217   0021B6  EFEA  F010         	goto	u5310
  4218   0021BA  5008               	movf	(?_labs+3)^0,w,c
  4219   0021BC  1007               	iorwf	(?_labs+2)^0,w,c
  4220   0021BE  1006               	iorwf	(?_labs+1)^0,w,c
  4221   0021C0  E107               	bnz	u5311
  4222   0021C2  0E02               	movlw	2
  4223   0021C4  5C05               	subwf	?_labs^0,w,c
  4224   0021C6  B0D8               	btfsc	status,0,c
  4225   0021C8  EFE8  F010         	goto	u5311
  4226   0021CC  EFEA  F010         	goto	u5310
  4227   0021D0                     u5311:
  4228   0021D0  EF32  F011         	goto	l4967
  4229   0021D4                     u5310:
  4230   0021D4                     l4957:
  4231                           
  4232                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  4233   0021D4  C09F  F099         	movff	efgtoa@u,efgtoa@g
  4234   0021D8  C0A0  F09A         	movff	efgtoa@u+1,efgtoa@g+1
  4235   0021DC  C0A1  F09B         	movff	efgtoa@u+2,efgtoa@g+2
  4236   0021E0  C0A2  F09C         	movff	efgtoa@u+3,efgtoa@g+3
  4237                           
  4238                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  4239   0021E4  EF4B  F011         	goto	l1093
  4240   0021E8                     l4959:
  4241                           
  4242                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  4243   0021E8  C09F  F036         	movff	efgtoa@u,___fldiv@b
  4244   0021EC  C0A0  F037         	movff	efgtoa@u+1,___fldiv@b+1
  4245   0021F0  C0A1  F038         	movff	efgtoa@u+2,___fldiv@b+2
  4246   0021F4  C0A2  F039         	movff	efgtoa@u+3,___fldiv@b+3
  4247   0021F8  0E00               	movlw	0
  4248   0021FA  6E3A               	movwf	___fldiv@a^0,c
  4249   0021FC  0E00               	movlw	0
  4250   0021FE  6E3B               	movwf	(___fldiv@a+1)^0,c
  4251   002200  0E20               	movlw	32
  4252   002202  6E3C               	movwf	(___fldiv@a+2)^0,c
  4253   002204  0E41               	movlw	65
  4254   002206  6E3D               	movwf	(___fldiv@a+3)^0,c
  4255   002208  ECF4  F018         	call	___fldiv	;wreg free
  4256   00220C  C036  F09F         	movff	?___fldiv,efgtoa@u
  4257   002210  C037  F0A0         	movff	?___fldiv+1,efgtoa@u+1
  4258   002214  C038  F0A1         	movff	?___fldiv+2,efgtoa@u+2
  4259   002218  C039  F0A2         	movff	?___fldiv+3,efgtoa@u+3
  4260   00221C                     
  4261                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  4262   00221C  0100               	movlb	0	; () banked
  4263   00221E  0786               	decf	efgtoa@e& (0+255),f,b
  4264   002220  A0D8               	btfss	status,0,c
  4265   002222  0787               	decf	(efgtoa@e+1)& (0+255),f,b
  4266   002224                     
  4267                           ; BSR set to: 0
  4268                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  4269   002224  519F               	movf	efgtoa@u& (0+255),w,b
  4270   002226  5D99               	subwf	efgtoa@g& (0+255),w,b
  4271   002228  6E05               	movwf	labs@a^0,c
  4272   00222A  51A0               	movf	(efgtoa@u+1)& (0+255),w,b
  4273   00222C  599A               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4274   00222E  6E06               	movwf	(labs@a+1)^0,c
  4275   002230  51A1               	movf	(efgtoa@u+2)& (0+255),w,b
  4276   002232  599B               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4277   002234  6E07               	movwf	(labs@a+2)^0,c
  4278   002236  51A2               	movf	(efgtoa@u+3)& (0+255),w,b
  4279   002238  599C               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4280   00223A  6E08               	movwf	(labs@a+3)^0,c
  4281   00223C  ECA3  F023         	call	_labs	;wreg free
  4282   002240  BE08               	btfsc	(?_labs+3)^0,7,c
  4283   002242  EF30  F011         	goto	u5320
  4284   002246  5008               	movf	(?_labs+3)^0,w,c
  4285   002248  1007               	iorwf	(?_labs+2)^0,w,c
  4286   00224A  1006               	iorwf	(?_labs+1)^0,w,c
  4287   00224C  E107               	bnz	u5321
  4288   00224E  0E02               	movlw	2
  4289   002250  5C05               	subwf	?_labs^0,w,c
  4290   002252  B0D8               	btfsc	status,0,c
  4291   002254  EF2E  F011         	goto	u5321
  4292   002258  EF30  F011         	goto	u5320
  4293   00225C                     u5321:
  4294   00225C  EF32  F011         	goto	l4967
  4295   002260                     u5320:
  4296   002260  EFEA  F010         	goto	l4957
  4297   002264                     l4967:
  4298                           
  4299                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  4300   002264  C099  F036         	movff	efgtoa@g,___flge@ff1
  4301   002268  C09A  F037         	movff	efgtoa@g+1,___flge@ff1+1
  4302   00226C  C09B  F038         	movff	efgtoa@g+2,___flge@ff1+2
  4303   002270  C09C  F039         	movff	efgtoa@g+3,___flge@ff1+3
  4304   002274  C09F  F03A         	movff	efgtoa@u,___flge@ff2
  4305   002278  C0A0  F03B         	movff	efgtoa@u+1,___flge@ff2+1
  4306   00227C  C0A1  F03C         	movff	efgtoa@u+2,___flge@ff2+2
  4307   002280  C0A2  F03D         	movff	efgtoa@u+3,___flge@ff2+3
  4308   002284  EC61  F021         	call	___flge	;wreg free
  4309   002288  A0D8               	btfss	status,0,c
  4310   00228A  EF49  F011         	goto	u5331
  4311   00228E  EF4B  F011         	goto	u5330
  4312   002292                     u5331:
  4313   002292  EFF4  F010         	goto	l4959
  4314   002296                     u5330:
  4315   002296                     l1093:
  4316                           
  4317                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  4318   002296  C076  F080         	movff	efgtoa@c,efgtoa@mode
  4319                           
  4320                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  4321   00229A  C080  F081         	movff	efgtoa@mode,efgtoa@nmode
  4322   00229E                     
  4323                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  4324   00229E  0100               	movlb	0	; () banked
  4325   0022A0  BFF6               	btfsc	(_prec+1)& (0+255),7,b
  4326   0022A2  EF55  F011         	goto	u5341
  4327   0022A6  EF57  F011         	goto	u5340
  4328   0022AA                     u5341:
  4329   0022AA  EF5D  F011         	goto	l4973
  4330   0022AE                     u5340:
  4331   0022AE                     
  4332                           ; BSR set to: 0
  4333   0022AE  C0F5  F079         	movff	_prec,efgtoa@p
  4334   0022B2  C0F6  F07A         	movff	_prec+1,efgtoa@p+1
  4335   0022B6  EF61  F011         	goto	l4975
  4336   0022BA                     l4973:
  4337                           
  4338                           ; BSR set to: 0
  4339   0022BA  0E00               	movlw	0
  4340   0022BC  6F7A               	movwf	(efgtoa@p+1)& (0+255),b
  4341   0022BE  0E06               	movlw	6
  4342   0022C0  6F79               	movwf	efgtoa@p& (0+255),b
  4343   0022C2                     l4975:
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  4347   0022C2  C079  F084         	movff	efgtoa@p,efgtoa@m
  4348   0022C6  C07A  F085         	movff	efgtoa@p+1,efgtoa@m+1
  4349   0022CA                     
  4350                           ; BSR set to: 0
  4351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  4352   0022CA  4B84               	infsnz	efgtoa@m& (0+255),f,b
  4353   0022CC  2B85               	incf	(efgtoa@m+1)& (0+255),f,b
  4354   0022CE                     
  4355                           ; BSR set to: 0
  4356                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  4357   0022CE  0E66               	movlw	102
  4358   0022D0  1981               	xorwf	efgtoa@nmode& (0+255),w,b
  4359   0022D2  A4D8               	btfss	status,2,c
  4360   0022D4  EF6E  F011         	goto	u5351
  4361   0022D8  EF70  F011         	goto	u5350
  4362   0022DC                     u5351:
  4363   0022DC  EF90  F011         	goto	l4989
  4364   0022E0                     u5350:
  4365   0022E0                     
  4366                           ; BSR set to: 0
  4367                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  4368   0022E0  BF87               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4369   0022E2  EF77  F011         	goto	u5360
  4370   0022E6  EF75  F011         	goto	u5361
  4371   0022EA                     u5361:
  4372   0022EA  EF83  F011         	goto	l4985
  4373   0022EE                     u5360:
  4374   0022EE                     
  4375                           ; BSR set to: 0
  4376                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  4377   0022EE  0E00               	movlw	0
  4378   0022F0  6F9F               	movwf	efgtoa@u& (0+255),b
  4379   0022F2  0E00               	movlw	0
  4380   0022F4  6FA0               	movwf	(efgtoa@u+1)& (0+255),b
  4381   0022F6  0E80               	movlw	128
  4382   0022F8  6FA1               	movwf	(efgtoa@u+2)& (0+255),b
  4383   0022FA  0E3F               	movlw	63
  4384   0022FC  6FA2               	movwf	(efgtoa@u+3)& (0+255),b
  4385                           
  4386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  4387   0022FE  0E00               	movlw	0
  4388   002300  6F87               	movwf	(efgtoa@e+1)& (0+255),b
  4389   002302  0E00               	movlw	0
  4390   002304  6F86               	movwf	efgtoa@e& (0+255),b
  4391   002306                     l4985:
  4392                           
  4393                           ; BSR set to: 0
  4394                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  4395   002306  0E67               	movlw	103
  4396   002308  1980               	xorwf	efgtoa@mode& (0+255),w,b
  4397   00230A  B4D8               	btfsc	status,2,c
  4398   00230C  EF8A  F011         	goto	u5371
  4399   002310  EF8C  F011         	goto	u5370
  4400   002314                     u5371:
  4401   002314  EF90  F011         	goto	l4989
  4402   002318                     u5370:
  4403   002318                     
  4404                           ; BSR set to: 0
  4405                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  4406   002318  5186               	movf	efgtoa@e& (0+255),w,b
  4407   00231A  2784               	addwf	efgtoa@m& (0+255),f,b
  4408   00231C  5187               	movf	(efgtoa@e+1)& (0+255),w,b
  4409   00231E  2385               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4410   002320                     l4989:
  4411                           
  4412                           ; BSR set to: 0
  4413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  4414   002320  0E00               	movlw	0
  4415   002322  6F8F               	movwf	(efgtoa@i+1)& (0+255),b
  4416   002324  0E00               	movlw	0
  4417   002326  6F8E               	movwf	efgtoa@i& (0+255),b
  4418   002328                     
  4419                           ; BSR set to: 0
  4420                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  4421   002328  C099  F090         	movff	efgtoa@g,efgtoa@h
  4422   00232C  C09A  F091         	movff	efgtoa@g+1,efgtoa@h+1
  4423   002330  C09B  F092         	movff	efgtoa@g+2,efgtoa@h+2
  4424   002334  C09C  F093         	movff	efgtoa@g+3,efgtoa@h+3
  4425   002338                     
  4426                           ; BSR set to: 0
  4427                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  4428   002338  C09F  F08A         	movff	efgtoa@u,efgtoa@ou
  4429   00233C  C0A0  F08B         	movff	efgtoa@u+1,efgtoa@ou+1
  4430   002340  C0A1  F08C         	movff	efgtoa@u+2,efgtoa@ou+2
  4431   002344  C0A2  F08D         	movff	efgtoa@u+3,efgtoa@ou+3
  4432                           
  4433                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4434   002348  EF21  F012         	goto	l5003
  4435   00234C                     l4995:
  4436                           
  4437                           ; BSR set to: 0
  4438                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  4439   00234C  C090  F036         	movff	efgtoa@h,___fldiv@b
  4440   002350  C091  F037         	movff	efgtoa@h+1,___fldiv@b+1
  4441   002354  C092  F038         	movff	efgtoa@h+2,___fldiv@b+2
  4442   002358  C093  F039         	movff	efgtoa@h+3,___fldiv@b+3
  4443   00235C  C09F  F03A         	movff	efgtoa@u,___fldiv@a
  4444   002360  C0A0  F03B         	movff	efgtoa@u+1,___fldiv@a+1
  4445   002364  C0A1  F03C         	movff	efgtoa@u+2,___fldiv@a+2
  4446   002368  C0A2  F03D         	movff	efgtoa@u+3,___fldiv@a+3
  4447   00236C  ECF4  F018         	call	___fldiv	;wreg free
  4448   002370  C036  F04F         	movff	?___fldiv,floorf@x
  4449   002374  C037  F050         	movff	?___fldiv+1,floorf@x+1
  4450   002378  C038  F051         	movff	?___fldiv+2,floorf@x+2
  4451   00237C  C039  F052         	movff	?___fldiv+3,floorf@x+3
  4452   002380  EC83  F01D         	call	_floorf	;wreg free
  4453   002384  C04F  F094         	movff	?_floorf,efgtoa@l
  4454   002388  C050  F095         	movff	?_floorf+1,efgtoa@l+1
  4455   00238C  C051  F096         	movff	?_floorf+2,efgtoa@l+2
  4456   002390  C052  F097         	movff	?_floorf+3,efgtoa@l+3
  4457                           
  4458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  4459   002394  C094  F005         	movff	efgtoa@l,___fltol@f1
  4460   002398  C095  F006         	movff	efgtoa@l+1,___fltol@f1+1
  4461   00239C  C096  F007         	movff	efgtoa@l+2,___fltol@f1+2
  4462   0023A0  C097  F008         	movff	efgtoa@l+3,___fltol@f1+3
  4463   0023A4  ECDE  F020         	call	___fltol	;wreg free
  4464   0023A8  C005  F082         	movff	?___fltol,efgtoa@d
  4465   0023AC  C006  F083         	movff	?___fltol+1,efgtoa@d+1
  4466   0023B0                     
  4467                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  4468   0023B0  C090  F015         	movff	efgtoa@h,___flsub@b
  4469   0023B4  C091  F016         	movff	efgtoa@h+1,___flsub@b+1
  4470   0023B8  C092  F017         	movff	efgtoa@h+2,___flsub@b+2
  4471   0023BC  C093  F018         	movff	efgtoa@h+3,___flsub@b+3
  4472   0023C0  C094  F021         	movff	efgtoa@l,___flmul@a
  4473   0023C4  C095  F022         	movff	efgtoa@l+1,___flmul@a+1
  4474   0023C8  C096  F023         	movff	efgtoa@l+2,___flmul@a+2
  4475   0023CC  C097  F024         	movff	efgtoa@l+3,___flmul@a+3
  4476   0023D0  C09F  F01D         	movff	efgtoa@u,___flmul@b
  4477   0023D4  C0A0  F01E         	movff	efgtoa@u+1,___flmul@b+1
  4478   0023D8  C0A1  F01F         	movff	efgtoa@u+2,___flmul@b+2
  4479   0023DC  C0A2  F020         	movff	efgtoa@u+3,___flmul@b+3
  4480   0023E0  ECDF  F016         	call	___flmul	;wreg free
  4481   0023E4  C01D  F019         	movff	?___flmul,___flsub@a
  4482   0023E8  C01E  F01A         	movff	?___flmul+1,___flsub@a+1
  4483   0023EC  C01F  F01B         	movff	?___flmul+2,___flsub@a+2
  4484   0023F0  C020  F01C         	movff	?___flmul+3,___flsub@a+3
  4485   0023F4  EC46  F025         	call	___flsub	;wreg free
  4486   0023F8  C015  F090         	movff	?___flsub,efgtoa@h
  4487   0023FC  C016  F091         	movff	?___flsub+1,efgtoa@h+1
  4488   002400  C017  F092         	movff	?___flsub+2,efgtoa@h+2
  4489   002404  C018  F093         	movff	?___flsub+3,efgtoa@h+3
  4490   002408                     
  4491                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  4492   002408  C09F  F036         	movff	efgtoa@u,___fldiv@b
  4493   00240C  C0A0  F037         	movff	efgtoa@u+1,___fldiv@b+1
  4494   002410  C0A1  F038         	movff	efgtoa@u+2,___fldiv@b+2
  4495   002414  C0A2  F039         	movff	efgtoa@u+3,___fldiv@b+3
  4496   002418  0E00               	movlw	0
  4497   00241A  6E3A               	movwf	___fldiv@a^0,c
  4498   00241C  0E00               	movlw	0
  4499   00241E  6E3B               	movwf	(___fldiv@a+1)^0,c
  4500   002420  0E20               	movlw	32
  4501   002422  6E3C               	movwf	(___fldiv@a+2)^0,c
  4502   002424  0E41               	movlw	65
  4503   002426  6E3D               	movwf	(___fldiv@a+3)^0,c
  4504   002428  ECF4  F018         	call	___fldiv	;wreg free
  4505   00242C  C036  F09F         	movff	?___fldiv,efgtoa@u
  4506   002430  C037  F0A0         	movff	?___fldiv+1,efgtoa@u+1
  4507   002434  C038  F0A1         	movff	?___fldiv+2,efgtoa@u+2
  4508   002438  C039  F0A2         	movff	?___fldiv+3,efgtoa@u+3
  4509   00243C                     
  4510                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  4511   00243C  0100               	movlb	0	; () banked
  4512   00243E  4B8E               	infsnz	efgtoa@i& (0+255),f,b
  4513   002440  2B8F               	incf	(efgtoa@i+1)& (0+255),f,b
  4514   002442                     l5003:
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4518   002442  5184               	movf	efgtoa@m& (0+255),w,b
  4519   002444  5D8E               	subwf	efgtoa@i& (0+255),w,b
  4520   002446  518F               	movf	(efgtoa@i+1)& (0+255),w,b
  4521   002448  0A80               	xorlw	128
  4522   00244A  6E53               	movwf	??_efgtoa^0,c
  4523   00244C  5185               	movf	(efgtoa@m+1)& (0+255),w,b
  4524   00244E  0A80               	xorlw	128
  4525   002450  5853               	subwfb	??_efgtoa^0,w,c
  4526   002452  A0D8               	btfss	status,0,c
  4527   002454  EF2E  F012         	goto	u5381
  4528   002458  EF30  F012         	goto	u5380
  4529   00245C                     u5381:
  4530   00245C  EFA6  F011         	goto	l4995
  4531   002460                     u5380:
  4532   002460                     
  4533                           ; BSR set to: 0
  4534                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  4535   002460  C09F  F01D         	movff	efgtoa@u,___flmul@b
  4536   002464  C0A0  F01E         	movff	efgtoa@u+1,___flmul@b+1
  4537   002468  C0A1  F01F         	movff	efgtoa@u+2,___flmul@b+2
  4538   00246C  C0A2  F020         	movff	efgtoa@u+3,___flmul@b+3
  4539   002470  0E00               	movlw	0
  4540   002472  6E21               	movwf	___flmul@a^0,c
  4541   002474  0E00               	movlw	0
  4542   002476  6E22               	movwf	(___flmul@a+1)^0,c
  4543   002478  0EA0               	movlw	160
  4544   00247A  6E23               	movwf	(___flmul@a+2)^0,c
  4545   00247C  0E40               	movlw	64
  4546   00247E  6E24               	movwf	(___flmul@a+3)^0,c
  4547   002480  ECDF  F016         	call	___flmul	;wreg free
  4548   002484  C01D  F094         	movff	?___flmul,efgtoa@l
  4549   002488  C01E  F095         	movff	?___flmul+1,efgtoa@l+1
  4550   00248C  C01F  F096         	movff	?___flmul+2,efgtoa@l+2
  4551   002490  C020  F097         	movff	?___flmul+3,efgtoa@l+3
  4552   002494                     
  4553                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  4554   002494  C090  F036         	movff	efgtoa@h,___flge@ff1
  4555   002498  C091  F037         	movff	efgtoa@h+1,___flge@ff1+1
  4556   00249C  C092  F038         	movff	efgtoa@h+2,___flge@ff1+2
  4557   0024A0  C093  F039         	movff	efgtoa@h+3,___flge@ff1+3
  4558   0024A4  C094  F03A         	movff	efgtoa@l,___flge@ff2
  4559   0024A8  C095  F03B         	movff	efgtoa@l+1,___flge@ff2+1
  4560   0024AC  C096  F03C         	movff	efgtoa@l+2,___flge@ff2+2
  4561   0024B0  C097  F03D         	movff	efgtoa@l+3,___flge@ff2+3
  4562   0024B4  EC61  F021         	call	___flge	;wreg free
  4563   0024B8  B0D8               	btfsc	status,0,c
  4564   0024BA  EF61  F012         	goto	u5391
  4565   0024BE  EF63  F012         	goto	u5390
  4566   0024C2                     u5391:
  4567   0024C2  EF6E  F012         	goto	l5011
  4568   0024C6                     u5390:
  4569   0024C6                     
  4570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  4571   0024C6  0E00               	movlw	0
  4572   0024C8  0100               	movlb	0	; () banked
  4573   0024CA  6F94               	movwf	efgtoa@l& (0+255),b
  4574   0024CC  0E00               	movlw	0
  4575   0024CE  6F95               	movwf	(efgtoa@l+1)& (0+255),b
  4576   0024D0  0E00               	movlw	0
  4577   0024D2  6F96               	movwf	(efgtoa@l+2)& (0+255),b
  4578   0024D4  0E00               	movlw	0
  4579   0024D6  6F97               	movwf	(efgtoa@l+3)& (0+255),b
  4580                           
  4581                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  4582   0024D8  EF97  F012         	goto	l5017
  4583   0024DC                     l5011:
  4584                           
  4585                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  4586   0024DC  C090  F005         	movff	efgtoa@h,___fleq@ff1
  4587   0024E0  C091  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  4588   0024E4  C092  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  4589   0024E8  C093  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  4590   0024EC  C094  F009         	movff	efgtoa@l,___fleq@ff2
  4591   0024F0  C095  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  4592   0024F4  C096  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  4593   0024F8  C097  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  4594   0024FC  ECC7  F022         	call	___fleq	;wreg free
  4595   002500  A0D8               	btfss	status,0,c
  4596   002502  EF85  F012         	goto	u5401
  4597   002506  EF87  F012         	goto	u5400
  4598   00250A                     u5401:
  4599   00250A  EF97  F012         	goto	l5017
  4600   00250E                     u5400:
  4601   00250E  0100               	movlb	0	; () banked
  4602   002510  B182               	btfsc	efgtoa@d& (0+255),0,b
  4603   002512  EF8D  F012         	goto	u5411
  4604   002516  EF8F  F012         	goto	u5410
  4605   00251A                     u5411:
  4606   00251A  EF97  F012         	goto	l5017
  4607   00251E                     u5410:
  4608   00251E                     
  4609                           ; BSR set to: 0
  4610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  4611   00251E  0E00               	movlw	0
  4612   002520  6F94               	movwf	efgtoa@l& (0+255),b
  4613   002522  0E00               	movlw	0
  4614   002524  6F95               	movwf	(efgtoa@l+1)& (0+255),b
  4615   002526  0E00               	movlw	0
  4616   002528  6F96               	movwf	(efgtoa@l+2)& (0+255),b
  4617   00252A  0E00               	movlw	0
  4618   00252C  6F97               	movwf	(efgtoa@l+3)& (0+255),b
  4619   00252E                     l5017:
  4620                           
  4621                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  4622   00252E  C099  F005         	movff	efgtoa@g,___fladd@b
  4623   002532  C09A  F006         	movff	efgtoa@g+1,___fladd@b+1
  4624   002536  C09B  F007         	movff	efgtoa@g+2,___fladd@b+2
  4625   00253A  C09C  F008         	movff	efgtoa@g+3,___fladd@b+3
  4626   00253E  C094  F009         	movff	efgtoa@l,___fladd@a
  4627   002542  C095  F00A         	movff	efgtoa@l+1,___fladd@a+1
  4628   002546  C096  F00B         	movff	efgtoa@l+2,___fladd@a+2
  4629   00254A  C097  F00C         	movff	efgtoa@l+3,___fladd@a+3
  4630   00254E  EC7F  F014         	call	___fladd	;wreg free
  4631   002552  C005  F090         	movff	?___fladd,efgtoa@h
  4632   002556  C006  F091         	movff	?___fladd+1,efgtoa@h+1
  4633   00255A  C007  F092         	movff	?___fladd+2,efgtoa@h+2
  4634   00255E  C008  F093         	movff	?___fladd+3,efgtoa@h+3
  4635   002562                     
  4636                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  4637   002562  C090  F036         	movff	efgtoa@h,___flge@ff1
  4638   002566  C091  F037         	movff	efgtoa@h+1,___flge@ff1+1
  4639   00256A  C092  F038         	movff	efgtoa@h+2,___flge@ff1+2
  4640   00256E  C093  F039         	movff	efgtoa@h+3,___flge@ff1+3
  4641   002572  0E00               	movlw	0
  4642   002574  6E21               	movwf	___flmul@a^0,c
  4643   002576  0E00               	movlw	0
  4644   002578  6E22               	movwf	(___flmul@a+1)^0,c
  4645   00257A  0E20               	movlw	32
  4646   00257C  6E23               	movwf	(___flmul@a+2)^0,c
  4647   00257E  0E41               	movlw	65
  4648   002580  6E24               	movwf	(___flmul@a+3)^0,c
  4649   002582  C08A  F01D         	movff	efgtoa@ou,___flmul@b
  4650   002586  C08B  F01E         	movff	efgtoa@ou+1,___flmul@b+1
  4651   00258A  C08C  F01F         	movff	efgtoa@ou+2,___flmul@b+2
  4652   00258E  C08D  F020         	movff	efgtoa@ou+3,___flmul@b+3
  4653   002592  ECDF  F016         	call	___flmul	;wreg free
  4654   002596  C01D  F03A         	movff	?___flmul,___flge@ff2
  4655   00259A  C01E  F03B         	movff	?___flmul+1,___flge@ff2+1
  4656   00259E  C01F  F03C         	movff	?___flmul+2,___flge@ff2+2
  4657   0025A2  C020  F03D         	movff	?___flmul+3,___flge@ff2+3
  4658   0025A6  EC61  F021         	call	___flge	;wreg free
  4659   0025AA  A0D8               	btfss	status,0,c
  4660   0025AC  EFDA  F012         	goto	u5421
  4661   0025B0  EFDC  F012         	goto	u5420
  4662   0025B4                     u5421:
  4663   0025B4  EF05  F013         	goto	l5029
  4664   0025B8                     u5420:
  4665   0025B8                     
  4666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  4667   0025B8  0100               	movlb	0	; () banked
  4668   0025BA  4B86               	infsnz	efgtoa@e& (0+255),f,b
  4669   0025BC  2B87               	incf	(efgtoa@e+1)& (0+255),f,b
  4670   0025BE                     
  4671                           ; BSR set to: 0
  4672                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  4673   0025BE  C08A  F01D         	movff	efgtoa@ou,___flmul@b
  4674   0025C2  C08B  F01E         	movff	efgtoa@ou+1,___flmul@b+1
  4675   0025C6  C08C  F01F         	movff	efgtoa@ou+2,___flmul@b+2
  4676   0025CA  C08D  F020         	movff	efgtoa@ou+3,___flmul@b+3
  4677   0025CE  0E00               	movlw	0
  4678   0025D0  6E21               	movwf	___flmul@a^0,c
  4679   0025D2  0E00               	movlw	0
  4680   0025D4  6E22               	movwf	(___flmul@a+1)^0,c
  4681   0025D6  0E20               	movlw	32
  4682   0025D8  6E23               	movwf	(___flmul@a+2)^0,c
  4683   0025DA  0E41               	movlw	65
  4684   0025DC  6E24               	movwf	(___flmul@a+3)^0,c
  4685   0025DE  ECDF  F016         	call	___flmul	;wreg free
  4686   0025E2  C01D  F08A         	movff	?___flmul,efgtoa@ou
  4687   0025E6  C01E  F08B         	movff	?___flmul+1,efgtoa@ou+1
  4688   0025EA  C01F  F08C         	movff	?___flmul+2,efgtoa@ou+2
  4689   0025EE  C020  F08D         	movff	?___flmul+3,efgtoa@ou+3
  4690   0025F2                     
  4691                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  4692   0025F2  0E66               	movlw	102
  4693   0025F4  0100               	movlb	0	; () banked
  4694   0025F6  1981               	xorwf	efgtoa@nmode& (0+255),w,b
  4695   0025F8  A4D8               	btfss	status,2,c
  4696   0025FA  EF01  F013         	goto	u5431
  4697   0025FE  EF03  F013         	goto	u5430
  4698   002602                     u5431:
  4699   002602  EF05  F013         	goto	l5029
  4700   002606                     u5430:
  4701   002606                     
  4702                           ; BSR set to: 0
  4703                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  4704   002606  4B84               	infsnz	efgtoa@m& (0+255),f,b
  4705   002608  2B85               	incf	(efgtoa@m+1)& (0+255),f,b
  4706   00260A                     l5029:
  4707                           
  4708                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  4709   00260A  C08A  F09F         	movff	efgtoa@ou,efgtoa@u
  4710   00260E  C08B  F0A0         	movff	efgtoa@ou+1,efgtoa@u+1
  4711   002612  C08C  F0A1         	movff	efgtoa@ou+2,efgtoa@u+2
  4712   002616  C08D  F0A2         	movff	efgtoa@ou+3,efgtoa@u+3
  4713   00261A                     
  4714                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  4715   00261A  C086  F077         	movff	efgtoa@e,efgtoa@ne
  4716   00261E  C087  F078         	movff	efgtoa@e+1,efgtoa@ne+1
  4717   002622                     
  4718                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  4719   002622  0E00               	movlw	0
  4720   002624  0100               	movlb	0	; () banked
  4721   002626  6F7F               	movwf	efgtoa@pp& (0+255),b
  4722   002628                     
  4723                           ; BSR set to: 0
  4724                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  4725   002628  0E00               	movlw	0
  4726   00262A  6F7C               	movwf	(efgtoa@t+1)& (0+255),b
  4727   00262C  0E00               	movlw	0
  4728   00262E  6F7B               	movwf	efgtoa@t& (0+255),b
  4729   002630                     
  4730                           ; BSR set to: 0
  4731                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  4732   002630  0E00               	movlw	0
  4733   002632  6F8F               	movwf	(efgtoa@i+1)& (0+255),b
  4734   002634  0E00               	movlw	0
  4735   002636  6F8E               	movwf	efgtoa@i& (0+255),b
  4736                           
  4737                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4738   002638  EF03  F014         	goto	l5079
  4739   00263C                     l5039:
  4740                           
  4741                           ; BSR set to: 0
  4742                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  4743   00263C  C090  F036         	movff	efgtoa@h,___fldiv@b
  4744   002640  C091  F037         	movff	efgtoa@h+1,___fldiv@b+1
  4745   002644  C092  F038         	movff	efgtoa@h+2,___fldiv@b+2
  4746   002648  C093  F039         	movff	efgtoa@h+3,___fldiv@b+3
  4747   00264C  C09F  F03A         	movff	efgtoa@u,___fldiv@a
  4748   002650  C0A0  F03B         	movff	efgtoa@u+1,___fldiv@a+1
  4749   002654  C0A1  F03C         	movff	efgtoa@u+2,___fldiv@a+2
  4750   002658  C0A2  F03D         	movff	efgtoa@u+3,___fldiv@a+3
  4751   00265C  ECF4  F018         	call	___fldiv	;wreg free
  4752   002660  C036  F04F         	movff	?___fldiv,floorf@x
  4753   002664  C037  F050         	movff	?___fldiv+1,floorf@x+1
  4754   002668  C038  F051         	movff	?___fldiv+2,floorf@x+2
  4755   00266C  C039  F052         	movff	?___fldiv+3,floorf@x+3
  4756   002670  EC83  F01D         	call	_floorf	;wreg free
  4757   002674  C04F  F094         	movff	?_floorf,efgtoa@l
  4758   002678  C050  F095         	movff	?_floorf+1,efgtoa@l+1
  4759   00267C  C051  F096         	movff	?_floorf+2,efgtoa@l+2
  4760   002680  C052  F097         	movff	?_floorf+3,efgtoa@l+3
  4761                           
  4762                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4763   002684  C094  F005         	movff	efgtoa@l,___fltol@f1
  4764   002688  C095  F006         	movff	efgtoa@l+1,___fltol@f1+1
  4765   00268C  C096  F007         	movff	efgtoa@l+2,___fltol@f1+2
  4766   002690  C097  F008         	movff	efgtoa@l+3,___fltol@f1+3
  4767   002694  ECDE  F020         	call	___fltol	;wreg free
  4768   002698  BE06               	btfsc	(?___fltol+1)^0,7,c
  4769   00269A  EF5A  F013         	goto	u5440
  4770   00269E  5006               	movf	(?___fltol+1)^0,w,c
  4771   0026A0  E107               	bnz	u5441
  4772   0026A2  0E0A               	movlw	10
  4773   0026A4  5C05               	subwf	?___fltol^0,w,c
  4774   0026A6  B0D8               	btfsc	status,0,c
  4775   0026A8  EF58  F013         	goto	u5441
  4776   0026AC  EF5A  F013         	goto	u5440
  4777   0026B0                     u5441:
  4778   0026B0  EF6A  F013         	goto	l5043
  4779   0026B4                     u5440:
  4780   0026B4  C094  F005         	movff	efgtoa@l,___fltol@f1
  4781   0026B8  C095  F006         	movff	efgtoa@l+1,___fltol@f1+1
  4782   0026BC  C096  F007         	movff	efgtoa@l+2,___fltol@f1+2
  4783   0026C0  C097  F008         	movff	efgtoa@l+3,___fltol@f1+3
  4784   0026C4  ECDE  F020         	call	___fltol	;wreg free
  4785   0026C8  C005  F082         	movff	?___fltol,efgtoa@d
  4786   0026CC  C006  F083         	movff	?___fltol+1,efgtoa@d+1
  4787   0026D0  EF6F  F013         	goto	l1123
  4788   0026D4                     l5043:
  4789   0026D4  0E00               	movlw	0
  4790   0026D6  0100               	movlb	0	; () banked
  4791   0026D8  6F83               	movwf	(efgtoa@d+1)& (0+255),b
  4792   0026DA  0E09               	movlw	9
  4793   0026DC  6F82               	movwf	efgtoa@d& (0+255),b
  4794   0026DE                     l1123:
  4795                           
  4796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  4797   0026DE  0100               	movlb	0	; () banked
  4798   0026E0  517F               	movf	efgtoa@pp& (0+255),w,b
  4799   0026E2  A4D8               	btfss	status,2,c
  4800   0026E4  EF76  F013         	goto	u5451
  4801   0026E8  EF78  F013         	goto	u5450
  4802   0026EC                     u5451:
  4803   0026EC  EFA0  F013         	goto	l5063
  4804   0026F0                     u5450:
  4805   0026F0                     
  4806                           ; BSR set to: 0
  4807   0026F0  BF78               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4808   0026F2  EF7F  F013         	goto	u5460
  4809   0026F6  EF7D  F013         	goto	u5461
  4810   0026FA                     u5461:
  4811   0026FA  EFA0  F013         	goto	l5063
  4812   0026FE                     u5460:
  4813   0026FE                     
  4814                           ; BSR set to: 0
  4815                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  4816   0026FE  0E9A               	movlw	low _dbuf
  4817   002700  259D               	addwf	efgtoa@n& (0+255),w,b
  4818   002702  6ED9               	movwf	fsr2l,c
  4819   002704  0E01               	movlw	high _dbuf
  4820   002706  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4821   002708  6EDA               	movwf	fsr2h,c
  4822   00270A  0E2E               	movlw	46
  4823   00270C  6EDF               	movwf	indf2,c
  4824   00270E                     
  4825                           ; BSR set to: 0
  4826   00270E  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  4827   002710  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  4828   002712                     
  4829                           ; BSR set to: 0
  4830                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  4831   002712  0788               	decf	efgtoa@w& (0+255),f,b
  4832   002714  A0D8               	btfss	status,0,c
  4833   002716  0789               	decf	(efgtoa@w+1)& (0+255),f,b
  4834   002718                     
  4835                           ; BSR set to: 0
  4836                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  4837   002718  0E01               	movlw	1
  4838   00271A  6F7F               	movwf	efgtoa@pp& (0+255),b
  4839   00271C  EFA0  F013         	goto	l5063
  4840   002720                     l5055:
  4841                           
  4842                           ; BSR set to: 0
  4843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  4844   002720  0E9A               	movlw	low _dbuf
  4845   002722  259D               	addwf	efgtoa@n& (0+255),w,b
  4846   002724  6ED9               	movwf	fsr2l,c
  4847   002726  0E01               	movlw	high _dbuf
  4848   002728  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4849   00272A  6EDA               	movwf	fsr2h,c
  4850   00272C  0E30               	movlw	48
  4851   00272E  6EDF               	movwf	indf2,c
  4852   002730                     
  4853                           ; BSR set to: 0
  4854   002730  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  4855   002732  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  4856   002734                     
  4857                           ; BSR set to: 0
  4858                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  4859   002734  0788               	decf	efgtoa@w& (0+255),f,b
  4860   002736  A0D8               	btfss	status,0,c
  4861   002738  0789               	decf	(efgtoa@w+1)& (0+255),f,b
  4862   00273A                     
  4863                           ; BSR set to: 0
  4864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  4865   00273A  077B               	decf	efgtoa@t& (0+255),f,b
  4866   00273C  A0D8               	btfss	status,0,c
  4867   00273E  077C               	decf	(efgtoa@t+1)& (0+255),f,b
  4868   002740                     l5063:
  4869                           
  4870                           ; BSR set to: 0
  4871                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  4872   002740  517B               	movf	efgtoa@t& (0+255),w,b
  4873   002742  117C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4874   002744  A4D8               	btfss	status,2,c
  4875   002746  EFA7  F013         	goto	u5471
  4876   00274A  EFA9  F013         	goto	u5470
  4877   00274E                     u5471:
  4878   00274E  EF90  F013         	goto	l5055
  4879   002752                     u5470:
  4880   002752                     
  4881                           ; BSR set to: 0
  4882                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4883   002752  0E9A               	movlw	low _dbuf
  4884   002754  259D               	addwf	efgtoa@n& (0+255),w,b
  4885   002756  6ED9               	movwf	fsr2l,c
  4886   002758  0E01               	movlw	high _dbuf
  4887   00275A  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4888   00275C  6EDA               	movwf	fsr2h,c
  4889   00275E  5182               	movf	efgtoa@d& (0+255),w,b
  4890   002760  0F30               	addlw	48
  4891   002762  6EDF               	movwf	indf2,c
  4892   002764                     
  4893                           ; BSR set to: 0
  4894   002764  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  4895   002766  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  4896   002768                     
  4897                           ; BSR set to: 0
  4898                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  4899   002768  0788               	decf	efgtoa@w& (0+255),f,b
  4900   00276A  A0D8               	btfss	status,0,c
  4901   00276C  0789               	decf	(efgtoa@w+1)& (0+255),f,b
  4902   00276E                     
  4903                           ; BSR set to: 0
  4904                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  4905   00276E  C090  F015         	movff	efgtoa@h,___flsub@b
  4906   002772  C091  F016         	movff	efgtoa@h+1,___flsub@b+1
  4907   002776  C092  F017         	movff	efgtoa@h+2,___flsub@b+2
  4908   00277A  C093  F018         	movff	efgtoa@h+3,___flsub@b+3
  4909   00277E  C094  F021         	movff	efgtoa@l,___flmul@a
  4910   002782  C095  F022         	movff	efgtoa@l+1,___flmul@a+1
  4911   002786  C096  F023         	movff	efgtoa@l+2,___flmul@a+2
  4912   00278A  C097  F024         	movff	efgtoa@l+3,___flmul@a+3
  4913   00278E  C09F  F01D         	movff	efgtoa@u,___flmul@b
  4914   002792  C0A0  F01E         	movff	efgtoa@u+1,___flmul@b+1
  4915   002796  C0A1  F01F         	movff	efgtoa@u+2,___flmul@b+2
  4916   00279A  C0A2  F020         	movff	efgtoa@u+3,___flmul@b+3
  4917   00279E  ECDF  F016         	call	___flmul	;wreg free
  4918   0027A2  C01D  F019         	movff	?___flmul,___flsub@a
  4919   0027A6  C01E  F01A         	movff	?___flmul+1,___flsub@a+1
  4920   0027AA  C01F  F01B         	movff	?___flmul+2,___flsub@a+2
  4921   0027AE  C020  F01C         	movff	?___flmul+3,___flsub@a+3
  4922   0027B2  EC46  F025         	call	___flsub	;wreg free
  4923   0027B6  C015  F090         	movff	?___flsub,efgtoa@h
  4924   0027BA  C016  F091         	movff	?___flsub+1,efgtoa@h+1
  4925   0027BE  C017  F092         	movff	?___flsub+2,efgtoa@h+2
  4926   0027C2  C018  F093         	movff	?___flsub+3,efgtoa@h+3
  4927   0027C6                     
  4928                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  4929   0027C6  C09F  F036         	movff	efgtoa@u,___fldiv@b
  4930   0027CA  C0A0  F037         	movff	efgtoa@u+1,___fldiv@b+1
  4931   0027CE  C0A1  F038         	movff	efgtoa@u+2,___fldiv@b+2
  4932   0027D2  C0A2  F039         	movff	efgtoa@u+3,___fldiv@b+3
  4933   0027D6  0E00               	movlw	0
  4934   0027D8  6E3A               	movwf	___fldiv@a^0,c
  4935   0027DA  0E00               	movlw	0
  4936   0027DC  6E3B               	movwf	(___fldiv@a+1)^0,c
  4937   0027DE  0E20               	movlw	32
  4938   0027E0  6E3C               	movwf	(___fldiv@a+2)^0,c
  4939   0027E2  0E41               	movlw	65
  4940   0027E4  6E3D               	movwf	(___fldiv@a+3)^0,c
  4941   0027E6  ECF4  F018         	call	___fldiv	;wreg free
  4942   0027EA  C036  F09F         	movff	?___fldiv,efgtoa@u
  4943   0027EE  C037  F0A0         	movff	?___fldiv+1,efgtoa@u+1
  4944   0027F2  C038  F0A1         	movff	?___fldiv+2,efgtoa@u+2
  4945   0027F6  C039  F0A2         	movff	?___fldiv+3,efgtoa@u+3
  4946   0027FA                     
  4947                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  4948   0027FA  0100               	movlb	0	; () banked
  4949   0027FC  0777               	decf	efgtoa@ne& (0+255),f,b
  4950   0027FE  A0D8               	btfss	status,0,c
  4951   002800  0778               	decf	(efgtoa@ne+1)& (0+255),f,b
  4952   002802                     
  4953                           ; BSR set to: 0
  4954                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4955   002802  4B8E               	infsnz	efgtoa@i& (0+255),f,b
  4956   002804  2B8F               	incf	(efgtoa@i+1)& (0+255),f,b
  4957   002806                     l5079:
  4958                           
  4959                           ; BSR set to: 0
  4960                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4961   002806  5184               	movf	efgtoa@m& (0+255),w,b
  4962   002808  5D8E               	subwf	efgtoa@i& (0+255),w,b
  4963   00280A  518F               	movf	(efgtoa@i+1)& (0+255),w,b
  4964   00280C  0A80               	xorlw	128
  4965   00280E  6E53               	movwf	??_efgtoa^0,c
  4966   002810  5185               	movf	(efgtoa@m+1)& (0+255),w,b
  4967   002812  0A80               	xorlw	128
  4968   002814  5853               	subwfb	??_efgtoa^0,w,c
  4969   002816  B0D8               	btfsc	status,0,c
  4970   002818  EF10  F014         	goto	u5481
  4971   00281C  EF12  F014         	goto	u5480
  4972   002820                     u5481:
  4973   002820  EF20  F014         	goto	l5083
  4974   002824                     u5480:
  4975   002824                     
  4976                           ; BSR set to: 0
  4977   002824  BF9E               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4978   002826  EF1E  F014         	goto	u5491
  4979   00282A  519E               	movf	(efgtoa@n+1)& (0+255),w,b
  4980   00282C  E109               	bnz	u5490
  4981   00282E  0E4B               	movlw	75
  4982   002830  5D9D               	subwf	efgtoa@n& (0+255),w,b
  4983   002832  A0D8               	btfss	status,0,c
  4984   002834  EF1E  F014         	goto	u5491
  4985   002838  EF20  F014         	goto	u5490
  4986   00283C                     u5491:
  4987   00283C  EF1E  F013         	goto	l5039
  4988   002840                     u5490:
  4989   002840                     l5083:
  4990                           
  4991                           ; BSR set to: 0
  4992                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4993   002840  0E00               	movlw	0
  4994   002842  6F8F               	movwf	(efgtoa@i+1)& (0+255),b
  4995   002844  0E4F               	movlw	79
  4996   002846  6F8E               	movwf	efgtoa@i& (0+255),b
  4997   002848                     
  4998                           ; BSR set to: 0
  4999                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  5000   002848  0E9A               	movlw	low _dbuf
  5001   00284A  258E               	addwf	efgtoa@i& (0+255),w,b
  5002   00284C  6ED9               	movwf	fsr2l,c
  5003   00284E  0E01               	movlw	high _dbuf
  5004   002850  218F               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5005   002852  6EDA               	movwf	fsr2h,c
  5006   002854  0E00               	movlw	0
  5007   002856  6EDF               	movwf	indf2,c
  5008   002858                     
  5009                           ; BSR set to: 0
  5010                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  5011   002858  0E9A               	movlw	low _dbuf
  5012   00285A  6E53               	movwf	??_efgtoa^0,c
  5013   00285C  0E01               	movlw	high _dbuf
  5014   00285E  6E54               	movwf	(??_efgtoa+1)^0,c
  5015   002860  519D               	movf	efgtoa@n& (0+255),w,b
  5016   002862  5E53               	subwf	??_efgtoa^0,f,c
  5017   002864  519E               	movf	(efgtoa@n+1)& (0+255),w,b
  5018   002866  5A54               	subwfb	(??_efgtoa+1)^0,f,c
  5019   002868  518E               	movf	efgtoa@i& (0+255),w,b
  5020   00286A  2453               	addwf	??_efgtoa^0,w,c
  5021   00286C  6E05               	movwf	memcpy@d1^0,c
  5022   00286E  518F               	movf	(efgtoa@i+1)& (0+255),w,b
  5023   002870  2054               	addwfc	(??_efgtoa+1)^0,w,c
  5024   002872  6E06               	movwf	(memcpy@d1+1)^0,c
  5025   002874  0E9A               	movlw	low _dbuf
  5026   002876  6E07               	movwf	memcpy@s1^0,c
  5027   002878  0E01               	movlw	high _dbuf
  5028   00287A  6E08               	movwf	(memcpy@s1+1)^0,c
  5029   00287C  C09D  F009         	movff	efgtoa@n,memcpy@n
  5030   002880  C09E  F00A         	movff	efgtoa@n+1,memcpy@n+1
  5031   002884  EC59  F024         	call	_memcpy	;wreg free
  5032   002888                     
  5033                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  5034   002888  0100               	movlb	0	; () banked
  5035   00288A  519D               	movf	efgtoa@n& (0+255),w,b
  5036   00288C  5D8E               	subwf	efgtoa@i& (0+255),w,b
  5037   00288E  6F9D               	movwf	efgtoa@n& (0+255),b
  5038   002890  519E               	movf	(efgtoa@n+1)& (0+255),w,b
  5039   002892  598F               	subwfb	(efgtoa@i+1)& (0+255),w,b
  5040   002894  6F9E               	movwf	(efgtoa@n+1)& (0+255),b
  5041   002896                     
  5042                           ; BSR set to: 0
  5043                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  5044   002896  5198               	movf	efgtoa@sign& (0+255),w,b
  5045   002898  A4D8               	btfss	status,2,c
  5046   00289A  EF51  F014         	goto	u5501
  5047   00289E  EF54  F014         	goto	u5500
  5048   0028A2                     u5501:
  5049   0028A2  0E01               	movlw	1
  5050   0028A4  EF55  F014         	goto	u5510
  5051   0028A8                     u5500:
  5052   0028A8  0E00               	movlw	0
  5053   0028AA                     u5510:
  5054   0028AA  6F8E               	movwf	efgtoa@i& (0+255),b
  5055   0028AC  6B8F               	clrf	(efgtoa@i+1)& (0+255),b
  5056   0028AE                     
  5057                           ; BSR set to: 0
  5058                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  5059   0028AE  5198               	movf	efgtoa@sign& (0+255),w,b
  5060   0028B0  B4D8               	btfsc	status,2,c
  5061   0028B2  EF5D  F014         	goto	u5521
  5062   0028B6  EF5F  F014         	goto	u5520
  5063   0028BA                     u5521:
  5064   0028BA  EF6A  F014         	goto	l5097
  5065   0028BE                     u5520:
  5066   0028BE                     
  5067                           ; BSR set to: 0
  5068                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  5069   0028BE  079D               	decf	efgtoa@n& (0+255),f,b
  5070   0028C0  A0D8               	btfss	status,0,c
  5071   0028C2  079E               	decf	(efgtoa@n+1)& (0+255),f,b
  5072   0028C4  0E9A               	movlw	low _dbuf
  5073   0028C6  259D               	addwf	efgtoa@n& (0+255),w,b
  5074   0028C8  6ED9               	movwf	fsr2l,c
  5075   0028CA  0E01               	movlw	high _dbuf
  5076   0028CC  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5077   0028CE  6EDA               	movwf	fsr2h,c
  5078   0028D0  C098  FFDF         	movff	efgtoa@sign,indf2
  5079   0028D4                     l5097:
  5080                           
  5081                           ; BSR set to: 0
  5082                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  5083   0028D4  518E               	movf	efgtoa@i& (0+255),w,b
  5084   0028D6  5F88               	subwf	efgtoa@w& (0+255),f,b
  5085   0028D8  518F               	movf	(efgtoa@i+1)& (0+255),w,b
  5086   0028DA  5B89               	subwfb	(efgtoa@w+1)& (0+255),f,b
  5087   0028DC                     
  5088                           ; BSR set to: 0
  5089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  5090   0028DC  C070  F015         	movff	efgtoa@fp,pad@fp
  5091   0028E0  C071  F016         	movff	efgtoa@fp+1,pad@fp+1
  5092   0028E4  0E9A               	movlw	low _dbuf
  5093   0028E6  259D               	addwf	efgtoa@n& (0+255),w,b
  5094   0028E8  6E17               	movwf	pad@buf^0,c
  5095   0028EA  0E01               	movlw	high _dbuf
  5096   0028EC  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5097   0028EE  6E18               	movwf	(pad@buf+1)^0,c
  5098   0028F0  C088  F019         	movff	efgtoa@w,pad@p
  5099   0028F4  C089  F01A         	movff	efgtoa@w+1,pad@p+1
  5100   0028F8  EC66  F023         	call	_pad	;wreg free
  5101   0028FC                     l1090:
  5102   0028FC  0012               	return		;funcret
  5103   0028FE                     __end_of_efgtoa:
  5104                           	callstack 0
  5105                           
  5106 ;; *************** function _strcpy *****************
  5107 ;; Defined at:
  5108 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  5109 ;; Parameters:    Size  Location     Type
  5110 ;;  dest            2    4[COMRAM] PTR unsigned char 
  5111 ;;		 -> dbuf(80), 
  5112 ;;  src             2    6[COMRAM] PTR const unsigned char 
  5113 ;;		 -> STR_16(4), STR_13(4), 
  5114 ;; Auto vars:     Size  Location     Type
  5115 ;;  d               2   10[COMRAM] PTR unsigned char 
  5116 ;;		 -> dbuf(80), 
  5117 ;;  s               2    8[COMRAM] PTR const unsigned char 
  5118 ;;		 -> STR_16(4), STR_13(4), 
  5119 ;; Return value:  Size  Location     Type
  5120 ;;                  2    4[COMRAM] PTR unsigned char 
  5121 ;; Registers used:
  5122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5123 ;; Tracked objects:
  5124 ;;		On entry : 0/0
  5125 ;;		On exit  : 0/0
  5126 ;;		Unchanged: 0/0
  5127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5128 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5129 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5131 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5132 ;;Total ram usage:        8 bytes
  5133 ;; Hardware stack levels used: 1
  5134 ;; Hardware stack levels required when called: 2
  5135 ;; This function calls:
  5136 ;;		Nothing
  5137 ;; This function is called by:
  5138 ;;		_efgtoa
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           
  5142                           	psect	text5
  5143   004AD2                     __ptext5:
  5144                           	callstack 0
  5145   004AD2                     _strcpy:
  5146                           	callstack 24
  5147   004AD2  C007  F009         	movff	strcpy@src,strcpy@s
  5148   004AD6  C008  F00A         	movff	strcpy@src+1,strcpy@s+1
  5149   004ADA  C005  F00B         	movff	strcpy@dest,strcpy@d
  5150   004ADE  C006  F00C         	movff	strcpy@dest+1,strcpy@d+1
  5151   004AE2                     l3777:
  5152   004AE2  C009  FFF6         	movff	strcpy@s,tblptrl
  5153   004AE6  C00A  FFF7         	movff	strcpy@s+1,tblptrh
  5154   004AEA  4A09               	infsnz	strcpy@s^0,f,c
  5155   004AEC  2A0A               	incf	(strcpy@s+1)^0,f,c
  5156   004AEE                     	if	0	;tblptru may be non-zero
  5157   004AEE                     	endif
  5158   004AEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5159   004AEE  0E00               	movlw	low (__mediumconst shr (0+16))
  5160   004AF0  6EF8               	movwf	tblptru,c
  5161   004AF2                     	endif
  5162   004AF2  C00B  FFD9         	movff	strcpy@d,fsr2l
  5163   004AF6  C00C  FFDA         	movff	strcpy@d+1,fsr2h
  5164   004AFA  4A0B               	infsnz	strcpy@d^0,f,c
  5165   004AFC  2A0C               	incf	(strcpy@d+1)^0,f,c
  5166   004AFE  0008               	tblrd		*
  5167   004B00  CFF5 FFDF          	movff	tablat,indf2
  5168   004B04  50DF               	movf	indf2,w,c
  5169   004B06  A4D8               	btfss	status,2,c
  5170   004B08  EF88  F025         	goto	u3841
  5171   004B0C  EF8A  F025         	goto	u3840
  5172   004B10                     u3841:
  5173   004B10  EF71  F025         	goto	l3777
  5174   004B14                     u3840:
  5175   004B14  0012               	return		;funcret
  5176   004B16                     __end_of_strcpy:
  5177                           	callstack 0
  5178                           
  5179 ;; *************** function _memcpy *****************
  5180 ;; Defined at:
  5181 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;  d1              2    4[COMRAM] PTR void 
  5184 ;;		 -> dbuf(80), 
  5185 ;;  s1              2    6[COMRAM] PTR const void 
  5186 ;;		 -> dbuf(80), 
  5187 ;;  n               2    8[COMRAM] unsigned int 
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;  s               2   12[COMRAM] PTR const unsigned char 
  5190 ;;		 -> dbuf(80), 
  5191 ;;  d               2   10[COMRAM] PTR unsigned char 
  5192 ;;		 -> dbuf(80), 
  5193 ;;  tmp             1   14[COMRAM] unsigned char 
  5194 ;; Return value:  Size  Location     Type
  5195 ;;                  2    4[COMRAM] PTR void 
  5196 ;; Registers used:
  5197 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5198 ;; Tracked objects:
  5199 ;;		On entry : 0/0
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5203 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5204 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5206 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5207 ;;Total ram usage:       11 bytes
  5208 ;; Hardware stack levels used: 1
  5209 ;; Hardware stack levels required when called: 2
  5210 ;; This function calls:
  5211 ;;		Nothing
  5212 ;; This function is called by:
  5213 ;;		_efgtoa
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217                           	psect	text6
  5218   0048B2                     __ptext6:
  5219                           	callstack 0
  5220   0048B2                     _memcpy:
  5221                           	callstack 24
  5222   0048B2  C007  F00D         	movff	memcpy@s1,memcpy@s
  5223   0048B6  C008  F00E         	movff	memcpy@s1+1,memcpy@s+1
  5224   0048BA  C005  F00B         	movff	memcpy@d1,memcpy@d
  5225   0048BE  C006  F00C         	movff	memcpy@d1+1,memcpy@d+1
  5226   0048C2  EF73  F024         	goto	l3821
  5227   0048C6                     l3813:
  5228   0048C6  C00D  FFD9         	movff	memcpy@s,fsr2l
  5229   0048CA  C00E  FFDA         	movff	memcpy@s+1,fsr2h
  5230   0048CE  50DF               	movf	indf2,w,c
  5231   0048D0  6E0F               	movwf	memcpy@tmp^0,c
  5232   0048D2  4A0D               	infsnz	memcpy@s^0,f,c
  5233   0048D4  2A0E               	incf	(memcpy@s+1)^0,f,c
  5234   0048D6  C00B  FFD9         	movff	memcpy@d,fsr2l
  5235   0048DA  C00C  FFDA         	movff	memcpy@d+1,fsr2h
  5236   0048DE  C00F  FFDF         	movff	memcpy@tmp,indf2
  5237   0048E2  4A0B               	infsnz	memcpy@d^0,f,c
  5238   0048E4  2A0C               	incf	(memcpy@d+1)^0,f,c
  5239   0048E6                     l3821:
  5240   0048E6  0609               	decf	memcpy@n^0,f,c
  5241   0048E8  A0D8               	btfss	status,0,c
  5242   0048EA  060A               	decf	(memcpy@n+1)^0,f,c
  5243   0048EC  2809               	incf	memcpy@n^0,w,c
  5244   0048EE  E106               	bnz	u3961
  5245   0048F0  280A               	incf	(memcpy@n+1)^0,w,c
  5246   0048F2  A4D8               	btfss	status,2,c
  5247   0048F4  EF7E  F024         	goto	u3961
  5248   0048F8  EF80  F024         	goto	u3960
  5249   0048FC                     u3961:
  5250   0048FC  EF63  F024         	goto	l3813
  5251   004900                     u3960:
  5252   004900  0012               	return		;funcret
  5253   004902                     __end_of_memcpy:
  5254                           	callstack 0
  5255                           
  5256 ;; *************** function _labs *****************
  5257 ;; Defined at:
  5258 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;  a               4    4[COMRAM] long 
  5261 ;; Auto vars:     Size  Location     Type
  5262 ;;		None
  5263 ;; Return value:  Size  Location     Type
  5264 ;;                  4    4[COMRAM] long 
  5265 ;; Registers used:
  5266 ;;		wreg, status,2, status,0
  5267 ;; Tracked objects:
  5268 ;;		On entry : 0/0
  5269 ;;		On exit  : 0/0
  5270 ;;		Unchanged: 0/0
  5271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5272 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5274 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5275 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5276 ;;Total ram usage:        8 bytes
  5277 ;; Hardware stack levels used: 1
  5278 ;; Hardware stack levels required when called: 2
  5279 ;; This function calls:
  5280 ;;		Nothing
  5281 ;; This function is called by:
  5282 ;;		_efgtoa
  5283 ;; This function uses a non-reentrant model
  5284 ;;
  5285                           
  5286                           	psect	text7
  5287   004746                     __ptext7:
  5288                           	callstack 0
  5289   004746                     _labs:
  5290                           	callstack 24
  5291   004746  BE08               	btfsc	(labs@a+3)^0,7,c
  5292   004748  EFB2  F023         	goto	u3850
  5293   00474C  5008               	movf	(labs@a+3)^0,w,c
  5294   00474E  1007               	iorwf	(labs@a+2)^0,w,c
  5295   004750  1006               	iorwf	(labs@a+1)^0,w,c
  5296   004752  E106               	bnz	u3851
  5297   004754  0405               	decf	labs@a^0,w,c
  5298   004756  B0D8               	btfsc	status,0,c
  5299   004758  EFB0  F023         	goto	u3851
  5300   00475C  EFB2  F023         	goto	u3850
  5301   004760                     u3851:
  5302   004760  EFCD  F023         	goto	l1195
  5303   004764                     u3850:
  5304   004764  C005  F009         	movff	labs@a,??_labs
  5305   004768  C006  F00A         	movff	labs@a+1,??_labs+1
  5306   00476C  C007  F00B         	movff	labs@a+2,??_labs+2
  5307   004770  C008  F00C         	movff	labs@a+3,??_labs+3
  5308   004774  1E09               	comf	??_labs^0,f,c
  5309   004776  1E0A               	comf	(??_labs+1)^0,f,c
  5310   004778  1E0B               	comf	(??_labs+2)^0,f,c
  5311   00477A  1E0C               	comf	(??_labs+3)^0,f,c
  5312   00477C  2A09               	incf	??_labs^0,f,c
  5313   00477E  0E00               	movlw	0
  5314   004780  220A               	addwfc	(??_labs+1)^0,f,c
  5315   004782  220B               	addwfc	(??_labs+2)^0,f,c
  5316   004784  220C               	addwfc	(??_labs+3)^0,f,c
  5317   004786  C009  F005         	movff	??_labs,?_labs
  5318   00478A  C00A  F006         	movff	??_labs+1,?_labs+1
  5319   00478E  C00B  F007         	movff	??_labs+2,?_labs+2
  5320   004792  C00C  F008         	movff	??_labs+3,?_labs+3
  5321   004796  EFD5  F023         	goto	l1198
  5322   00479A                     l1195:
  5323   00479A  C005  F005         	movff	labs@a,?_labs
  5324   00479E  C006  F006         	movff	labs@a+1,?_labs+1
  5325   0047A2  C007  F007         	movff	labs@a+2,?_labs+2
  5326   0047A6  C008  F008         	movff	labs@a+3,?_labs+3
  5327   0047AA                     l1198:
  5328   0047AA  0012               	return		;funcret
  5329   0047AC                     __end_of_labs:
  5330                           	callstack 0
  5331                           
  5332 ;; *************** function _floorf *****************
  5333 ;; Defined at:
  5334 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;  x               4   78[COMRAM] float 
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;  u               4   12[BANK0 ] struct .
  5339 ;;  m               4    6[BANK0 ] unsigned long 
  5340 ;;  e               2   10[BANK0 ] int 
  5341 ;; Return value:  Size  Location     Type
  5342 ;;                  4   78[COMRAM] float 
  5343 ;; Registers used:
  5344 ;;		wreg, status,2, status,0
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5350 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5351 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5352 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5353 ;;      Totals:         4      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5354 ;;Total ram usage:       20 bytes
  5355 ;; Hardware stack levels used: 1
  5356 ;; Hardware stack levels required when called: 2
  5357 ;; This function calls:
  5358 ;;		Nothing
  5359 ;; This function is called by:
  5360 ;;		_efgtoa
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           
  5364                           	psect	text8
  5365   003B06                     __ptext8:
  5366                           	callstack 0
  5367   003B06                     _floorf:
  5368                           	callstack 24
  5369   003B06  C0EB  F06C         	movff	floorf@F526,floorf@u
  5370   003B0A  C0EC  F06D         	movff	floorf@F526+1,floorf@u+1
  5371   003B0E  C0ED  F06E         	movff	floorf@F526+2,floorf@u+2
  5372   003B12  C0EE  F06F         	movff	floorf@F526+3,floorf@u+3
  5373   003B16  C04F  F06C         	movff	floorf@x,floorf@u
  5374   003B1A  C050  F06D         	movff	floorf@x+1,floorf@u+1
  5375   003B1E  C051  F06E         	movff	floorf@x+2,floorf@u+2
  5376   003B22  C052  F06F         	movff	floorf@x+3,floorf@u+3
  5377   003B26  0E81               	movlw	129
  5378   003B28  0100               	movlb	0	; () banked
  5379   003B2A  6F60               	movwf	??_floorf& (0+255),b
  5380   003B2C  0EFF               	movlw	255
  5381   003B2E  6F61               	movwf	(??_floorf+1)& (0+255),b
  5382   003B30  C06C  F062         	movff	floorf@u,??_floorf+2
  5383   003B34  C06D  F063         	movff	floorf@u+1,??_floorf+3
  5384   003B38  C06E  F064         	movff	floorf@u+2,??_floorf+4
  5385   003B3C  C06F  F065         	movff	floorf@u+3,??_floorf+5
  5386   003B40  0E18               	movlw	24
  5387   003B42  EFA8  F01D         	goto	u5110
  5388   003B46                     u5115:
  5389   003B46  90D8               	bcf	status,0,c
  5390   003B48  3365               	rrcf	(??_floorf+5)& (0+255),f,b
  5391   003B4A  3364               	rrcf	(??_floorf+4)& (0+255),f,b
  5392   003B4C  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  5393   003B4E  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  5394   003B50                     u5110:
  5395   003B50  2EE8               	decfsz	wreg,f,c
  5396   003B52  EFA3  F01D         	goto	u5115
  5397   003B56  5162               	movf	(??_floorf+2)& (0+255),w,b
  5398   003B58  2560               	addwf	??_floorf& (0+255),w,b
  5399   003B5A  6F6A               	movwf	floorf@e& (0+255),b
  5400   003B5C  0E00               	movlw	0
  5401   003B5E  2161               	addwfc	(??_floorf+1)& (0+255),w,b
  5402   003B60  6F6B               	movwf	(floorf@e+1)& (0+255),b
  5403   003B62  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
  5404   003B64  EFBD  F01D         	goto	u5121
  5405   003B68  516B               	movf	(floorf@e+1)& (0+255),w,b
  5406   003B6A  E109               	bnz	u5120
  5407   003B6C  0E17               	movlw	23
  5408   003B6E  5D6A               	subwf	floorf@e& (0+255),w,b
  5409   003B70  A0D8               	btfss	status,0,c
  5410   003B72  EFBD  F01D         	goto	u5121
  5411   003B76  EFBF  F01D         	goto	u5120
  5412   003B7A                     u5121:
  5413   003B7A  EFC9  F01D         	goto	l4859
  5414   003B7E                     u5120:
  5415   003B7E                     l4857:
  5416                           
  5417                           ; BSR set to: 0
  5418   003B7E  C04F  F04F         	movff	floorf@x,?_floorf
  5419   003B82  C050  F050         	movff	floorf@x+1,?_floorf+1
  5420   003B86  C051  F051         	movff	floorf@x+2,?_floorf+2
  5421   003B8A  C052  F052         	movff	floorf@x+3,?_floorf+3
  5422   003B8E  EF8D  F01E         	goto	l1184
  5423   003B92                     l4859:
  5424                           
  5425                           ; BSR set to: 0
  5426   003B92  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
  5427   003B94  EFCE  F01D         	goto	u5131
  5428   003B98  EFD0  F01D         	goto	u5130
  5429   003B9C                     u5131:
  5430   003B9C  EF41  F01E         	goto	l4869
  5431   003BA0                     u5130:
  5432   003BA0                     
  5433                           ; BSR set to: 0
  5434   003BA0  C06A  F060         	movff	floorf@e,??_floorf
  5435   003BA4  0EFF               	movlw	255
  5436   003BA6  6F61               	movwf	(??_floorf+1)& (0+255),b
  5437   003BA8  0EFF               	movlw	255
  5438   003BAA  6F62               	movwf	(??_floorf+2)& (0+255),b
  5439   003BAC  0E7F               	movlw	127
  5440   003BAE  6F63               	movwf	(??_floorf+3)& (0+255),b
  5441   003BB0  0E00               	movlw	0
  5442   003BB2  6F64               	movwf	(??_floorf+4)& (0+255),b
  5443   003BB4                     u5145:
  5444   003BB4  6760               	tstfsz	??_floorf& (0+255),b
  5445   003BB6  EFDF  F01D         	goto	u5146
  5446   003BBA  EFE7  F01D         	goto	u5147
  5447   003BBE                     u5146:
  5448   003BBE  3564               	rlcf	(??_floorf+4)& (0+255),w,b
  5449   003BC0  3364               	rrcf	(??_floorf+4)& (0+255),f,b
  5450   003BC2  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  5451   003BC4  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  5452   003BC6  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  5453   003BC8  2F60               	decfsz	??_floorf& (0+255),f,b
  5454   003BCA  EFDA  F01D         	goto	u5145
  5455   003BCE                     u5147:
  5456   003BCE  C061  F066         	movff	??_floorf+1,floorf@m
  5457   003BD2  C062  F067         	movff	??_floorf+2,floorf@m+1
  5458   003BD6  C063  F068         	movff	??_floorf+3,floorf@m+2
  5459   003BDA  C064  F069         	movff	??_floorf+4,floorf@m+3
  5460   003BDE  0100               	movlb	0	; () banked
  5461   003BE0  5166               	movf	floorf@m& (0+255),w,b
  5462   003BE2  156C               	andwf	floorf@u& (0+255),w,b
  5463   003BE4  6F60               	movwf	??_floorf& (0+255),b
  5464   003BE6  5167               	movf	(floorf@m+1)& (0+255),w,b
  5465   003BE8  156D               	andwf	(floorf@u+1)& (0+255),w,b
  5466   003BEA  6F61               	movwf	(??_floorf+1)& (0+255),b
  5467   003BEC  5168               	movf	(floorf@m+2)& (0+255),w,b
  5468   003BEE  156E               	andwf	(floorf@u+2)& (0+255),w,b
  5469   003BF0  6F62               	movwf	(??_floorf+2)& (0+255),b
  5470   003BF2  5169               	movf	(floorf@m+3)& (0+255),w,b
  5471   003BF4  156F               	andwf	(floorf@u+3)& (0+255),w,b
  5472   003BF6  6F63               	movwf	(??_floorf+3)& (0+255),b
  5473   003BF8  5160               	movf	??_floorf& (0+255),w,b
  5474   003BFA  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  5475   003BFC  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  5476   003BFE  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  5477   003C00  A4D8               	btfss	status,2,c
  5478   003C02  EF05  F01E         	goto	u5151
  5479   003C06  EF07  F01E         	goto	u5150
  5480   003C0A                     u5151:
  5481   003C0A  EF09  F01E         	goto	l4865
  5482   003C0E                     u5150:
  5483   003C0E  EFBF  F01D         	goto	l4857
  5484   003C12                     l4865:
  5485                           
  5486                           ; BSR set to: 0
  5487   003C12  C06C  F060         	movff	floorf@u,??_floorf
  5488   003C16  C06D  F061         	movff	floorf@u+1,??_floorf+1
  5489   003C1A  C06E  F062         	movff	floorf@u+2,??_floorf+2
  5490   003C1E  C06F  F063         	movff	floorf@u+3,??_floorf+3
  5491   003C22  0E20               	movlw	32
  5492   003C24  EF19  F01E         	goto	u5160
  5493   003C28                     u5165:
  5494   003C28  90D8               	bcf	status,0,c
  5495   003C2A  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  5496   003C2C  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  5497   003C2E  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  5498   003C30  3360               	rrcf	??_floorf& (0+255),f,b
  5499   003C32                     u5160:
  5500   003C32  2EE8               	decfsz	wreg,f,c
  5501   003C34  EF14  F01E         	goto	u5165
  5502   003C38  5160               	movf	??_floorf& (0+255),w,b
  5503   003C3A  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  5504   003C3C  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  5505   003C3E  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  5506   003C40  B4D8               	btfsc	status,2,c
  5507   003C42  EF25  F01E         	goto	u5171
  5508   003C46  EF27  F01E         	goto	u5170
  5509   003C4A                     u5171:
  5510   003C4A  EF2F  F01E         	goto	l1187
  5511   003C4E                     u5170:
  5512   003C4E                     
  5513                           ; BSR set to: 0
  5514   003C4E  5166               	movf	floorf@m& (0+255),w,b
  5515   003C50  276C               	addwf	floorf@u& (0+255),f,b
  5516   003C52  5167               	movf	(floorf@m+1)& (0+255),w,b
  5517   003C54  236D               	addwfc	(floorf@u+1)& (0+255),f,b
  5518   003C56  5168               	movf	(floorf@m+2)& (0+255),w,b
  5519   003C58  236E               	addwfc	(floorf@u+2)& (0+255),f,b
  5520   003C5A  5169               	movf	(floorf@m+3)& (0+255),w,b
  5521   003C5C  236F               	addwfc	(floorf@u+3)& (0+255),f,b
  5522   003C5E                     l1187:
  5523                           
  5524                           ; BSR set to: 0
  5525   003C5E  1D66               	comf	floorf@m& (0+255),w,b
  5526   003C60  6F60               	movwf	??_floorf& (0+255),b
  5527   003C62  1D67               	comf	(floorf@m+1)& (0+255),w,b
  5528   003C64  6F61               	movwf	(??_floorf+1)& (0+255),b
  5529   003C66  1D68               	comf	(floorf@m+2)& (0+255),w,b
  5530   003C68  6F62               	movwf	(??_floorf+2)& (0+255),b
  5531   003C6A  1D69               	comf	(floorf@m+3)& (0+255),w,b
  5532   003C6C  6F63               	movwf	(??_floorf+3)& (0+255),b
  5533   003C6E  5160               	movf	??_floorf& (0+255),w,b
  5534   003C70  176C               	andwf	floorf@u& (0+255),f,b
  5535   003C72  5161               	movf	(??_floorf+1)& (0+255),w,b
  5536   003C74  176D               	andwf	(floorf@u+1)& (0+255),f,b
  5537   003C76  5162               	movf	(??_floorf+2)& (0+255),w,b
  5538   003C78  176E               	andwf	(floorf@u+2)& (0+255),f,b
  5539   003C7A  5163               	movf	(??_floorf+3)& (0+255),w,b
  5540   003C7C  176F               	andwf	(floorf@u+3)& (0+255),f,b
  5541   003C7E  EF85  F01E         	goto	l4877
  5542   003C82                     l4869:
  5543                           
  5544                           ; BSR set to: 0
  5545   003C82  C06C  F060         	movff	floorf@u,??_floorf
  5546   003C86  C06D  F061         	movff	floorf@u+1,??_floorf+1
  5547   003C8A  C06E  F062         	movff	floorf@u+2,??_floorf+2
  5548   003C8E  C06F  F063         	movff	floorf@u+3,??_floorf+3
  5549   003C92  0E20               	movlw	32
  5550   003C94  EF51  F01E         	goto	u5180
  5551   003C98                     u5185:
  5552   003C98  90D8               	bcf	status,0,c
  5553   003C9A  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  5554   003C9C  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  5555   003C9E  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  5556   003CA0  3360               	rrcf	??_floorf& (0+255),f,b
  5557   003CA2                     u5180:
  5558   003CA2  2EE8               	decfsz	wreg,f,c
  5559   003CA4  EF4C  F01E         	goto	u5185
  5560   003CA8  5160               	movf	??_floorf& (0+255),w,b
  5561   003CAA  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  5562   003CAC  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  5563   003CAE  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  5564   003CB0  A4D8               	btfss	status,2,c
  5565   003CB2  EF5D  F01E         	goto	u5191
  5566   003CB6  EF5F  F01E         	goto	u5190
  5567   003CBA                     u5191:
  5568   003CBA  EF69  F01E         	goto	l4873
  5569   003CBE                     u5190:
  5570   003CBE                     
  5571                           ; BSR set to: 0
  5572   003CBE  0E00               	movlw	0
  5573   003CC0  6F6C               	movwf	floorf@u& (0+255),b
  5574   003CC2  0E00               	movlw	0
  5575   003CC4  6F6D               	movwf	(floorf@u+1)& (0+255),b
  5576   003CC6  0E00               	movlw	0
  5577   003CC8  6F6E               	movwf	(floorf@u+2)& (0+255),b
  5578   003CCA  0E00               	movlw	0
  5579   003CCC  6F6F               	movwf	(floorf@u+3)& (0+255),b
  5580   003CCE  EF85  F01E         	goto	l4877
  5581   003CD2                     l4873:
  5582                           
  5583                           ; BSR set to: 0
  5584   003CD2  90D8               	bcf	status,0,c
  5585   003CD4  356C               	rlcf	floorf@u& (0+255),w,b
  5586   003CD6  6F60               	movwf	??_floorf& (0+255),b
  5587   003CD8  356D               	rlcf	(floorf@u+1)& (0+255),w,b
  5588   003CDA  6F61               	movwf	(??_floorf+1)& (0+255),b
  5589   003CDC  356E               	rlcf	(floorf@u+2)& (0+255),w,b
  5590   003CDE  6F62               	movwf	(??_floorf+2)& (0+255),b
  5591   003CE0  356F               	rlcf	(floorf@u+3)& (0+255),w,b
  5592   003CE2  6F63               	movwf	(??_floorf+3)& (0+255),b
  5593   003CE4  5160               	movf	??_floorf& (0+255),w,b
  5594   003CE6  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  5595   003CE8  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  5596   003CEA  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  5597   003CEC  B4D8               	btfsc	status,2,c
  5598   003CEE  EF7B  F01E         	goto	u5201
  5599   003CF2  EF7D  F01E         	goto	u5200
  5600   003CF6                     u5201:
  5601   003CF6  EF85  F01E         	goto	l4877
  5602   003CFA                     u5200:
  5603   003CFA                     
  5604                           ; BSR set to: 0
  5605   003CFA  0E00               	movlw	0
  5606   003CFC  6F6C               	movwf	floorf@u& (0+255),b
  5607   003CFE  0E00               	movlw	0
  5608   003D00  6F6D               	movwf	(floorf@u+1)& (0+255),b
  5609   003D02  0E80               	movlw	128
  5610   003D04  6F6E               	movwf	(floorf@u+2)& (0+255),b
  5611   003D06  0EBF               	movlw	191
  5612   003D08  6F6F               	movwf	(floorf@u+3)& (0+255),b
  5613   003D0A                     l4877:
  5614                           
  5615                           ; BSR set to: 0
  5616   003D0A  C06C  F04F         	movff	floorf@u,?_floorf
  5617   003D0E  C06D  F050         	movff	floorf@u+1,?_floorf+1
  5618   003D12  C06E  F051         	movff	floorf@u+2,?_floorf+2
  5619   003D16  C06F  F052         	movff	floorf@u+3,?_floorf+3
  5620   003D1A                     l1184:
  5621                           
  5622                           ; BSR set to: 0
  5623   003D1A  0012               	return		;funcret
  5624   003D1C                     __end_of_floorf:
  5625                           	callstack 0
  5626                           
  5627 ;; *************** function ___fpclassifyf *****************
  5628 ;; Defined at:
  5629 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  5630 ;; Parameters:    Size  Location     Type
  5631 ;;  x               4    4[COMRAM] float 
  5632 ;; Auto vars:     Size  Location     Type
  5633 ;;  u               4   14[COMRAM] struct .
  5634 ;;  e               2   12[COMRAM] int 
  5635 ;; Return value:  Size  Location     Type
  5636 ;;                  2    4[COMRAM] int 
  5637 ;; Registers used:
  5638 ;;		wreg, status,2, status,0
  5639 ;; Tracked objects:
  5640 ;;		On entry : 0/0
  5641 ;;		On exit  : 0/0
  5642 ;;		Unchanged: 0/0
  5643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5644 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5645 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5646 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5647 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5648 ;;Total ram usage:       14 bytes
  5649 ;; Hardware stack levels used: 1
  5650 ;; Hardware stack levels required when called: 2
  5651 ;; This function calls:
  5652 ;;		Nothing
  5653 ;; This function is called by:
  5654 ;;		_efgtoa
  5655 ;; This function uses a non-reentrant model
  5656 ;;
  5657                           
  5658                           	psect	text9
  5659   0043C6                     __ptext9:
  5660                           	callstack 0
  5661   0043C6                     ___fpclassifyf:
  5662                           	callstack 24
  5663   0043C6  C0EF  F00F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5664   0043CA  C0F0  F010         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5665   0043CE  C0F1  F011         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5666   0043D2  C0F2  F012         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5667   0043D6  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  5668   0043DA  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5669   0043DE  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5670   0043E2  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5671   0043E6  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5672   0043EA  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5673   0043EE  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5674   0043F2  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5675   0043F6  0E18               	movlw	24
  5676   0043F8  EF03  F022         	goto	u3770
  5677   0043FC                     u3775:
  5678   0043FC  90D8               	bcf	status,0,c
  5679   0043FE  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  5680   004400  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  5681   004402  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  5682   004404  3209               	rrcf	??___fpclassifyf^0,f,c
  5683   004406                     u3770:
  5684   004406  2EE8               	decfsz	wreg,f,c
  5685   004408  EFFE  F021         	goto	u3775
  5686   00440C  5009               	movf	??___fpclassifyf^0,w,c
  5687   00440E  6E0D               	movwf	___fpclassifyf@e^0,c
  5688   004410  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  5689   004412  500D               	movf	___fpclassifyf@e^0,w,c
  5690   004414  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5691   004416  A4D8               	btfss	status,2,c
  5692   004418  EF10  F022         	goto	u3781
  5693   00441C  EF12  F022         	goto	u3780
  5694   004420                     u3781:
  5695   004420  EF32  F022         	goto	l3765
  5696   004424                     u3780:
  5697   004424  90D8               	bcf	status,0,c
  5698   004426  340F               	rlcf	___fpclassifyf@u^0,w,c
  5699   004428  6E09               	movwf	??___fpclassifyf^0,c
  5700   00442A  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5701   00442C  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  5702   00442E  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5703   004430  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  5704   004432  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5705   004434  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  5706   004436  5009               	movf	??___fpclassifyf^0,w,c
  5707   004438  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5708   00443A  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5709   00443C  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5710   00443E  A4D8               	btfss	status,2,c
  5711   004440  EF24  F022         	goto	u3791
  5712   004444  EF26  F022         	goto	u3790
  5713   004448                     u3791:
  5714   004448  EF2C  F022         	goto	l3761
  5715   00444C                     u3790:
  5716   00444C  0E00               	movlw	0
  5717   00444E  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5718   004450  0E02               	movlw	2
  5719   004452  6E05               	movwf	?___fpclassifyf^0,c
  5720   004454  EF61  F022         	goto	l1170
  5721   004458                     l3761:
  5722   004458  0E00               	movlw	0
  5723   00445A  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5724   00445C  0E03               	movlw	3
  5725   00445E  6E05               	movwf	?___fpclassifyf^0,c
  5726   004460  EF61  F022         	goto	l1170
  5727   004464                     l3765:
  5728   004464  280D               	incf	___fpclassifyf@e^0,w,c
  5729   004466  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5730   004468  A4D8               	btfss	status,2,c
  5731   00446A  EF39  F022         	goto	u3801
  5732   00446E  EF3B  F022         	goto	u3800
  5733   004472                     u3801:
  5734   004472  EF5D  F022         	goto	l3771
  5735   004476                     u3800:
  5736   004476  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5737   00447A  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5738   00447E  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5739   004482  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5740   004486  0E09               	movlw	9
  5741   004488                     u3815:
  5742   004488  90D8               	bcf	status,0,c
  5743   00448A  3609               	rlcf	??___fpclassifyf^0,f,c
  5744   00448C  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  5745   00448E  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  5746   004490  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  5747   004492  2EE8               	decfsz	wreg,f,c
  5748   004494  EF44  F022         	goto	u3815
  5749   004498  5009               	movf	??___fpclassifyf^0,w,c
  5750   00449A  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5751   00449C  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5752   00449E  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5753   0044A0  B4D8               	btfsc	status,2,c
  5754   0044A2  EF55  F022         	goto	u3821
  5755   0044A6  EF58  F022         	goto	u3820
  5756   0044AA                     u3821:
  5757   0044AA  0E01               	movlw	1
  5758   0044AC  EF59  F022         	goto	u3830
  5759   0044B0                     u3820:
  5760   0044B0  0E00               	movlw	0
  5761   0044B2                     u3830:
  5762   0044B2  6E05               	movwf	?___fpclassifyf^0,c
  5763   0044B4  6A06               	clrf	(?___fpclassifyf+1)^0,c
  5764   0044B6  EF61  F022         	goto	l1170
  5765   0044BA                     l3771:
  5766   0044BA  0E00               	movlw	0
  5767   0044BC  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5768   0044BE  0E04               	movlw	4
  5769   0044C0  6E05               	movwf	?___fpclassifyf^0,c
  5770   0044C2                     l1170:
  5771   0044C2  0012               	return		;funcret
  5772   0044C4                     __end_of___fpclassifyf:
  5773                           	callstack 0
  5774                           
  5775 ;; *************** function ___fltol *****************
  5776 ;; Defined at:
  5777 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;  f1              4    4[COMRAM] int 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;  exp1            1   13[COMRAM] unsigned char 
  5782 ;;  sign1           1   12[COMRAM] unsigned char 
  5783 ;; Return value:  Size  Location     Type
  5784 ;;                  4    4[COMRAM] long 
  5785 ;; Registers used:
  5786 ;;		wreg, status,2, status,0
  5787 ;; Tracked objects:
  5788 ;;		On entry : 0/0
  5789 ;;		On exit  : 0/0
  5790 ;;		Unchanged: 0/0
  5791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5792 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5793 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5794 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5795 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5796 ;;Total ram usage:       10 bytes
  5797 ;; Hardware stack levels used: 1
  5798 ;; Hardware stack levels required when called: 2
  5799 ;; This function calls:
  5800 ;;		Nothing
  5801 ;; This function is called by:
  5802 ;;		_efgtoa
  5803 ;; This function uses a non-reentrant model
  5804 ;;
  5805                           
  5806                           	psect	text10
  5807   0041BC                     __ptext10:
  5808                           	callstack 0
  5809   0041BC                     ___fltol:
  5810                           	callstack 24
  5811   0041BC  3407               	rlcf	(___fltol@f1+2)^0,w,c
  5812   0041BE  3408               	rlcf	(___fltol@f1+3)^0,w,c
  5813   0041C0  6E0E               	movwf	___fltol@exp1^0,c
  5814   0041C2  500E               	movf	___fltol@exp1^0,w,c
  5815   0041C4  A4D8               	btfss	status,2,c
  5816   0041C6  EFE7  F020         	goto	u3671
  5817   0041CA  EFE9  F020         	goto	u3670
  5818   0041CE                     u3671:
  5819   0041CE  EFF3  F020         	goto	l3697
  5820   0041D2                     u3670:
  5821   0041D2                     l3693:
  5822   0041D2  0E00               	movlw	0
  5823   0041D4  6E05               	movwf	?___fltol^0,c
  5824   0041D6  0E00               	movlw	0
  5825   0041D8  6E06               	movwf	(?___fltol+1)^0,c
  5826   0041DA  0E00               	movlw	0
  5827   0041DC  6E07               	movwf	(?___fltol+2)^0,c
  5828   0041DE  0E00               	movlw	0
  5829   0041E0  6E08               	movwf	(?___fltol+3)^0,c
  5830   0041E2  EF60  F021         	goto	l643
  5831   0041E6                     l3697:
  5832   0041E6  C005  F009         	movff	___fltol@f1,??___fltol
  5833   0041EA  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  5834   0041EE  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  5835   0041F2  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  5836   0041F6  0E20               	movlw	32
  5837   0041F8  EF03  F021         	goto	u3680
  5838   0041FC                     u3685:
  5839   0041FC  90D8               	bcf	status,0,c
  5840   0041FE  320C               	rrcf	(??___fltol+3)^0,f,c
  5841   004200  320B               	rrcf	(??___fltol+2)^0,f,c
  5842   004202  320A               	rrcf	(??___fltol+1)^0,f,c
  5843   004204  3209               	rrcf	??___fltol^0,f,c
  5844   004206                     u3680:
  5845   004206  2EE8               	decfsz	wreg,f,c
  5846   004208  EFFE  F020         	goto	u3685
  5847   00420C  5009               	movf	??___fltol^0,w,c
  5848   00420E  6E0D               	movwf	___fltol@sign1^0,c
  5849   004210  8E07               	bsf	(___fltol@f1+2)^0,7,c
  5850   004212  0EFF               	movlw	255
  5851   004214  1605               	andwf	___fltol@f1^0,f,c
  5852   004216  0EFF               	movlw	255
  5853   004218  1606               	andwf	(___fltol@f1+1)^0,f,c
  5854   00421A  0EFF               	movlw	255
  5855   00421C  1607               	andwf	(___fltol@f1+2)^0,f,c
  5856   00421E  0E00               	movlw	0
  5857   004220  1608               	andwf	(___fltol@f1+3)^0,f,c
  5858   004222  0E96               	movlw	150
  5859   004224  5E0E               	subwf	___fltol@exp1^0,f,c
  5860   004226  BE0E               	btfsc	___fltol@exp1^0,7,c
  5861   004228  EF1A  F021         	goto	u3690
  5862   00422C  EF18  F021         	goto	u3691
  5863   004230                     u3691:
  5864   004230  EF30  F021         	goto	l3717
  5865   004234                     u3690:
  5866   004234  500E               	movf	___fltol@exp1^0,w,c
  5867   004236  0A80               	xorlw	128
  5868   004238  0F97               	addlw	151
  5869   00423A  B0D8               	btfsc	status,0,c
  5870   00423C  EF22  F021         	goto	u3701
  5871   004240  EF24  F021         	goto	u3700
  5872   004244                     u3701:
  5873   004244  EF26  F021         	goto	l3713
  5874   004248                     u3700:
  5875   004248  EFE9  F020         	goto	l3693
  5876   00424C                     l3713:
  5877   00424C  90D8               	bcf	status,0,c
  5878   00424E  3208               	rrcf	(___fltol@f1+3)^0,f,c
  5879   004250  3207               	rrcf	(___fltol@f1+2)^0,f,c
  5880   004252  3206               	rrcf	(___fltol@f1+1)^0,f,c
  5881   004254  3205               	rrcf	___fltol@f1^0,f,c
  5882   004256  3E0E               	incfsz	___fltol@exp1^0,f,c
  5883   004258  EF26  F021         	goto	l3713
  5884   00425C  EF48  F021         	goto	l3727
  5885   004260                     l3717:
  5886   004260  0E1F               	movlw	31
  5887   004262  640E               	cpfsgt	___fltol@exp1^0,c
  5888   004264  EF36  F021         	goto	u3711
  5889   004268  EF38  F021         	goto	u3710
  5890   00426C                     u3711:
  5891   00426C  EF40  F021         	goto	l3725
  5892   004270                     u3710:
  5893   004270  EFE9  F020         	goto	l3693
  5894   004274                     l3723:
  5895   004274  90D8               	bcf	status,0,c
  5896   004276  3605               	rlcf	___fltol@f1^0,f,c
  5897   004278  3606               	rlcf	(___fltol@f1+1)^0,f,c
  5898   00427A  3607               	rlcf	(___fltol@f1+2)^0,f,c
  5899   00427C  3608               	rlcf	(___fltol@f1+3)^0,f,c
  5900   00427E  060E               	decf	___fltol@exp1^0,f,c
  5901   004280                     l3725:
  5902   004280  500E               	movf	___fltol@exp1^0,w,c
  5903   004282  A4D8               	btfss	status,2,c
  5904   004284  EF46  F021         	goto	u3721
  5905   004288  EF48  F021         	goto	u3720
  5906   00428C                     u3721:
  5907   00428C  EF3A  F021         	goto	l3723
  5908   004290                     u3720:
  5909   004290                     l3727:
  5910   004290  500D               	movf	___fltol@sign1^0,w,c
  5911   004292  B4D8               	btfsc	status,2,c
  5912   004294  EF4E  F021         	goto	u3731
  5913   004298  EF50  F021         	goto	u3730
  5914   00429C                     u3731:
  5915   00429C  EF58  F021         	goto	l3731
  5916   0042A0                     u3730:
  5917   0042A0  1E08               	comf	(___fltol@f1+3)^0,f,c
  5918   0042A2  1E07               	comf	(___fltol@f1+2)^0,f,c
  5919   0042A4  1E06               	comf	(___fltol@f1+1)^0,f,c
  5920   0042A6  6C05               	negf	___fltol@f1^0,c
  5921   0042A8  0E00               	movlw	0
  5922   0042AA  2206               	addwfc	(___fltol@f1+1)^0,f,c
  5923   0042AC  2207               	addwfc	(___fltol@f1+2)^0,f,c
  5924   0042AE  2208               	addwfc	(___fltol@f1+3)^0,f,c
  5925   0042B0                     l3731:
  5926   0042B0  C005  F005         	movff	___fltol@f1,?___fltol
  5927   0042B4  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  5928   0042B8  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  5929   0042BC  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  5930   0042C0                     l643:
  5931   0042C0  0012               	return		;funcret
  5932   0042C2                     __end_of___fltol:
  5933                           	callstack 0
  5934                           
  5935 ;; *************** function ___flsub *****************
  5936 ;; Defined at:
  5937 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  5938 ;; Parameters:    Size  Location     Type
  5939 ;;  b               4   20[COMRAM] long 
  5940 ;;  a               4   24[COMRAM] long 
  5941 ;; Auto vars:     Size  Location     Type
  5942 ;;		None
  5943 ;; Return value:  Size  Location     Type
  5944 ;;                  4   20[COMRAM] long 
  5945 ;; Registers used:
  5946 ;;		wreg, status,2, status,0, cstack
  5947 ;; Tracked objects:
  5948 ;;		On entry : 0/0
  5949 ;;		On exit  : 0/0
  5950 ;;		Unchanged: 0/0
  5951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5952 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5955 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5956 ;;Total ram usage:        8 bytes
  5957 ;; Hardware stack levels used: 1
  5958 ;; Hardware stack levels required when called: 3
  5959 ;; This function calls:
  5960 ;;		___fladd
  5961 ;; This function is called by:
  5962 ;;		_main
  5963 ;;		_efgtoa
  5964 ;; This function uses a non-reentrant model
  5965 ;;
  5966                           
  5967                           	psect	text11
  5968   004A8C                     __ptext11:
  5969                           	callstack 0
  5970   004A8C                     ___flsub:
  5971                           	callstack 23
  5972   004A8C  0E00               	movlw	0
  5973   004A8E  1A19               	xorwf	___flsub@a^0,f,c
  5974   004A90  0E00               	movlw	0
  5975   004A92  1A1A               	xorwf	(___flsub@a+1)^0,f,c
  5976   004A94  0E00               	movlw	0
  5977   004A96  1A1B               	xorwf	(___flsub@a+2)^0,f,c
  5978   004A98  0E80               	movlw	128
  5979   004A9A  1A1C               	xorwf	(___flsub@a+3)^0,f,c
  5980   004A9C  C015  F005         	movff	___flsub@b,___fladd@b
  5981   004AA0  C016  F006         	movff	___flsub@b+1,___fladd@b+1
  5982   004AA4  C017  F007         	movff	___flsub@b+2,___fladd@b+2
  5983   004AA8  C018  F008         	movff	___flsub@b+3,___fladd@b+3
  5984   004AAC  C019  F009         	movff	___flsub@a,___fladd@a
  5985   004AB0  C01A  F00A         	movff	___flsub@a+1,___fladd@a+1
  5986   004AB4  C01B  F00B         	movff	___flsub@a+2,___fladd@a+2
  5987   004AB8  C01C  F00C         	movff	___flsub@a+3,___fladd@a+3
  5988   004ABC  EC7F  F014         	call	___fladd	;wreg free
  5989   004AC0  C005  F015         	movff	?___fladd,?___flsub
  5990   004AC4  C006  F016         	movff	?___fladd+1,?___flsub+1
  5991   004AC8  C007  F017         	movff	?___fladd+2,?___flsub+2
  5992   004ACC  C008  F018         	movff	?___fladd+3,?___flsub+3
  5993   004AD0  0012               	return		;funcret
  5994   004AD2                     __end_of___flsub:
  5995                           	callstack 0
  5996                           
  5997 ;; *************** function ___fladd *****************
  5998 ;; Defined at:
  5999 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  6000 ;; Parameters:    Size  Location     Type
  6001 ;;  b               4    4[COMRAM] long 
  6002 ;;  a               4    8[COMRAM] long 
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;  grs             1   19[COMRAM] unsigned char 
  6005 ;;  bexp            1   18[COMRAM] unsigned char 
  6006 ;;  aexp            1   17[COMRAM] unsigned char 
  6007 ;;  signs           1   16[COMRAM] unsigned char 
  6008 ;; Return value:  Size  Location     Type
  6009 ;;                  4    4[COMRAM] unsigned char 
  6010 ;; Registers used:
  6011 ;;		wreg, status,2, status,0
  6012 ;; Tracked objects:
  6013 ;;		On entry : 0/0
  6014 ;;		On exit  : 0/0
  6015 ;;		Unchanged: 0/0
  6016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6017 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6018 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6019 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6020 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6021 ;;Total ram usage:       16 bytes
  6022 ;; Hardware stack levels used: 1
  6023 ;; Hardware stack levels required when called: 2
  6024 ;; This function calls:
  6025 ;;		Nothing
  6026 ;; This function is called by:
  6027 ;;		___flsub
  6028 ;;		_efgtoa
  6029 ;; This function uses a non-reentrant model
  6030 ;;
  6031                           
  6032                           	psect	text12
  6033   0028FE                     __ptext12:
  6034                           	callstack 0
  6035   0028FE                     ___fladd:
  6036                           	callstack 23
  6037   0028FE  5008               	movf	(___fladd@b+3)^0,w,c
  6038   002900  0B80               	andlw	128
  6039   002902  6E11               	movwf	___fladd@signs^0,c
  6040   002904  5008               	movf	(___fladd@b+3)^0,w,c
  6041   002906  2408               	addwf	(___fladd@b+3)^0,w,c
  6042   002908  6E13               	movwf	___fladd@bexp^0,c
  6043   00290A  AE07               	btfss	(___fladd@b+2)^0,7,c
  6044   00290C  EF8A  F014         	goto	u2631
  6045   002910  EF8C  F014         	goto	u2630
  6046   002914                     u2631:
  6047   002914  EF8D  F014         	goto	l3087
  6048   002918                     u2630:
  6049   002918  8013               	bsf	___fladd@bexp^0,0,c
  6050   00291A                     l3087:
  6051   00291A  5013               	movf	___fladd@bexp^0,w,c
  6052   00291C  B4D8               	btfsc	status,2,c
  6053   00291E  EF93  F014         	goto	u2641
  6054   002922  EF95  F014         	goto	u2640
  6055   002926                     u2641:
  6056   002926  EFAA  F014         	goto	l3097
  6057   00292A                     u2640:
  6058   00292A  2813               	incf	___fladd@bexp^0,w,c
  6059   00292C  A4D8               	btfss	status,2,c
  6060   00292E  EF9B  F014         	goto	u2651
  6061   002932  EF9D  F014         	goto	u2650
  6062   002936                     u2651:
  6063   002936  EFA5  F014         	goto	l3093
  6064   00293A                     u2650:
  6065   00293A  0E00               	movlw	0
  6066   00293C  6E05               	movwf	___fladd@b^0,c
  6067   00293E  0E00               	movlw	0
  6068   002940  6E06               	movwf	(___fladd@b+1)^0,c
  6069   002942  0E00               	movlw	0
  6070   002944  6E07               	movwf	(___fladd@b+2)^0,c
  6071   002946  0E00               	movlw	0
  6072   002948  6E08               	movwf	(___fladd@b+3)^0,c
  6073   00294A                     l3093:
  6074   00294A  8E07               	bsf	(___fladd@b+2)^0,7,c
  6075   00294C  0E00               	movlw	0
  6076   00294E  6E08               	movwf	(___fladd@b+3)^0,c
  6077   002950  EFB2  F014         	goto	l3099
  6078   002954                     l3097:
  6079   002954  0E00               	movlw	0
  6080   002956  6E05               	movwf	___fladd@b^0,c
  6081   002958  0E00               	movlw	0
  6082   00295A  6E06               	movwf	(___fladd@b+1)^0,c
  6083   00295C  0E00               	movlw	0
  6084   00295E  6E07               	movwf	(___fladd@b+2)^0,c
  6085   002960  0E00               	movlw	0
  6086   002962  6E08               	movwf	(___fladd@b+3)^0,c
  6087   002964                     l3099:
  6088   002964  500C               	movf	(___fladd@a+3)^0,w,c
  6089   002966  0B80               	andlw	128
  6090   002968  6E12               	movwf	___fladd@aexp^0,c
  6091   00296A  5011               	movf	___fladd@signs^0,w,c
  6092   00296C  1812               	xorwf	___fladd@aexp^0,w,c
  6093   00296E  B4D8               	btfsc	status,2,c
  6094   002970  EFBC  F014         	goto	u2661
  6095   002974  EFBE  F014         	goto	u2660
  6096   002978                     u2661:
  6097   002978  EFBF  F014         	goto	l3105
  6098   00297C                     u2660:
  6099   00297C  8C11               	bsf	___fladd@signs^0,6,c
  6100   00297E                     l3105:
  6101   00297E  500C               	movf	(___fladd@a+3)^0,w,c
  6102   002980  240C               	addwf	(___fladd@a+3)^0,w,c
  6103   002982  6E12               	movwf	___fladd@aexp^0,c
  6104   002984  AE0B               	btfss	(___fladd@a+2)^0,7,c
  6105   002986  EFC7  F014         	goto	u2671
  6106   00298A  EFC9  F014         	goto	u2670
  6107   00298E                     u2671:
  6108   00298E  EFCA  F014         	goto	l3111
  6109   002992                     u2670:
  6110   002992  8012               	bsf	___fladd@aexp^0,0,c
  6111   002994                     l3111:
  6112   002994  5012               	movf	___fladd@aexp^0,w,c
  6113   002996  B4D8               	btfsc	status,2,c
  6114   002998  EFD0  F014         	goto	u2681
  6115   00299C  EFD2  F014         	goto	u2680
  6116   0029A0                     u2681:
  6117   0029A0  EFE7  F014         	goto	l3121
  6118   0029A4                     u2680:
  6119   0029A4  2812               	incf	___fladd@aexp^0,w,c
  6120   0029A6  A4D8               	btfss	status,2,c
  6121   0029A8  EFD8  F014         	goto	u2691
  6122   0029AC  EFDA  F014         	goto	u2690
  6123   0029B0                     u2691:
  6124   0029B0  EFE2  F014         	goto	l3117
  6125   0029B4                     u2690:
  6126   0029B4  0E00               	movlw	0
  6127   0029B6  6E09               	movwf	___fladd@a^0,c
  6128   0029B8  0E00               	movlw	0
  6129   0029BA  6E0A               	movwf	(___fladd@a+1)^0,c
  6130   0029BC  0E00               	movlw	0
  6131   0029BE  6E0B               	movwf	(___fladd@a+2)^0,c
  6132   0029C0  0E00               	movlw	0
  6133   0029C2  6E0C               	movwf	(___fladd@a+3)^0,c
  6134   0029C4                     l3117:
  6135   0029C4  8E0B               	bsf	(___fladd@a+2)^0,7,c
  6136   0029C6  0E00               	movlw	0
  6137   0029C8  6E0C               	movwf	(___fladd@a+3)^0,c
  6138   0029CA  EFEF  F014         	goto	l3123
  6139   0029CE                     l3121:
  6140   0029CE  0E00               	movlw	0
  6141   0029D0  6E09               	movwf	___fladd@a^0,c
  6142   0029D2  0E00               	movlw	0
  6143   0029D4  6E0A               	movwf	(___fladd@a+1)^0,c
  6144   0029D6  0E00               	movlw	0
  6145   0029D8  6E0B               	movwf	(___fladd@a+2)^0,c
  6146   0029DA  0E00               	movlw	0
  6147   0029DC  6E0C               	movwf	(___fladd@a+3)^0,c
  6148   0029DE                     l3123:
  6149   0029DE  5013               	movf	___fladd@bexp^0,w,c
  6150   0029E0  5C12               	subwf	___fladd@aexp^0,w,c
  6151   0029E2  B0D8               	btfsc	status,0,c
  6152   0029E4  EFF6  F014         	goto	u2701
  6153   0029E8  EFF8  F014         	goto	u2700
  6154   0029EC                     u2701:
  6155   0029EC  EF1F  F015         	goto	l3159
  6156   0029F0                     u2700:
  6157   0029F0  AC11               	btfss	___fladd@signs^0,6,c
  6158   0029F2  EFFD  F014         	goto	u2711
  6159   0029F6  EFFF  F014         	goto	u2710
  6160   0029FA                     u2711:
  6161   0029FA  EF01  F015         	goto	l3129
  6162   0029FE                     u2710:
  6163   0029FE  0E80               	movlw	128
  6164   002A00  1A11               	xorwf	___fladd@signs^0,f,c
  6165   002A02                     l3129:
  6166   002A02  C013  F014         	movff	___fladd@bexp,___fladd@grs
  6167   002A06  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  6168   002A0A  C014  F012         	movff	___fladd@grs,___fladd@aexp
  6169   002A0E  C005  F014         	movff	___fladd@b,___fladd@grs
  6170   002A12  C009  F005         	movff	___fladd@a,___fladd@b
  6171   002A16  C014  F009         	movff	___fladd@grs,___fladd@a
  6172   002A1A  C006  F014         	movff	___fladd@b+1,___fladd@grs
  6173   002A1E  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  6174   002A22  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  6175   002A26  C007  F014         	movff	___fladd@b+2,___fladd@grs
  6176   002A2A  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  6177   002A2E  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  6178   002A32  C008  F014         	movff	___fladd@b+3,___fladd@grs
  6179   002A36  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  6180   002A3A  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  6181   002A3E                     l3159:
  6182   002A3E  0E00               	movlw	0
  6183   002A40  6E14               	movwf	___fladd@grs^0,c
  6184   002A42  5013               	movf	___fladd@bexp^0,w,c
  6185   002A44  C012  F00D         	movff	___fladd@aexp,??___fladd
  6186   002A48  6A0E               	clrf	(??___fladd+1)^0,c
  6187   002A4A  5E0D               	subwf	??___fladd^0,f,c
  6188   002A4C  0E00               	movlw	0
  6189   002A4E  5A0E               	subwfb	(??___fladd+1)^0,f,c
  6190   002A50  BE0E               	btfsc	(??___fladd+1)^0,7,c
  6191   002A52  EF34  F015         	goto	u2721
  6192   002A56  500E               	movf	(??___fladd+1)^0,w,c
  6193   002A58  E109               	bnz	u2720
  6194   002A5A  0E1A               	movlw	26
  6195   002A5C  5C0D               	subwf	??___fladd^0,w,c
  6196   002A5E  A0D8               	btfss	status,0,c
  6197   002A60  EF34  F015         	goto	u2721
  6198   002A64  EF36  F015         	goto	u2720
  6199   002A68                     u2721:
  6200   002A68  EF6D  F015         	goto	l875
  6201   002A6C                     u2720:
  6202   002A6C  5005               	movf	___fladd@b^0,w,c
  6203   002A6E  1006               	iorwf	(___fladd@b+1)^0,w,c
  6204   002A70  1007               	iorwf	(___fladd@b+2)^0,w,c
  6205   002A72  1008               	iorwf	(___fladd@b+3)^0,w,c
  6206   002A74  A4D8               	btfss	status,2,c
  6207   002A76  EF3F  F015         	goto	u2731
  6208   002A7A  EF42  F015         	goto	u2730
  6209   002A7E                     u2731:
  6210   002A7E  0E01               	movlw	1
  6211   002A80  EF43  F015         	goto	u2740
  6212   002A84                     u2730:
  6213   002A84  0E00               	movlw	0
  6214   002A86                     u2740:
  6215   002A86  6E14               	movwf	___fladd@grs^0,c
  6216   002A88  0E00               	movlw	0
  6217   002A8A  6E05               	movwf	___fladd@b^0,c
  6218   002A8C  0E00               	movlw	0
  6219   002A8E  6E06               	movwf	(___fladd@b+1)^0,c
  6220   002A90  0E00               	movlw	0
  6221   002A92  6E07               	movwf	(___fladd@b+2)^0,c
  6222   002A94  0E00               	movlw	0
  6223   002A96  6E08               	movwf	(___fladd@b+3)^0,c
  6224   002A98  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  6225   002A9C  EF76  F015         	goto	l874
  6226   002AA0                     l876:
  6227   002AA0  A014               	btfss	___fladd@grs^0,0,c
  6228   002AA2  EF55  F015         	goto	u2751
  6229   002AA6  EF57  F015         	goto	u2750
  6230   002AAA                     u2751:
  6231   002AAA  EF5D  F015         	goto	l3171
  6232   002AAE                     u2750:
  6233   002AAE  90D8               	bcf	status,0,c
  6234   002AB0  3014               	rrcf	___fladd@grs^0,w,c
  6235   002AB2  0901               	iorlw	1
  6236   002AB4  6E14               	movwf	___fladd@grs^0,c
  6237   002AB6  EF5F  F015         	goto	l3173
  6238   002ABA                     l3171:
  6239   002ABA  90D8               	bcf	status,0,c
  6240   002ABC  3214               	rrcf	___fladd@grs^0,f,c
  6241   002ABE                     l3173:
  6242   002ABE  A005               	btfss	___fladd@b^0,0,c
  6243   002AC0  EF64  F015         	goto	u2761
  6244   002AC4  EF66  F015         	goto	u2760
  6245   002AC8                     u2761:
  6246   002AC8  EF67  F015         	goto	l3177
  6247   002ACC                     u2760:
  6248   002ACC  8E14               	bsf	___fladd@grs^0,7,c
  6249   002ACE                     l3177:
  6250   002ACE  3408               	rlcf	(___fladd@b+3)^0,w,c
  6251   002AD0  3208               	rrcf	(___fladd@b+3)^0,f,c
  6252   002AD2  3207               	rrcf	(___fladd@b+2)^0,f,c
  6253   002AD4  3206               	rrcf	(___fladd@b+1)^0,f,c
  6254   002AD6  3205               	rrcf	___fladd@b^0,f,c
  6255   002AD8  2A13               	incf	___fladd@bexp^0,f,c
  6256   002ADA                     l875:
  6257   002ADA  5012               	movf	___fladd@aexp^0,w,c
  6258   002ADC  5C13               	subwf	___fladd@bexp^0,w,c
  6259   002ADE  A0D8               	btfss	status,0,c
  6260   002AE0  EF74  F015         	goto	u2771
  6261   002AE4  EF76  F015         	goto	u2770
  6262   002AE8                     u2771:
  6263   002AE8  EF50  F015         	goto	l876
  6264   002AEC                     u2770:
  6265   002AEC                     l874:
  6266   002AEC  BC11               	btfsc	___fladd@signs^0,6,c
  6267   002AEE  EF7B  F015         	goto	u2781
  6268   002AF2  EF7D  F015         	goto	u2780
  6269   002AF6                     u2781:
  6270   002AF6  EFBD  F015         	goto	l3205
  6271   002AFA                     u2780:
  6272   002AFA  5013               	movf	___fladd@bexp^0,w,c
  6273   002AFC  A4D8               	btfss	status,2,c
  6274   002AFE  EF83  F015         	goto	u2791
  6275   002B02  EF85  F015         	goto	u2790
  6276   002B06                     u2791:
  6277   002B06  EF8F  F015         	goto	l3187
  6278   002B0A                     u2790:
  6279   002B0A  0E00               	movlw	0
  6280   002B0C  6E05               	movwf	?___fladd^0,c
  6281   002B0E  0E00               	movlw	0
  6282   002B10  6E06               	movwf	(?___fladd+1)^0,c
  6283   002B12  0E00               	movlw	0
  6284   002B14  6E07               	movwf	(?___fladd+2)^0,c
  6285   002B16  0E00               	movlw	0
  6286   002B18  6E08               	movwf	(?___fladd+3)^0,c
  6287   002B1A  EFDE  F016         	goto	l883
  6288   002B1E                     l3187:
  6289   002B1E  5009               	movf	___fladd@a^0,w,c
  6290   002B20  2605               	addwf	___fladd@b^0,f,c
  6291   002B22  500A               	movf	(___fladd@a+1)^0,w,c
  6292   002B24  2206               	addwfc	(___fladd@b+1)^0,f,c
  6293   002B26  500B               	movf	(___fladd@a+2)^0,w,c
  6294   002B28  2207               	addwfc	(___fladd@b+2)^0,f,c
  6295   002B2A  500C               	movf	(___fladd@a+3)^0,w,c
  6296   002B2C  2208               	addwfc	(___fladd@b+3)^0,f,c
  6297   002B2E  A008               	btfss	(___fladd@b+3)^0,0,c
  6298   002B30  EF9C  F015         	goto	u2801
  6299   002B34  EF9E  F015         	goto	u2800
  6300   002B38                     u2801:
  6301   002B38  EF4A  F016         	goto	l3241
  6302   002B3C                     u2800:
  6303   002B3C  A014               	btfss	___fladd@grs^0,0,c
  6304   002B3E  EFA3  F015         	goto	u2811
  6305   002B42  EFA5  F015         	goto	u2810
  6306   002B46                     u2811:
  6307   002B46  EFAB  F015         	goto	l3195
  6308   002B4A                     u2810:
  6309   002B4A  90D8               	bcf	status,0,c
  6310   002B4C  3014               	rrcf	___fladd@grs^0,w,c
  6311   002B4E  0901               	iorlw	1
  6312   002B50  6E14               	movwf	___fladd@grs^0,c
  6313   002B52  EFAD  F015         	goto	l3197
  6314   002B56                     l3195:
  6315   002B56  90D8               	bcf	status,0,c
  6316   002B58  3214               	rrcf	___fladd@grs^0,f,c
  6317   002B5A                     l3197:
  6318   002B5A  A005               	btfss	___fladd@b^0,0,c
  6319   002B5C  EFB2  F015         	goto	u2821
  6320   002B60  EFB4  F015         	goto	u2820
  6321   002B64                     u2821:
  6322   002B64  EFB5  F015         	goto	l3201
  6323   002B68                     u2820:
  6324   002B68  8E14               	bsf	___fladd@grs^0,7,c
  6325   002B6A                     l3201:
  6326   002B6A  3408               	rlcf	(___fladd@b+3)^0,w,c
  6327   002B6C  3208               	rrcf	(___fladd@b+3)^0,f,c
  6328   002B6E  3207               	rrcf	(___fladd@b+2)^0,f,c
  6329   002B70  3206               	rrcf	(___fladd@b+1)^0,f,c
  6330   002B72  3205               	rrcf	___fladd@b^0,f,c
  6331   002B74  2A13               	incf	___fladd@bexp^0,f,c
  6332   002B76  EF4A  F016         	goto	l3241
  6333   002B7A                     l3205:
  6334   002B7A  5009               	movf	___fladd@a^0,w,c
  6335   002B7C  5C05               	subwf	___fladd@b^0,w,c
  6336   002B7E  500A               	movf	(___fladd@a+1)^0,w,c
  6337   002B80  5806               	subwfb	(___fladd@b+1)^0,w,c
  6338   002B82  500B               	movf	(___fladd@a+2)^0,w,c
  6339   002B84  5807               	subwfb	(___fladd@b+2)^0,w,c
  6340   002B86  5008               	movf	(___fladd@b+3)^0,w,c
  6341   002B88  0A80               	xorlw	128
  6342   002B8A  6E0D               	movwf	??___fladd^0,c
  6343   002B8C  500C               	movf	(___fladd@a+3)^0,w,c
  6344   002B8E  0A80               	xorlw	128
  6345   002B90  580D               	subwfb	??___fladd^0,w,c
  6346   002B92  B0D8               	btfsc	status,0,c
  6347   002B94  EFCE  F015         	goto	u2831
  6348   002B98  EFD0  F015         	goto	u2830
  6349   002B9C                     u2831:
  6350   002B9C  EFFB  F015         	goto	l3215
  6351   002BA0                     u2830:
  6352   002BA0  5005               	movf	___fladd@b^0,w,c
  6353   002BA2  5C09               	subwf	___fladd@a^0,w,c
  6354   002BA4  6E0D               	movwf	??___fladd^0,c
  6355   002BA6  5006               	movf	(___fladd@b+1)^0,w,c
  6356   002BA8  580A               	subwfb	(___fladd@a+1)^0,w,c
  6357   002BAA  6E0E               	movwf	(??___fladd+1)^0,c
  6358   002BAC  5007               	movf	(___fladd@b+2)^0,w,c
  6359   002BAE  580B               	subwfb	(___fladd@a+2)^0,w,c
  6360   002BB0  6E0F               	movwf	(??___fladd+2)^0,c
  6361   002BB2  5008               	movf	(___fladd@b+3)^0,w,c
  6362   002BB4  580C               	subwfb	(___fladd@a+3)^0,w,c
  6363   002BB6  6E10               	movwf	(??___fladd+3)^0,c
  6364   002BB8  0EFF               	movlw	255
  6365   002BBA  240D               	addwf	??___fladd^0,w,c
  6366   002BBC  6E05               	movwf	___fladd@b^0,c
  6367   002BBE  0EFF               	movlw	255
  6368   002BC0  200E               	addwfc	(??___fladd+1)^0,w,c
  6369   002BC2  6E06               	movwf	(___fladd@b+1)^0,c
  6370   002BC4  0EFF               	movlw	255
  6371   002BC6  200F               	addwfc	(??___fladd+2)^0,w,c
  6372   002BC8  6E07               	movwf	(___fladd@b+2)^0,c
  6373   002BCA  0EFF               	movlw	255
  6374   002BCC  2010               	addwfc	(??___fladd+3)^0,w,c
  6375   002BCE  6E08               	movwf	(___fladd@b+3)^0,c
  6376   002BD0  0E80               	movlw	128
  6377   002BD2  1A11               	xorwf	___fladd@signs^0,f,c
  6378   002BD4  6C14               	negf	___fladd@grs^0,c
  6379   002BD6  5014               	movf	___fladd@grs^0,w,c
  6380   002BD8  A4D8               	btfss	status,2,c
  6381   002BDA  EFF1  F015         	goto	u2841
  6382   002BDE  EFF3  F015         	goto	u2840
  6383   002BE2                     u2841:
  6384   002BE2  EF03  F016         	goto	l891
  6385   002BE6                     u2840:
  6386   002BE6  0E01               	movlw	1
  6387   002BE8  2605               	addwf	___fladd@b^0,f,c
  6388   002BEA  0E00               	movlw	0
  6389   002BEC  2206               	addwfc	(___fladd@b+1)^0,f,c
  6390   002BEE  2207               	addwfc	(___fladd@b+2)^0,f,c
  6391   002BF0  2208               	addwfc	(___fladd@b+3)^0,f,c
  6392   002BF2  EF03  F016         	goto	l891
  6393   002BF6                     l3215:
  6394   002BF6  5009               	movf	___fladd@a^0,w,c
  6395   002BF8  5E05               	subwf	___fladd@b^0,f,c
  6396   002BFA  500A               	movf	(___fladd@a+1)^0,w,c
  6397   002BFC  5A06               	subwfb	(___fladd@b+1)^0,f,c
  6398   002BFE  500B               	movf	(___fladd@a+2)^0,w,c
  6399   002C00  5A07               	subwfb	(___fladd@b+2)^0,f,c
  6400   002C02  500C               	movf	(___fladd@a+3)^0,w,c
  6401   002C04  5A08               	subwfb	(___fladd@b+3)^0,f,c
  6402   002C06                     l891:
  6403   002C06  5005               	movf	___fladd@b^0,w,c
  6404   002C08  1006               	iorwf	(___fladd@b+1)^0,w,c
  6405   002C0A  1007               	iorwf	(___fladd@b+2)^0,w,c
  6406   002C0C  1008               	iorwf	(___fladd@b+3)^0,w,c
  6407   002C0E  A4D8               	btfss	status,2,c
  6408   002C10  EF0C  F016         	goto	u2851
  6409   002C14  EF0E  F016         	goto	u2850
  6410   002C18                     u2851:
  6411   002C18  EF43  F016         	goto	l3239
  6412   002C1C                     u2850:
  6413   002C1C  5014               	movf	___fladd@grs^0,w,c
  6414   002C1E  A4D8               	btfss	status,2,c
  6415   002C20  EF14  F016         	goto	u2861
  6416   002C24  EF16  F016         	goto	u2860
  6417   002C28                     u2861:
  6418   002C28  EF43  F016         	goto	l3239
  6419   002C2C                     u2860:
  6420   002C2C  0E00               	movlw	0
  6421   002C2E  6E05               	movwf	?___fladd^0,c
  6422   002C30  0E00               	movlw	0
  6423   002C32  6E06               	movwf	(?___fladd+1)^0,c
  6424   002C34  0E00               	movlw	0
  6425   002C36  6E07               	movwf	(?___fladd+2)^0,c
  6426   002C38  0E00               	movlw	0
  6427   002C3A  6E08               	movwf	(?___fladd+3)^0,c
  6428   002C3C  EFDE  F016         	goto	l883
  6429   002C40                     l3223:
  6430   002C40  90D8               	bcf	status,0,c
  6431   002C42  3605               	rlcf	___fladd@b^0,f,c
  6432   002C44  3606               	rlcf	(___fladd@b+1)^0,f,c
  6433   002C46  3607               	rlcf	(___fladd@b+2)^0,f,c
  6434   002C48  3608               	rlcf	(___fladd@b+3)^0,f,c
  6435   002C4A  AE14               	btfss	___fladd@grs^0,7,c
  6436   002C4C  EF2A  F016         	goto	u2871
  6437   002C50  EF2C  F016         	goto	u2870
  6438   002C54                     u2871:
  6439   002C54  EF2D  F016         	goto	l3229
  6440   002C58                     u2870:
  6441   002C58  8005               	bsf	___fladd@b^0,0,c
  6442   002C5A                     l3229:
  6443   002C5A  A014               	btfss	___fladd@grs^0,0,c
  6444   002C5C  EF32  F016         	goto	u2881
  6445   002C60  EF34  F016         	goto	u2880
  6446   002C64                     u2881:
  6447   002C64  EF38  F016         	goto	l3233
  6448   002C68                     u2880:
  6449   002C68  80D8               	bsf	status,0,c
  6450   002C6A  3614               	rlcf	___fladd@grs^0,f,c
  6451   002C6C  EF3A  F016         	goto	l3235
  6452   002C70                     l3233:
  6453   002C70  90D8               	bcf	status,0,c
  6454   002C72  3614               	rlcf	___fladd@grs^0,f,c
  6455   002C74                     l3235:
  6456   002C74  5013               	movf	___fladd@bexp^0,w,c
  6457   002C76  B4D8               	btfsc	status,2,c
  6458   002C78  EF40  F016         	goto	u2891
  6459   002C7C  EF42  F016         	goto	u2890
  6460   002C80                     u2891:
  6461   002C80  EF43  F016         	goto	l3239
  6462   002C84                     u2890:
  6463   002C84  0613               	decf	___fladd@bexp^0,f,c
  6464   002C86                     l3239:
  6465   002C86  AE07               	btfss	(___fladd@b+2)^0,7,c
  6466   002C88  EF48  F016         	goto	u2901
  6467   002C8C  EF4A  F016         	goto	u2900
  6468   002C90                     u2901:
  6469   002C90  EF20  F016         	goto	l3223
  6470   002C94                     u2900:
  6471   002C94                     l3241:
  6472   002C94  0E00               	movlw	0
  6473   002C96  6E12               	movwf	___fladd@aexp^0,c
  6474   002C98  AE14               	btfss	___fladd@grs^0,7,c
  6475   002C9A  EF51  F016         	goto	u2911
  6476   002C9E  EF53  F016         	goto	u2910
  6477   002CA2                     u2911:
  6478   002CA2  EF6B  F016         	goto	l900
  6479   002CA6                     u2910:
  6480   002CA6  C014  F00D         	movff	___fladd@grs,??___fladd
  6481   002CAA  0E7F               	movlw	127
  6482   002CAC  160D               	andwf	??___fladd^0,f,c
  6483   002CAE  B4D8               	btfsc	status,2,c
  6484   002CB0  EF5C  F016         	goto	u2921
  6485   002CB4  EF5E  F016         	goto	u2920
  6486   002CB8                     u2921:
  6487   002CB8  EF62  F016         	goto	l901
  6488   002CBC                     u2920:
  6489   002CBC                     l3247:
  6490   002CBC  0E01               	movlw	1
  6491   002CBE  6E12               	movwf	___fladd@aexp^0,c
  6492   002CC0  EF6B  F016         	goto	l900
  6493   002CC4                     l901:
  6494   002CC4  A005               	btfss	___fladd@b^0,0,c
  6495   002CC6  EF67  F016         	goto	u2931
  6496   002CCA  EF69  F016         	goto	u2930
  6497   002CCE                     u2931:
  6498   002CCE  EF6B  F016         	goto	l900
  6499   002CD2                     u2930:
  6500   002CD2  EF5E  F016         	goto	l3247
  6501   002CD6                     l900:
  6502   002CD6  5012               	movf	___fladd@aexp^0,w,c
  6503   002CD8  B4D8               	btfsc	status,2,c
  6504   002CDA  EF71  F016         	goto	u2941
  6505   002CDE  EF73  F016         	goto	u2940
  6506   002CE2                     u2941:
  6507   002CE2  EF9E  F016         	goto	l3259
  6508   002CE6                     u2940:
  6509   002CE6  0E01               	movlw	1
  6510   002CE8  2605               	addwf	___fladd@b^0,f,c
  6511   002CEA  0E00               	movlw	0
  6512   002CEC  2206               	addwfc	(___fladd@b+1)^0,f,c
  6513   002CEE  2207               	addwfc	(___fladd@b+2)^0,f,c
  6514   002CF0  2208               	addwfc	(___fladd@b+3)^0,f,c
  6515   002CF2  A008               	btfss	(___fladd@b+3)^0,0,c
  6516   002CF4  EF7E  F016         	goto	u2951
  6517   002CF8  EF80  F016         	goto	u2950
  6518   002CFC                     u2951:
  6519   002CFC  EF9E  F016         	goto	l3259
  6520   002D00                     u2950:
  6521   002D00  C005  F00D         	movff	___fladd@b,??___fladd
  6522   002D04  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  6523   002D08  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  6524   002D0C  C008  F010         	movff	___fladd@b+3,??___fladd+3
  6525   002D10  3410               	rlcf	(??___fladd+3)^0,w,c
  6526   002D12  3210               	rrcf	(??___fladd+3)^0,f,c
  6527   002D14  320F               	rrcf	(??___fladd+2)^0,f,c
  6528   002D16  320E               	rrcf	(??___fladd+1)^0,f,c
  6529   002D18  320D               	rrcf	??___fladd^0,f,c
  6530   002D1A  C00D  F005         	movff	??___fladd,___fladd@b
  6531   002D1E  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  6532   002D22  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  6533   002D26  C010  F008         	movff	??___fladd+3,___fladd@b+3
  6534   002D2A  2813               	incf	___fladd@bexp^0,w,c
  6535   002D2C  B4D8               	btfsc	status,2,c
  6536   002D2E  EF9B  F016         	goto	u2961
  6537   002D32  EF9D  F016         	goto	u2960
  6538   002D36                     u2961:
  6539   002D36  EF9E  F016         	goto	l3259
  6540   002D3A                     u2960:
  6541   002D3A  2A13               	incf	___fladd@bexp^0,f,c
  6542   002D3C                     l3259:
  6543   002D3C  2813               	incf	___fladd@bexp^0,w,c
  6544   002D3E  B4D8               	btfsc	status,2,c
  6545   002D40  EFA4  F016         	goto	u2971
  6546   002D44  EFA6  F016         	goto	u2970
  6547   002D48                     u2971:
  6548   002D48  EFAE  F016         	goto	l3263
  6549   002D4C                     u2970:
  6550   002D4C  5013               	movf	___fladd@bexp^0,w,c
  6551   002D4E  A4D8               	btfss	status,2,c
  6552   002D50  EFAC  F016         	goto	u2981
  6553   002D54  EFAE  F016         	goto	u2980
  6554   002D58                     u2981:
  6555   002D58  EFC0  F016         	goto	l3267
  6556   002D5C                     u2980:
  6557   002D5C                     l3263:
  6558   002D5C  0E00               	movlw	0
  6559   002D5E  6E05               	movwf	___fladd@b^0,c
  6560   002D60  0E00               	movlw	0
  6561   002D62  6E06               	movwf	(___fladd@b+1)^0,c
  6562   002D64  0E00               	movlw	0
  6563   002D66  6E07               	movwf	(___fladd@b+2)^0,c
  6564   002D68  0E00               	movlw	0
  6565   002D6A  6E08               	movwf	(___fladd@b+3)^0,c
  6566   002D6C  5013               	movf	___fladd@bexp^0,w,c
  6567   002D6E  A4D8               	btfss	status,2,c
  6568   002D70  EFBC  F016         	goto	u2991
  6569   002D74  EFBE  F016         	goto	u2990
  6570   002D78                     u2991:
  6571   002D78  EFC0  F016         	goto	l3267
  6572   002D7C                     u2990:
  6573   002D7C  0E00               	movlw	0
  6574   002D7E  6E11               	movwf	___fladd@signs^0,c
  6575   002D80                     l3267:
  6576   002D80  A013               	btfss	___fladd@bexp^0,0,c
  6577   002D82  EFC5  F016         	goto	u3001
  6578   002D86  EFC7  F016         	goto	u3000
  6579   002D8A                     u3001:
  6580   002D8A  EFCA  F016         	goto	l3271
  6581   002D8E                     u3000:
  6582   002D8E  8E07               	bsf	(___fladd@b+2)^0,7,c
  6583   002D90  EFCB  F016         	goto	l3273
  6584   002D94                     l3271:
  6585   002D94  9E07               	bcf	(___fladd@b+2)^0,7,c
  6586   002D96                     l3273:
  6587   002D96  90D8               	bcf	status,0,c
  6588   002D98  3013               	rrcf	___fladd@bexp^0,w,c
  6589   002D9A  6E08               	movwf	(___fladd@b+3)^0,c
  6590   002D9C  AE11               	btfss	___fladd@signs^0,7,c
  6591   002D9E  EFD3  F016         	goto	u3011
  6592   002DA2  EFD5  F016         	goto	u3010
  6593   002DA6                     u3011:
  6594   002DA6  EFD6  F016         	goto	l3279
  6595   002DAA                     u3010:
  6596   002DAA  8E08               	bsf	(___fladd@b+3)^0,7,c
  6597   002DAC                     l3279:
  6598   002DAC  C005  F005         	movff	___fladd@b,?___fladd
  6599   002DB0  C006  F006         	movff	___fladd@b+1,?___fladd+1
  6600   002DB4  C007  F007         	movff	___fladd@b+2,?___fladd+2
  6601   002DB8  C008  F008         	movff	___fladd@b+3,?___fladd+3
  6602   002DBC                     l883:
  6603   002DBC  0012               	return		;funcret
  6604   002DBE                     __end_of___fladd:
  6605                           	callstack 0
  6606                           
  6607 ;; *************** function ___flneg *****************
  6608 ;; Defined at:
  6609 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  6610 ;; Parameters:    Size  Location     Type
  6611 ;;  f1              4    4[COMRAM] unsigned char 
  6612 ;; Auto vars:     Size  Location     Type
  6613 ;;		None
  6614 ;; Return value:  Size  Location     Type
  6615 ;;                  4    4[COMRAM] unsigned char 
  6616 ;; Registers used:
  6617 ;;		wreg, status,2, status,0
  6618 ;; Tracked objects:
  6619 ;;		On entry : 0/0
  6620 ;;		On exit  : 0/0
  6621 ;;		Unchanged: 0/0
  6622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6623 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6626 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6627 ;;Total ram usage:        4 bytes
  6628 ;; Hardware stack levels used: 1
  6629 ;; Hardware stack levels required when called: 2
  6630 ;; This function calls:
  6631 ;;		Nothing
  6632 ;; This function is called by:
  6633 ;;		_efgtoa
  6634 ;; This function uses a non-reentrant model
  6635 ;;
  6636                           
  6637                           	psect	text13
  6638   004BDC                     __ptext13:
  6639                           	callstack 0
  6640   004BDC                     ___flneg:
  6641                           	callstack 24
  6642   004BDC  5005               	movf	___flneg@f1^0,w,c
  6643   004BDE  1006               	iorwf	(___flneg@f1+1)^0,w,c
  6644   004BE0  1007               	iorwf	(___flneg@f1+2)^0,w,c
  6645   004BE2  1008               	iorwf	(___flneg@f1+3)^0,w,c
  6646   004BE4  B4D8               	btfsc	status,2,c
  6647   004BE6  EFF7  F025         	goto	u3661
  6648   004BEA  EFF9  F025         	goto	u3660
  6649   004BEE                     u3661:
  6650   004BEE  EF01  F026         	goto	l3687
  6651   004BF2                     u3660:
  6652   004BF2  0E00               	movlw	0
  6653   004BF4  1A05               	xorwf	___flneg@f1^0,f,c
  6654   004BF6  0E00               	movlw	0
  6655   004BF8  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  6656   004BFA  0E00               	movlw	0
  6657   004BFC  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  6658   004BFE  0E80               	movlw	128
  6659   004C00  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  6660   004C02                     l3687:
  6661   004C02  C005  F005         	movff	___flneg@f1,?___flneg
  6662   004C06  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  6663   004C0A  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  6664   004C0E  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  6665   004C12  0012               	return		;funcret
  6666   004C14                     __end_of___flneg:
  6667                           	callstack 0
  6668                           
  6669 ;; *************** function ___flmul *****************
  6670 ;; Defined at:
  6671 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;  b               4   28[COMRAM] unsigned char 
  6674 ;;  a               4   32[COMRAM] unsigned char 
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;  prod            4   47[COMRAM] struct .
  6677 ;;  grs             4   41[COMRAM] unsigned long 
  6678 ;;  temp            2   51[COMRAM] struct .
  6679 ;;  bexp            1   46[COMRAM] unsigned char 
  6680 ;;  aexp            1   45[COMRAM] unsigned char 
  6681 ;;  sign            1   40[COMRAM] unsigned char 
  6682 ;; Return value:  Size  Location     Type
  6683 ;;                  4   28[COMRAM] unsigned char 
  6684 ;; Registers used:
  6685 ;;		wreg, status,2, status,0, prodl, prodh
  6686 ;; Tracked objects:
  6687 ;;		On entry : 0/0
  6688 ;;		On exit  : 0/0
  6689 ;;		Unchanged: 0/0
  6690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6691 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6692 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6693 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6694 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6695 ;;Total ram usage:       25 bytes
  6696 ;; Hardware stack levels used: 1
  6697 ;; Hardware stack levels required when called: 2
  6698 ;; This function calls:
  6699 ;;		Nothing
  6700 ;; This function is called by:
  6701 ;;		_main
  6702 ;;		_efgtoa
  6703 ;; This function uses a non-reentrant model
  6704 ;;
  6705                           
  6706                           	psect	text14
  6707   002DBE                     __ptext14:
  6708                           	callstack 0
  6709   002DBE                     ___flmul:
  6710                           	callstack 24
  6711   002DBE  5020               	movf	(___flmul@b+3)^0,w,c
  6712   002DC0  0B80               	andlw	128
  6713   002DC2  6E29               	movwf	___flmul@sign^0,c
  6714   002DC4  5020               	movf	(___flmul@b+3)^0,w,c
  6715   002DC6  2420               	addwf	(___flmul@b+3)^0,w,c
  6716   002DC8  6E2F               	movwf	___flmul@bexp^0,c
  6717   002DCA  AE1F               	btfss	(___flmul@b+2)^0,7,c
  6718   002DCC  EFEA  F016         	goto	u3391
  6719   002DD0  EFEC  F016         	goto	u3390
  6720   002DD4                     u3391:
  6721   002DD4  EFED  F016         	goto	l3515
  6722   002DD8                     u3390:
  6723   002DD8  802F               	bsf	___flmul@bexp^0,0,c
  6724   002DDA                     l3515:
  6725   002DDA  502F               	movf	___flmul@bexp^0,w,c
  6726   002DDC  B4D8               	btfsc	status,2,c
  6727   002DDE  EFF3  F016         	goto	u3401
  6728   002DE2  EFF5  F016         	goto	u3400
  6729   002DE6                     u3401:
  6730   002DE6  EF08  F017         	goto	l3523
  6731   002DEA                     u3400:
  6732   002DEA  282F               	incf	___flmul@bexp^0,w,c
  6733   002DEC  A4D8               	btfss	status,2,c
  6734   002DEE  EFFB  F016         	goto	u3411
  6735   002DF2  EFFD  F016         	goto	u3410
  6736   002DF6                     u3411:
  6737   002DF6  EF05  F017         	goto	l3521
  6738   002DFA                     u3410:
  6739   002DFA  0E00               	movlw	0
  6740   002DFC  6E1D               	movwf	___flmul@b^0,c
  6741   002DFE  0E00               	movlw	0
  6742   002E00  6E1E               	movwf	(___flmul@b+1)^0,c
  6743   002E02  0E00               	movlw	0
  6744   002E04  6E1F               	movwf	(___flmul@b+2)^0,c
  6745   002E06  0E00               	movlw	0
  6746   002E08  6E20               	movwf	(___flmul@b+3)^0,c
  6747   002E0A                     l3521:
  6748   002E0A  8E1F               	bsf	(___flmul@b+2)^0,7,c
  6749   002E0C  EF10  F017         	goto	l3525
  6750   002E10                     l3523:
  6751   002E10  0E00               	movlw	0
  6752   002E12  6E1D               	movwf	___flmul@b^0,c
  6753   002E14  0E00               	movlw	0
  6754   002E16  6E1E               	movwf	(___flmul@b+1)^0,c
  6755   002E18  0E00               	movlw	0
  6756   002E1A  6E1F               	movwf	(___flmul@b+2)^0,c
  6757   002E1C  0E00               	movlw	0
  6758   002E1E  6E20               	movwf	(___flmul@b+3)^0,c
  6759   002E20                     l3525:
  6760   002E20  5024               	movf	(___flmul@a+3)^0,w,c
  6761   002E22  0B80               	andlw	128
  6762   002E24  1A29               	xorwf	___flmul@sign^0,f,c
  6763   002E26  5024               	movf	(___flmul@a+3)^0,w,c
  6764   002E28  2424               	addwf	(___flmul@a+3)^0,w,c
  6765   002E2A  6E2E               	movwf	___flmul@aexp^0,c
  6766   002E2C  AE23               	btfss	(___flmul@a+2)^0,7,c
  6767   002E2E  EF1B  F017         	goto	u3421
  6768   002E32  EF1D  F017         	goto	u3420
  6769   002E36                     u3421:
  6770   002E36  EF1E  F017         	goto	l3533
  6771   002E3A                     u3420:
  6772   002E3A  802E               	bsf	___flmul@aexp^0,0,c
  6773   002E3C                     l3533:
  6774   002E3C  502E               	movf	___flmul@aexp^0,w,c
  6775   002E3E  B4D8               	btfsc	status,2,c
  6776   002E40  EF24  F017         	goto	u3431
  6777   002E44  EF26  F017         	goto	u3430
  6778   002E48                     u3431:
  6779   002E48  EF39  F017         	goto	l3541
  6780   002E4C                     u3430:
  6781   002E4C  282E               	incf	___flmul@aexp^0,w,c
  6782   002E4E  A4D8               	btfss	status,2,c
  6783   002E50  EF2C  F017         	goto	u3441
  6784   002E54  EF2E  F017         	goto	u3440
  6785   002E58                     u3441:
  6786   002E58  EF36  F017         	goto	l3539
  6787   002E5C                     u3440:
  6788   002E5C  0E00               	movlw	0
  6789   002E5E  6E21               	movwf	___flmul@a^0,c
  6790   002E60  0E00               	movlw	0
  6791   002E62  6E22               	movwf	(___flmul@a+1)^0,c
  6792   002E64  0E00               	movlw	0
  6793   002E66  6E23               	movwf	(___flmul@a+2)^0,c
  6794   002E68  0E00               	movlw	0
  6795   002E6A  6E24               	movwf	(___flmul@a+3)^0,c
  6796   002E6C                     l3539:
  6797   002E6C  8E23               	bsf	(___flmul@a+2)^0,7,c
  6798   002E6E  EF41  F017         	goto	l960
  6799   002E72                     l3541:
  6800   002E72  0E00               	movlw	0
  6801   002E74  6E21               	movwf	___flmul@a^0,c
  6802   002E76  0E00               	movlw	0
  6803   002E78  6E22               	movwf	(___flmul@a+1)^0,c
  6804   002E7A  0E00               	movlw	0
  6805   002E7C  6E23               	movwf	(___flmul@a+2)^0,c
  6806   002E7E  0E00               	movlw	0
  6807   002E80  6E24               	movwf	(___flmul@a+3)^0,c
  6808   002E82                     l960:
  6809   002E82  502E               	movf	___flmul@aexp^0,w,c
  6810   002E84  B4D8               	btfsc	status,2,c
  6811   002E86  EF47  F017         	goto	u3451
  6812   002E8A  EF49  F017         	goto	u3450
  6813   002E8E                     u3451:
  6814   002E8E  EF51  F017         	goto	l3545
  6815   002E92                     u3450:
  6816   002E92  502F               	movf	___flmul@bexp^0,w,c
  6817   002E94  A4D8               	btfss	status,2,c
  6818   002E96  EF4F  F017         	goto	u3461
  6819   002E9A  EF51  F017         	goto	u3460
  6820   002E9E                     u3461:
  6821   002E9E  EF5B  F017         	goto	l3549
  6822   002EA2                     u3460:
  6823   002EA2                     l3545:
  6824   002EA2  0E00               	movlw	0
  6825   002EA4  6E1D               	movwf	?___flmul^0,c
  6826   002EA6  0E00               	movlw	0
  6827   002EA8  6E1E               	movwf	(?___flmul+1)^0,c
  6828   002EAA  0E00               	movlw	0
  6829   002EAC  6E1F               	movwf	(?___flmul+2)^0,c
  6830   002EAE  0E00               	movlw	0
  6831   002EB0  6E20               	movwf	(?___flmul+3)^0,c
  6832   002EB2  EFF3  F018         	goto	l964
  6833   002EB6                     l3549:
  6834   002EB6  5023               	movf	(___flmul@a+2)^0,w,c
  6835   002EB8  021D               	mulwf	___flmul@b^0,c
  6836   002EBA  CFF3 F034          	movff	prodl,___flmul@temp
  6837   002EBE  CFF4 F035          	movff	prodh,___flmul@temp+1
  6838   002EC2  5034               	movf	___flmul@temp^0,w,c
  6839   002EC4  6E2A               	movwf	___flmul@grs^0,c
  6840   002EC6  6A2B               	clrf	(___flmul@grs+1)^0,c
  6841   002EC8  6A2C               	clrf	(___flmul@grs+2)^0,c
  6842   002ECA  6A2D               	clrf	(___flmul@grs+3)^0,c
  6843   002ECC  5035               	movf	(___flmul@temp+1)^0,w,c
  6844   002ECE  6E30               	movwf	___flmul@prod^0,c
  6845   002ED0  6A31               	clrf	(___flmul@prod+1)^0,c
  6846   002ED2  6A32               	clrf	(___flmul@prod+2)^0,c
  6847   002ED4  6A33               	clrf	(___flmul@prod+3)^0,c
  6848   002ED6  5022               	movf	(___flmul@a+1)^0,w,c
  6849   002ED8  021E               	mulwf	(___flmul@b+1)^0,c
  6850   002EDA  CFF3 F034          	movff	prodl,___flmul@temp
  6851   002EDE  CFF4 F035          	movff	prodh,___flmul@temp+1
  6852   002EE2  5034               	movf	___flmul@temp^0,w,c
  6853   002EE4  262A               	addwf	___flmul@grs^0,f,c
  6854   002EE6  0E00               	movlw	0
  6855   002EE8  222B               	addwfc	(___flmul@grs+1)^0,f,c
  6856   002EEA  222C               	addwfc	(___flmul@grs+2)^0,f,c
  6857   002EEC  222D               	addwfc	(___flmul@grs+3)^0,f,c
  6858   002EEE  5035               	movf	(___flmul@temp+1)^0,w,c
  6859   002EF0  2630               	addwf	___flmul@prod^0,f,c
  6860   002EF2  0E00               	movlw	0
  6861   002EF4  2231               	addwfc	(___flmul@prod+1)^0,f,c
  6862   002EF6  2232               	addwfc	(___flmul@prod+2)^0,f,c
  6863   002EF8  2233               	addwfc	(___flmul@prod+3)^0,f,c
  6864   002EFA  5021               	movf	___flmul@a^0,w,c
  6865   002EFC  021F               	mulwf	(___flmul@b+2)^0,c
  6866   002EFE  CFF3 F034          	movff	prodl,___flmul@temp
  6867   002F02  CFF4 F035          	movff	prodh,___flmul@temp+1
  6868   002F06  5034               	movf	___flmul@temp^0,w,c
  6869   002F08  262A               	addwf	___flmul@grs^0,f,c
  6870   002F0A  0E00               	movlw	0
  6871   002F0C  222B               	addwfc	(___flmul@grs+1)^0,f,c
  6872   002F0E  222C               	addwfc	(___flmul@grs+2)^0,f,c
  6873   002F10  222D               	addwfc	(___flmul@grs+3)^0,f,c
  6874   002F12  5035               	movf	(___flmul@temp+1)^0,w,c
  6875   002F14  2630               	addwf	___flmul@prod^0,f,c
  6876   002F16  0E00               	movlw	0
  6877   002F18  2231               	addwfc	(___flmul@prod+1)^0,f,c
  6878   002F1A  2232               	addwfc	(___flmul@prod+2)^0,f,c
  6879   002F1C  2233               	addwfc	(___flmul@prod+3)^0,f,c
  6880   002F1E  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  6881   002F22  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  6882   002F26  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  6883   002F2A  6A2A               	clrf	___flmul@grs^0,c
  6884   002F2C  5021               	movf	___flmul@a^0,w,c
  6885   002F2E  021E               	mulwf	(___flmul@b+1)^0,c
  6886   002F30  CFF3 F034          	movff	prodl,___flmul@temp
  6887   002F34  CFF4 F035          	movff	prodh,___flmul@temp+1
  6888   002F38  5034               	movf	___flmul@temp^0,w,c
  6889   002F3A  262A               	addwf	___flmul@grs^0,f,c
  6890   002F3C  5035               	movf	(___flmul@temp+1)^0,w,c
  6891   002F3E  222B               	addwfc	(___flmul@grs+1)^0,f,c
  6892   002F40  0E00               	movlw	0
  6893   002F42  222C               	addwfc	(___flmul@grs+2)^0,f,c
  6894   002F44  0E00               	movlw	0
  6895   002F46  222D               	addwfc	(___flmul@grs+3)^0,f,c
  6896   002F48  5022               	movf	(___flmul@a+1)^0,w,c
  6897   002F4A  021D               	mulwf	___flmul@b^0,c
  6898   002F4C  CFF3 F034          	movff	prodl,___flmul@temp
  6899   002F50  CFF4 F035          	movff	prodh,___flmul@temp+1
  6900   002F54  5034               	movf	___flmul@temp^0,w,c
  6901   002F56  262A               	addwf	___flmul@grs^0,f,c
  6902   002F58  5035               	movf	(___flmul@temp+1)^0,w,c
  6903   002F5A  222B               	addwfc	(___flmul@grs+1)^0,f,c
  6904   002F5C  0E00               	movlw	0
  6905   002F5E  222C               	addwfc	(___flmul@grs+2)^0,f,c
  6906   002F60  0E00               	movlw	0
  6907   002F62  222D               	addwfc	(___flmul@grs+3)^0,f,c
  6908   002F64  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  6909   002F68  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  6910   002F6C  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  6911   002F70  6A2A               	clrf	___flmul@grs^0,c
  6912   002F72  5021               	movf	___flmul@a^0,w,c
  6913   002F74  021D               	mulwf	___flmul@b^0,c
  6914   002F76  CFF3 F034          	movff	prodl,___flmul@temp
  6915   002F7A  CFF4 F035          	movff	prodh,___flmul@temp+1
  6916   002F7E  5034               	movf	___flmul@temp^0,w,c
  6917   002F80  262A               	addwf	___flmul@grs^0,f,c
  6918   002F82  5035               	movf	(___flmul@temp+1)^0,w,c
  6919   002F84  222B               	addwfc	(___flmul@grs+1)^0,f,c
  6920   002F86  0E00               	movlw	0
  6921   002F88  222C               	addwfc	(___flmul@grs+2)^0,f,c
  6922   002F8A  0E00               	movlw	0
  6923   002F8C  222D               	addwfc	(___flmul@grs+3)^0,f,c
  6924   002F8E  5023               	movf	(___flmul@a+2)^0,w,c
  6925   002F90  021E               	mulwf	(___flmul@b+1)^0,c
  6926   002F92  CFF3 F034          	movff	prodl,___flmul@temp
  6927   002F96  CFF4 F035          	movff	prodh,___flmul@temp+1
  6928   002F9A  5034               	movf	___flmul@temp^0,w,c
  6929   002F9C  2630               	addwf	___flmul@prod^0,f,c
  6930   002F9E  5035               	movf	(___flmul@temp+1)^0,w,c
  6931   002FA0  2231               	addwfc	(___flmul@prod+1)^0,f,c
  6932   002FA2  0E00               	movlw	0
  6933   002FA4  2232               	addwfc	(___flmul@prod+2)^0,f,c
  6934   002FA6  0E00               	movlw	0
  6935   002FA8  2233               	addwfc	(___flmul@prod+3)^0,f,c
  6936   002FAA  5022               	movf	(___flmul@a+1)^0,w,c
  6937   002FAC  021F               	mulwf	(___flmul@b+2)^0,c
  6938   002FAE  CFF3 F034          	movff	prodl,___flmul@temp
  6939   002FB2  CFF4 F035          	movff	prodh,___flmul@temp+1
  6940   002FB6  5034               	movf	___flmul@temp^0,w,c
  6941   002FB8  2630               	addwf	___flmul@prod^0,f,c
  6942   002FBA  5035               	movf	(___flmul@temp+1)^0,w,c
  6943   002FBC  2231               	addwfc	(___flmul@prod+1)^0,f,c
  6944   002FBE  0E00               	movlw	0
  6945   002FC0  2232               	addwfc	(___flmul@prod+2)^0,f,c
  6946   002FC2  0E00               	movlw	0
  6947   002FC4  2233               	addwfc	(___flmul@prod+3)^0,f,c
  6948   002FC6  5023               	movf	(___flmul@a+2)^0,w,c
  6949   002FC8  021F               	mulwf	(___flmul@b+2)^0,c
  6950   002FCA  CFF3 F034          	movff	prodl,___flmul@temp
  6951   002FCE  CFF4 F035          	movff	prodh,___flmul@temp+1
  6952   002FD2  5034               	movf	___flmul@temp^0,w,c
  6953   002FD4  6E25               	movwf	??___flmul^0,c
  6954   002FD6  5035               	movf	(___flmul@temp+1)^0,w,c
  6955   002FD8  6E26               	movwf	(??___flmul+1)^0,c
  6956   002FDA  6A27               	clrf	(??___flmul+2)^0,c
  6957   002FDC  6A28               	clrf	(??___flmul+3)^0,c
  6958   002FDE  C027  F028         	movff	??___flmul+2,??___flmul+3
  6959   002FE2  C026  F027         	movff	??___flmul+1,??___flmul+2
  6960   002FE6  C025  F026         	movff	??___flmul,??___flmul+1
  6961   002FEA  6A25               	clrf	??___flmul^0,c
  6962   002FEC  5025               	movf	??___flmul^0,w,c
  6963   002FEE  2630               	addwf	___flmul@prod^0,f,c
  6964   002FF0  5026               	movf	(??___flmul+1)^0,w,c
  6965   002FF2  2231               	addwfc	(___flmul@prod+1)^0,f,c
  6966   002FF4  5027               	movf	(??___flmul+2)^0,w,c
  6967   002FF6  2232               	addwfc	(___flmul@prod+2)^0,f,c
  6968   002FF8  5028               	movf	(??___flmul+3)^0,w,c
  6969   002FFA  2233               	addwfc	(___flmul@prod+3)^0,f,c
  6970   002FFC  C02A  F025         	movff	___flmul@grs,??___flmul
  6971   003000  C02B  F026         	movff	___flmul@grs+1,??___flmul+1
  6972   003004  C02C  F027         	movff	___flmul@grs+2,??___flmul+2
  6973   003008  C02D  F028         	movff	___flmul@grs+3,??___flmul+3
  6974   00300C  0E19               	movlw	25
  6975   00300E  EF0E  F018         	goto	u3470
  6976   003012                     u3475:
  6977   003012  90D8               	bcf	status,0,c
  6978   003014  3228               	rrcf	(??___flmul+3)^0,f,c
  6979   003016  3227               	rrcf	(??___flmul+2)^0,f,c
  6980   003018  3226               	rrcf	(??___flmul+1)^0,f,c
  6981   00301A  3225               	rrcf	??___flmul^0,f,c
  6982   00301C                     u3470:
  6983   00301C  2EE8               	decfsz	wreg,f,c
  6984   00301E  EF09  F018         	goto	u3475
  6985   003022  5025               	movf	??___flmul^0,w,c
  6986   003024  2630               	addwf	___flmul@prod^0,f,c
  6987   003026  5026               	movf	(??___flmul+1)^0,w,c
  6988   003028  2231               	addwfc	(___flmul@prod+1)^0,f,c
  6989   00302A  5027               	movf	(??___flmul+2)^0,w,c
  6990   00302C  2232               	addwfc	(___flmul@prod+2)^0,f,c
  6991   00302E  5028               	movf	(??___flmul+3)^0,w,c
  6992   003030  2233               	addwfc	(___flmul@prod+3)^0,f,c
  6993   003032  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  6994   003036  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  6995   00303A  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  6996   00303E  6A2A               	clrf	___flmul@grs^0,c
  6997   003040  502E               	movf	___flmul@aexp^0,w,c
  6998   003042  C02F  F025         	movff	___flmul@bexp,??___flmul
  6999   003046  6A26               	clrf	(??___flmul+1)^0,c
  7000   003048  2625               	addwf	??___flmul^0,f,c
  7001   00304A  0E00               	movlw	0
  7002   00304C  2226               	addwfc	(??___flmul+1)^0,f,c
  7003   00304E  0E82               	movlw	130
  7004   003050  2425               	addwf	??___flmul^0,w,c
  7005   003052  6E34               	movwf	___flmul@temp^0,c
  7006   003054  0EFF               	movlw	255
  7007   003056  2026               	addwfc	(??___flmul+1)^0,w,c
  7008   003058  6E35               	movwf	(___flmul@temp+1)^0,c
  7009   00305A  EF44  F018         	goto	l3597
  7010   00305E                     l3591:
  7011   00305E  90D8               	bcf	status,0,c
  7012   003060  3630               	rlcf	___flmul@prod^0,f,c
  7013   003062  3631               	rlcf	(___flmul@prod+1)^0,f,c
  7014   003064  3632               	rlcf	(___flmul@prod+2)^0,f,c
  7015   003066  3633               	rlcf	(___flmul@prod+3)^0,f,c
  7016   003068  AE2D               	btfss	(___flmul@grs+3)^0,7,c
  7017   00306A  EF39  F018         	goto	u3481
  7018   00306E  EF3B  F018         	goto	u3480
  7019   003072                     u3481:
  7020   003072  EF3C  F018         	goto	l967
  7021   003076                     u3480:
  7022   003076  8030               	bsf	___flmul@prod^0,0,c
  7023   003078                     l967:
  7024   003078  90D8               	bcf	status,0,c
  7025   00307A  362A               	rlcf	___flmul@grs^0,f,c
  7026   00307C  362B               	rlcf	(___flmul@grs+1)^0,f,c
  7027   00307E  362C               	rlcf	(___flmul@grs+2)^0,f,c
  7028   003080  362D               	rlcf	(___flmul@grs+3)^0,f,c
  7029   003082  0634               	decf	___flmul@temp^0,f,c
  7030   003084  A0D8               	btfss	status,0,c
  7031   003086  0635               	decf	(___flmul@temp+1)^0,f,c
  7032   003088                     l3597:
  7033   003088  AE32               	btfss	(___flmul@prod+2)^0,7,c
  7034   00308A  EF49  F018         	goto	u3491
  7035   00308E  EF4B  F018         	goto	u3490
  7036   003092                     u3491:
  7037   003092  EF2F  F018         	goto	l3591
  7038   003096                     u3490:
  7039   003096  0E00               	movlw	0
  7040   003098  6E2E               	movwf	___flmul@aexp^0,c
  7041   00309A  AE2D               	btfss	(___flmul@grs+3)^0,7,c
  7042   00309C  EF52  F018         	goto	u3501
  7043   0030A0  EF54  F018         	goto	u3500
  7044   0030A4                     u3501:
  7045   0030A4  EF78  F018         	goto	l969
  7046   0030A8                     u3500:
  7047   0030A8  0EFF               	movlw	255
  7048   0030AA  142A               	andwf	___flmul@grs^0,w,c
  7049   0030AC  6E25               	movwf	??___flmul^0,c
  7050   0030AE  0EFF               	movlw	255
  7051   0030B0  142B               	andwf	(___flmul@grs+1)^0,w,c
  7052   0030B2  6E26               	movwf	(??___flmul+1)^0,c
  7053   0030B4  0EFF               	movlw	255
  7054   0030B6  142C               	andwf	(___flmul@grs+2)^0,w,c
  7055   0030B8  6E27               	movwf	(??___flmul+2)^0,c
  7056   0030BA  0E7F               	movlw	127
  7057   0030BC  142D               	andwf	(___flmul@grs+3)^0,w,c
  7058   0030BE  6E28               	movwf	(??___flmul+3)^0,c
  7059   0030C0  5025               	movf	??___flmul^0,w,c
  7060   0030C2  1026               	iorwf	(??___flmul+1)^0,w,c
  7061   0030C4  1027               	iorwf	(??___flmul+2)^0,w,c
  7062   0030C6  1028               	iorwf	(??___flmul+3)^0,w,c
  7063   0030C8  B4D8               	btfsc	status,2,c
  7064   0030CA  EF69  F018         	goto	u3511
  7065   0030CE  EF6B  F018         	goto	u3510
  7066   0030D2                     u3511:
  7067   0030D2  EF6F  F018         	goto	l970
  7068   0030D6                     u3510:
  7069   0030D6                     l3605:
  7070   0030D6  0E01               	movlw	1
  7071   0030D8  6E2E               	movwf	___flmul@aexp^0,c
  7072   0030DA  EF78  F018         	goto	l969
  7073   0030DE                     l970:
  7074   0030DE  A030               	btfss	___flmul@prod^0,0,c
  7075   0030E0  EF74  F018         	goto	u3521
  7076   0030E4  EF76  F018         	goto	u3520
  7077   0030E8                     u3521:
  7078   0030E8  EF78  F018         	goto	l969
  7079   0030EC                     u3520:
  7080   0030EC  EF6B  F018         	goto	l3605
  7081   0030F0                     l969:
  7082   0030F0  502E               	movf	___flmul@aexp^0,w,c
  7083   0030F2  B4D8               	btfsc	status,2,c
  7084   0030F4  EF7E  F018         	goto	u3531
  7085   0030F8  EF80  F018         	goto	u3530
  7086   0030FC                     u3531:
  7087   0030FC  EFA4  F018         	goto	l3617
  7088   003100                     u3530:
  7089   003100  0E01               	movlw	1
  7090   003102  2630               	addwf	___flmul@prod^0,f,c
  7091   003104  0E00               	movlw	0
  7092   003106  2231               	addwfc	(___flmul@prod+1)^0,f,c
  7093   003108  2232               	addwfc	(___flmul@prod+2)^0,f,c
  7094   00310A  2233               	addwfc	(___flmul@prod+3)^0,f,c
  7095   00310C  A033               	btfss	(___flmul@prod+3)^0,0,c
  7096   00310E  EF8B  F018         	goto	u3541
  7097   003112  EF8D  F018         	goto	u3540
  7098   003116                     u3541:
  7099   003116  EFA4  F018         	goto	l3617
  7100   00311A                     u3540:
  7101   00311A  C030  F025         	movff	___flmul@prod,??___flmul
  7102   00311E  C031  F026         	movff	___flmul@prod+1,??___flmul+1
  7103   003122  C032  F027         	movff	___flmul@prod+2,??___flmul+2
  7104   003126  C033  F028         	movff	___flmul@prod+3,??___flmul+3
  7105   00312A  3428               	rlcf	(??___flmul+3)^0,w,c
  7106   00312C  3228               	rrcf	(??___flmul+3)^0,f,c
  7107   00312E  3227               	rrcf	(??___flmul+2)^0,f,c
  7108   003130  3226               	rrcf	(??___flmul+1)^0,f,c
  7109   003132  3225               	rrcf	??___flmul^0,f,c
  7110   003134  C025  F030         	movff	??___flmul,___flmul@prod
  7111   003138  C026  F031         	movff	??___flmul+1,___flmul@prod+1
  7112   00313C  C027  F032         	movff	??___flmul+2,___flmul@prod+2
  7113   003140  C028  F033         	movff	??___flmul+3,___flmul@prod+3
  7114   003144  4A34               	infsnz	___flmul@temp^0,f,c
  7115   003146  2A35               	incf	(___flmul@temp+1)^0,f,c
  7116   003148                     l3617:
  7117   003148  BE35               	btfsc	(___flmul@temp+1)^0,7,c
  7118   00314A  EFAF  F018         	goto	u3551
  7119   00314E  5035               	movf	(___flmul@temp+1)^0,w,c
  7120   003150  E108               	bnz	u3550
  7121   003152  2834               	incf	___flmul@temp^0,w,c
  7122   003154  A0D8               	btfss	status,0,c
  7123   003156  EFAF  F018         	goto	u3551
  7124   00315A  EFB1  F018         	goto	u3550
  7125   00315E                     u3551:
  7126   00315E  EFBB  F018         	goto	l3621
  7127   003162                     u3550:
  7128   003162  0E00               	movlw	0
  7129   003164  6E30               	movwf	___flmul@prod^0,c
  7130   003166  0E00               	movlw	0
  7131   003168  6E31               	movwf	(___flmul@prod+1)^0,c
  7132   00316A  0E80               	movlw	128
  7133   00316C  6E32               	movwf	(___flmul@prod+2)^0,c
  7134   00316E  0E7F               	movlw	127
  7135   003170  6E33               	movwf	(___flmul@prod+3)^0,c
  7136   003172  EFE9  F018         	goto	l3633
  7137   003176                     l3621:
  7138   003176  BE35               	btfsc	(___flmul@temp+1)^0,7,c
  7139   003178  EFC8  F018         	goto	u3560
  7140   00317C  5035               	movf	(___flmul@temp+1)^0,w,c
  7141   00317E  E106               	bnz	u3561
  7142   003180  0434               	decf	___flmul@temp^0,w,c
  7143   003182  B0D8               	btfsc	status,0,c
  7144   003184  EFC6  F018         	goto	u3561
  7145   003188  EFC8  F018         	goto	u3560
  7146   00318C                     u3561:
  7147   00318C  EFD4  F018         	goto	l977
  7148   003190                     u3560:
  7149   003190  0E00               	movlw	0
  7150   003192  6E30               	movwf	___flmul@prod^0,c
  7151   003194  0E00               	movlw	0
  7152   003196  6E31               	movwf	(___flmul@prod+1)^0,c
  7153   003198  0E00               	movlw	0
  7154   00319A  6E32               	movwf	(___flmul@prod+2)^0,c
  7155   00319C  0E00               	movlw	0
  7156   00319E  6E33               	movwf	(___flmul@prod+3)^0,c
  7157   0031A0  0E00               	movlw	0
  7158   0031A2  6E29               	movwf	___flmul@sign^0,c
  7159   0031A4  EFE9  F018         	goto	l3633
  7160   0031A8                     l977:
  7161   0031A8  C034  F02F         	movff	___flmul@temp,___flmul@bexp
  7162   0031AC  0EFF               	movlw	255
  7163   0031AE  1630               	andwf	___flmul@prod^0,f,c
  7164   0031B0  0EFF               	movlw	255
  7165   0031B2  1631               	andwf	(___flmul@prod+1)^0,f,c
  7166   0031B4  0E7F               	movlw	127
  7167   0031B6  1632               	andwf	(___flmul@prod+2)^0,f,c
  7168   0031B8  0E00               	movlw	0
  7169   0031BA  1633               	andwf	(___flmul@prod+3)^0,f,c
  7170   0031BC  A02F               	btfss	___flmul@bexp^0,0,c
  7171   0031BE  EFE3  F018         	goto	u3571
  7172   0031C2  EFE5  F018         	goto	u3570
  7173   0031C6                     u3571:
  7174   0031C6  EFE6  F018         	goto	l3631
  7175   0031CA                     u3570:
  7176   0031CA  8E32               	bsf	(___flmul@prod+2)^0,7,c
  7177   0031CC                     l3631:
  7178   0031CC  90D8               	bcf	status,0,c
  7179   0031CE  302F               	rrcf	___flmul@bexp^0,w,c
  7180   0031D0  6E33               	movwf	(___flmul@prod+3)^0,c
  7181   0031D2                     l3633:
  7182   0031D2  5029               	movf	___flmul@sign^0,w,c
  7183   0031D4  1233               	iorwf	(___flmul@prod+3)^0,f,c
  7184   0031D6  C030  F01D         	movff	___flmul@prod,?___flmul
  7185   0031DA  C031  F01E         	movff	___flmul@prod+1,?___flmul+1
  7186   0031DE  C032  F01F         	movff	___flmul@prod+2,?___flmul+2
  7187   0031E2  C033  F020         	movff	___flmul@prod+3,?___flmul+3
  7188   0031E6                     l964:
  7189   0031E6  0012               	return		;funcret
  7190   0031E8                     __end_of___flmul:
  7191                           	callstack 0
  7192                           
  7193 ;; *************** function ___flge *****************
  7194 ;; Defined at:
  7195 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  7196 ;; Parameters:    Size  Location     Type
  7197 ;;  ff1             4   53[COMRAM] unsigned char 
  7198 ;;  ff2             4   57[COMRAM] unsigned char 
  7199 ;; Auto vars:     Size  Location     Type
  7200 ;;		None
  7201 ;; Return value:  Size  Location     Type
  7202 ;;		None               void
  7203 ;; Registers used:
  7204 ;;		wreg, status,2, status,0
  7205 ;; Tracked objects:
  7206 ;;		On entry : 0/0
  7207 ;;		On exit  : 0/0
  7208 ;;		Unchanged: 0/0
  7209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7210 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7212 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7213 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7214 ;;Total ram usage:       12 bytes
  7215 ;; Hardware stack levels used: 1
  7216 ;; Hardware stack levels required when called: 2
  7217 ;; This function calls:
  7218 ;;		Nothing
  7219 ;; This function is called by:
  7220 ;;		_main
  7221 ;;		_efgtoa
  7222 ;; This function uses a non-reentrant model
  7223 ;;
  7224                           
  7225                           	psect	text15
  7226   0042C2                     __ptext15:
  7227                           	callstack 0
  7228   0042C2                     ___flge:
  7229                           	callstack 24
  7230   0042C2  0E00               	movlw	0
  7231   0042C4  1436               	andwf	___flge@ff1^0,w,c
  7232   0042C6  6E3E               	movwf	??___flge^0,c
  7233   0042C8  0E00               	movlw	0
  7234   0042CA  1437               	andwf	(___flge@ff1+1)^0,w,c
  7235   0042CC  6E3F               	movwf	(??___flge+1)^0,c
  7236   0042CE  0E80               	movlw	128
  7237   0042D0  1438               	andwf	(___flge@ff1+2)^0,w,c
  7238   0042D2  6E40               	movwf	(??___flge+2)^0,c
  7239   0042D4  0E7F               	movlw	127
  7240   0042D6  1439               	andwf	(___flge@ff1+3)^0,w,c
  7241   0042D8  6E41               	movwf	(??___flge+3)^0,c
  7242   0042DA  503E               	movf	??___flge^0,w,c
  7243   0042DC  103F               	iorwf	(??___flge+1)^0,w,c
  7244   0042DE  1040               	iorwf	(??___flge+2)^0,w,c
  7245   0042E0  1041               	iorwf	(??___flge+3)^0,w,c
  7246   0042E2  A4D8               	btfss	status,2,c
  7247   0042E4  EF76  F021         	goto	u3611
  7248   0042E8  EF78  F021         	goto	u3610
  7249   0042EC                     u3611:
  7250   0042EC  EF80  F021         	goto	l3665
  7251   0042F0                     u3610:
  7252   0042F0  0E00               	movlw	0
  7253   0042F2  6E36               	movwf	___flge@ff1^0,c
  7254   0042F4  0E00               	movlw	0
  7255   0042F6  6E37               	movwf	(___flge@ff1+1)^0,c
  7256   0042F8  0E00               	movlw	0
  7257   0042FA  6E38               	movwf	(___flge@ff1+2)^0,c
  7258   0042FC  0E00               	movlw	0
  7259   0042FE  6E39               	movwf	(___flge@ff1+3)^0,c
  7260   004300                     l3665:
  7261   004300  0E00               	movlw	0
  7262   004302  143A               	andwf	___flge@ff2^0,w,c
  7263   004304  6E3E               	movwf	??___flge^0,c
  7264   004306  0E00               	movlw	0
  7265   004308  143B               	andwf	(___flge@ff2+1)^0,w,c
  7266   00430A  6E3F               	movwf	(??___flge+1)^0,c
  7267   00430C  0E80               	movlw	128
  7268   00430E  143C               	andwf	(___flge@ff2+2)^0,w,c
  7269   004310  6E40               	movwf	(??___flge+2)^0,c
  7270   004312  0E7F               	movlw	127
  7271   004314  143D               	andwf	(___flge@ff2+3)^0,w,c
  7272   004316  6E41               	movwf	(??___flge+3)^0,c
  7273   004318  503E               	movf	??___flge^0,w,c
  7274   00431A  103F               	iorwf	(??___flge+1)^0,w,c
  7275   00431C  1040               	iorwf	(??___flge+2)^0,w,c
  7276   00431E  1041               	iorwf	(??___flge+3)^0,w,c
  7277   004320  A4D8               	btfss	status,2,c
  7278   004322  EF95  F021         	goto	u3621
  7279   004326  EF97  F021         	goto	u3620
  7280   00432A                     u3621:
  7281   00432A  EF9F  F021         	goto	l3669
  7282   00432E                     u3620:
  7283   00432E  0E00               	movlw	0
  7284   004330  6E3A               	movwf	___flge@ff2^0,c
  7285   004332  0E00               	movlw	0
  7286   004334  6E3B               	movwf	(___flge@ff2+1)^0,c
  7287   004336  0E00               	movlw	0
  7288   004338  6E3C               	movwf	(___flge@ff2+2)^0,c
  7289   00433A  0E00               	movlw	0
  7290   00433C  6E3D               	movwf	(___flge@ff2+3)^0,c
  7291   00433E                     l3669:
  7292   00433E  AE39               	btfss	(___flge@ff1+3)^0,7,c
  7293   004340  EFA4  F021         	goto	u3631
  7294   004344  EFA6  F021         	goto	u3630
  7295   004348                     u3631:
  7296   004348  EFAF  F021         	goto	l3673
  7297   00434C                     u3630:
  7298   00434C  6C36               	negf	___flge@ff1^0,c
  7299   00434E  1E37               	comf	(___flge@ff1+1)^0,f,c
  7300   004350  B0D8               	btfsc	status,0,c
  7301   004352  2A37               	incf	(___flge@ff1+1)^0,f,c
  7302   004354  1E38               	comf	(___flge@ff1+2)^0,f,c
  7303   004356  B0D8               	btfsc	status,0,c
  7304   004358  2A38               	incf	(___flge@ff1+2)^0,f,c
  7305   00435A  0E80               	movlw	128
  7306   00435C  5639               	subfwb	(___flge@ff1+3)^0,f,c
  7307   00435E                     l3673:
  7308   00435E  AE3D               	btfss	(___flge@ff2+3)^0,7,c
  7309   004360  EFB4  F021         	goto	u3641
  7310   004364  EFB6  F021         	goto	u3640
  7311   004368                     u3641:
  7312   004368  EFBF  F021         	goto	l611
  7313   00436C                     u3640:
  7314   00436C  6C3A               	negf	___flge@ff2^0,c
  7315   00436E  1E3B               	comf	(___flge@ff2+1)^0,f,c
  7316   004370  B0D8               	btfsc	status,0,c
  7317   004372  2A3B               	incf	(___flge@ff2+1)^0,f,c
  7318   004374  1E3C               	comf	(___flge@ff2+2)^0,f,c
  7319   004376  B0D8               	btfsc	status,0,c
  7320   004378  2A3C               	incf	(___flge@ff2+2)^0,f,c
  7321   00437A  0E80               	movlw	128
  7322   00437C  563D               	subfwb	(___flge@ff2+3)^0,f,c
  7323   00437E                     l611:
  7324   00437E  0E00               	movlw	0
  7325   004380  1A36               	xorwf	___flge@ff1^0,f,c
  7326   004382  0E00               	movlw	0
  7327   004384  1A37               	xorwf	(___flge@ff1+1)^0,f,c
  7328   004386  0E00               	movlw	0
  7329   004388  1A38               	xorwf	(___flge@ff1+2)^0,f,c
  7330   00438A  0E80               	movlw	128
  7331   00438C  1A39               	xorwf	(___flge@ff1+3)^0,f,c
  7332   00438E  0E00               	movlw	0
  7333   004390  1A3A               	xorwf	___flge@ff2^0,f,c
  7334   004392  0E00               	movlw	0
  7335   004394  1A3B               	xorwf	(___flge@ff2+1)^0,f,c
  7336   004396  0E00               	movlw	0
  7337   004398  1A3C               	xorwf	(___flge@ff2+2)^0,f,c
  7338   00439A  0E80               	movlw	128
  7339   00439C  1A3D               	xorwf	(___flge@ff2+3)^0,f,c
  7340   00439E  503A               	movf	___flge@ff2^0,w,c
  7341   0043A0  5C36               	subwf	___flge@ff1^0,w,c
  7342   0043A2  503B               	movf	(___flge@ff2+1)^0,w,c
  7343   0043A4  5837               	subwfb	(___flge@ff1+1)^0,w,c
  7344   0043A6  503C               	movf	(___flge@ff2+2)^0,w,c
  7345   0043A8  5838               	subwfb	(___flge@ff1+2)^0,w,c
  7346   0043AA  503D               	movf	(___flge@ff2+3)^0,w,c
  7347   0043AC  5839               	subwfb	(___flge@ff1+3)^0,w,c
  7348   0043AE  B0D8               	btfsc	status,0,c
  7349   0043B0  EFDC  F021         	goto	u3651
  7350   0043B4  EFDE  F021         	goto	u3650
  7351   0043B8                     u3651:
  7352   0043B8  EFE1  F021         	goto	l3679
  7353   0043BC                     u3650:
  7354   0043BC  90D8               	bcf	status,0,c
  7355   0043BE  EFE2  F021         	goto	l616
  7356   0043C2                     l3679:
  7357   0043C2  80D8               	bsf	status,0,c
  7358   0043C4                     l616:
  7359   0043C4  0012               	return		;funcret
  7360   0043C6                     __end_of___flge:
  7361                           	callstack 0
  7362                           
  7363 ;; *************** function ___fleq *****************
  7364 ;; Defined at:
  7365 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  7366 ;; Parameters:    Size  Location     Type
  7367 ;;  ff1             4    4[COMRAM] unsigned char 
  7368 ;;  ff2             4    8[COMRAM] unsigned char 
  7369 ;; Auto vars:     Size  Location     Type
  7370 ;;		None
  7371 ;; Return value:  Size  Location     Type
  7372 ;;		None               void
  7373 ;; Registers used:
  7374 ;;		wreg, status,2, status,0
  7375 ;; Tracked objects:
  7376 ;;		On entry : 0/0
  7377 ;;		On exit  : 0/0
  7378 ;;		Unchanged: 0/0
  7379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7380 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7382 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7383 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7384 ;;Total ram usage:       12 bytes
  7385 ;; Hardware stack levels used: 1
  7386 ;; Hardware stack levels required when called: 2
  7387 ;; This function calls:
  7388 ;;		Nothing
  7389 ;; This function is called by:
  7390 ;;		_efgtoa
  7391 ;; This function uses a non-reentrant model
  7392 ;;
  7393                           
  7394                           	psect	text16
  7395   00458E                     __ptext16:
  7396                           	callstack 0
  7397   00458E                     ___fleq:
  7398                           	callstack 24
  7399   00458E  0E00               	movlw	0
  7400   004590  1405               	andwf	___fleq@ff1^0,w,c
  7401   004592  6E0D               	movwf	??___fleq^0,c
  7402   004594  0E00               	movlw	0
  7403   004596  1406               	andwf	(___fleq@ff1+1)^0,w,c
  7404   004598  6E0E               	movwf	(??___fleq+1)^0,c
  7405   00459A  0E80               	movlw	128
  7406   00459C  1407               	andwf	(___fleq@ff1+2)^0,w,c
  7407   00459E  6E0F               	movwf	(??___fleq+2)^0,c
  7408   0045A0  0E7F               	movlw	127
  7409   0045A2  1408               	andwf	(___fleq@ff1+3)^0,w,c
  7410   0045A4  6E10               	movwf	(??___fleq+3)^0,c
  7411   0045A6  500D               	movf	??___fleq^0,w,c
  7412   0045A8  100E               	iorwf	(??___fleq+1)^0,w,c
  7413   0045AA  100F               	iorwf	(??___fleq+2)^0,w,c
  7414   0045AC  1010               	iorwf	(??___fleq+3)^0,w,c
  7415   0045AE  A4D8               	btfss	status,2,c
  7416   0045B0  EFDC  F022         	goto	u3581
  7417   0045B4  EFDE  F022         	goto	u3580
  7418   0045B8                     u3581:
  7419   0045B8  EFE6  F022         	goto	l3649
  7420   0045BC                     u3580:
  7421   0045BC  0E00               	movlw	0
  7422   0045BE  6E05               	movwf	___fleq@ff1^0,c
  7423   0045C0  0E00               	movlw	0
  7424   0045C2  6E06               	movwf	(___fleq@ff1+1)^0,c
  7425   0045C4  0E00               	movlw	0
  7426   0045C6  6E07               	movwf	(___fleq@ff1+2)^0,c
  7427   0045C8  0E00               	movlw	0
  7428   0045CA  6E08               	movwf	(___fleq@ff1+3)^0,c
  7429   0045CC                     l3649:
  7430   0045CC  0E00               	movlw	0
  7431   0045CE  1409               	andwf	___fleq@ff2^0,w,c
  7432   0045D0  6E0D               	movwf	??___fleq^0,c
  7433   0045D2  0E00               	movlw	0
  7434   0045D4  140A               	andwf	(___fleq@ff2+1)^0,w,c
  7435   0045D6  6E0E               	movwf	(??___fleq+1)^0,c
  7436   0045D8  0E80               	movlw	128
  7437   0045DA  140B               	andwf	(___fleq@ff2+2)^0,w,c
  7438   0045DC  6E0F               	movwf	(??___fleq+2)^0,c
  7439   0045DE  0E7F               	movlw	127
  7440   0045E0  140C               	andwf	(___fleq@ff2+3)^0,w,c
  7441   0045E2  6E10               	movwf	(??___fleq+3)^0,c
  7442   0045E4  500D               	movf	??___fleq^0,w,c
  7443   0045E6  100E               	iorwf	(??___fleq+1)^0,w,c
  7444   0045E8  100F               	iorwf	(??___fleq+2)^0,w,c
  7445   0045EA  1010               	iorwf	(??___fleq+3)^0,w,c
  7446   0045EC  A4D8               	btfss	status,2,c
  7447   0045EE  EFFB  F022         	goto	u3591
  7448   0045F2  EFFD  F022         	goto	u3590
  7449   0045F6                     u3591:
  7450   0045F6  EF05  F023         	goto	l3653
  7451   0045FA                     u3590:
  7452   0045FA  0E00               	movlw	0
  7453   0045FC  6E09               	movwf	___fleq@ff2^0,c
  7454   0045FE  0E00               	movlw	0
  7455   004600  6E0A               	movwf	(___fleq@ff2+1)^0,c
  7456   004602  0E00               	movlw	0
  7457   004604  6E0B               	movwf	(___fleq@ff2+2)^0,c
  7458   004606  0E00               	movlw	0
  7459   004608  6E0C               	movwf	(___fleq@ff2+3)^0,c
  7460   00460A                     l3653:
  7461   00460A  5009               	movf	___fleq@ff2^0,w,c
  7462   00460C  1805               	xorwf	___fleq@ff1^0,w,c
  7463   00460E  E10F               	bnz	u3600
  7464   004610  500A               	movf	(___fleq@ff2+1)^0,w,c
  7465   004612  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  7466   004614  E10C               	bnz	u3600
  7467   004616  500B               	movf	(___fleq@ff2+2)^0,w,c
  7468   004618  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  7469   00461A  E109               	bnz	u3600
  7470   00461C  500C               	movf	(___fleq@ff2+3)^0,w,c
  7471   00461E  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  7472   004620  B4D8               	btfsc	status,2,c
  7473   004622  EF15  F023         	goto	u3601
  7474   004626  EF17  F023         	goto	u3600
  7475   00462A                     u3601:
  7476   00462A  EF1A  F023         	goto	l3657
  7477   00462E                     u3600:
  7478   00462E  90D8               	bcf	status,0,c
  7479   004630  EF1B  F023         	goto	l605
  7480   004634                     l3657:
  7481   004634  80D8               	bsf	status,0,c
  7482   004636                     l605:
  7483   004636  0012               	return		;funcret
  7484   004638                     __end_of___fleq:
  7485                           	callstack 0
  7486                           
  7487 ;; *************** function ___fldiv *****************
  7488 ;; Defined at:
  7489 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  7490 ;; Parameters:    Size  Location     Type
  7491 ;;  b               4   53[COMRAM] unsigned char 
  7492 ;;  a               4   57[COMRAM] unsigned char 
  7493 ;; Auto vars:     Size  Location     Type
  7494 ;;  grs             4   72[COMRAM] unsigned long 
  7495 ;;  rem             4   65[COMRAM] unsigned long 
  7496 ;;  new_exp         2   70[COMRAM] short 
  7497 ;;  aexp            1   77[COMRAM] unsigned char 
  7498 ;;  bexp            1   76[COMRAM] unsigned char 
  7499 ;;  sign            1   69[COMRAM] unsigned char 
  7500 ;; Return value:  Size  Location     Type
  7501 ;;                  4   53[COMRAM] unsigned char 
  7502 ;; Registers used:
  7503 ;;		wreg, status,2, status,0
  7504 ;; Tracked objects:
  7505 ;;		On entry : 0/0
  7506 ;;		On exit  : 0/0
  7507 ;;		Unchanged: 0/0
  7508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7509 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7510 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7511 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7512 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7513 ;;Total ram usage:       25 bytes
  7514 ;; Hardware stack levels used: 1
  7515 ;; Hardware stack levels required when called: 2
  7516 ;; This function calls:
  7517 ;;		Nothing
  7518 ;; This function is called by:
  7519 ;;		_main
  7520 ;;		_efgtoa
  7521 ;; This function uses a non-reentrant model
  7522 ;;
  7523                           
  7524                           	psect	text17
  7525   0031E8                     __ptext17:
  7526                           	callstack 0
  7527   0031E8                     ___fldiv:
  7528                           	callstack 24
  7529   0031E8  5039               	movf	(___fldiv@b+3)^0,w,c
  7530   0031EA  0B80               	andlw	128
  7531   0031EC  6E46               	movwf	___fldiv@sign^0,c
  7532   0031EE  5039               	movf	(___fldiv@b+3)^0,w,c
  7533   0031F0  2439               	addwf	(___fldiv@b+3)^0,w,c
  7534   0031F2  6E4D               	movwf	___fldiv@bexp^0,c
  7535   0031F4  AE38               	btfss	(___fldiv@b+2)^0,7,c
  7536   0031F6  EFFF  F018         	goto	u3161
  7537   0031FA  EF01  F019         	goto	u3160
  7538   0031FE                     u3161:
  7539   0031FE  EF02  F019         	goto	l3377
  7540   003202                     u3160:
  7541   003202  804D               	bsf	___fldiv@bexp^0,0,c
  7542   003204                     l3377:
  7543   003204  504D               	movf	___fldiv@bexp^0,w,c
  7544   003206  B4D8               	btfsc	status,2,c
  7545   003208  EF08  F019         	goto	u3171
  7546   00320C  EF0A  F019         	goto	u3170
  7547   003210                     u3171:
  7548   003210  EF1F  F019         	goto	l3387
  7549   003214                     u3170:
  7550   003214  284D               	incf	___fldiv@bexp^0,w,c
  7551   003216  A4D8               	btfss	status,2,c
  7552   003218  EF10  F019         	goto	u3181
  7553   00321C  EF12  F019         	goto	u3180
  7554   003220                     u3181:
  7555   003220  EF1A  F019         	goto	l3383
  7556   003224                     u3180:
  7557   003224  0E00               	movlw	0
  7558   003226  6E36               	movwf	___fldiv@b^0,c
  7559   003228  0E00               	movlw	0
  7560   00322A  6E37               	movwf	(___fldiv@b+1)^0,c
  7561   00322C  0E00               	movlw	0
  7562   00322E  6E38               	movwf	(___fldiv@b+2)^0,c
  7563   003230  0E00               	movlw	0
  7564   003232  6E39               	movwf	(___fldiv@b+3)^0,c
  7565   003234                     l3383:
  7566   003234  8E38               	bsf	(___fldiv@b+2)^0,7,c
  7567   003236  0E00               	movlw	0
  7568   003238  6E39               	movwf	(___fldiv@b+3)^0,c
  7569   00323A  EF27  F019         	goto	l3389
  7570   00323E                     l3387:
  7571   00323E  0E00               	movlw	0
  7572   003240  6E36               	movwf	___fldiv@b^0,c
  7573   003242  0E00               	movlw	0
  7574   003244  6E37               	movwf	(___fldiv@b+1)^0,c
  7575   003246  0E00               	movlw	0
  7576   003248  6E38               	movwf	(___fldiv@b+2)^0,c
  7577   00324A  0E00               	movlw	0
  7578   00324C  6E39               	movwf	(___fldiv@b+3)^0,c
  7579   00324E                     l3389:
  7580   00324E  503D               	movf	(___fldiv@a+3)^0,w,c
  7581   003250  0B80               	andlw	128
  7582   003252  1A46               	xorwf	___fldiv@sign^0,f,c
  7583   003254  503D               	movf	(___fldiv@a+3)^0,w,c
  7584   003256  243D               	addwf	(___fldiv@a+3)^0,w,c
  7585   003258  6E4E               	movwf	___fldiv@aexp^0,c
  7586   00325A  AE3C               	btfss	(___fldiv@a+2)^0,7,c
  7587   00325C  EF32  F019         	goto	u3191
  7588   003260  EF34  F019         	goto	u3190
  7589   003264                     u3191:
  7590   003264  EF35  F019         	goto	l3397
  7591   003268                     u3190:
  7592   003268  804E               	bsf	___fldiv@aexp^0,0,c
  7593   00326A                     l3397:
  7594   00326A  504E               	movf	___fldiv@aexp^0,w,c
  7595   00326C  B4D8               	btfsc	status,2,c
  7596   00326E  EF3B  F019         	goto	u3201
  7597   003272  EF3D  F019         	goto	u3200
  7598   003276                     u3201:
  7599   003276  EF52  F019         	goto	l3407
  7600   00327A                     u3200:
  7601   00327A  284E               	incf	___fldiv@aexp^0,w,c
  7602   00327C  A4D8               	btfss	status,2,c
  7603   00327E  EF43  F019         	goto	u3211
  7604   003282  EF45  F019         	goto	u3210
  7605   003286                     u3211:
  7606   003286  EF4D  F019         	goto	l3403
  7607   00328A                     u3210:
  7608   00328A  0E00               	movlw	0
  7609   00328C  6E3A               	movwf	___fldiv@a^0,c
  7610   00328E  0E00               	movlw	0
  7611   003290  6E3B               	movwf	(___fldiv@a+1)^0,c
  7612   003292  0E00               	movlw	0
  7613   003294  6E3C               	movwf	(___fldiv@a+2)^0,c
  7614   003296  0E00               	movlw	0
  7615   003298  6E3D               	movwf	(___fldiv@a+3)^0,c
  7616   00329A                     l3403:
  7617   00329A  8E3C               	bsf	(___fldiv@a+2)^0,7,c
  7618   00329C  0E00               	movlw	0
  7619   00329E  6E3D               	movwf	(___fldiv@a+3)^0,c
  7620   0032A0  EF5A  F019         	goto	l3409
  7621   0032A4                     l3407:
  7622   0032A4  0E00               	movlw	0
  7623   0032A6  6E3A               	movwf	___fldiv@a^0,c
  7624   0032A8  0E00               	movlw	0
  7625   0032AA  6E3B               	movwf	(___fldiv@a+1)^0,c
  7626   0032AC  0E00               	movlw	0
  7627   0032AE  6E3C               	movwf	(___fldiv@a+2)^0,c
  7628   0032B0  0E00               	movlw	0
  7629   0032B2  6E3D               	movwf	(___fldiv@a+3)^0,c
  7630   0032B4                     l3409:
  7631   0032B4  503A               	movf	___fldiv@a^0,w,c
  7632   0032B6  103B               	iorwf	(___fldiv@a+1)^0,w,c
  7633   0032B8  103C               	iorwf	(___fldiv@a+2)^0,w,c
  7634   0032BA  103D               	iorwf	(___fldiv@a+3)^0,w,c
  7635   0032BC  A4D8               	btfss	status,2,c
  7636   0032BE  EF63  F019         	goto	u3221
  7637   0032C2  EF65  F019         	goto	u3220
  7638   0032C6                     u3221:
  7639   0032C6  EF7D  F019         	goto	l3421
  7640   0032CA                     u3220:
  7641   0032CA  0E00               	movlw	0
  7642   0032CC  6E36               	movwf	___fldiv@b^0,c
  7643   0032CE  0E00               	movlw	0
  7644   0032D0  6E37               	movwf	(___fldiv@b+1)^0,c
  7645   0032D2  0E00               	movlw	0
  7646   0032D4  6E38               	movwf	(___fldiv@b+2)^0,c
  7647   0032D6  0E00               	movlw	0
  7648   0032D8  6E39               	movwf	(___fldiv@b+3)^0,c
  7649   0032DA  0E80               	movlw	128
  7650   0032DC  1238               	iorwf	(___fldiv@b+2)^0,f,c
  7651   0032DE  0E7F               	movlw	127
  7652   0032E0  1239               	iorwf	(___fldiv@b+3)^0,f,c
  7653   0032E2                     l3415:
  7654   0032E2  5046               	movf	___fldiv@sign^0,w,c
  7655   0032E4  1239               	iorwf	(___fldiv@b+3)^0,f,c
  7656   0032E6  C036  F036         	movff	___fldiv@b,?___fldiv
  7657   0032EA  C037  F037         	movff	___fldiv@b+1,?___fldiv+1
  7658   0032EE  C038  F038         	movff	___fldiv@b+2,?___fldiv+2
  7659   0032F2  C039  F039         	movff	___fldiv@b+3,?___fldiv+3
  7660   0032F6  EFC0  F01A         	goto	l928
  7661   0032FA                     l3421:
  7662   0032FA  504D               	movf	___fldiv@bexp^0,w,c
  7663   0032FC  A4D8               	btfss	status,2,c
  7664   0032FE  EF83  F019         	goto	u3231
  7665   003302  EF85  F019         	goto	u3230
  7666   003306                     u3231:
  7667   003306  EF8F  F019         	goto	l3429
  7668   00330A                     u3230:
  7669   00330A  0E00               	movlw	0
  7670   00330C  6E36               	movwf	?___fldiv^0,c
  7671   00330E  0E00               	movlw	0
  7672   003310  6E37               	movwf	(?___fldiv+1)^0,c
  7673   003312  0E00               	movlw	0
  7674   003314  6E38               	movwf	(?___fldiv+2)^0,c
  7675   003316  0E00               	movlw	0
  7676   003318  6E39               	movwf	(?___fldiv+3)^0,c
  7677   00331A  EFC0  F01A         	goto	l928
  7678   00331E                     l3429:
  7679   00331E  504E               	movf	___fldiv@aexp^0,w,c
  7680   003320  C04D  F03E         	movff	___fldiv@bexp,??___fldiv
  7681   003324  6A3F               	clrf	(??___fldiv+1)^0,c
  7682   003326  5E3E               	subwf	??___fldiv^0,f,c
  7683   003328  0E00               	movlw	0
  7684   00332A  5A3F               	subwfb	(??___fldiv+1)^0,f,c
  7685   00332C  0E7F               	movlw	127
  7686   00332E  243E               	addwf	??___fldiv^0,w,c
  7687   003330  6E47               	movwf	___fldiv@new_exp^0,c
  7688   003332  0E00               	movlw	0
  7689   003334  203F               	addwfc	(??___fldiv+1)^0,w,c
  7690   003336  6E48               	movwf	(___fldiv@new_exp+1)^0,c
  7691   003338  C036  F042         	movff	___fldiv@b,___fldiv@rem
  7692   00333C  C037  F043         	movff	___fldiv@b+1,___fldiv@rem+1
  7693   003340  C038  F044         	movff	___fldiv@b+2,___fldiv@rem+2
  7694   003344  C039  F045         	movff	___fldiv@b+3,___fldiv@rem+3
  7695   003348  0E00               	movlw	0
  7696   00334A  6E36               	movwf	___fldiv@b^0,c
  7697   00334C  0E00               	movlw	0
  7698   00334E  6E37               	movwf	(___fldiv@b+1)^0,c
  7699   003350  0E00               	movlw	0
  7700   003352  6E38               	movwf	(___fldiv@b+2)^0,c
  7701   003354  0E00               	movlw	0
  7702   003356  6E39               	movwf	(___fldiv@b+3)^0,c
  7703   003358  0E00               	movlw	0
  7704   00335A  6E49               	movwf	___fldiv@grs^0,c
  7705   00335C  0E00               	movlw	0
  7706   00335E  6E4A               	movwf	(___fldiv@grs+1)^0,c
  7707   003360  0E00               	movlw	0
  7708   003362  6E4B               	movwf	(___fldiv@grs+2)^0,c
  7709   003364  0E00               	movlw	0
  7710   003366  6E4C               	movwf	(___fldiv@grs+3)^0,c
  7711   003368  0E00               	movlw	0
  7712   00336A  6E4E               	movwf	___fldiv@aexp^0,c
  7713   00336C  EFF0  F019         	goto	l930
  7714   003370                     l3439:
  7715   003370  504E               	movf	___fldiv@aexp^0,w,c
  7716   003372  B4D8               	btfsc	status,2,c
  7717   003374  EFBE  F019         	goto	u3241
  7718   003378  EFC0  F019         	goto	u3240
  7719   00337C                     u3241:
  7720   00337C  EFD7  F019         	goto	l3447
  7721   003380                     u3240:
  7722   003380  90D8               	bcf	status,0,c
  7723   003382  3642               	rlcf	___fldiv@rem^0,f,c
  7724   003384  3643               	rlcf	(___fldiv@rem+1)^0,f,c
  7725   003386  3644               	rlcf	(___fldiv@rem+2)^0,f,c
  7726   003388  3645               	rlcf	(___fldiv@rem+3)^0,f,c
  7727   00338A  90D8               	bcf	status,0,c
  7728   00338C  3636               	rlcf	___fldiv@b^0,f,c
  7729   00338E  3637               	rlcf	(___fldiv@b+1)^0,f,c
  7730   003390  3638               	rlcf	(___fldiv@b+2)^0,f,c
  7731   003392  3639               	rlcf	(___fldiv@b+3)^0,f,c
  7732   003394  AE4C               	btfss	(___fldiv@grs+3)^0,7,c
  7733   003396  EFCF  F019         	goto	u3251
  7734   00339A  EFD1  F019         	goto	u3250
  7735   00339E                     u3251:
  7736   00339E  EFD2  F019         	goto	l933
  7737   0033A2                     u3250:
  7738   0033A2  8036               	bsf	___fldiv@b^0,0,c
  7739   0033A4                     l933:
  7740   0033A4  90D8               	bcf	status,0,c
  7741   0033A6  3649               	rlcf	___fldiv@grs^0,f,c
  7742   0033A8  364A               	rlcf	(___fldiv@grs+1)^0,f,c
  7743   0033AA  364B               	rlcf	(___fldiv@grs+2)^0,f,c
  7744   0033AC  364C               	rlcf	(___fldiv@grs+3)^0,f,c
  7745   0033AE                     l3447:
  7746   0033AE  503A               	movf	___fldiv@a^0,w,c
  7747   0033B0  5C42               	subwf	___fldiv@rem^0,w,c
  7748   0033B2  503B               	movf	(___fldiv@a+1)^0,w,c
  7749   0033B4  5843               	subwfb	(___fldiv@rem+1)^0,w,c
  7750   0033B6  503C               	movf	(___fldiv@a+2)^0,w,c
  7751   0033B8  5844               	subwfb	(___fldiv@rem+2)^0,w,c
  7752   0033BA  503D               	movf	(___fldiv@a+3)^0,w,c
  7753   0033BC  5845               	subwfb	(___fldiv@rem+3)^0,w,c
  7754   0033BE  A0D8               	btfss	status,0,c
  7755   0033C0  EFE4  F019         	goto	u3261
  7756   0033C4  EFE6  F019         	goto	u3260
  7757   0033C8                     u3261:
  7758   0033C8  EFEF  F019         	goto	l3453
  7759   0033CC                     u3260:
  7760   0033CC  8C4C               	bsf	(___fldiv@grs+3)^0,6,c
  7761   0033CE  503A               	movf	___fldiv@a^0,w,c
  7762   0033D0  5E42               	subwf	___fldiv@rem^0,f,c
  7763   0033D2  503B               	movf	(___fldiv@a+1)^0,w,c
  7764   0033D4  5A43               	subwfb	(___fldiv@rem+1)^0,f,c
  7765   0033D6  503C               	movf	(___fldiv@a+2)^0,w,c
  7766   0033D8  5A44               	subwfb	(___fldiv@rem+2)^0,f,c
  7767   0033DA  503D               	movf	(___fldiv@a+3)^0,w,c
  7768   0033DC  5A45               	subwfb	(___fldiv@rem+3)^0,f,c
  7769   0033DE                     l3453:
  7770   0033DE  2A4E               	incf	___fldiv@aexp^0,f,c
  7771   0033E0                     l930:
  7772   0033E0  0E19               	movlw	25
  7773   0033E2  644E               	cpfsgt	___fldiv@aexp^0,c
  7774   0033E4  EFF6  F019         	goto	u3271
  7775   0033E8  EFF8  F019         	goto	u3270
  7776   0033EC                     u3271:
  7777   0033EC  EFB8  F019         	goto	l3439
  7778   0033F0                     u3270:
  7779   0033F0  5042               	movf	___fldiv@rem^0,w,c
  7780   0033F2  1043               	iorwf	(___fldiv@rem+1)^0,w,c
  7781   0033F4  1044               	iorwf	(___fldiv@rem+2)^0,w,c
  7782   0033F6  1045               	iorwf	(___fldiv@rem+3)^0,w,c
  7783   0033F8  B4D8               	btfsc	status,2,c
  7784   0033FA  EF01  F01A         	goto	u3281
  7785   0033FE  EF03  F01A         	goto	u3280
  7786   003402                     u3281:
  7787   003402  EF1B  F01A         	goto	l3465
  7788   003406                     u3280:
  7789   003406  8049               	bsf	___fldiv@grs^0,0,c
  7790   003408  EF1B  F01A         	goto	l3465
  7791   00340C                     l3459:
  7792   00340C  90D8               	bcf	status,0,c
  7793   00340E  3636               	rlcf	___fldiv@b^0,f,c
  7794   003410  3637               	rlcf	(___fldiv@b+1)^0,f,c
  7795   003412  3638               	rlcf	(___fldiv@b+2)^0,f,c
  7796   003414  3639               	rlcf	(___fldiv@b+3)^0,f,c
  7797   003416  AE4C               	btfss	(___fldiv@grs+3)^0,7,c
  7798   003418  EF10  F01A         	goto	u3291
  7799   00341C  EF12  F01A         	goto	u3290
  7800   003420                     u3291:
  7801   003420  EF13  F01A         	goto	l939
  7802   003424                     u3290:
  7803   003424  8036               	bsf	___fldiv@b^0,0,c
  7804   003426                     l939:
  7805   003426  90D8               	bcf	status,0,c
  7806   003428  3649               	rlcf	___fldiv@grs^0,f,c
  7807   00342A  364A               	rlcf	(___fldiv@grs+1)^0,f,c
  7808   00342C  364B               	rlcf	(___fldiv@grs+2)^0,f,c
  7809   00342E  364C               	rlcf	(___fldiv@grs+3)^0,f,c
  7810   003430  0647               	decf	___fldiv@new_exp^0,f,c
  7811   003432  A0D8               	btfss	status,0,c
  7812   003434  0648               	decf	(___fldiv@new_exp+1)^0,f,c
  7813   003436                     l3465:
  7814   003436  AE38               	btfss	(___fldiv@b+2)^0,7,c
  7815   003438  EF20  F01A         	goto	u3301
  7816   00343C  EF22  F01A         	goto	u3300
  7817   003440                     u3301:
  7818   003440  EF06  F01A         	goto	l3459
  7819   003444                     u3300:
  7820   003444  0E00               	movlw	0
  7821   003446  6E4E               	movwf	___fldiv@aexp^0,c
  7822   003448  AE4C               	btfss	(___fldiv@grs+3)^0,7,c
  7823   00344A  EF29  F01A         	goto	u3311
  7824   00344E  EF2B  F01A         	goto	u3310
  7825   003452                     u3311:
  7826   003452  EF4F  F01A         	goto	l941
  7827   003456                     u3310:
  7828   003456  0EFF               	movlw	255
  7829   003458  1449               	andwf	___fldiv@grs^0,w,c
  7830   00345A  6E3E               	movwf	??___fldiv^0,c
  7831   00345C  0EFF               	movlw	255
  7832   00345E  144A               	andwf	(___fldiv@grs+1)^0,w,c
  7833   003460  6E3F               	movwf	(??___fldiv+1)^0,c
  7834   003462  0EFF               	movlw	255
  7835   003464  144B               	andwf	(___fldiv@grs+2)^0,w,c
  7836   003466  6E40               	movwf	(??___fldiv+2)^0,c
  7837   003468  0E7F               	movlw	127
  7838   00346A  144C               	andwf	(___fldiv@grs+3)^0,w,c
  7839   00346C  6E41               	movwf	(??___fldiv+3)^0,c
  7840   00346E  503E               	movf	??___fldiv^0,w,c
  7841   003470  103F               	iorwf	(??___fldiv+1)^0,w,c
  7842   003472  1040               	iorwf	(??___fldiv+2)^0,w,c
  7843   003474  1041               	iorwf	(??___fldiv+3)^0,w,c
  7844   003476  B4D8               	btfsc	status,2,c
  7845   003478  EF40  F01A         	goto	u3321
  7846   00347C  EF42  F01A         	goto	u3320
  7847   003480                     u3321:
  7848   003480  EF46  F01A         	goto	l942
  7849   003484                     u3320:
  7850   003484                     l3473:
  7851   003484  0E01               	movlw	1
  7852   003486  6E4E               	movwf	___fldiv@aexp^0,c
  7853   003488  EF4F  F01A         	goto	l941
  7854   00348C                     l942:
  7855   00348C  A036               	btfss	___fldiv@b^0,0,c
  7856   00348E  EF4B  F01A         	goto	u3331
  7857   003492  EF4D  F01A         	goto	u3330
  7858   003496                     u3331:
  7859   003496  EF4F  F01A         	goto	l941
  7860   00349A                     u3330:
  7861   00349A  EF42  F01A         	goto	l3473
  7862   00349E                     l941:
  7863   00349E  504E               	movf	___fldiv@aexp^0,w,c
  7864   0034A0  B4D8               	btfsc	status,2,c
  7865   0034A2  EF55  F01A         	goto	u3341
  7866   0034A6  EF57  F01A         	goto	u3340
  7867   0034AA                     u3341:
  7868   0034AA  EF7B  F01A         	goto	l3485
  7869   0034AE                     u3340:
  7870   0034AE  0E01               	movlw	1
  7871   0034B0  2636               	addwf	___fldiv@b^0,f,c
  7872   0034B2  0E00               	movlw	0
  7873   0034B4  2237               	addwfc	(___fldiv@b+1)^0,f,c
  7874   0034B6  2238               	addwfc	(___fldiv@b+2)^0,f,c
  7875   0034B8  2239               	addwfc	(___fldiv@b+3)^0,f,c
  7876   0034BA  A039               	btfss	(___fldiv@b+3)^0,0,c
  7877   0034BC  EF62  F01A         	goto	u3351
  7878   0034C0  EF64  F01A         	goto	u3350
  7879   0034C4                     u3351:
  7880   0034C4  EF7B  F01A         	goto	l3485
  7881   0034C8                     u3350:
  7882   0034C8  C036  F03E         	movff	___fldiv@b,??___fldiv
  7883   0034CC  C037  F03F         	movff	___fldiv@b+1,??___fldiv+1
  7884   0034D0  C038  F040         	movff	___fldiv@b+2,??___fldiv+2
  7885   0034D4  C039  F041         	movff	___fldiv@b+3,??___fldiv+3
  7886   0034D8  3441               	rlcf	(??___fldiv+3)^0,w,c
  7887   0034DA  3241               	rrcf	(??___fldiv+3)^0,f,c
  7888   0034DC  3240               	rrcf	(??___fldiv+2)^0,f,c
  7889   0034DE  323F               	rrcf	(??___fldiv+1)^0,f,c
  7890   0034E0  323E               	rrcf	??___fldiv^0,f,c
  7891   0034E2  C03E  F036         	movff	??___fldiv,___fldiv@b
  7892   0034E6  C03F  F037         	movff	??___fldiv+1,___fldiv@b+1
  7893   0034EA  C040  F038         	movff	??___fldiv+2,___fldiv@b+2
  7894   0034EE  C041  F039         	movff	??___fldiv+3,___fldiv@b+3
  7895   0034F2  4A47               	infsnz	___fldiv@new_exp^0,f,c
  7896   0034F4  2A48               	incf	(___fldiv@new_exp+1)^0,f,c
  7897   0034F6                     l3485:
  7898   0034F6  BE48               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7899   0034F8  EF86  F01A         	goto	u3361
  7900   0034FC  5048               	movf	(___fldiv@new_exp+1)^0,w,c
  7901   0034FE  E108               	bnz	u3360
  7902   003500  2847               	incf	___fldiv@new_exp^0,w,c
  7903   003502  A0D8               	btfss	status,0,c
  7904   003504  EF86  F01A         	goto	u3361
  7905   003508  EF88  F01A         	goto	u3360
  7906   00350C                     u3361:
  7907   00350C  EF93  F01A         	goto	l3489
  7908   003510                     u3360:
  7909   003510  0E00               	movlw	0
  7910   003512  6E48               	movwf	(___fldiv@new_exp+1)^0,c
  7911   003514  6847               	setf	___fldiv@new_exp^0,c
  7912   003516  0E00               	movlw	0
  7913   003518  6E36               	movwf	___fldiv@b^0,c
  7914   00351A  0E00               	movlw	0
  7915   00351C  6E37               	movwf	(___fldiv@b+1)^0,c
  7916   00351E  0E00               	movlw	0
  7917   003520  6E38               	movwf	(___fldiv@b+2)^0,c
  7918   003522  0E00               	movlw	0
  7919   003524  6E39               	movwf	(___fldiv@b+3)^0,c
  7920   003526                     l3489:
  7921   003526  BE48               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7922   003528  EFA0  F01A         	goto	u3370
  7923   00352C  5048               	movf	(___fldiv@new_exp+1)^0,w,c
  7924   00352E  E106               	bnz	u3371
  7925   003530  0447               	decf	___fldiv@new_exp^0,w,c
  7926   003532  B0D8               	btfsc	status,0,c
  7927   003534  EF9E  F01A         	goto	u3371
  7928   003538  EFA0  F01A         	goto	u3370
  7929   00353C                     u3371:
  7930   00353C  EFAE  F01A         	goto	l3493
  7931   003540                     u3370:
  7932   003540  0E00               	movlw	0
  7933   003542  6E48               	movwf	(___fldiv@new_exp+1)^0,c
  7934   003544  0E00               	movlw	0
  7935   003546  6E47               	movwf	___fldiv@new_exp^0,c
  7936   003548  0E00               	movlw	0
  7937   00354A  6E36               	movwf	___fldiv@b^0,c
  7938   00354C  0E00               	movlw	0
  7939   00354E  6E37               	movwf	(___fldiv@b+1)^0,c
  7940   003550  0E00               	movlw	0
  7941   003552  6E38               	movwf	(___fldiv@b+2)^0,c
  7942   003554  0E00               	movlw	0
  7943   003556  6E39               	movwf	(___fldiv@b+3)^0,c
  7944   003558  0E00               	movlw	0
  7945   00355A  6E46               	movwf	___fldiv@sign^0,c
  7946   00355C                     l3493:
  7947   00355C  C047  F04D         	movff	___fldiv@new_exp,___fldiv@bexp
  7948   003560  A04D               	btfss	___fldiv@bexp^0,0,c
  7949   003562  EFB5  F01A         	goto	u3381
  7950   003566  EFB7  F01A         	goto	u3380
  7951   00356A                     u3381:
  7952   00356A  EFBA  F01A         	goto	l3499
  7953   00356E                     u3380:
  7954   00356E  8E38               	bsf	(___fldiv@b+2)^0,7,c
  7955   003570  EFBB  F01A         	goto	l3501
  7956   003574                     l3499:
  7957   003574  9E38               	bcf	(___fldiv@b+2)^0,7,c
  7958   003576                     l3501:
  7959   003576  90D8               	bcf	status,0,c
  7960   003578  304D               	rrcf	___fldiv@bexp^0,w,c
  7961   00357A  6E39               	movwf	(___fldiv@b+3)^0,c
  7962   00357C  EF71  F019         	goto	l3415
  7963   003580                     l928:
  7964   003580  0012               	return		;funcret
  7965   003582                     __end_of___fldiv:
  7966                           	callstack 0
  7967                           
  7968 ;; *************** function _dtoa *****************
  7969 ;; Defined at:
  7970 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7971 ;; Parameters:    Size  Location     Type
  7972 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  7973 ;;		 -> sprintf@f(11), 
  7974 ;;  d               8   33[COMRAM] long long 
  7975 ;; Auto vars:     Size  Location     Type
  7976 ;;  n               8   55[COMRAM] long long 
  7977 ;;  i               2   63[COMRAM] int 
  7978 ;;  w               2   53[COMRAM] int 
  7979 ;;  p               2   51[COMRAM] int 
  7980 ;;  s               1   65[COMRAM] unsigned char 
  7981 ;; Return value:  Size  Location     Type
  7982 ;;                  1    wreg      void 
  7983 ;; Registers used:
  7984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7985 ;; Tracked objects:
  7986 ;;		On entry : 0/0
  7987 ;;		On exit  : 0/0
  7988 ;;		Unchanged: 0/0
  7989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7990 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7991 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7992 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7993 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7994 ;;Total ram usage:       35 bytes
  7995 ;; Hardware stack levels used: 1
  7996 ;; Hardware stack levels required when called: 6
  7997 ;; This function calls:
  7998 ;;		___aodiv
  7999 ;;		___aomod
  8000 ;;		_abs
  8001 ;;		_pad
  8002 ;; This function is called by:
  8003 ;;		_vfpfcnvrt
  8004 ;; This function uses a non-reentrant model
  8005 ;;
  8006                           
  8007                           	psect	text18
  8008   003888                     __ptext18:
  8009                           	callstack 0
  8010   003888                     _dtoa:
  8011                           	callstack 21
  8012   003888                     
  8013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  8014   003888  C022  F038         	movff	dtoa@d,dtoa@n
  8015   00388C  C023  F039         	movff	dtoa@d+1,dtoa@n+1
  8016   003890  C024  F03A         	movff	dtoa@d+2,dtoa@n+2
  8017   003894  C025  F03B         	movff	dtoa@d+3,dtoa@n+3
  8018   003898  C026  F03C         	movff	dtoa@d+4,dtoa@n+4
  8019   00389C  C027  F03D         	movff	dtoa@d+5,dtoa@n+5
  8020   0038A0  C028  F03E         	movff	dtoa@d+6,dtoa@n+6
  8021   0038A4  C029  F03F         	movff	dtoa@d+7,dtoa@n+7
  8022   0038A8                     
  8023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  8024   0038A8  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  8025   0038AA  EF59  F01C         	goto	u3991
  8026   0038AE  EF5C  F01C         	goto	u3990
  8027   0038B2                     u3991:
  8028   0038B2  0E01               	movlw	1
  8029   0038B4  EF5D  F01C         	goto	u4000
  8030   0038B8                     u3990:
  8031   0038B8  0E00               	movlw	0
  8032   0038BA                     u4000:
  8033   0038BA  6E42               	movwf	dtoa@s^0,c
  8034   0038BC                     
  8035                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  8036   0038BC  5042               	movf	dtoa@s^0,w,c
  8037   0038BE  B4D8               	btfsc	status,2,c
  8038   0038C0  EF64  F01C         	goto	u4011
  8039   0038C4  EF66  F01C         	goto	u4010
  8040   0038C8                     u4011:
  8041   0038C8  EF76  F01C         	goto	l3835
  8042   0038CC                     u4010:
  8043   0038CC                     
  8044                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  8045   0038CC  1E3F               	comf	(dtoa@n+7)^0,f,c
  8046   0038CE  1E3E               	comf	(dtoa@n+6)^0,f,c
  8047   0038D0  1E3D               	comf	(dtoa@n+5)^0,f,c
  8048   0038D2  1E3C               	comf	(dtoa@n+4)^0,f,c
  8049   0038D4  1E3B               	comf	(dtoa@n+3)^0,f,c
  8050   0038D6  1E3A               	comf	(dtoa@n+2)^0,f,c
  8051   0038D8  1E39               	comf	(dtoa@n+1)^0,f,c
  8052   0038DA  6C38               	negf	dtoa@n^0,c
  8053   0038DC  0E00               	movlw	0
  8054   0038DE  2239               	addwfc	(dtoa@n+1)^0,f,c
  8055   0038E0  223A               	addwfc	(dtoa@n+2)^0,f,c
  8056   0038E2  223B               	addwfc	(dtoa@n+3)^0,f,c
  8057   0038E4  223C               	addwfc	(dtoa@n+4)^0,f,c
  8058   0038E6  223D               	addwfc	(dtoa@n+5)^0,f,c
  8059   0038E8  223E               	addwfc	(dtoa@n+6)^0,f,c
  8060   0038EA  223F               	addwfc	(dtoa@n+7)^0,f,c
  8061   0038EC                     l3835:
  8062                           
  8063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  8064   0038EC  0100               	movlb	0	; () banked
  8065   0038EE  BFF6               	btfsc	(_prec+1)& (0+255),7,b
  8066   0038F0  EF84  F01C         	goto	u4020
  8067   0038F4  51F6               	movf	(_prec+1)& (0+255),w,b
  8068   0038F6  E106               	bnz	u4021
  8069   0038F8  05F5               	decf	_prec& (0+255),w,b
  8070   0038FA  B0D8               	btfsc	status,0,c
  8071   0038FC  EF82  F01C         	goto	u4021
  8072   003900  EF84  F01C         	goto	u4020
  8073   003904                     u4021:
  8074   003904  EF8A  F01C         	goto	l1065
  8075   003908                     u4020:
  8076   003908                     
  8077                           ; BSR set to: 0
  8078   003908  0E00               	movlw	0
  8079   00390A  6E35               	movwf	(dtoa@p+1)^0,c
  8080   00390C  0E01               	movlw	1
  8081   00390E  6E34               	movwf	dtoa@p^0,c
  8082   003910  EF8E  F01C         	goto	l1067
  8083   003914                     l1065:
  8084                           
  8085                           ; BSR set to: 0
  8086   003914  C0F5  F034         	movff	_prec,dtoa@p
  8087   003918  C0F6  F035         	movff	_prec+1,dtoa@p+1
  8088   00391C                     l1067:
  8089                           
  8090                           ; BSR set to: 0
  8091                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  8092   00391C  C0F3  F036         	movff	_width,dtoa@w
  8093   003920  C0F4  F037         	movff	_width+1,dtoa@w+1
  8094   003924                     
  8095                           ; BSR set to: 0
  8096                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  8097   003924  5042               	movf	dtoa@s^0,w,c
  8098   003926  B4D8               	btfsc	status,2,c
  8099   003928  EF98  F01C         	goto	u4031
  8100   00392C  EF9A  F01C         	goto	u4030
  8101   003930                     u4031:
  8102   003930  EFB1  F01C         	goto	l1068
  8103   003934                     u4030:
  8104   003934                     
  8105                           ; BSR set to: 0
  8106                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  8107   003934  0636               	decf	dtoa@w^0,f,c
  8108   003936  A0D8               	btfss	status,0,c
  8109   003938  0637               	decf	(dtoa@w+1)^0,f,c
  8110   00393A                     
  8111                           ; BSR set to: 0
  8112                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  8113   00393A  5042               	movf	dtoa@s^0,w,c
  8114   00393C  A4D8               	btfss	status,2,c
  8115   00393E  EFA3  F01C         	goto	u4041
  8116   003942  EFA5  F01C         	goto	u4040
  8117   003946                     u4041:
  8118   003946  EFAB  F01C         	goto	l3847
  8119   00394A                     u4040:
  8120   00394A                     
  8121                           ; BSR set to: 0
  8122   00394A  0E00               	movlw	0
  8123   00394C  6E33               	movwf	(_dtoa$2386+1)^0,c
  8124   00394E  0E2B               	movlw	43
  8125   003950  6E32               	movwf	_dtoa$2386^0,c
  8126   003952  EFAF  F01C         	goto	l3849
  8127   003956                     l3847:
  8128                           
  8129                           ; BSR set to: 0
  8130   003956  0E00               	movlw	0
  8131   003958  6E33               	movwf	(_dtoa$2386+1)^0,c
  8132   00395A  0E2D               	movlw	45
  8133   00395C  6E32               	movwf	_dtoa$2386^0,c
  8134   00395E                     l3849:
  8135                           
  8136                           ; BSR set to: 0
  8137   00395E  C032  F042         	movff	_dtoa$2386,dtoa@s
  8138   003962                     l1068:
  8139                           
  8140                           ; BSR set to: 0
  8141                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  8142   003962  0E00               	movlw	0
  8143   003964  6E41               	movwf	(dtoa@i+1)^0,c
  8144   003966  0E4F               	movlw	79
  8145   003968  6E40               	movwf	dtoa@i^0,c
  8146   00396A                     
  8147                           ; BSR set to: 0
  8148                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  8149   00396A  0E00               	movlw	0
  8150   00396C  0101               	movlb	1	; () banked
  8151   00396E  6FE9               	movwf	(_dbuf+79)& (0+255),b
  8152                           
  8153                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  8154   003970  EF36  F01D         	goto	l3863
  8155   003974                     l3853:
  8156                           
  8157                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  8158   003974  0640               	decf	dtoa@i^0,f,c
  8159   003976  A0D8               	btfss	status,0,c
  8160   003978  0641               	decf	(dtoa@i+1)^0,f,c
  8161   00397A                     
  8162                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  8163   00397A  0E9A               	movlw	low _dbuf
  8164   00397C  2440               	addwf	dtoa@i^0,w,c
  8165   00397E  6ED9               	movwf	fsr2l,c
  8166   003980  0E01               	movlw	high _dbuf
  8167   003982  2041               	addwfc	(dtoa@i+1)^0,w,c
  8168   003984  6EDA               	movwf	fsr2h,c
  8169   003986  C038  F005         	movff	dtoa@n,___aomod@dividend
  8170   00398A  C039  F006         	movff	dtoa@n+1,___aomod@dividend+1
  8171   00398E  C03A  F007         	movff	dtoa@n+2,___aomod@dividend+2
  8172   003992  C03B  F008         	movff	dtoa@n+3,___aomod@dividend+3
  8173   003996  C03C  F009         	movff	dtoa@n+4,___aomod@dividend+4
  8174   00399A  C03D  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  8175   00399E  C03E  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  8176   0039A2  C03F  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  8177   0039A6  0E0A               	movlw	10
  8178   0039A8  6E0D               	movwf	___aomod@divisor^0,c
  8179   0039AA  0E00               	movlw	0
  8180   0039AC  6E0E               	movwf	(___aomod@divisor+1)^0,c
  8181   0039AE  0E00               	movlw	0
  8182   0039B0  6E0F               	movwf	(___aomod@divisor+2)^0,c
  8183   0039B2  0E00               	movlw	0
  8184   0039B4  6E10               	movwf	(___aomod@divisor+3)^0,c
  8185   0039B6  0E00               	movlw	0
  8186   0039B8  6E11               	movwf	(___aomod@divisor+4)^0,c
  8187   0039BA  0E00               	movlw	0
  8188   0039BC  6E12               	movwf	(___aomod@divisor+5)^0,c
  8189   0039BE  0E00               	movlw	0
  8190   0039C0  6E13               	movwf	(___aomod@divisor+6)^0,c
  8191   0039C2  0E00               	movlw	0
  8192   0039C4  6E14               	movwf	(___aomod@divisor+7)^0,c
  8193   0039C6  EC2C  F020         	call	___aomod	;wreg free
  8194   0039CA  C005  F02A         	movff	?___aomod,??_dtoa
  8195   0039CE  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  8196   0039D2  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  8197   0039D6  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  8198   0039DA  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  8199   0039DE  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  8200   0039E2  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  8201   0039E6  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  8202   0039EA  C02A  F017         	movff	??_dtoa,abs@a
  8203   0039EE  C02B  F018         	movff	??_dtoa+1,abs@a+1
  8204   0039F2  ECCE  F025         	call	_abs	;wreg free
  8205   0039F6  5017               	movf	?_abs^0,w,c
  8206   0039F8  0F30               	addlw	48
  8207   0039FA  6EDF               	movwf	indf2,c
  8208   0039FC                     
  8209                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  8210   0039FC  0634               	decf	dtoa@p^0,f,c
  8211   0039FE  A0D8               	btfss	status,0,c
  8212   003A00  0635               	decf	(dtoa@p+1)^0,f,c
  8213   003A02                     
  8214                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  8215   003A02  0636               	decf	dtoa@w^0,f,c
  8216   003A04  A0D8               	btfss	status,0,c
  8217   003A06  0637               	decf	(dtoa@w+1)^0,f,c
  8218   003A08                     
  8219                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  8220   003A08  C038  F005         	movff	dtoa@n,___aodiv@dividend
  8221   003A0C  C039  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  8222   003A10  C03A  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  8223   003A14  C03B  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  8224   003A18  C03C  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  8225   003A1C  C03D  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  8226   003A20  C03E  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  8227   003A24  C03F  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  8228   003A28  0E0A               	movlw	10
  8229   003A2A  6E0D               	movwf	___aodiv@divisor^0,c
  8230   003A2C  0E00               	movlw	0
  8231   003A2E  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  8232   003A30  0E00               	movlw	0
  8233   003A32  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  8234   003A34  0E00               	movlw	0
  8235   003A36  6E10               	movwf	(___aodiv@divisor+3)^0,c
  8236   003A38  0E00               	movlw	0
  8237   003A3A  6E11               	movwf	(___aodiv@divisor+4)^0,c
  8238   003A3C  0E00               	movlw	0
  8239   003A3E  6E12               	movwf	(___aodiv@divisor+5)^0,c
  8240   003A40  0E00               	movlw	0
  8241   003A42  6E13               	movwf	(___aodiv@divisor+6)^0,c
  8242   003A44  0E00               	movlw	0
  8243   003A46  6E14               	movwf	(___aodiv@divisor+7)^0,c
  8244   003A48  EC68  F01F         	call	___aodiv	;wreg free
  8245   003A4C  C005  F038         	movff	?___aodiv,dtoa@n
  8246   003A50  C006  F039         	movff	?___aodiv+1,dtoa@n+1
  8247   003A54  C007  F03A         	movff	?___aodiv+2,dtoa@n+2
  8248   003A58  C008  F03B         	movff	?___aodiv+3,dtoa@n+3
  8249   003A5C  C009  F03C         	movff	?___aodiv+4,dtoa@n+4
  8250   003A60  C00A  F03D         	movff	?___aodiv+5,dtoa@n+5
  8251   003A64  C00B  F03E         	movff	?___aodiv+6,dtoa@n+6
  8252   003A68  C00C  F03F         	movff	?___aodiv+7,dtoa@n+7
  8253   003A6C                     l3863:
  8254                           
  8255                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  8256   003A6C  BE41               	btfsc	(dtoa@i+1)^0,7,c
  8257   003A6E  EF41  F01D         	goto	u4051
  8258   003A72  5041               	movf	(dtoa@i+1)^0,w,c
  8259   003A74  E108               	bnz	u4050
  8260   003A76  0440               	decf	dtoa@i^0,w,c
  8261   003A78  A0D8               	btfss	status,0,c
  8262   003A7A  EF41  F01D         	goto	u4051
  8263   003A7E  EF43  F01D         	goto	u4050
  8264   003A82                     u4051:
  8265   003A82  EF5F  F01D         	goto	l3869
  8266   003A86                     u4050:
  8267   003A86  5038               	movf	dtoa@n^0,w,c
  8268   003A88  1039               	iorwf	(dtoa@n+1)^0,w,c
  8269   003A8A  103A               	iorwf	(dtoa@n+2)^0,w,c
  8270   003A8C  103B               	iorwf	(dtoa@n+3)^0,w,c
  8271   003A8E  103C               	iorwf	(dtoa@n+4)^0,w,c
  8272   003A90  103D               	iorwf	(dtoa@n+5)^0,w,c
  8273   003A92  103E               	iorwf	(dtoa@n+6)^0,w,c
  8274   003A94  103F               	iorwf	(dtoa@n+7)^0,w,c
  8275   003A96  A4D8               	btfss	status,2,c
  8276   003A98  EF50  F01D         	goto	u4061
  8277   003A9C  EF52  F01D         	goto	u4060
  8278   003AA0                     u4061:
  8279   003AA0  EFBA  F01C         	goto	l3853
  8280   003AA4                     u4060:
  8281   003AA4  BE35               	btfsc	(dtoa@p+1)^0,7,c
  8282   003AA6  EF5F  F01D         	goto	u4070
  8283   003AAA  5035               	movf	(dtoa@p+1)^0,w,c
  8284   003AAC  E106               	bnz	u4071
  8285   003AAE  0434               	decf	dtoa@p^0,w,c
  8286   003AB0  B0D8               	btfsc	status,0,c
  8287   003AB2  EF5D  F01D         	goto	u4071
  8288   003AB6  EF5F  F01D         	goto	u4070
  8289   003ABA                     u4071:
  8290   003ABA  EFBA  F01C         	goto	l3853
  8291   003ABE                     u4070:
  8292   003ABE                     l3869:
  8293                           
  8294                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  8295   003ABE  5042               	movf	dtoa@s^0,w,c
  8296   003AC0  B4D8               	btfsc	status,2,c
  8297   003AC2  EF65  F01D         	goto	u4081
  8298   003AC6  EF67  F01D         	goto	u4080
  8299   003ACA                     u4081:
  8300   003ACA  EF72  F01D         	goto	l3875
  8301   003ACE                     u4080:
  8302   003ACE                     
  8303                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  8304   003ACE  0640               	decf	dtoa@i^0,f,c
  8305   003AD0  A0D8               	btfss	status,0,c
  8306   003AD2  0641               	decf	(dtoa@i+1)^0,f,c
  8307   003AD4                     
  8308                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  8309   003AD4  0E9A               	movlw	low _dbuf
  8310   003AD6  2440               	addwf	dtoa@i^0,w,c
  8311   003AD8  6ED9               	movwf	fsr2l,c
  8312   003ADA  0E01               	movlw	high _dbuf
  8313   003ADC  2041               	addwfc	(dtoa@i+1)^0,w,c
  8314   003ADE  6EDA               	movwf	fsr2h,c
  8315   003AE0  C042  FFDF         	movff	dtoa@s,indf2
  8316   003AE4                     l3875:
  8317                           
  8318                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  8319   003AE4  C020  F015         	movff	dtoa@fp,pad@fp
  8320   003AE8  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  8321   003AEC  0E9A               	movlw	low _dbuf
  8322   003AEE  2440               	addwf	dtoa@i^0,w,c
  8323   003AF0  6E17               	movwf	pad@buf^0,c
  8324   003AF2  0E01               	movlw	high _dbuf
  8325   003AF4  2041               	addwfc	(dtoa@i+1)^0,w,c
  8326   003AF6  6E18               	movwf	(pad@buf+1)^0,c
  8327   003AF8  C036  F019         	movff	dtoa@w,pad@p
  8328   003AFC  C037  F01A         	movff	dtoa@w+1,pad@p+1
  8329   003B00  EC66  F023         	call	_pad	;wreg free
  8330   003B04  0012               	return		;funcret
  8331   003B06                     __end_of_dtoa:
  8332                           	callstack 0
  8333                           
  8334 ;; *************** function _pad *****************
  8335 ;; Defined at:
  8336 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8337 ;; Parameters:    Size  Location     Type
  8338 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  8339 ;;		 -> sprintf@f(11), 
  8340 ;;  buf             2   22[COMRAM] PTR unsigned char 
  8341 ;;		 -> dbuf(80), 
  8342 ;;  p               2   24[COMRAM] int 
  8343 ;; Auto vars:     Size  Location     Type
  8344 ;;  w               2   29[COMRAM] int 
  8345 ;;  i               2   27[COMRAM] int 
  8346 ;; Return value:  Size  Location     Type
  8347 ;;                  1    wreg      void 
  8348 ;; Registers used:
  8349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8350 ;; Tracked objects:
  8351 ;;		On entry : 0/0
  8352 ;;		On exit  : 0/0
  8353 ;;		Unchanged: 0/0
  8354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8355 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8356 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8357 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8358 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8359 ;;Total ram usage:       11 bytes
  8360 ;; Hardware stack levels used: 1
  8361 ;; Hardware stack levels required when called: 5
  8362 ;; This function calls:
  8363 ;;		_fputc
  8364 ;;		_fputs
  8365 ;; This function is called by:
  8366 ;;		_dtoa
  8367 ;;		_efgtoa
  8368 ;; This function uses a non-reentrant model
  8369 ;;
  8370                           
  8371                           	psect	text19
  8372   0046CC                     __ptext19:
  8373                           	callstack 0
  8374   0046CC                     _pad:
  8375                           	callstack 21
  8376   0046CC                     
  8377                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  8378   0046CC  BE1A               	btfsc	(pad@p+1)^0,7,c
  8379   0046CE  EF6B  F023         	goto	u3741
  8380   0046D2  EF6D  F023         	goto	u3740
  8381   0046D6                     u3741:
  8382   0046D6  EF73  F023         	goto	l3739
  8383   0046DA                     u3740:
  8384   0046DA  C019  F01E         	movff	pad@p,pad@w
  8385   0046DE  C01A  F01F         	movff	pad@p+1,pad@w+1
  8386   0046E2  EF77  F023         	goto	l1056
  8387   0046E6                     l3739:
  8388   0046E6  0E00               	movlw	0
  8389   0046E8  6E1F               	movwf	(pad@w+1)^0,c
  8390   0046EA  0E00               	movlw	0
  8391   0046EC  6E1E               	movwf	pad@w^0,c
  8392   0046EE                     l1056:
  8393                           
  8394                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  8395   0046EE  0E00               	movlw	0
  8396   0046F0  6E1D               	movwf	(pad@i+1)^0,c
  8397   0046F2  0E00               	movlw	0
  8398   0046F4  6E1C               	movwf	pad@i^0,c
  8399                           
  8400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  8401   0046F6  EF89  F023         	goto	l3745
  8402   0046FA                     l3741:
  8403                           
  8404                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  8405   0046FA  0E00               	movlw	0
  8406   0046FC  6E06               	movwf	(fputc@c+1)^0,c
  8407   0046FE  0E20               	movlw	32
  8408   004700  6E05               	movwf	fputc@c^0,c
  8409   004702  C015  F007         	movff	pad@fp,fputc@fp
  8410   004706  C016  F008         	movff	pad@fp+1,fputc@fp+1
  8411   00470A  EC62  F022         	call	_fputc	;wreg free
  8412   00470E                     
  8413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  8414   00470E  4A1C               	infsnz	pad@i^0,f,c
  8415   004710  2A1D               	incf	(pad@i+1)^0,f,c
  8416   004712                     l3745:
  8417                           
  8418                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  8419   004712  501E               	movf	pad@w^0,w,c
  8420   004714  5C1C               	subwf	pad@i^0,w,c
  8421   004716  501D               	movf	(pad@i+1)^0,w,c
  8422   004718  0A80               	xorlw	128
  8423   00471A  6E1B               	movwf	??_pad^0,c
  8424   00471C  501F               	movf	(pad@w+1)^0,w,c
  8425   00471E  0A80               	xorlw	128
  8426   004720  581B               	subwfb	??_pad^0,w,c
  8427   004722  A0D8               	btfss	status,0,c
  8428   004724  EF96  F023         	goto	u3751
  8429   004728  EF98  F023         	goto	u3750
  8430   00472C                     u3751:
  8431   00472C  EF7D  F023         	goto	l3741
  8432   004730                     u3750:
  8433   004730                     
  8434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  8435   004730  C017  F00E         	movff	pad@buf,fputs@s
  8436   004734  C018  F00F         	movff	pad@buf+1,fputs@s+1
  8437   004738  C015  F010         	movff	pad@fp,fputs@fp
  8438   00473C  C016  F011         	movff	pad@fp+1,fputs@fp+1
  8439   004740  EC8B  F025         	call	_fputs	;wreg free
  8440   004744  0012               	return		;funcret
  8441   004746                     __end_of_pad:
  8442                           	callstack 0
  8443                           
  8444 ;; *************** function _fputs *****************
  8445 ;; Defined at:
  8446 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  8447 ;; Parameters:    Size  Location     Type
  8448 ;;  s               2   13[COMRAM] PTR const unsigned char 
  8449 ;;		 -> dbuf(80), 
  8450 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  8451 ;;		 -> sprintf@f(11), 
  8452 ;; Auto vars:     Size  Location     Type
  8453 ;;  i               2   18[COMRAM] int 
  8454 ;;  c               1   17[COMRAM] unsigned char 
  8455 ;; Return value:  Size  Location     Type
  8456 ;;                  2   13[COMRAM] int 
  8457 ;; Registers used:
  8458 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8459 ;; Tracked objects:
  8460 ;;		On entry : 0/0
  8461 ;;		On exit  : 0/0
  8462 ;;		Unchanged: 0/0
  8463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8464 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8465 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8467 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8468 ;;Total ram usage:        7 bytes
  8469 ;; Hardware stack levels used: 1
  8470 ;; Hardware stack levels required when called: 4
  8471 ;; This function calls:
  8472 ;;		_fputc
  8473 ;; This function is called by:
  8474 ;;		_pad
  8475 ;; This function uses a non-reentrant model
  8476 ;;
  8477                           
  8478                           	psect	text20
  8479   004B16                     __ptext20:
  8480                           	callstack 0
  8481   004B16                     _fputs:
  8482                           	callstack 21
  8483   004B16  0E00               	movlw	0
  8484   004B18  6E14               	movwf	(fputs@i+1)^0,c
  8485   004B1A  0E00               	movlw	0
  8486   004B1C  6E13               	movwf	fputs@i^0,c
  8487   004B1E  EF9C  F025         	goto	l3289
  8488   004B22                     l3285:
  8489   004B22  C012  F005         	movff	fputs@c,fputc@c
  8490   004B26  6A06               	clrf	(fputc@c+1)^0,c
  8491   004B28  C010  F007         	movff	fputs@fp,fputc@fp
  8492   004B2C  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  8493   004B30  EC62  F022         	call	_fputc	;wreg free
  8494   004B34  4A13               	infsnz	fputs@i^0,f,c
  8495   004B36  2A14               	incf	(fputs@i+1)^0,f,c
  8496   004B38                     l3289:
  8497   004B38  5013               	movf	fputs@i^0,w,c
  8498   004B3A  240E               	addwf	fputs@s^0,w,c
  8499   004B3C  6ED9               	movwf	fsr2l,c
  8500   004B3E  5014               	movf	(fputs@i+1)^0,w,c
  8501   004B40  200F               	addwfc	(fputs@s+1)^0,w,c
  8502   004B42  6EDA               	movwf	fsr2h,c
  8503   004B44  50DF               	movf	indf2,w,c
  8504   004B46  6E12               	movwf	fputs@c^0,c
  8505   004B48  5012               	movf	fputs@c^0,w,c
  8506   004B4A  A4D8               	btfss	status,2,c
  8507   004B4C  EFAA  F025         	goto	u3021
  8508   004B50  EFAC  F025         	goto	u3020
  8509   004B54                     u3021:
  8510   004B54  EF91  F025         	goto	l3285
  8511   004B58                     u3020:
  8512   004B58  0012               	return		;funcret
  8513   004B5A                     __end_of_fputs:
  8514                           	callstack 0
  8515                           
  8516 ;; *************** function _fputc *****************
  8517 ;; Defined at:
  8518 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  8519 ;; Parameters:    Size  Location     Type
  8520 ;;  c               2    4[COMRAM] int 
  8521 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  8522 ;;		 -> sprintf@f(11), 
  8523 ;; Auto vars:     Size  Location     Type
  8524 ;;		None
  8525 ;; Return value:  Size  Location     Type
  8526 ;;                  2    4[COMRAM] int 
  8527 ;; Registers used:
  8528 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8529 ;; Tracked objects:
  8530 ;;		On entry : 0/0
  8531 ;;		On exit  : 0/0
  8532 ;;		Unchanged: 0/0
  8533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8534 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8536 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8537 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8538 ;;Total ram usage:        9 bytes
  8539 ;; Hardware stack levels used: 1
  8540 ;; Hardware stack levels required when called: 3
  8541 ;; This function calls:
  8542 ;;		_putch
  8543 ;; This function is called by:
  8544 ;;		_pad
  8545 ;;		_vfpfcnvrt
  8546 ;;		_fputs
  8547 ;; This function uses a non-reentrant model
  8548 ;;
  8549                           
  8550                           	psect	text21
  8551   0044C4                     __ptext21:
  8552                           	callstack 0
  8553   0044C4                     _fputc:
  8554                           	callstack 24
  8555   0044C4  5007               	movf	fputc@fp^0,w,c
  8556   0044C6  1008               	iorwf	(fputc@fp+1)^0,w,c
  8557   0044C8  B4D8               	btfsc	status,2,c
  8558   0044CA  EF69  F022         	goto	u2591
  8559   0044CE  EF6B  F022         	goto	u2590
  8560   0044D2                     u2591:
  8561   0044D2  EF74  F022         	goto	l3071
  8562   0044D6                     u2590:
  8563   0044D6  5007               	movf	fputc@fp^0,w,c
  8564   0044D8  1008               	iorwf	(fputc@fp+1)^0,w,c
  8565   0044DA  A4D8               	btfss	status,2,c
  8566   0044DC  EF72  F022         	goto	u2601
  8567   0044E0  EF74  F022         	goto	u2600
  8568   0044E4                     u2601:
  8569   0044E4  EF79  F022         	goto	l3073
  8570   0044E8                     u2600:
  8571   0044E8                     l3071:
  8572   0044E8  5005               	movf	fputc@c^0,w,c
  8573   0044EA  EC21  F027         	call	_putch
  8574   0044EE  EFC6  F022         	goto	l1216
  8575   0044F2                     l3073:
  8576   0044F2  EE20 F009          	lfsr	2,9
  8577   0044F6  5007               	movf	fputc@fp^0,w,c
  8578   0044F8  26D9               	addwf	fsr2l,f,c
  8579   0044FA  5008               	movf	(fputc@fp+1)^0,w,c
  8580   0044FC  22DA               	addwfc	fsr2h,f,c
  8581   0044FE  50DE               	movf	postinc2,w,c
  8582   004500  10DE               	iorwf	postinc2,w,c
  8583   004502  B4D8               	btfsc	status,2,c
  8584   004504  EF86  F022         	goto	u2611
  8585   004508  EF88  F022         	goto	u2610
  8586   00450C                     u2611:
  8587   00450C  EFA3  F022         	goto	l3077
  8588   004510                     u2610:
  8589   004510  EE20 F009          	lfsr	2,9
  8590   004514  5007               	movf	fputc@fp^0,w,c
  8591   004516  26D9               	addwf	fsr2l,f,c
  8592   004518  5008               	movf	(fputc@fp+1)^0,w,c
  8593   00451A  22DA               	addwfc	fsr2h,f,c
  8594   00451C  EE10 F003          	lfsr	1,3
  8595   004520  5007               	movf	fputc@fp^0,w,c
  8596   004522  26E1               	addwf	fsr1l,f,c
  8597   004524  5008               	movf	(fputc@fp+1)^0,w,c
  8598   004526  22E2               	addwfc	fsr1h,f,c
  8599   004528  50DE               	movf	postinc2,w,c
  8600   00452A  5CE6               	subwf	postinc1,w,c
  8601   00452C  50E6               	movf	postinc1,w,c
  8602   00452E  0A80               	xorlw	128
  8603   004530  6E0D               	movwf	(??_fputc+4)^0,c
  8604   004532  50DE               	movf	postinc2,w,c
  8605   004534  0A80               	xorlw	128
  8606   004536  580D               	subwfb	(??_fputc+4)^0,w,c
  8607   004538  B0D8               	btfsc	status,0,c
  8608   00453A  EFA1  F022         	goto	u2621
  8609   00453E  EFA3  F022         	goto	u2620
  8610   004542                     u2621:
  8611   004542  EFC6  F022         	goto	l1216
  8612   004546                     u2620:
  8613   004546                     l3077:
  8614   004546  EE20 F003          	lfsr	2,3
  8615   00454A  5007               	movf	fputc@fp^0,w,c
  8616   00454C  26D9               	addwf	fsr2l,f,c
  8617   00454E  5008               	movf	(fputc@fp+1)^0,w,c
  8618   004550  22DA               	addwfc	fsr2h,f,c
  8619   004552  CFDE F009          	movff	postinc2,??_fputc
  8620   004556  CFDD F00A          	movff	postdec2,??_fputc+1
  8621   00455A  C007  FFD9         	movff	fputc@fp,fsr2l
  8622   00455E  C008  FFDA         	movff	fputc@fp+1,fsr2h
  8623   004562  CFDE F00B          	movff	postinc2,??_fputc+2
  8624   004566  CFDD F00C          	movff	postdec2,??_fputc+3
  8625   00456A  5009               	movf	??_fputc^0,w,c
  8626   00456C  240B               	addwf	(??_fputc+2)^0,w,c
  8627   00456E  6ED9               	movwf	fsr2l,c
  8628   004570  500A               	movf	(??_fputc+1)^0,w,c
  8629   004572  200C               	addwfc	(??_fputc+3)^0,w,c
  8630   004574  6EDA               	movwf	fsr2h,c
  8631   004576  C005  FFDF         	movff	fputc@c,indf2
  8632   00457A  EE20 F003          	lfsr	2,3
  8633   00457E  5007               	movf	fputc@fp^0,w,c
  8634   004580  26D9               	addwf	fsr2l,f,c
  8635   004582  5008               	movf	(fputc@fp+1)^0,w,c
  8636   004584  22DA               	addwfc	fsr2h,f,c
  8637   004586  2ADE               	incf	postinc2,f,c
  8638   004588  0E00               	movlw	0
  8639   00458A  22DD               	addwfc	postdec2,f,c
  8640   00458C                     l1216:
  8641   00458C  0012               	return		;funcret
  8642   00458E                     __end_of_fputc:
  8643                           	callstack 0
  8644                           
  8645 ;; *************** function _putch *****************
  8646 ;; Defined at:
  8647 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  8648 ;; Parameters:    Size  Location     Type
  8649 ;;  c               1    wreg     unsigned char 
  8650 ;; Auto vars:     Size  Location     Type
  8651 ;;  c               1    0[COMRAM] unsigned char 
  8652 ;; Return value:  Size  Location     Type
  8653 ;;                  1    wreg      void 
  8654 ;; Registers used:
  8655 ;;		wreg
  8656 ;; Tracked objects:
  8657 ;;		On entry : 0/0
  8658 ;;		On exit  : 0/0
  8659 ;;		Unchanged: 0/0
  8660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8665 ;;Total ram usage:        0 bytes
  8666 ;; Hardware stack levels used: 1
  8667 ;; Hardware stack levels required when called: 2
  8668 ;; This function calls:
  8669 ;;		Nothing
  8670 ;; This function is called by:
  8671 ;;		_fputc
  8672 ;; This function uses a non-reentrant model
  8673 ;;
  8674                           
  8675                           	psect	text22
  8676   004E42                     __ptext22:
  8677                           	callstack 0
  8678   004E42                     _putch:
  8679                           	callstack 24
  8680   004E42  0012               	return		;funcret
  8681   004E44                     __end_of_putch:
  8682                           	callstack 0
  8683                           
  8684 ;; *************** function _abs *****************
  8685 ;; Defined at:
  8686 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  8687 ;; Parameters:    Size  Location     Type
  8688 ;;  a               2   22[COMRAM] int 
  8689 ;; Auto vars:     Size  Location     Type
  8690 ;;		None
  8691 ;; Return value:  Size  Location     Type
  8692 ;;                  2   22[COMRAM] int 
  8693 ;; Registers used:
  8694 ;;		wreg, status,2, status,0
  8695 ;; Tracked objects:
  8696 ;;		On entry : 0/0
  8697 ;;		On exit  : 0/0
  8698 ;;		Unchanged: 0/0
  8699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8700 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8702 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8703 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8704 ;;Total ram usage:        4 bytes
  8705 ;; Hardware stack levels used: 1
  8706 ;; Hardware stack levels required when called: 2
  8707 ;; This function calls:
  8708 ;;		Nothing
  8709 ;; This function is called by:
  8710 ;;		_dtoa
  8711 ;; This function uses a non-reentrant model
  8712 ;;
  8713                           
  8714                           	psect	text23
  8715   004B9C                     __ptext23:
  8716                           	callstack 0
  8717   004B9C                     _abs:
  8718                           	callstack 24
  8719   004B9C  BE18               	btfsc	(abs@a+1)^0,7,c
  8720   004B9E  EFDB  F025         	goto	u3760
  8721   004BA2  5018               	movf	(abs@a+1)^0,w,c
  8722   004BA4  E106               	bnz	u3761
  8723   004BA6  0417               	decf	abs@a^0,w,c
  8724   004BA8  B0D8               	btfsc	status,0,c
  8725   004BAA  EFD9  F025         	goto	u3761
  8726   004BAE  EFDB  F025         	goto	u3760
  8727   004BB2                     u3761:
  8728   004BB2  EFE9  F025         	goto	l1175
  8729   004BB6                     u3760:
  8730   004BB6  C017  F019         	movff	abs@a,??_abs
  8731   004BBA  C018  F01A         	movff	abs@a+1,??_abs+1
  8732   004BBE  1E19               	comf	??_abs^0,f,c
  8733   004BC0  1E1A               	comf	(??_abs+1)^0,f,c
  8734   004BC2  4A19               	infsnz	??_abs^0,f,c
  8735   004BC4  2A1A               	incf	(??_abs+1)^0,f,c
  8736   004BC6  C019  F017         	movff	??_abs,?_abs
  8737   004BCA  C01A  F018         	movff	??_abs+1,?_abs+1
  8738   004BCE  EFED  F025         	goto	l1178
  8739   004BD2                     l1175:
  8740   004BD2  C017  F017         	movff	abs@a,?_abs
  8741   004BD6  C018  F018         	movff	abs@a+1,?_abs+1
  8742   004BDA                     l1178:
  8743   004BDA  0012               	return		;funcret
  8744   004BDC                     __end_of_abs:
  8745                           	callstack 0
  8746                           
  8747 ;; *************** function ___aomod *****************
  8748 ;; Defined at:
  8749 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  8750 ;; Parameters:    Size  Location     Type
  8751 ;;  dividend        8    4[COMRAM] long long 
  8752 ;;  divisor         8   12[COMRAM] long long 
  8753 ;; Auto vars:     Size  Location     Type
  8754 ;;  sign            1   21[COMRAM] unsigned char 
  8755 ;;  counter         1   20[COMRAM] unsigned char 
  8756 ;; Return value:  Size  Location     Type
  8757 ;;                  8    4[COMRAM] long long 
  8758 ;; Registers used:
  8759 ;;		wreg, status,2, status,0
  8760 ;; Tracked objects:
  8761 ;;		On entry : 0/0
  8762 ;;		On exit  : 0/0
  8763 ;;		Unchanged: 0/0
  8764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8765 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8766 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8768 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8769 ;;Total ram usage:       18 bytes
  8770 ;; Hardware stack levels used: 1
  8771 ;; Hardware stack levels required when called: 2
  8772 ;; This function calls:
  8773 ;;		Nothing
  8774 ;; This function is called by:
  8775 ;;		_dtoa
  8776 ;; This function uses a non-reentrant model
  8777 ;;
  8778                           
  8779                           	psect	text24
  8780   004058                     __ptext24:
  8781                           	callstack 0
  8782   004058                     ___aomod:
  8783                           	callstack 24
  8784   004058  0E00               	movlw	0
  8785   00405A  6E16               	movwf	___aomod@sign^0,c
  8786   00405C  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  8787   00405E  EF35  F020         	goto	u3100
  8788   004062  EF33  F020         	goto	u3101
  8789   004066                     u3101:
  8790   004066  EF47  F020         	goto	l3343
  8791   00406A                     u3100:
  8792   00406A  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  8793   00406C  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  8794   00406E  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  8795   004070  1E09               	comf	(___aomod@dividend+4)^0,f,c
  8796   004072  1E08               	comf	(___aomod@dividend+3)^0,f,c
  8797   004074  1E07               	comf	(___aomod@dividend+2)^0,f,c
  8798   004076  1E06               	comf	(___aomod@dividend+1)^0,f,c
  8799   004078  6C05               	negf	___aomod@dividend^0,c
  8800   00407A  0E00               	movlw	0
  8801   00407C  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  8802   00407E  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  8803   004080  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  8804   004082  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  8805   004084  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  8806   004086  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  8807   004088  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  8808   00408A  0E01               	movlw	1
  8809   00408C  6E16               	movwf	___aomod@sign^0,c
  8810   00408E                     l3343:
  8811   00408E  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  8812   004090  EF4E  F020         	goto	u3110
  8813   004094  EF4C  F020         	goto	u3111
  8814   004098                     u3111:
  8815   004098  EF5E  F020         	goto	l3347
  8816   00409C                     u3110:
  8817   00409C  1E14               	comf	(___aomod@divisor+7)^0,f,c
  8818   00409E  1E13               	comf	(___aomod@divisor+6)^0,f,c
  8819   0040A0  1E12               	comf	(___aomod@divisor+5)^0,f,c
  8820   0040A2  1E11               	comf	(___aomod@divisor+4)^0,f,c
  8821   0040A4  1E10               	comf	(___aomod@divisor+3)^0,f,c
  8822   0040A6  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  8823   0040A8  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  8824   0040AA  6C0D               	negf	___aomod@divisor^0,c
  8825   0040AC  0E00               	movlw	0
  8826   0040AE  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  8827   0040B0  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  8828   0040B2  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  8829   0040B4  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  8830   0040B6  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  8831   0040B8  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  8832   0040BA  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  8833   0040BC                     l3347:
  8834   0040BC  500D               	movf	___aomod@divisor^0,w,c
  8835   0040BE  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  8836   0040C0  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  8837   0040C2  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  8838   0040C4  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  8839   0040C6  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  8840   0040C8  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  8841   0040CA  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  8842   0040CC  B4D8               	btfsc	status,2,c
  8843   0040CE  EF6B  F020         	goto	u3121
  8844   0040D2  EF6D  F020         	goto	u3120
  8845   0040D6                     u3121:
  8846   0040D6  EFB5  F020         	goto	l3363
  8847   0040DA                     u3120:
  8848   0040DA  0E01               	movlw	1
  8849   0040DC  6E15               	movwf	___aomod@counter^0,c
  8850   0040DE  EF7B  F020         	goto	l3353
  8851   0040E2                     l3351:
  8852   0040E2  90D8               	bcf	status,0,c
  8853   0040E4  360D               	rlcf	___aomod@divisor^0,f,c
  8854   0040E6  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  8855   0040E8  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  8856   0040EA  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  8857   0040EC  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  8858   0040EE  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  8859   0040F0  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  8860   0040F2  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  8861   0040F4  2A15               	incf	___aomod@counter^0,f,c
  8862   0040F6                     l3353:
  8863   0040F6  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  8864   0040F8  EF80  F020         	goto	u3131
  8865   0040FC  EF82  F020         	goto	u3130
  8866   004100                     u3131:
  8867   004100  EF71  F020         	goto	l3351
  8868   004104                     u3130:
  8869   004104                     l3355:
  8870   004104  500D               	movf	___aomod@divisor^0,w,c
  8871   004106  5C05               	subwf	___aomod@dividend^0,w,c
  8872   004108  500E               	movf	(___aomod@divisor+1)^0,w,c
  8873   00410A  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  8874   00410C  500F               	movf	(___aomod@divisor+2)^0,w,c
  8875   00410E  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  8876   004110  5010               	movf	(___aomod@divisor+3)^0,w,c
  8877   004112  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  8878   004114  5011               	movf	(___aomod@divisor+4)^0,w,c
  8879   004116  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  8880   004118  5012               	movf	(___aomod@divisor+5)^0,w,c
  8881   00411A  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  8882   00411C  5013               	movf	(___aomod@divisor+6)^0,w,c
  8883   00411E  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  8884   004120  5014               	movf	(___aomod@divisor+7)^0,w,c
  8885   004122  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  8886   004124  A0D8               	btfss	status,0,c
  8887   004126  EF97  F020         	goto	u3141
  8888   00412A  EF99  F020         	goto	u3140
  8889   00412E                     u3141:
  8890   00412E  EFA9  F020         	goto	l3359
  8891   004132                     u3140:
  8892   004132  500D               	movf	___aomod@divisor^0,w,c
  8893   004134  5E05               	subwf	___aomod@dividend^0,f,c
  8894   004136  500E               	movf	(___aomod@divisor+1)^0,w,c
  8895   004138  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  8896   00413A  500F               	movf	(___aomod@divisor+2)^0,w,c
  8897   00413C  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  8898   00413E  5010               	movf	(___aomod@divisor+3)^0,w,c
  8899   004140  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  8900   004142  5011               	movf	(___aomod@divisor+4)^0,w,c
  8901   004144  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  8902   004146  5012               	movf	(___aomod@divisor+5)^0,w,c
  8903   004148  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  8904   00414A  5013               	movf	(___aomod@divisor+6)^0,w,c
  8905   00414C  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  8906   00414E  5014               	movf	(___aomod@divisor+7)^0,w,c
  8907   004150  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  8908   004152                     l3359:
  8909   004152  90D8               	bcf	status,0,c
  8910   004154  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  8911   004156  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  8912   004158  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  8913   00415A  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  8914   00415C  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  8915   00415E  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  8916   004160  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  8917   004162  320D               	rrcf	___aomod@divisor^0,f,c
  8918   004164  2E15               	decfsz	___aomod@counter^0,f,c
  8919   004166  EF82  F020         	goto	l3355
  8920   00416A                     l3363:
  8921   00416A  5016               	movf	___aomod@sign^0,w,c
  8922   00416C  B4D8               	btfsc	status,2,c
  8923   00416E  EFBB  F020         	goto	u3151
  8924   004172  EFBD  F020         	goto	u3150
  8925   004176                     u3151:
  8926   004176  EFCD  F020         	goto	l3367
  8927   00417A                     u3150:
  8928   00417A  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  8929   00417C  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  8930   00417E  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  8931   004180  1E09               	comf	(___aomod@dividend+4)^0,f,c
  8932   004182  1E08               	comf	(___aomod@dividend+3)^0,f,c
  8933   004184  1E07               	comf	(___aomod@dividend+2)^0,f,c
  8934   004186  1E06               	comf	(___aomod@dividend+1)^0,f,c
  8935   004188  6C05               	negf	___aomod@dividend^0,c
  8936   00418A  0E00               	movlw	0
  8937   00418C  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  8938   00418E  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  8939   004190  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  8940   004192  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  8941   004194  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  8942   004196  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  8943   004198  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  8944   00419A                     l3367:
  8945   00419A  C005  F005         	movff	___aomod@dividend,?___aomod
  8946   00419E  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  8947   0041A2  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  8948   0041A6  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  8949   0041AA  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  8950   0041AE  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  8951   0041B2  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  8952   0041B6  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  8953   0041BA  0012               	return		;funcret
  8954   0041BC                     __end_of___aomod:
  8955                           	callstack 0
  8956                           
  8957 ;; *************** function ___aodiv *****************
  8958 ;; Defined at:
  8959 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  8960 ;; Parameters:    Size  Location     Type
  8961 ;;  dividend        8    4[COMRAM] long long 
  8962 ;;  divisor         8   12[COMRAM] long long 
  8963 ;; Auto vars:     Size  Location     Type
  8964 ;;  quotient        8   22[COMRAM] long long 
  8965 ;;  sign            1   21[COMRAM] unsigned char 
  8966 ;;  counter         1   20[COMRAM] unsigned char 
  8967 ;; Return value:  Size  Location     Type
  8968 ;;                  8    4[COMRAM] long long 
  8969 ;; Registers used:
  8970 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8971 ;; Tracked objects:
  8972 ;;		On entry : 0/0
  8973 ;;		On exit  : 0/0
  8974 ;;		Unchanged: 0/0
  8975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8976 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8977 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8979 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8980 ;;Total ram usage:       26 bytes
  8981 ;; Hardware stack levels used: 1
  8982 ;; Hardware stack levels required when called: 2
  8983 ;; This function calls:
  8984 ;;		Nothing
  8985 ;; This function is called by:
  8986 ;;		_dtoa
  8987 ;; This function uses a non-reentrant model
  8988 ;;
  8989                           
  8990                           	psect	text25
  8991   003ED0                     __ptext25:
  8992                           	callstack 0
  8993   003ED0                     ___aodiv:
  8994                           	callstack 24
  8995   003ED0  0E00               	movlw	0
  8996   003ED2  6E16               	movwf	___aodiv@sign^0,c
  8997   003ED4  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  8998   003ED6  EF71  F01F         	goto	u3030
  8999   003EDA  EF6F  F01F         	goto	u3031
  9000   003EDE                     u3031:
  9001   003EDE  EF83  F01F         	goto	l3299
  9002   003EE2                     u3030:
  9003   003EE2  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  9004   003EE4  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  9005   003EE6  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  9006   003EE8  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  9007   003EEA  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  9008   003EEC  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  9009   003EEE  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  9010   003EF0  6C0D               	negf	___aodiv@divisor^0,c
  9011   003EF2  0E00               	movlw	0
  9012   003EF4  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  9013   003EF6  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  9014   003EF8  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  9015   003EFA  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  9016   003EFC  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  9017   003EFE  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  9018   003F00  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  9019   003F02  0E01               	movlw	1
  9020   003F04  6E16               	movwf	___aodiv@sign^0,c
  9021   003F06                     l3299:
  9022   003F06  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  9023   003F08  EF8A  F01F         	goto	u3040
  9024   003F0C  EF88  F01F         	goto	u3041
  9025   003F10                     u3041:
  9026   003F10  EF9C  F01F         	goto	l3305
  9027   003F14                     u3040:
  9028   003F14  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  9029   003F16  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  9030   003F18  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  9031   003F1A  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  9032   003F1C  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  9033   003F1E  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  9034   003F20  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  9035   003F22  6C05               	negf	___aodiv@dividend^0,c
  9036   003F24  0E00               	movlw	0
  9037   003F26  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  9038   003F28  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  9039   003F2A  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  9040   003F2C  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  9041   003F2E  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  9042   003F30  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  9043   003F32  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  9044   003F34  0E01               	movlw	1
  9045   003F36  1A16               	xorwf	___aodiv@sign^0,f,c
  9046   003F38                     l3305:
  9047   003F38  EE20  F017         	lfsr	2,___aodiv@quotient
  9048   003F3C  0E07               	movlw	7
  9049   003F3E                     u3051:
  9050   003F3E  6ADE               	clrf	postinc2,c
  9051   003F40  06E8               	decf	wreg,f,c
  9052   003F42  E2FD               	bc	u3051
  9053   003F44  500D               	movf	___aodiv@divisor^0,w,c
  9054   003F46  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  9055   003F48  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  9056   003F4A  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  9057   003F4C  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  9058   003F4E  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  9059   003F50  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  9060   003F52  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  9061   003F54  B4D8               	btfsc	status,2,c
  9062   003F56  EFAF  F01F         	goto	u3061
  9063   003F5A  EFB1  F01F         	goto	u3060
  9064   003F5E                     u3061:
  9065   003F5E  EF03  F020         	goto	l3327
  9066   003F62                     u3060:
  9067   003F62  0E01               	movlw	1
  9068   003F64  6E15               	movwf	___aodiv@counter^0,c
  9069   003F66  EFBF  F01F         	goto	l3313
  9070   003F6A                     l3311:
  9071   003F6A  90D8               	bcf	status,0,c
  9072   003F6C  360D               	rlcf	___aodiv@divisor^0,f,c
  9073   003F6E  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  9074   003F70  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  9075   003F72  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  9076   003F74  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  9077   003F76  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  9078   003F78  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  9079   003F7A  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  9080   003F7C  2A15               	incf	___aodiv@counter^0,f,c
  9081   003F7E                     l3313:
  9082   003F7E  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  9083   003F80  EFC4  F01F         	goto	u3071
  9084   003F84  EFC6  F01F         	goto	u3070
  9085   003F88                     u3071:
  9086   003F88  EFB5  F01F         	goto	l3311
  9087   003F8C                     u3070:
  9088   003F8C                     l3315:
  9089   003F8C  90D8               	bcf	status,0,c
  9090   003F8E  3617               	rlcf	___aodiv@quotient^0,f,c
  9091   003F90  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  9092   003F92  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  9093   003F94  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  9094   003F96  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  9095   003F98  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  9096   003F9A  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  9097   003F9C  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  9098   003F9E  500D               	movf	___aodiv@divisor^0,w,c
  9099   003FA0  5C05               	subwf	___aodiv@dividend^0,w,c
  9100   003FA2  500E               	movf	(___aodiv@divisor+1)^0,w,c
  9101   003FA4  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  9102   003FA6  500F               	movf	(___aodiv@divisor+2)^0,w,c
  9103   003FA8  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  9104   003FAA  5010               	movf	(___aodiv@divisor+3)^0,w,c
  9105   003FAC  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  9106   003FAE  5011               	movf	(___aodiv@divisor+4)^0,w,c
  9107   003FB0  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  9108   003FB2  5012               	movf	(___aodiv@divisor+5)^0,w,c
  9109   003FB4  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  9110   003FB6  5013               	movf	(___aodiv@divisor+6)^0,w,c
  9111   003FB8  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  9112   003FBA  5014               	movf	(___aodiv@divisor+7)^0,w,c
  9113   003FBC  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  9114   003FBE  A0D8               	btfss	status,0,c
  9115   003FC0  EFE4  F01F         	goto	u3081
  9116   003FC4  EFE6  F01F         	goto	u3080
  9117   003FC8                     u3081:
  9118   003FC8  EFF7  F01F         	goto	l3323
  9119   003FCC                     u3080:
  9120   003FCC  500D               	movf	___aodiv@divisor^0,w,c
  9121   003FCE  5E05               	subwf	___aodiv@dividend^0,f,c
  9122   003FD0  500E               	movf	(___aodiv@divisor+1)^0,w,c
  9123   003FD2  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  9124   003FD4  500F               	movf	(___aodiv@divisor+2)^0,w,c
  9125   003FD6  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  9126   003FD8  5010               	movf	(___aodiv@divisor+3)^0,w,c
  9127   003FDA  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  9128   003FDC  5011               	movf	(___aodiv@divisor+4)^0,w,c
  9129   003FDE  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  9130   003FE0  5012               	movf	(___aodiv@divisor+5)^0,w,c
  9131   003FE2  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  9132   003FE4  5013               	movf	(___aodiv@divisor+6)^0,w,c
  9133   003FE6  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  9134   003FE8  5014               	movf	(___aodiv@divisor+7)^0,w,c
  9135   003FEA  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  9136   003FEC  8017               	bsf	___aodiv@quotient^0,0,c
  9137   003FEE                     l3323:
  9138   003FEE  90D8               	bcf	status,0,c
  9139   003FF0  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  9140   003FF2  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  9141   003FF4  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  9142   003FF6  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  9143   003FF8  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  9144   003FFA  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  9145   003FFC  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  9146   003FFE  320D               	rrcf	___aodiv@divisor^0,f,c
  9147   004000  2E15               	decfsz	___aodiv@counter^0,f,c
  9148   004002  EFC6  F01F         	goto	l3315
  9149   004006                     l3327:
  9150   004006  5016               	movf	___aodiv@sign^0,w,c
  9151   004008  B4D8               	btfsc	status,2,c
  9152   00400A  EF09  F020         	goto	u3091
  9153   00400E  EF0B  F020         	goto	u3090
  9154   004012                     u3091:
  9155   004012  EF1B  F020         	goto	l3331
  9156   004016                     u3090:
  9157   004016  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  9158   004018  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  9159   00401A  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  9160   00401C  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  9161   00401E  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  9162   004020  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  9163   004022  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  9164   004024  6C17               	negf	___aodiv@quotient^0,c
  9165   004026  0E00               	movlw	0
  9166   004028  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  9167   00402A  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  9168   00402C  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  9169   00402E  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  9170   004030  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  9171   004032  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  9172   004034  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  9173   004036                     l3331:
  9174   004036  C017  F005         	movff	___aodiv@quotient,?___aodiv
  9175   00403A  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  9176   00403E  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  9177   004042  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  9178   004046  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  9179   00404A  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  9180   00404E  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  9181   004052  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  9182   004056  0012               	return		;funcret
  9183   004058                     __end_of___aodiv:
  9184                           	callstack 0
  9185                           
  9186 ;; *************** function _sendTxBuf *****************
  9187 ;; Defined at:
  9188 ;;		line 126 in file "serialTest.c"
  9189 ;; Parameters:    Size  Location     Type
  9190 ;;		None
  9191 ;; Auto vars:     Size  Location     Type
  9192 ;;		None
  9193 ;; Return value:  Size  Location     Type
  9194 ;;                  1    wreg      void 
  9195 ;; Registers used:
  9196 ;;		wreg, status,2, status,0, cstack
  9197 ;; Tracked objects:
  9198 ;;		On entry : 0/0
  9199 ;;		On exit  : 0/0
  9200 ;;		Unchanged: 0/0
  9201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9206 ;;Total ram usage:        0 bytes
  9207 ;; Hardware stack levels used: 1
  9208 ;; Hardware stack levels required when called: 3
  9209 ;; This function calls:
  9210 ;;		_isDataInTxBuf
  9211 ;; This function is called by:
  9212 ;;		_main
  9213 ;; This function uses a non-reentrant model
  9214 ;;
  9215                           
  9216                           	psect	text26
  9217   004DCE                     __ptext26:
  9218                           	callstack 0
  9219   004DCE                     _sendTxBuf:
  9220                           	callstack 27
  9221   004DCE                     
  9222                           ;serialTest.c: 127:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;}
  9223   004DCE  ECF4  F026         	call	_isDataInTxBuf	;wreg free
  9224   004DD2  0900               	iorlw	0
  9225   004DD4  B4D8               	btfsc	status,2,c
  9226   004DD6  EFEF  F026         	goto	u4521
  9227   004DDA  EFF1  F026         	goto	u4520
  9228   004DDE                     u4521:
  9229   004DDE  EFF3  F026         	goto	l334
  9230   004DE2                     u4520:
  9231   004DE2  010E               	movlb	14	; () banked
  9232   004DE4  852D               	bsf	45,2,b	;volatile
  9233   004DE6                     l334:
  9234   004DE6  0012               	return		;funcret
  9235   004DE8                     __end_of_sendTxBuf:
  9236                           	callstack 0
  9237                           
  9238 ;; *************** function _isDataInTxBuf *****************
  9239 ;; Defined at:
  9240 ;;		line 113 in file "serialTest.c"
  9241 ;; Parameters:    Size  Location     Type
  9242 ;;		None
  9243 ;; Auto vars:     Size  Location     Type
  9244 ;;		None
  9245 ;; Return value:  Size  Location     Type
  9246 ;;                  1    wreg      unsigned char 
  9247 ;; Registers used:
  9248 ;;		wreg, status,2, status,0
  9249 ;; Tracked objects:
  9250 ;;		On entry : 0/0
  9251 ;;		On exit  : 0/0
  9252 ;;		Unchanged: 0/0
  9253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9258 ;;Total ram usage:        0 bytes
  9259 ;; Hardware stack levels used: 1
  9260 ;; Hardware stack levels required when called: 2
  9261 ;; This function calls:
  9262 ;;		Nothing
  9263 ;; This function is called by:
  9264 ;;		_sendTxBuf
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268                           	psect	text27
  9269   004DE8                     __ptext27:
  9270                           	callstack 0
  9271   004DE8                     _isDataInTxBuf:
  9272                           	callstack 27
  9273   004DE8                     
  9274                           ;serialTest.c: 114:     return (TxBufWriteCnt!=TxBufReadCnt);
  9275   004DE8  5057               	movf	_TxBufReadCnt^0,w,c	;volatile
  9276   004DEA  1858               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  9277   004DEC  A4D8               	btfss	status,2,c
  9278   004DEE  EFFB  F026         	goto	u4481
  9279   004DF2  EFFE  F026         	goto	u4480
  9280   004DF6                     u4481:
  9281   004DF6  0E01               	movlw	1
  9282   004DF8  EFFF  F026         	goto	u4490
  9283   004DFC                     u4480:
  9284   004DFC  0E00               	movlw	0
  9285   004DFE                     u4490:
  9286   004DFE  0012               	return		;funcret
  9287   004E00                     __end_of_isDataInTxBuf:
  9288                           	callstack 0
  9289                           
  9290 ;; *************** function _initUSART4 *****************
  9291 ;; Defined at:
  9292 ;;		line 5 in file "serialTest.c"
  9293 ;; Parameters:    Size  Location     Type
  9294 ;;		None
  9295 ;; Auto vars:     Size  Location     Type
  9296 ;;		None
  9297 ;; Return value:  Size  Location     Type
  9298 ;;                  1    wreg      void 
  9299 ;; Registers used:
  9300 ;;		wreg, status,2
  9301 ;; Tracked objects:
  9302 ;;		On entry : 0/0
  9303 ;;		On exit  : 0/0
  9304 ;;		Unchanged: 0/0
  9305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9310 ;;Total ram usage:        0 bytes
  9311 ;; Hardware stack levels used: 1
  9312 ;; Hardware stack levels required when called: 2
  9313 ;; This function calls:
  9314 ;;		Nothing
  9315 ;; This function is called by:
  9316 ;;		_main
  9317 ;; This function uses a non-reentrant model
  9318 ;;
  9319                           
  9320                           	psect	text28
  9321   004CAE                     __ptext28:
  9322                           	callstack 0
  9323   004CAE                     _initUSART4:
  9324                           	callstack 28
  9325   004CAE                     
  9326                           ;serialTest.c: 9:     BAUD4CONbits.BRG16 = 0;
  9327   004CAE  010E               	movlb	14	; () banked
  9328   004CB0  97E9               	bcf	233,3,b	;volatile
  9329                           
  9330                           ;serialTest.c: 10:     TX4STAbits.BRGH = 0;
  9331   004CB2  95E8               	bcf	232,2,b	;volatile
  9332   004CB4                     
  9333                           ; BSR set to: 14
  9334                           ;serialTest.c: 19:     SP4BRGL = 51;
  9335   004CB4  0E33               	movlw	51
  9336   004CB6  6FE5               	movwf	229,b	;volatile
  9337                           
  9338                           ;serialTest.c: 20:     SP4BRGH = 0;
  9339   004CB8  0E00               	movlw	0
  9340   004CBA  6FE6               	movwf	230,b	;volatile
  9341   004CBC                     
  9342                           ; BSR set to: 14
  9343                           ;serialTest.c: 22:     RC4STAbits.CREN = 1;
  9344   004CBC  89E7               	bsf	231,4,b	;volatile
  9345   004CBE                     
  9346                           ; BSR set to: 14
  9347                           ;serialTest.c: 23:     TX4STAbits.TXEN = 1;
  9348   004CBE  8BE8               	bsf	232,5,b	;volatile
  9349   004CC0                     
  9350                           ; BSR set to: 14
  9351                           ;serialTest.c: 24:     RC4STAbits.SPEN = 1;
  9352   004CC0  8FE7               	bsf	231,7,b	;volatile
  9353   004CC2                     
  9354                           ; BSR set to: 14
  9355                           ;serialTest.c: 26:     TRISCbits.TRISC1 = 1;
  9356   004CC2  8283               	bsf	131,1,c	;volatile
  9357                           
  9358                           ;serialTest.c: 28:     RC0PPS = 0x12;
  9359   004CC4  0E12               	movlw	18
  9360   004CC6  6F62               	movwf	98,b	;volatile
  9361                           
  9362                           ;serialTest.c: 29:     RX4PPS = 0x11;
  9363   004CC8  0E11               	movlw	17
  9364   004CCA  6F15               	movwf	21,b	;volatile
  9365   004CCC                     
  9366                           ; BSR set to: 14
  9367                           ;serialTest.c: 32:     INTCONbits.GIE = 1;
  9368   004CCC  8EF2               	bsf	242,7,c	;volatile
  9369   004CCE                     
  9370                           ; BSR set to: 14
  9371                           ;serialTest.c: 33:     INTCONbits.IPEN = 1;
  9372   004CCE  8AF2               	bsf	242,5,c	;volatile
  9373   004CD0                     
  9374                           ; BSR set to: 14
  9375                           ;serialTest.c: 34:     INTCONbits.PEIE = 1;
  9376   004CD0  8CF2               	bsf	242,6,c	;volatile
  9377   004CD2                     
  9378                           ; BSR set to: 14
  9379                           ;serialTest.c: 36:     PIE4bits.RC4IE=1;
  9380   004CD2  872D               	bsf	45,3,b	;volatile
  9381   004CD4                     
  9382                           ; BSR set to: 14
  9383                           ;serialTest.c: 37:     PIE4bits.TX4IE=0;
  9384   004CD4  952D               	bcf	45,2,b	;volatile
  9385   004CD6                     
  9386                           ; BSR set to: 14
  9387                           ;serialTest.c: 39:     IPR4bits.RC4IP = 1;
  9388   004CD6  8723               	bsf	35,3,b	;volatile
  9389   004CD8                     
  9390                           ; BSR set to: 14
  9391                           ;serialTest.c: 40:     IPR4bits.TX4IP = 1;
  9392   004CD8  8523               	bsf	35,2,b	;volatile
  9393   004CDA                     
  9394                           ; BSR set to: 14
  9395   004CDA  0012               	return		;funcret
  9396   004CDC                     __end_of_initUSART4:
  9397                           	callstack 0
  9398                           
  9399 ;; *************** function _initDCmotorsPWM *****************
  9400 ;; Defined at:
  9401 ;;		line 5 in file "dc_motor.c"
  9402 ;; Parameters:    Size  Location     Type
  9403 ;;  PWMperiod       2   22[COMRAM] int 
  9404 ;; Auto vars:     Size  Location     Type
  9405 ;;		None
  9406 ;; Return value:  Size  Location     Type
  9407 ;;                  1    wreg      void 
  9408 ;; Registers used:
  9409 ;;		wreg, status,2, status,0, cstack
  9410 ;; Tracked objects:
  9411 ;;		On entry : 0/0
  9412 ;;		On exit  : 0/0
  9413 ;;		Unchanged: 0/0
  9414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9418 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9419 ;;Total ram usage:        2 bytes
  9420 ;; Hardware stack levels used: 1
  9421 ;; Hardware stack levels required when called: 3
  9422 ;; This function calls:
  9423 ;;		_LRmotorsInit
  9424 ;; This function is called by:
  9425 ;;		_main
  9426 ;; This function uses a non-reentrant model
  9427 ;;
  9428                           
  9429                           	psect	text29
  9430   004638                     __ptext29:
  9431                           	callstack 0
  9432   004638                     _initDCmotorsPWM:
  9433                           	callstack 27
  9434   004638                     
  9435                           ;dc_motor.c: 9:     LATEbits.LATE2 = 0;
  9436   004638  947D               	bcf	125,2,c	;volatile
  9437                           
  9438                           ;dc_motor.c: 10:     LATEbits.LATE4 = 0;
  9439   00463A  987D               	bcf	125,4,c	;volatile
  9440                           
  9441                           ;dc_motor.c: 11:     LATCbits.LATC7 = 0;
  9442   00463C  9E7B               	bcf	123,7,c	;volatile
  9443                           
  9444                           ;dc_motor.c: 12:     LATGbits.LATG6 = 0;
  9445   00463E  9C7F               	bcf	127,6,c	;volatile
  9446                           
  9447                           ;dc_motor.c: 15:     TRISEbits.TRISE2 = 0 ;
  9448   004640  9485               	bcf	133,2,c	;volatile
  9449                           
  9450                           ;dc_motor.c: 16:     TRISEbits.TRISE4 = 0 ;
  9451   004642  9885               	bcf	133,4,c	;volatile
  9452                           
  9453                           ;dc_motor.c: 17:     TRISCbits.TRISC7 = 0 ;
  9454   004644  9E83               	bcf	131,7,c	;volatile
  9455                           
  9456                           ;dc_motor.c: 18:     TRISGbits.TRISG6 = 0 ;
  9457   004646  9C87               	bcf	135,6,c	;volatile
  9458   004648                     
  9459                           ;dc_motor.c: 21:     RE2PPS=0x05;
  9460   004648  0E05               	movlw	5
  9461   00464A  010E               	movlb	14	; () banked
  9462   00464C  6F74               	movwf	116,b	;volatile
  9463                           
  9464                           ;dc_motor.c: 22:     RE4PPS=0x06;
  9465   00464E  0E06               	movlw	6
  9466   004650  6F76               	movwf	118,b	;volatile
  9467                           
  9468                           ;dc_motor.c: 23:     RC7PPS=0x07;
  9469   004652  0E07               	movlw	7
  9470   004654  6F69               	movwf	105,b	;volatile
  9471                           
  9472                           ;dc_motor.c: 24:     RG6PPS=0x08;
  9473   004656  0E08               	movlw	8
  9474   004658  6F88               	movwf	136,b	;volatile
  9475                           
  9476                           ;dc_motor.c: 27:     T2CONbits.CKPS=0b011;
  9477   00465A  50BD               	movf	189,w,c	;volatile
  9478   00465C  0B8F               	andlw	-113
  9479   00465E  0930               	iorlw	48
  9480   004660  6EBD               	movwf	189,c	;volatile
  9481                           
  9482                           ;dc_motor.c: 28:     T2HLTbits.MODE=0b00000;
  9483   004662  0EE0               	movlw	-32
  9484   004664  16BE               	andwf	190,f,c	;volatile
  9485                           
  9486                           ;dc_motor.c: 29:     T2CLKCONbits.CS=0b0001;
  9487   004666  50BF               	movf	191,w,c	;volatile
  9488   004668  0BF0               	andlw	-16
  9489   00466A  0901               	iorlw	1
  9490   00466C  6EBF               	movwf	191,c	;volatile
  9491                           
  9492                           ;dc_motor.c: 33:     T2PR=199;
  9493   00466E  0EC7               	movlw	199
  9494   004670  6EBC               	movwf	188,c	;volatile
  9495   004672                     
  9496                           ; BSR set to: 14
  9497                           ;dc_motor.c: 34:     T2CONbits.ON=1;
  9498   004672  8EBD               	bsf	189,7,c	;volatile
  9499                           
  9500                           ;dc_motor.c: 38:     CCPR1H=0;
  9501   004674  0E00               	movlw	0
  9502   004676  6EAA               	movwf	170,c	;volatile
  9503                           
  9504                           ;dc_motor.c: 39:     CCPR2H=0;
  9505   004678  0E00               	movlw	0
  9506   00467A  6EA6               	movwf	166,c	;volatile
  9507                           
  9508                           ;dc_motor.c: 40:     CCPR3H=0;
  9509   00467C  0E00               	movlw	0
  9510   00467E  010F               	movlb	15	; () banked
  9511   004680  6F25               	movwf	37,b	;volatile
  9512                           
  9513                           ;dc_motor.c: 41:     CCPR4H=0;
  9514   004682  0E00               	movlw	0
  9515   004684  6F21               	movwf	33,b	;volatile
  9516                           
  9517                           ;dc_motor.c: 44:     CCPTMRS0bits.C1TSEL=0;
  9518   004686  0EFC               	movlw	-4
  9519   004688  16AD               	andwf	173,f,c	;volatile
  9520                           
  9521                           ;dc_motor.c: 45:     CCPTMRS0bits.C2TSEL=0;
  9522   00468A  0EF3               	movlw	-13
  9523   00468C  16AD               	andwf	173,f,c	;volatile
  9524                           
  9525                           ;dc_motor.c: 46:     CCPTMRS0bits.C3TSEL=0;
  9526   00468E  0ECF               	movlw	-49
  9527   004690  16AD               	andwf	173,f,c	;volatile
  9528                           
  9529                           ;dc_motor.c: 47:     CCPTMRS0bits.C4TSEL=0;
  9530   004692  0E3F               	movlw	-193
  9531   004694  16AD               	andwf	173,f,c	;volatile
  9532   004696                     
  9533                           ; BSR set to: 15
  9534                           ;dc_motor.c: 50:     CCP1CONbits.FMT=1;
  9535   004696  88AB               	bsf	171,4,c	;volatile
  9536                           
  9537                           ;dc_motor.c: 51:     CCP1CONbits.CCP1MODE=0b1100;
  9538   004698  50AB               	movf	171,w,c	;volatile
  9539   00469A  0BF0               	andlw	-16
  9540   00469C  090C               	iorlw	12
  9541   00469E  6EAB               	movwf	171,c	;volatile
  9542   0046A0                     
  9543                           ; BSR set to: 15
  9544                           ;dc_motor.c: 52:     CCP1CONbits.EN=1;
  9545   0046A0  8EAB               	bsf	171,7,c	;volatile
  9546   0046A2                     
  9547                           ; BSR set to: 15
  9548                           ;dc_motor.c: 54:     CCP2CONbits.FMT=1;
  9549   0046A2  88A7               	bsf	167,4,c	;volatile
  9550                           
  9551                           ;dc_motor.c: 55:     CCP2CONbits.CCP2MODE=0b1100;
  9552   0046A4  50A7               	movf	167,w,c	;volatile
  9553   0046A6  0BF0               	andlw	-16
  9554   0046A8  090C               	iorlw	12
  9555   0046AA  6EA7               	movwf	167,c	;volatile
  9556   0046AC                     
  9557                           ; BSR set to: 15
  9558                           ;dc_motor.c: 56:     CCP2CONbits.EN=1;
  9559   0046AC  8EA7               	bsf	167,7,c	;volatile
  9560   0046AE                     
  9561                           ; BSR set to: 15
  9562                           ;dc_motor.c: 58:     CCP3CONbits.FMT=1;
  9563   0046AE  8926               	bsf	38,4,b	;volatile
  9564                           
  9565                           ;dc_motor.c: 59:     CCP3CONbits.CCP3MODE=0b1100;
  9566   0046B0  5126               	movf	38,w,b	;volatile
  9567   0046B2  0BF0               	andlw	-16
  9568   0046B4  090C               	iorlw	12
  9569   0046B6  6F26               	movwf	38,b	;volatile
  9570   0046B8                     
  9571                           ; BSR set to: 15
  9572                           ;dc_motor.c: 60:     CCP3CONbits.EN=1;
  9573   0046B8  8F26               	bsf	38,7,b	;volatile
  9574   0046BA                     
  9575                           ; BSR set to: 15
  9576                           ;dc_motor.c: 62:     CCP4CONbits.FMT=1;
  9577   0046BA  8922               	bsf	34,4,b	;volatile
  9578                           
  9579                           ;dc_motor.c: 63:     CCP4CONbits.CCP4MODE=0b1100;
  9580   0046BC  5122               	movf	34,w,b	;volatile
  9581   0046BE  0BF0               	andlw	-16
  9582   0046C0  090C               	iorlw	12
  9583   0046C2  6F22               	movwf	34,b	;volatile
  9584   0046C4                     
  9585                           ; BSR set to: 15
  9586                           ;dc_motor.c: 64:     CCP4CONbits.EN=1;
  9587   0046C4  8F22               	bsf	34,7,b	;volatile
  9588   0046C6                     
  9589                           ; BSR set to: 15
  9590                           ;dc_motor.c: 66:     LRmotorsInit();
  9591   0046C6  EC21  F025         	call	_LRmotorsInit	;wreg free
  9592   0046CA  0012               	return		;funcret
  9593   0046CC                     __end_of_initDCmotorsPWM:
  9594                           	callstack 0
  9595                           
  9596 ;; *************** function _LRmotorsInit *****************
  9597 ;; Defined at:
  9598 ;;		line 71 in file "dc_motor.c"
  9599 ;; Parameters:    Size  Location     Type
  9600 ;;		None
  9601 ;; Auto vars:     Size  Location     Type
  9602 ;;  motorRight      9   13[COMRAM] struct DC_motor
  9603 ;;  motorLeft       9    4[COMRAM] struct DC_motor
  9604 ;; Return value:  Size  Location     Type
  9605 ;;                  1    wreg      void 
  9606 ;; Registers used:
  9607 ;;		wreg, status,2, status,0
  9608 ;; Tracked objects:
  9609 ;;		On entry : 0/0
  9610 ;;		On exit  : 0/0
  9611 ;;		Unchanged: 0/0
  9612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9614 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9616 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9617 ;;Total ram usage:       18 bytes
  9618 ;; Hardware stack levels used: 1
  9619 ;; Hardware stack levels required when called: 2
  9620 ;; This function calls:
  9621 ;;		Nothing
  9622 ;; This function is called by:
  9623 ;;		_initDCmotorsPWM
  9624 ;; This function uses a non-reentrant model
  9625 ;;
  9626                           
  9627                           	psect	text30
  9628   004A42                     __ptext30:
  9629                           	callstack 0
  9630   004A42                     _LRmotorsInit:
  9631                           	callstack 27
  9632   004A42                     
  9633                           ;dc_motor.c: 72:     DC_motor motorLeft,motorRight;;dc_motor.c: 74:     motorLeft.power 
      +                          = 0;
  9634   004A42  0E00               	movlw	0
  9635   004A44  6E05               	movwf	LRmotorsInit@motorLeft^0,c
  9636                           
  9637                           ;dc_motor.c: 75:     motorLeft.direction = 1;
  9638   004A46  0E01               	movlw	1
  9639   004A48  6E06               	movwf	(LRmotorsInit@motorLeft+1)^0,c
  9640                           
  9641                           ;dc_motor.c: 76:     motorLeft.brakemode = 1;
  9642   004A4A  0E01               	movlw	1
  9643   004A4C  6E07               	movwf	(LRmotorsInit@motorLeft+2)^0,c
  9644   004A4E                     
  9645                           ;dc_motor.c: 77:     motorLeft.posDutyHighByte = (unsigned char *)(&CCPR1H);
  9646   004A4E  0EAA               	movlw	170
  9647   004A50  6E0A               	movwf	(LRmotorsInit@motorLeft+5)^0,c
  9648   004A52  0E0F               	movlw	15
  9649   004A54  6E0B               	movwf	(LRmotorsInit@motorLeft+6)^0,c
  9650   004A56                     
  9651                           ;dc_motor.c: 78:     motorLeft.negDutyHighByte = (unsigned char *)(&CCPR2H);
  9652   004A56  0EA6               	movlw	166
  9653   004A58  6E0C               	movwf	(LRmotorsInit@motorLeft+7)^0,c
  9654   004A5A  0E0F               	movlw	15
  9655   004A5C  6E0D               	movwf	(LRmotorsInit@motorLeft+8)^0,c
  9656                           
  9657                           ;dc_motor.c: 79:     motorLeft.PWMperiod = 199 ;
  9658   004A5E  0E00               	movlw	0
  9659   004A60  6E09               	movwf	(LRmotorsInit@motorLeft+4)^0,c
  9660   004A62  0EC7               	movlw	199
  9661   004A64  6E08               	movwf	(LRmotorsInit@motorLeft+3)^0,c
  9662                           
  9663                           ;dc_motor.c: 81:     motorRight.power = 0;
  9664   004A66  0E00               	movlw	0
  9665   004A68  6E0E               	movwf	LRmotorsInit@motorRight^0,c
  9666                           
  9667                           ;dc_motor.c: 82:     motorRight.direction = 1;
  9668   004A6A  0E01               	movlw	1
  9669   004A6C  6E0F               	movwf	(LRmotorsInit@motorRight+1)^0,c
  9670                           
  9671                           ;dc_motor.c: 83:     motorRight.brakemode = 1;
  9672   004A6E  0E01               	movlw	1
  9673   004A70  6E10               	movwf	(LRmotorsInit@motorRight+2)^0,c
  9674   004A72                     
  9675                           ;dc_motor.c: 84:     motorRight.posDutyHighByte = (unsigned char *)(&CCPR3H);
  9676   004A72  0E25               	movlw	37
  9677   004A74  6E13               	movwf	(LRmotorsInit@motorRight+5)^0,c
  9678   004A76  0E0F               	movlw	15
  9679   004A78  6E14               	movwf	(LRmotorsInit@motorRight+6)^0,c
  9680   004A7A                     
  9681                           ;dc_motor.c: 85:     motorRight.negDutyHighByte = (unsigned char *)(&CCPR4H);
  9682   004A7A  0E21               	movlw	33
  9683   004A7C  6E15               	movwf	(LRmotorsInit@motorRight+7)^0,c
  9684   004A7E  0E0F               	movlw	15
  9685   004A80  6E16               	movwf	(LRmotorsInit@motorRight+8)^0,c
  9686                           
  9687                           ;dc_motor.c: 86:     motorRight.PWMperiod = 199 ;
  9688   004A82  0E00               	movlw	0
  9689   004A84  6E12               	movwf	(LRmotorsInit@motorRight+4)^0,c
  9690   004A86  0EC7               	movlw	199
  9691   004A88  6E11               	movwf	(LRmotorsInit@motorRight+3)^0,c
  9692   004A8A  0012               	return		;funcret
  9693   004A8C                     __end_of_LRmotorsInit:
  9694                           	callstack 0
  9695                           
  9696 ;; *************** function _getColor *****************
  9697 ;; Defined at:
  9698 ;;		line 90 in file "color.c"
  9699 ;; Parameters:    Size  Location     Type
  9700 ;;  v               2   15[COMRAM] PTR struct RGB
  9701 ;;		 -> main@RGBVal(8), 
  9702 ;; Auto vars:     Size  Location     Type
  9703 ;;		None
  9704 ;; Return value:  Size  Location     Type
  9705 ;;                  1    wreg      void 
  9706 ;; Registers used:
  9707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9708 ;; Tracked objects:
  9709 ;;		On entry : 0/0
  9710 ;;		On exit  : 0/0
  9711 ;;		Unchanged: 0/0
  9712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9713 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9716 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9717 ;;Total ram usage:        2 bytes
  9718 ;; Hardware stack levels used: 1
  9719 ;; Hardware stack levels required when called: 5
  9720 ;; This function calls:
  9721 ;;		_color_read_Blue
  9722 ;;		_color_read_Clear
  9723 ;;		_color_read_Green
  9724 ;;		_color_read_Red
  9725 ;; This function is called by:
  9726 ;;		_main
  9727 ;; This function uses a non-reentrant model
  9728 ;;
  9729                           
  9730                           	psect	text31
  9731   0047AC                     __ptext31:
  9732                           	callstack 0
  9733   0047AC                     _getColor:
  9734                           	callstack 25
  9735   0047AC                     
  9736                           ;color.c: 91:     v->R = color_read_Red();
  9737   0047AC  EC81  F024         	call	_color_read_Red	;wreg free
  9738   0047B0  C010  FFD9         	movff	getColor@v,fsr2l
  9739   0047B4  C011  FFDA         	movff	getColor@v+1,fsr2h
  9740   0047B8  C009  FFDE         	movff	?_color_read_Red,postinc2
  9741   0047BC  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
  9742                           
  9743                           ;color.c: 92:     v->G = color_read_Green();
  9744   0047C0  ECA9  F024         	call	_color_read_Green	;wreg free
  9745   0047C4  EE20 F002          	lfsr	2,2
  9746   0047C8  5010               	movf	getColor@v^0,w,c
  9747   0047CA  26D9               	addwf	fsr2l,f,c
  9748   0047CC  5011               	movf	(getColor@v+1)^0,w,c
  9749   0047CE  22DA               	addwfc	fsr2h,f,c
  9750   0047D0  C009  FFDE         	movff	?_color_read_Green,postinc2
  9751   0047D4  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
  9752                           
  9753                           ;color.c: 93:     v->B = color_read_Blue();
  9754   0047D8  ECF9  F024         	call	_color_read_Blue	;wreg free
  9755   0047DC  EE20 F004          	lfsr	2,4
  9756   0047E0  5010               	movf	getColor@v^0,w,c
  9757   0047E2  26D9               	addwf	fsr2l,f,c
  9758   0047E4  5011               	movf	(getColor@v+1)^0,w,c
  9759   0047E6  22DA               	addwfc	fsr2h,f,c
  9760   0047E8  C009  FFDE         	movff	?_color_read_Blue,postinc2
  9761   0047EC  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
  9762                           
  9763                           ;color.c: 94:     v->C = color_read_Clear();
  9764   0047F0  ECD1  F024         	call	_color_read_Clear	;wreg free
  9765   0047F4  EE20 F006          	lfsr	2,6
  9766   0047F8  5010               	movf	getColor@v^0,w,c
  9767   0047FA  26D9               	addwf	fsr2l,f,c
  9768   0047FC  5011               	movf	(getColor@v+1)^0,w,c
  9769   0047FE  22DA               	addwfc	fsr2h,f,c
  9770   004800  C009  FFDE         	movff	?_color_read_Clear,postinc2
  9771   004804  C00A  FFDD         	movff	?_color_read_Clear+1,postdec2
  9772   004808  0012               	return		;funcret
  9773   00480A                     __end_of_getColor:
  9774                           	callstack 0
  9775                           
  9776 ;; *************** function _color_read_Red *****************
  9777 ;; Defined at:
  9778 ;;		line 32 in file "color.c"
  9779 ;; Parameters:    Size  Location     Type
  9780 ;;		None
  9781 ;; Auto vars:     Size  Location     Type
  9782 ;;  tmp             2   13[COMRAM] unsigned int 
  9783 ;; Return value:  Size  Location     Type
  9784 ;;                  2    8[COMRAM] unsigned int 
  9785 ;; Registers used:
  9786 ;;		wreg, status,2, status,0, cstack
  9787 ;; Tracked objects:
  9788 ;;		On entry : 0/0
  9789 ;;		On exit  : 0/0
  9790 ;;		Unchanged: 0/0
  9791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9792 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9793 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9794 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9795 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9796 ;;Total ram usage:        7 bytes
  9797 ;; Hardware stack levels used: 1
  9798 ;; Hardware stack levels required when called: 4
  9799 ;; This function calls:
  9800 ;;		_I2C_2_Master_Read
  9801 ;;		_I2C_2_Master_RepStart
  9802 ;;		_I2C_2_Master_Start
  9803 ;;		_I2C_2_Master_Stop
  9804 ;;		_I2C_2_Master_Write
  9805 ;; This function is called by:
  9806 ;;		_getColor
  9807 ;; This function uses a non-reentrant model
  9808 ;;
  9809                           
  9810                           	psect	text32
  9811   004902                     __ptext32:
  9812                           	callstack 0
  9813   004902                     _color_read_Red:
  9814                           	callstack 25
  9815   004902                     
  9816                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
  9817   004902  EC1C  F027         	call	_I2C_2_Master_Start	;wreg free
  9818                           
  9819                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  9820   004906  0E52               	movlw	82
  9821   004908  EC0C  F027         	call	_I2C_2_Master_Write
  9822                           
  9823                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  9824   00490C  0EB6               	movlw	182
  9825   00490E  EC0C  F027         	call	_I2C_2_Master_Write
  9826                           
  9827                           ;color.c: 38:  I2C_2_Master_RepStart();
  9828   004912  EC12  F027         	call	_I2C_2_Master_RepStart	;wreg free
  9829                           
  9830                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  9831   004916  0E53               	movlw	83
  9832   004918  EC0C  F027         	call	_I2C_2_Master_Write
  9833                           
  9834                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
  9835   00491C  0E01               	movlw	1
  9836   00491E  ECAD  F025         	call	_I2C_2_Master_Read
  9837   004922  6E0B               	movwf	??_color_read_Red^0,c
  9838   004924  500B               	movf	??_color_read_Red^0,w,c
  9839   004926  6E0E               	movwf	color_read_Red@tmp^0,c
  9840   004928  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  9841                           
  9842                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9843   00492A  0E00               	movlw	0
  9844   00492C  ECAD  F025         	call	_I2C_2_Master_Read
  9845   004930  6E0B               	movwf	??_color_read_Red^0,c
  9846   004932  500B               	movf	??_color_read_Red^0,w,c
  9847   004934  6E0D               	movwf	(??_color_read_Red+2)^0,c
  9848   004936  6A0C               	clrf	(??_color_read_Red+1)^0,c
  9849   004938  500E               	movf	color_read_Red@tmp^0,w,c
  9850   00493A  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  9851   00493C  6E0E               	movwf	color_read_Red@tmp^0,c
  9852   00493E  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  9853   004940  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  9854   004942  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  9855                           
  9856                           ;color.c: 42:  I2C_2_Master_Stop();
  9857   004944  EC17  F027         	call	_I2C_2_Master_Stop	;wreg free
  9858   004948                     
  9859                           ;color.c: 43:  return tmp;
  9860   004948  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  9861   00494C  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  9862   004950  0012               	return		;funcret
  9863   004952                     __end_of_color_read_Red:
  9864                           	callstack 0
  9865                           
  9866 ;; *************** function _color_read_Green *****************
  9867 ;; Defined at:
  9868 ;;		line 46 in file "color.c"
  9869 ;; Parameters:    Size  Location     Type
  9870 ;;		None
  9871 ;; Auto vars:     Size  Location     Type
  9872 ;;  tmp             2   13[COMRAM] unsigned int 
  9873 ;; Return value:  Size  Location     Type
  9874 ;;                  2    8[COMRAM] unsigned int 
  9875 ;; Registers used:
  9876 ;;		wreg, status,2, status,0, cstack
  9877 ;; Tracked objects:
  9878 ;;		On entry : 0/0
  9879 ;;		On exit  : 0/0
  9880 ;;		Unchanged: 0/0
  9881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9882 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9883 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9884 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9885 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9886 ;;Total ram usage:        7 bytes
  9887 ;; Hardware stack levels used: 1
  9888 ;; Hardware stack levels required when called: 4
  9889 ;; This function calls:
  9890 ;;		_I2C_2_Master_Read
  9891 ;;		_I2C_2_Master_RepStart
  9892 ;;		_I2C_2_Master_Start
  9893 ;;		_I2C_2_Master_Stop
  9894 ;;		_I2C_2_Master_Write
  9895 ;; This function is called by:
  9896 ;;		_getColor
  9897 ;; This function uses a non-reentrant model
  9898 ;;
  9899                           
  9900                           	psect	text33
  9901   004952                     __ptext33:
  9902                           	callstack 0
  9903   004952                     _color_read_Green:
  9904                           	callstack 25
  9905   004952                     
  9906                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  9907   004952  EC1C  F027         	call	_I2C_2_Master_Start	;wreg free
  9908                           
  9909                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  9910   004956  0E52               	movlw	82
  9911   004958  EC0C  F027         	call	_I2C_2_Master_Write
  9912                           
  9913                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x18);
  9914   00495C  0EB8               	movlw	184
  9915   00495E  EC0C  F027         	call	_I2C_2_Master_Write
  9916                           
  9917                           ;color.c: 52:  I2C_2_Master_RepStart();
  9918   004962  EC12  F027         	call	_I2C_2_Master_RepStart	;wreg free
  9919                           
  9920                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  9921   004966  0E53               	movlw	83
  9922   004968  EC0C  F027         	call	_I2C_2_Master_Write
  9923                           
  9924                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  9925   00496C  0E01               	movlw	1
  9926   00496E  ECAD  F025         	call	_I2C_2_Master_Read
  9927   004972  6E0B               	movwf	??_color_read_Green^0,c
  9928   004974  500B               	movf	??_color_read_Green^0,w,c
  9929   004976  6E0E               	movwf	color_read_Green@tmp^0,c
  9930   004978  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  9931                           
  9932                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9933   00497A  0E00               	movlw	0
  9934   00497C  ECAD  F025         	call	_I2C_2_Master_Read
  9935   004980  6E0B               	movwf	??_color_read_Green^0,c
  9936   004982  500B               	movf	??_color_read_Green^0,w,c
  9937   004984  6E0D               	movwf	(??_color_read_Green+2)^0,c
  9938   004986  6A0C               	clrf	(??_color_read_Green+1)^0,c
  9939   004988  500E               	movf	color_read_Green@tmp^0,w,c
  9940   00498A  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  9941   00498C  6E0E               	movwf	color_read_Green@tmp^0,c
  9942   00498E  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  9943   004990  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  9944   004992  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  9945                           
  9946                           ;color.c: 56:  I2C_2_Master_Stop();
  9947   004994  EC17  F027         	call	_I2C_2_Master_Stop	;wreg free
  9948   004998                     
  9949                           ;color.c: 57:  return tmp;
  9950   004998  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  9951   00499C  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  9952   0049A0  0012               	return		;funcret
  9953   0049A2                     __end_of_color_read_Green:
  9954                           	callstack 0
  9955                           
  9956 ;; *************** function _color_read_Clear *****************
  9957 ;; Defined at:
  9958 ;;		line 75 in file "color.c"
  9959 ;; Parameters:    Size  Location     Type
  9960 ;;		None
  9961 ;; Auto vars:     Size  Location     Type
  9962 ;;  tmp             2   13[COMRAM] unsigned int 
  9963 ;; Return value:  Size  Location     Type
  9964 ;;                  2    8[COMRAM] unsigned int 
  9965 ;; Registers used:
  9966 ;;		wreg, status,2, status,0, cstack
  9967 ;; Tracked objects:
  9968 ;;		On entry : 0/0
  9969 ;;		On exit  : 0/0
  9970 ;;		Unchanged: 0/0
  9971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9972 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9973 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9974 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9975 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9976 ;;Total ram usage:        7 bytes
  9977 ;; Hardware stack levels used: 1
  9978 ;; Hardware stack levels required when called: 4
  9979 ;; This function calls:
  9980 ;;		_I2C_2_Master_Read
  9981 ;;		_I2C_2_Master_RepStart
  9982 ;;		_I2C_2_Master_Start
  9983 ;;		_I2C_2_Master_Stop
  9984 ;;		_I2C_2_Master_Write
  9985 ;; This function is called by:
  9986 ;;		_getColor
  9987 ;; This function uses a non-reentrant model
  9988 ;;
  9989                           
  9990                           	psect	text34
  9991   0049A2                     __ptext34:
  9992                           	callstack 0
  9993   0049A2                     _color_read_Clear:
  9994                           	callstack 25
  9995   0049A2                     
  9996                           ;color.c: 77:  unsigned int tmp;;color.c: 78:  I2C_2_Master_Start();
  9997   0049A2  EC1C  F027         	call	_I2C_2_Master_Start	;wreg free
  9998                           
  9999                           ;color.c: 79:  I2C_2_Master_Write(0x52 | 0x00);
 10000   0049A6  0E52               	movlw	82
 10001   0049A8  EC0C  F027         	call	_I2C_2_Master_Write
 10002                           
 10003                           ;color.c: 80:  I2C_2_Master_Write(0xA0 | 0x14);
 10004   0049AC  0EB4               	movlw	180
 10005   0049AE  EC0C  F027         	call	_I2C_2_Master_Write
 10006                           
 10007                           ;color.c: 81:  I2C_2_Master_RepStart();
 10008   0049B2  EC12  F027         	call	_I2C_2_Master_RepStart	;wreg free
 10009                           
 10010                           ;color.c: 82:  I2C_2_Master_Write(0x52 | 0x01);
 10011   0049B6  0E53               	movlw	83
 10012   0049B8  EC0C  F027         	call	_I2C_2_Master_Write
 10013                           
 10014                           ;color.c: 83:  tmp=I2C_2_Master_Read(1);
 10015   0049BC  0E01               	movlw	1
 10016   0049BE  ECAD  F025         	call	_I2C_2_Master_Read
 10017   0049C2  6E0B               	movwf	??_color_read_Clear^0,c
 10018   0049C4  500B               	movf	??_color_read_Clear^0,w,c
 10019   0049C6  6E0E               	movwf	color_read_Clear@tmp^0,c
 10020   0049C8  6A0F               	clrf	(color_read_Clear@tmp+1)^0,c
 10021                           
 10022                           ;color.c: 84:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 10023   0049CA  0E00               	movlw	0
 10024   0049CC  ECAD  F025         	call	_I2C_2_Master_Read
 10025   0049D0  6E0B               	movwf	??_color_read_Clear^0,c
 10026   0049D2  500B               	movf	??_color_read_Clear^0,w,c
 10027   0049D4  6E0D               	movwf	(??_color_read_Clear+2)^0,c
 10028   0049D6  6A0C               	clrf	(??_color_read_Clear+1)^0,c
 10029   0049D8  500E               	movf	color_read_Clear@tmp^0,w,c
 10030   0049DA  100C               	iorwf	(??_color_read_Clear+1)^0,w,c
 10031   0049DC  6E0E               	movwf	color_read_Clear@tmp^0,c
 10032   0049DE  500F               	movf	(color_read_Clear@tmp+1)^0,w,c
 10033   0049E0  100D               	iorwf	(??_color_read_Clear+2)^0,w,c
 10034   0049E2  6E0F               	movwf	(color_read_Clear@tmp+1)^0,c
 10035                           
 10036                           ;color.c: 85:  I2C_2_Master_Stop();
 10037   0049E4  EC17  F027         	call	_I2C_2_Master_Stop	;wreg free
 10038   0049E8                     
 10039                           ;color.c: 86:  return tmp;
 10040   0049E8  C00E  F009         	movff	color_read_Clear@tmp,?_color_read_Clear
 10041   0049EC  C00F  F00A         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
 10042   0049F0  0012               	return		;funcret
 10043   0049F2                     __end_of_color_read_Clear:
 10044                           	callstack 0
 10045                           
 10046 ;; *************** function _color_read_Blue *****************
 10047 ;; Defined at:
 10048 ;;		line 61 in file "color.c"
 10049 ;; Parameters:    Size  Location     Type
 10050 ;;		None
 10051 ;; Auto vars:     Size  Location     Type
 10052 ;;  tmp             2   13[COMRAM] unsigned int 
 10053 ;; Return value:  Size  Location     Type
 10054 ;;                  2    8[COMRAM] unsigned int 
 10055 ;; Registers used:
 10056 ;;		wreg, status,2, status,0, cstack
 10057 ;; Tracked objects:
 10058 ;;		On entry : 0/0
 10059 ;;		On exit  : 0/0
 10060 ;;		Unchanged: 0/0
 10061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10062 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10063 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10064 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10065 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10066 ;;Total ram usage:        7 bytes
 10067 ;; Hardware stack levels used: 1
 10068 ;; Hardware stack levels required when called: 4
 10069 ;; This function calls:
 10070 ;;		_I2C_2_Master_Read
 10071 ;;		_I2C_2_Master_RepStart
 10072 ;;		_I2C_2_Master_Start
 10073 ;;		_I2C_2_Master_Stop
 10074 ;;		_I2C_2_Master_Write
 10075 ;; This function is called by:
 10076 ;;		_getColor
 10077 ;; This function uses a non-reentrant model
 10078 ;;
 10079                           
 10080                           	psect	text35
 10081   0049F2                     __ptext35:
 10082                           	callstack 0
 10083   0049F2                     _color_read_Blue:
 10084                           	callstack 25
 10085   0049F2                     
 10086                           ;color.c: 63:  unsigned int tmp;;color.c: 64:  I2C_2_Master_Start();
 10087   0049F2  EC1C  F027         	call	_I2C_2_Master_Start	;wreg free
 10088                           
 10089                           ;color.c: 65:  I2C_2_Master_Write(0x52 | 0x00);
 10090   0049F6  0E52               	movlw	82
 10091   0049F8  EC0C  F027         	call	_I2C_2_Master_Write
 10092                           
 10093                           ;color.c: 66:  I2C_2_Master_Write(0xA0 | 0x1A);
 10094   0049FC  0EBA               	movlw	186
 10095   0049FE  EC0C  F027         	call	_I2C_2_Master_Write
 10096                           
 10097                           ;color.c: 67:  I2C_2_Master_RepStart();
 10098   004A02  EC12  F027         	call	_I2C_2_Master_RepStart	;wreg free
 10099                           
 10100                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x01);
 10101   004A06  0E53               	movlw	83
 10102   004A08  EC0C  F027         	call	_I2C_2_Master_Write
 10103                           
 10104                           ;color.c: 69:  tmp=I2C_2_Master_Read(1);
 10105   004A0C  0E01               	movlw	1
 10106   004A0E  ECAD  F025         	call	_I2C_2_Master_Read
 10107   004A12  6E0B               	movwf	??_color_read_Blue^0,c
 10108   004A14  500B               	movf	??_color_read_Blue^0,w,c
 10109   004A16  6E0E               	movwf	color_read_Blue@tmp^0,c
 10110   004A18  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
 10111                           
 10112                           ;color.c: 70:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 10113   004A1A  0E00               	movlw	0
 10114   004A1C  ECAD  F025         	call	_I2C_2_Master_Read
 10115   004A20  6E0B               	movwf	??_color_read_Blue^0,c
 10116   004A22  500B               	movf	??_color_read_Blue^0,w,c
 10117   004A24  6E0D               	movwf	(??_color_read_Blue+2)^0,c
 10118   004A26  6A0C               	clrf	(??_color_read_Blue+1)^0,c
 10119   004A28  500E               	movf	color_read_Blue@tmp^0,w,c
 10120   004A2A  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
 10121   004A2C  6E0E               	movwf	color_read_Blue@tmp^0,c
 10122   004A2E  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
 10123   004A30  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
 10124   004A32  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
 10125                           
 10126                           ;color.c: 71:  I2C_2_Master_Stop();
 10127   004A34  EC17  F027         	call	_I2C_2_Master_Stop	;wreg free
 10128   004A38                     
 10129                           ;color.c: 72:  return tmp;
 10130   004A38  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
 10131   004A3C  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
 10132   004A40  0012               	return		;funcret
 10133   004A42                     __end_of_color_read_Blue:
 10134                           	callstack 0
 10135                           
 10136 ;; *************** function _I2C_2_Master_RepStart *****************
 10137 ;; Defined at:
 10138 ;;		line 33 in file "i2c.c"
 10139 ;; Parameters:    Size  Location     Type
 10140 ;;		None
 10141 ;; Auto vars:     Size  Location     Type
 10142 ;;		None
 10143 ;; Return value:  Size  Location     Type
 10144 ;;                  1    wreg      void 
 10145 ;; Registers used:
 10146 ;;		wreg, status,2, status,0, cstack
 10147 ;; Tracked objects:
 10148 ;;		On entry : 0/0
 10149 ;;		On exit  : 0/0
 10150 ;;		Unchanged: 0/0
 10151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10156 ;;Total ram usage:        0 bytes
 10157 ;; Hardware stack levels used: 1
 10158 ;; Hardware stack levels required when called: 3
 10159 ;; This function calls:
 10160 ;;		_I2C_2_Master_Idle
 10161 ;; This function is called by:
 10162 ;;		_color_read_Red
 10163 ;;		_color_read_Green
 10164 ;;		_color_read_Blue
 10165 ;;		_color_read_Clear
 10166 ;; This function uses a non-reentrant model
 10167 ;;
 10168                           
 10169                           	psect	text36
 10170   004E24                     __ptext36:
 10171                           	callstack 0
 10172   004E24                     _I2C_2_Master_RepStart:
 10173                           	callstack 25
 10174   004E24                     
 10175                           ;i2c.c: 35:   I2C_2_Master_Idle();
 10176   004E24  ECC3  F026         	call	_I2C_2_Master_Idle	;wreg free
 10177   004E28                     
 10178                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
 10179   004E28  010E               	movlb	14	; () banked
 10180   004E2A  83DA               	bsf	218,1,b	;volatile
 10181   004E2C                     
 10182                           ; BSR set to: 14
 10183   004E2C  0012               	return		;funcret
 10184   004E2E                     __end_of_I2C_2_Master_RepStart:
 10185                           	callstack 0
 10186                           
 10187 ;; *************** function _I2C_2_Master_Read *****************
 10188 ;; Defined at:
 10189 ;;		line 51 in file "i2c.c"
 10190 ;; Parameters:    Size  Location     Type
 10191 ;;  ack             1    wreg     unsigned char 
 10192 ;; Auto vars:     Size  Location     Type
 10193 ;;  ack             1    6[COMRAM] unsigned char 
 10194 ;;  tmp             1    7[COMRAM] unsigned char 
 10195 ;; Return value:  Size  Location     Type
 10196 ;;                  1    wreg      unsigned char 
 10197 ;; Registers used:
 10198 ;;		wreg, status,2, status,0, cstack
 10199 ;; Tracked objects:
 10200 ;;		On entry : 0/0
 10201 ;;		On exit  : 0/0
 10202 ;;		Unchanged: 0/0
 10203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10205 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10206 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10207 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10208 ;;Total ram usage:        3 bytes
 10209 ;; Hardware stack levels used: 1
 10210 ;; Hardware stack levels required when called: 3
 10211 ;; This function calls:
 10212 ;;		_I2C_2_Master_Idle
 10213 ;; This function is called by:
 10214 ;;		_color_read_Red
 10215 ;;		_color_read_Green
 10216 ;;		_color_read_Blue
 10217 ;;		_color_read_Clear
 10218 ;; This function uses a non-reentrant model
 10219 ;;
 10220                           
 10221                           	psect	text37
 10222   004B5A                     __ptext37:
 10223                           	callstack 0
 10224   004B5A                     _I2C_2_Master_Read:
 10225                           	callstack 25
 10226                           
 10227                           ; BSR set to: 14
 10228                           ;incstack = 0
 10229                           ;I2C_2_Master_Read@ack stored from wreg
 10230   004B5A  6E07               	movwf	I2C_2_Master_Read@ack^0,c
 10231   004B5C                     
 10232                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
 10233   004B5C  ECC3  F026         	call	_I2C_2_Master_Idle	;wreg free
 10234   004B60                     
 10235                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
 10236   004B60  010E               	movlb	14	; () banked
 10237   004B62  87DA               	bsf	218,3,b	;volatile
 10238                           
 10239                           ;i2c.c: 56:   I2C_2_Master_Idle();
 10240   004B64  ECC3  F026         	call	_I2C_2_Master_Idle	;wreg free
 10241   004B68                     
 10242                           ;i2c.c: 57:   tmp = SSP2BUF;
 10243   004B68  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 10244                           
 10245                           ;i2c.c: 58:   I2C_2_Master_Idle();
 10246   004B6C  ECC3  F026         	call	_I2C_2_Master_Idle	;wreg free
 10247   004B70                     
 10248                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
 10249   004B70  5007               	movf	I2C_2_Master_Read@ack^0,w,c
 10250   004B72  B4D8               	btfsc	status,2,c
 10251   004B74  EFBE  F025         	goto	u4411
 10252   004B78  EFC2  F025         	goto	u4410
 10253   004B7C                     u4411:
 10254   004B7C  6A06               	clrf	??_I2C_2_Master_Read^0,c
 10255   004B7E  2A06               	incf	??_I2C_2_Master_Read^0,f,c
 10256   004B80  EFC3  F025         	goto	u4428
 10257   004B84                     u4410:
 10258   004B84  6A06               	clrf	??_I2C_2_Master_Read^0,c
 10259   004B86                     u4428:
 10260   004B86  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
 10261   004B88  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
 10262   004B8A  010E               	movlb	14	; () banked
 10263   004B8C  51DA               	movf	218,w,b	;volatile
 10264   004B8E  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
 10265   004B90  0BDF               	andlw	-33
 10266   004B92  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
 10267   004B94  6FDA               	movwf	218,b	;volatile
 10268   004B96                     
 10269                           ; BSR set to: 14
 10270                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
 10271   004B96  89DA               	bsf	218,4,b	;volatile
 10272   004B98                     
 10273                           ; BSR set to: 14
 10274                           ;i2c.c: 61:   return tmp;
 10275   004B98  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
 10276   004B9A                     
 10277                           ; BSR set to: 14
 10278   004B9A  0012               	return		;funcret
 10279   004B9C                     __end_of_I2C_2_Master_Read:
 10280                           	callstack 0
 10281                           
 10282 ;; *************** function _color_click_init *****************
 10283 ;; Defined at:
 10284 ;;		line 7 in file "color.c"
 10285 ;; Parameters:    Size  Location     Type
 10286 ;;		None
 10287 ;; Auto vars:     Size  Location     Type
 10288 ;;		None
 10289 ;; Return value:  Size  Location     Type
 10290 ;;                  1    wreg      void 
 10291 ;; Registers used:
 10292 ;;		wreg, status,2, status,0, cstack
 10293 ;; Tracked objects:
 10294 ;;		On entry : 0/0
 10295 ;;		On exit  : 0/0
 10296 ;;		Unchanged: 0/0
 10297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10300 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10301 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10302 ;;Total ram usage:        1 bytes
 10303 ;; Hardware stack levels used: 1
 10304 ;; Hardware stack levels required when called: 5
 10305 ;; This function calls:
 10306 ;;		_I2C_2_Master_Init
 10307 ;;		_color_writetoaddr
 10308 ;; This function is called by:
 10309 ;;		_main
 10310 ;; This function uses a non-reentrant model
 10311 ;;
 10312                           
 10313                           	psect	text38
 10314   004C4A                     __ptext38:
 10315                           	callstack 0
 10316   004C4A                     _color_click_init:
 10317                           	callstack 25
 10318   004C4A                     
 10319                           ;color.c: 10:     I2C_2_Master_Init();
 10320   004C4A  EC84  F026         	call	_I2C_2_Master_Init	;wreg free
 10321   004C4E                     
 10322                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
 10323   004C4E  0E01               	movlw	1
 10324   004C50  6E07               	movwf	color_writetoaddr@value^0,c
 10325   004C52  0E00               	movlw	0
 10326   004C54  ECD7  F026         	call	_color_writetoaddr
 10327   004C58                     
 10328                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
 10329   004C58  0E3F               	movlw	63
 10330   004C5A  6E09               	movwf	??_color_click_init^0,c
 10331   004C5C  0E55               	movlw	85
 10332   004C5E                     u6177:
 10333   004C5E  2EE8               	decfsz	wreg,f,c
 10334   004C60  D7FE               	bra	u6177
 10335   004C62  2E09               	decfsz	??_color_click_init^0,f,c
 10336   004C64  D7FC               	bra	u6177
 10337   004C66  F000               	nop	
 10338   004C68                     
 10339                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
 10340   004C68  0E03               	movlw	3
 10341   004C6A  6E07               	movwf	color_writetoaddr@value^0,c
 10342   004C6C  0E00               	movlw	0
 10343   004C6E  ECD7  F026         	call	_color_writetoaddr
 10344   004C72                     
 10345                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
 10346   004C72  0ED5               	movlw	213
 10347   004C74  6E07               	movwf	color_writetoaddr@value^0,c
 10348   004C76  0E01               	movlw	1
 10349   004C78  ECD7  F026         	call	_color_writetoaddr
 10350   004C7C  0012               	return		;funcret
 10351   004C7E                     __end_of_color_click_init:
 10352                           	callstack 0
 10353                           
 10354 ;; *************** function _color_writetoaddr *****************
 10355 ;; Defined at:
 10356 ;;		line 24 in file "color.c"
 10357 ;; Parameters:    Size  Location     Type
 10358 ;;  address         1    wreg     unsigned char 
 10359 ;;  value           1    6[COMRAM] unsigned char 
 10360 ;; Auto vars:     Size  Location     Type
 10361 ;;  address         1    7[COMRAM] unsigned char 
 10362 ;; Return value:  Size  Location     Type
 10363 ;;                  1    wreg      void 
 10364 ;; Registers used:
 10365 ;;		wreg, status,2, status,0, cstack
 10366 ;; Tracked objects:
 10367 ;;		On entry : 0/0
 10368 ;;		On exit  : 0/0
 10369 ;;		Unchanged: 0/0
 10370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10371 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10372 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10374 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10375 ;;Total ram usage:        2 bytes
 10376 ;; Hardware stack levels used: 1
 10377 ;; Hardware stack levels required when called: 4
 10378 ;; This function calls:
 10379 ;;		_I2C_2_Master_Start
 10380 ;;		_I2C_2_Master_Stop
 10381 ;;		_I2C_2_Master_Write
 10382 ;; This function is called by:
 10383 ;;		_color_click_init
 10384 ;; This function uses a non-reentrant model
 10385 ;;
 10386                           
 10387                           	psect	text39
 10388   004DAE                     __ptext39:
 10389                           	callstack 0
 10390   004DAE                     _color_writetoaddr:
 10391                           	callstack 25
 10392                           
 10393                           ;incstack = 0
 10394                           ;color_writetoaddr@address stored from wreg
 10395   004DAE  6E08               	movwf	color_writetoaddr@address^0,c
 10396   004DB0                     
 10397                           ;color.c: 25:     I2C_2_Master_Start();
 10398   004DB0  EC1C  F027         	call	_I2C_2_Master_Start	;wreg free
 10399                           
 10400                           ;color.c: 26:     I2C_2_Master_Write(0x52 | 0x00);
 10401   004DB4  0E52               	movlw	82
 10402   004DB6  EC0C  F027         	call	_I2C_2_Master_Write
 10403                           
 10404                           ;color.c: 27:     I2C_2_Master_Write(0x80 | address);
 10405   004DBA  5008               	movf	color_writetoaddr@address^0,w,c
 10406   004DBC  0980               	iorlw	128
 10407   004DBE  EC0C  F027         	call	_I2C_2_Master_Write
 10408                           
 10409                           ;color.c: 28:     I2C_2_Master_Write(value);
 10410   004DC2  5007               	movf	color_writetoaddr@value^0,w,c
 10411   004DC4  EC0C  F027         	call	_I2C_2_Master_Write
 10412                           
 10413                           ;color.c: 29:     I2C_2_Master_Stop();
 10414   004DC8  EC17  F027         	call	_I2C_2_Master_Stop	;wreg free
 10415   004DCC  0012               	return		;funcret
 10416   004DCE                     __end_of_color_writetoaddr:
 10417                           	callstack 0
 10418                           
 10419 ;; *************** function _I2C_2_Master_Write *****************
 10420 ;; Defined at:
 10421 ;;		line 45 in file "i2c.c"
 10422 ;; Parameters:    Size  Location     Type
 10423 ;;  data_byte       1    wreg     unsigned char 
 10424 ;; Auto vars:     Size  Location     Type
 10425 ;;  data_byte       1    5[COMRAM] unsigned char 
 10426 ;; Return value:  Size  Location     Type
 10427 ;;                  1    wreg      void 
 10428 ;; Registers used:
 10429 ;;		wreg, status,2, status,0, cstack
 10430 ;; Tracked objects:
 10431 ;;		On entry : 0/0
 10432 ;;		On exit  : 0/0
 10433 ;;		Unchanged: 0/0
 10434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10436 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10438 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10439 ;;Total ram usage:        1 bytes
 10440 ;; Hardware stack levels used: 1
 10441 ;; Hardware stack levels required when called: 3
 10442 ;; This function calls:
 10443 ;;		_I2C_2_Master_Idle
 10444 ;; This function is called by:
 10445 ;;		_color_writetoaddr
 10446 ;;		_color_read_Red
 10447 ;;		_color_read_Green
 10448 ;;		_color_read_Blue
 10449 ;;		_color_read_Clear
 10450 ;; This function uses a non-reentrant model
 10451 ;;
 10452                           
 10453                           	psect	text40
 10454   004E18                     __ptext40:
 10455                           	callstack 0
 10456   004E18                     _I2C_2_Master_Write:
 10457                           	callstack 25
 10458                           
 10459                           ;incstack = 0
 10460                           ;I2C_2_Master_Write@data_byte stored from wreg
 10461   004E18  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
 10462   004E1A                     
 10463                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 10464   004E1A  ECC3  F026         	call	_I2C_2_Master_Idle	;wreg free
 10465   004E1E                     
 10466                           ;i2c.c: 48:   SSP2BUF = data_byte;
 10467   004E1E  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 10468   004E22  0012               	return		;funcret
 10469   004E24                     __end_of_I2C_2_Master_Write:
 10470                           	callstack 0
 10471                           
 10472 ;; *************** function _I2C_2_Master_Stop *****************
 10473 ;; Defined at:
 10474 ;;		line 39 in file "i2c.c"
 10475 ;; Parameters:    Size  Location     Type
 10476 ;;		None
 10477 ;; Auto vars:     Size  Location     Type
 10478 ;;		None
 10479 ;; Return value:  Size  Location     Type
 10480 ;;                  1    wreg      void 
 10481 ;; Registers used:
 10482 ;;		wreg, status,2, status,0, cstack
 10483 ;; Tracked objects:
 10484 ;;		On entry : 0/0
 10485 ;;		On exit  : 0/0
 10486 ;;		Unchanged: 0/0
 10487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10492 ;;Total ram usage:        0 bytes
 10493 ;; Hardware stack levels used: 1
 10494 ;; Hardware stack levels required when called: 3
 10495 ;; This function calls:
 10496 ;;		_I2C_2_Master_Idle
 10497 ;; This function is called by:
 10498 ;;		_color_writetoaddr
 10499 ;;		_color_read_Red
 10500 ;;		_color_read_Green
 10501 ;;		_color_read_Blue
 10502 ;;		_color_read_Clear
 10503 ;; This function uses a non-reentrant model
 10504 ;;
 10505                           
 10506                           	psect	text41
 10507   004E2E                     __ptext41:
 10508                           	callstack 0
 10509   004E2E                     _I2C_2_Master_Stop:
 10510                           	callstack 25
 10511   004E2E                     
 10512                           ;i2c.c: 41:   I2C_2_Master_Idle();
 10513   004E2E  ECC3  F026         	call	_I2C_2_Master_Idle	;wreg free
 10514   004E32                     
 10515                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 10516   004E32  010E               	movlb	14	; () banked
 10517   004E34  85DA               	bsf	218,2,b	;volatile
 10518   004E36                     
 10519                           ; BSR set to: 14
 10520   004E36  0012               	return		;funcret
 10521   004E38                     __end_of_I2C_2_Master_Stop:
 10522                           	callstack 0
 10523                           
 10524 ;; *************** function _I2C_2_Master_Start *****************
 10525 ;; Defined at:
 10526 ;;		line 27 in file "i2c.c"
 10527 ;; Parameters:    Size  Location     Type
 10528 ;;		None
 10529 ;; Auto vars:     Size  Location     Type
 10530 ;;		None
 10531 ;; Return value:  Size  Location     Type
 10532 ;;                  1    wreg      void 
 10533 ;; Registers used:
 10534 ;;		wreg, status,2, status,0, cstack
 10535 ;; Tracked objects:
 10536 ;;		On entry : 0/0
 10537 ;;		On exit  : 0/0
 10538 ;;		Unchanged: 0/0
 10539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10544 ;;Total ram usage:        0 bytes
 10545 ;; Hardware stack levels used: 1
 10546 ;; Hardware stack levels required when called: 3
 10547 ;; This function calls:
 10548 ;;		_I2C_2_Master_Idle
 10549 ;; This function is called by:
 10550 ;;		_color_writetoaddr
 10551 ;;		_color_read_Red
 10552 ;;		_color_read_Green
 10553 ;;		_color_read_Blue
 10554 ;;		_color_read_Clear
 10555 ;; This function uses a non-reentrant model
 10556 ;;
 10557                           
 10558                           	psect	text42
 10559   004E38                     __ptext42:
 10560                           	callstack 0
 10561   004E38                     _I2C_2_Master_Start:
 10562                           	callstack 25
 10563   004E38                     
 10564                           ;i2c.c: 29:   I2C_2_Master_Idle();
 10565   004E38  ECC3  F026         	call	_I2C_2_Master_Idle	;wreg free
 10566   004E3C                     
 10567                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 10568   004E3C  010E               	movlb	14	; () banked
 10569   004E3E  81DA               	bsf	218,0,b	;volatile
 10570   004E40                     
 10571                           ; BSR set to: 14
 10572   004E40  0012               	return		;funcret
 10573   004E42                     __end_of_I2C_2_Master_Start:
 10574                           	callstack 0
 10575                           
 10576 ;; *************** function _I2C_2_Master_Idle *****************
 10577 ;; Defined at:
 10578 ;;		line 22 in file "i2c.c"
 10579 ;; Parameters:    Size  Location     Type
 10580 ;;		None
 10581 ;; Auto vars:     Size  Location     Type
 10582 ;;		None
 10583 ;; Return value:  Size  Location     Type
 10584 ;;                  1    wreg      void 
 10585 ;; Registers used:
 10586 ;;		wreg, status,2, status,0
 10587 ;; Tracked objects:
 10588 ;;		On entry : 0/0
 10589 ;;		On exit  : 0/0
 10590 ;;		Unchanged: 0/0
 10591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10594 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10595 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10596 ;;Total ram usage:        1 bytes
 10597 ;; Hardware stack levels used: 1
 10598 ;; Hardware stack levels required when called: 2
 10599 ;; This function calls:
 10600 ;;		Nothing
 10601 ;; This function is called by:
 10602 ;;		_I2C_2_Master_Start
 10603 ;;		_I2C_2_Master_RepStart
 10604 ;;		_I2C_2_Master_Stop
 10605 ;;		_I2C_2_Master_Write
 10606 ;;		_I2C_2_Master_Read
 10607 ;; This function uses a non-reentrant model
 10608 ;;
 10609                           
 10610                           	psect	text43
 10611   004D86                     __ptext43:
 10612                           	callstack 0
 10613   004D86                     _I2C_2_Master_Idle:
 10614                           	callstack 25
 10615   004D86                     l67:
 10616   004D86  010E               	movlb	14	; () banked
 10617   004D88  B5D8               	btfsc	216,2,b	;volatile
 10618   004D8A  EFC9  F026         	goto	u3971
 10619   004D8E  EFCB  F026         	goto	u3970
 10620   004D92                     u3971:
 10621   004D92  EFC3  F026         	goto	l67
 10622   004D96                     u3970:
 10623   004D96                     
 10624                           ; BSR set to: 14
 10625   004D96  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
 10626   004D9A  0E1F               	movlw	31
 10627   004D9C  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
 10628   004D9E  A4D8               	btfss	status,2,c
 10629   004DA0  EFD4  F026         	goto	u3981
 10630   004DA4  EFD6  F026         	goto	u3980
 10631   004DA8                     u3981:
 10632   004DA8  EFC3  F026         	goto	l67
 10633   004DAC                     u3980:
 10634   004DAC                     
 10635                           ; BSR set to: 14
 10636   004DAC  0012               	return		;funcret
 10637   004DAE                     __end_of_I2C_2_Master_Idle:
 10638                           	callstack 0
 10639                           
 10640 ;; *************** function _I2C_2_Master_Init *****************
 10641 ;; Defined at:
 10642 ;;		line 4 in file "i2c.c"
 10643 ;; Parameters:    Size  Location     Type
 10644 ;;		None
 10645 ;; Auto vars:     Size  Location     Type
 10646 ;;		None
 10647 ;; Return value:  Size  Location     Type
 10648 ;;                  1    wreg      void 
 10649 ;; Registers used:
 10650 ;;		wreg, status,2
 10651 ;; Tracked objects:
 10652 ;;		On entry : 0/0
 10653 ;;		On exit  : 0/0
 10654 ;;		Unchanged: 0/0
 10655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10660 ;;Total ram usage:        0 bytes
 10661 ;; Hardware stack levels used: 1
 10662 ;; Hardware stack levels required when called: 2
 10663 ;; This function calls:
 10664 ;;		Nothing
 10665 ;; This function is called by:
 10666 ;;		_color_click_init
 10667 ;; This function uses a non-reentrant model
 10668 ;;
 10669                           
 10670                           	psect	text44
 10671   004D08                     __ptext44:
 10672                           	callstack 0
 10673   004D08                     _I2C_2_Master_Init:
 10674                           	callstack 27
 10675   004D08                     
 10676                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
 10677   004D08  010E               	movlb	14	; () banked
 10678   004D0A  51D9               	movf	217,w,b	;volatile
 10679   004D0C  0BF0               	andlw	-16
 10680   004D0E  0908               	iorlw	8
 10681   004D10  6FD9               	movwf	217,b	;volatile
 10682   004D12                     
 10683                           ; BSR set to: 14
 10684                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
 10685   004D12  8BD9               	bsf	217,5,b	;volatile
 10686                           
 10687                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
 10688   004D14  0E9F               	movlw	159
 10689   004D16  6FD6               	movwf	214,b	;volatile
 10690   004D18                     
 10691                           ; BSR set to: 14
 10692                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
 10693   004D18  8A84               	bsf	132,5,c	;volatile
 10694   004D1A                     
 10695                           ; BSR set to: 14
 10696                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
 10697   004D1A  8C84               	bsf	132,6,c	;volatile
 10698   004D1C                     
 10699                           ; BSR set to: 14
 10700                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
 10701   004D1C  9BA7               	bcf	167,5,b	;volatile
 10702   004D1E                     
 10703                           ; BSR set to: 14
 10704                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
 10705   004D1E  9DA7               	bcf	167,6,b	;volatile
 10706                           
 10707                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
 10708   004D20  0E1D               	movlw	29
 10709   004D22  6F1D               	movwf	29,b	;volatile
 10710                           
 10711                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
 10712   004D24  0E1E               	movlw	30
 10713   004D26  6F1C               	movwf	28,b	;volatile
 10714                           
 10715                           ;i2c.c: 18:   RD5PPS=0x1C;
 10716   004D28  0E1C               	movlw	28
 10717   004D2A  6F6F               	movwf	111,b	;volatile
 10718                           
 10719                           ;i2c.c: 19:   RD6PPS=0x1B;
 10720   004D2C  0E1B               	movlw	27
 10721   004D2E  6F70               	movwf	112,b	;volatile
 10722   004D30                     
 10723                           ; BSR set to: 14
 10724   004D30  0012               	return		;funcret
 10725   004D32                     __end_of_I2C_2_Master_Init:
 10726                           	callstack 0
 10727                           
 10728 ;; *************** function ___xxtofl *****************
 10729 ;; Defined at:
 10730 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 10731 ;; Parameters:    Size  Location     Type
 10732 ;;  sign            1    wreg     unsigned char 
 10733 ;;  val             4    4[COMRAM] long 
 10734 ;; Auto vars:     Size  Location     Type
 10735 ;;  sign            1   12[COMRAM] unsigned char 
 10736 ;;  arg             4   14[COMRAM] unsigned long 
 10737 ;;  exp             1   13[COMRAM] unsigned char 
 10738 ;; Return value:  Size  Location     Type
 10739 ;;                  4    4[COMRAM] unsigned char 
 10740 ;; Registers used:
 10741 ;;		wreg, status,2, status,0
 10742 ;; Tracked objects:
 10743 ;;		On entry : 0/0
 10744 ;;		On exit  : 0/0
 10745 ;;		Unchanged: 0/0
 10746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10747 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10748 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10749 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10750 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10751 ;;Total ram usage:       14 bytes
 10752 ;; Hardware stack levels used: 1
 10753 ;; Hardware stack levels required when called: 2
 10754 ;; This function calls:
 10755 ;;		Nothing
 10756 ;; This function is called by:
 10757 ;;		_main
 10758 ;; This function uses a non-reentrant model
 10759 ;;
 10760                           
 10761                           	psect	text45
 10762   003D1C                     __ptext45:
 10763                           	callstack 0
 10764   003D1C                     ___xxtofl:
 10765                           	callstack 28
 10766                           
 10767                           ; BSR set to: 14
 10768                           ;incstack = 0
 10769                           ;___xxtofl@sign stored from wreg
 10770   003D1C  6E0D               	movwf	___xxtofl@sign^0,c
 10771   003D1E  500D               	movf	___xxtofl@sign^0,w,c
 10772   003D20  B4D8               	btfsc	status,2,c
 10773   003D22  EF95  F01E         	goto	u4551
 10774   003D26  EF97  F01E         	goto	u4550
 10775   003D2A                     u4551:
 10776   003D2A  EFB9  F01E         	goto	l1001
 10777   003D2E                     u4550:
 10778   003D2E  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
 10779   003D30  EF9E  F01E         	goto	u4560
 10780   003D34  EF9C  F01E         	goto	u4561
 10781   003D38                     u4561:
 10782   003D38  EFB9  F01E         	goto	l1001
 10783   003D3C                     u4560:
 10784   003D3C  C005  F009         	movff	___xxtofl@val,??___xxtofl
 10785   003D40  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
 10786   003D44  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
 10787   003D48  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
 10788   003D4C  1E09               	comf	??___xxtofl^0,f,c
 10789   003D4E  1E0A               	comf	(??___xxtofl+1)^0,f,c
 10790   003D50  1E0B               	comf	(??___xxtofl+2)^0,f,c
 10791   003D52  1E0C               	comf	(??___xxtofl+3)^0,f,c
 10792   003D54  2A09               	incf	??___xxtofl^0,f,c
 10793   003D56  0E00               	movlw	0
 10794   003D58  220A               	addwfc	(??___xxtofl+1)^0,f,c
 10795   003D5A  220B               	addwfc	(??___xxtofl+2)^0,f,c
 10796   003D5C  220C               	addwfc	(??___xxtofl+3)^0,f,c
 10797   003D5E  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
 10798   003D62  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
 10799   003D66  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
 10800   003D6A  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
 10801   003D6E  EFC1  F01E         	goto	l4391
 10802   003D72                     l1001:
 10803   003D72  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
 10804   003D76  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10805   003D7A  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10806   003D7E  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10807   003D82                     l4391:
 10808   003D82  5005               	movf	___xxtofl@val^0,w,c
 10809   003D84  1006               	iorwf	(___xxtofl@val+1)^0,w,c
 10810   003D86  1007               	iorwf	(___xxtofl@val+2)^0,w,c
 10811   003D88  1008               	iorwf	(___xxtofl@val+3)^0,w,c
 10812   003D8A  A4D8               	btfss	status,2,c
 10813   003D8C  EFCA  F01E         	goto	u4571
 10814   003D90  EFCC  F01E         	goto	u4570
 10815   003D94                     u4571:
 10816   003D94  EFD6  F01E         	goto	l4397
 10817   003D98                     u4570:
 10818   003D98  0E00               	movlw	0
 10819   003D9A  6E05               	movwf	?___xxtofl^0,c
 10820   003D9C  0E00               	movlw	0
 10821   003D9E  6E06               	movwf	(?___xxtofl+1)^0,c
 10822   003DA0  0E00               	movlw	0
 10823   003DA2  6E07               	movwf	(?___xxtofl+2)^0,c
 10824   003DA4  0E00               	movlw	0
 10825   003DA6  6E08               	movwf	(?___xxtofl+3)^0,c
 10826   003DA8  EF67  F01F         	goto	l1004
 10827   003DAC                     l4397:
 10828   003DAC  0E96               	movlw	150
 10829   003DAE  6E0E               	movwf	___xxtofl@exp^0,c
 10830   003DB0  EFE0  F01E         	goto	l4401
 10831   003DB4                     l4399:
 10832   003DB4  2A0E               	incf	___xxtofl@exp^0,f,c
 10833   003DB6  90D8               	bcf	status,0,c
 10834   003DB8  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
 10835   003DBA  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
 10836   003DBC  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
 10837   003DBE  320F               	rrcf	___xxtofl@arg^0,f,c
 10838   003DC0                     l4401:
 10839   003DC0  0E00               	movlw	0
 10840   003DC2  140F               	andwf	___xxtofl@arg^0,w,c
 10841   003DC4  6E09               	movwf	??___xxtofl^0,c
 10842   003DC6  0E00               	movlw	0
 10843   003DC8  1410               	andwf	(___xxtofl@arg+1)^0,w,c
 10844   003DCA  6E0A               	movwf	(??___xxtofl+1)^0,c
 10845   003DCC  0E00               	movlw	0
 10846   003DCE  1411               	andwf	(___xxtofl@arg+2)^0,w,c
 10847   003DD0  6E0B               	movwf	(??___xxtofl+2)^0,c
 10848   003DD2  0EFE               	movlw	254
 10849   003DD4  1412               	andwf	(___xxtofl@arg+3)^0,w,c
 10850   003DD6  6E0C               	movwf	(??___xxtofl+3)^0,c
 10851   003DD8  5009               	movf	??___xxtofl^0,w,c
 10852   003DDA  100A               	iorwf	(??___xxtofl+1)^0,w,c
 10853   003DDC  100B               	iorwf	(??___xxtofl+2)^0,w,c
 10854   003DDE  100C               	iorwf	(??___xxtofl+3)^0,w,c
 10855   003DE0  A4D8               	btfss	status,2,c
 10856   003DE2  EFF5  F01E         	goto	u4581
 10857   003DE6  EFF7  F01E         	goto	u4580
 10858   003DEA                     u4581:
 10859   003DEA  EFDA  F01E         	goto	l4399
 10860   003DEE                     u4580:
 10861   003DEE  EF05  F01F         	goto	l1008
 10862   003DF2                     l4403:
 10863   003DF2  2A0E               	incf	___xxtofl@exp^0,f,c
 10864   003DF4  0E01               	movlw	1
 10865   003DF6  260F               	addwf	___xxtofl@arg^0,f,c
 10866   003DF8  0E00               	movlw	0
 10867   003DFA  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
 10868   003DFC  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
 10869   003DFE  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
 10870   003E00  90D8               	bcf	status,0,c
 10871   003E02  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
 10872   003E04  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
 10873   003E06  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
 10874   003E08  320F               	rrcf	___xxtofl@arg^0,f,c
 10875   003E0A                     l1008:
 10876   003E0A  0E00               	movlw	0
 10877   003E0C  140F               	andwf	___xxtofl@arg^0,w,c
 10878   003E0E  6E09               	movwf	??___xxtofl^0,c
 10879   003E10  0E00               	movlw	0
 10880   003E12  1410               	andwf	(___xxtofl@arg+1)^0,w,c
 10881   003E14  6E0A               	movwf	(??___xxtofl+1)^0,c
 10882   003E16  0E00               	movlw	0
 10883   003E18  1411               	andwf	(___xxtofl@arg+2)^0,w,c
 10884   003E1A  6E0B               	movwf	(??___xxtofl+2)^0,c
 10885   003E1C  0EFF               	movlw	255
 10886   003E1E  1412               	andwf	(___xxtofl@arg+3)^0,w,c
 10887   003E20  6E0C               	movwf	(??___xxtofl+3)^0,c
 10888   003E22  5009               	movf	??___xxtofl^0,w,c
 10889   003E24  100A               	iorwf	(??___xxtofl+1)^0,w,c
 10890   003E26  100B               	iorwf	(??___xxtofl+2)^0,w,c
 10891   003E28  100C               	iorwf	(??___xxtofl+3)^0,w,c
 10892   003E2A  A4D8               	btfss	status,2,c
 10893   003E2C  EF1A  F01F         	goto	u4591
 10894   003E30  EF1C  F01F         	goto	u4590
 10895   003E34                     u4591:
 10896   003E34  EFF9  F01E         	goto	l4403
 10897   003E38                     u4590:
 10898   003E38  EF24  F01F         	goto	l4411
 10899   003E3C                     l4409:
 10900   003E3C  060E               	decf	___xxtofl@exp^0,f,c
 10901   003E3E  90D8               	bcf	status,0,c
 10902   003E40  360F               	rlcf	___xxtofl@arg^0,f,c
 10903   003E42  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
 10904   003E44  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
 10905   003E46  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
 10906   003E48                     l4411:
 10907   003E48  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
 10908   003E4A  EF29  F01F         	goto	u4601
 10909   003E4E  EF2B  F01F         	goto	u4600
 10910   003E52                     u4601:
 10911   003E52  EF33  F01F         	goto	l1015
 10912   003E56                     u4600:
 10913   003E56  0E02               	movlw	2
 10914   003E58  600E               	cpfslt	___xxtofl@exp^0,c
 10915   003E5A  EF31  F01F         	goto	u4611
 10916   003E5E  EF33  F01F         	goto	u4610
 10917   003E62                     u4611:
 10918   003E62  EF1E  F01F         	goto	l4409
 10919   003E66                     u4610:
 10920   003E66                     l1015:
 10921   003E66  B00E               	btfsc	___xxtofl@exp^0,0,c
 10922   003E68  EF38  F01F         	goto	u4621
 10923   003E6C  EF3A  F01F         	goto	u4620
 10924   003E70                     u4621:
 10925   003E70  EF3B  F01F         	goto	l4417
 10926   003E74                     u4620:
 10927   003E74  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
 10928   003E76                     l4417:
 10929   003E76  90D8               	bcf	status,0,c
 10930   003E78  320E               	rrcf	___xxtofl@exp^0,f,c
 10931   003E7A  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
 10932   003E7E  6A0A               	clrf	(??___xxtofl+1)^0,c
 10933   003E80  6A0B               	clrf	(??___xxtofl+2)^0,c
 10934   003E82  6A0C               	clrf	(??___xxtofl+3)^0,c
 10935   003E84  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
 10936   003E88  6A0B               	clrf	(??___xxtofl+2)^0,c
 10937   003E8A  6A0A               	clrf	(??___xxtofl+1)^0,c
 10938   003E8C  6A09               	clrf	??___xxtofl^0,c
 10939   003E8E  5009               	movf	??___xxtofl^0,w,c
 10940   003E90  120F               	iorwf	___xxtofl@arg^0,f,c
 10941   003E92  500A               	movf	(??___xxtofl+1)^0,w,c
 10942   003E94  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
 10943   003E96  500B               	movf	(??___xxtofl+2)^0,w,c
 10944   003E98  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
 10945   003E9A  500C               	movf	(??___xxtofl+3)^0,w,c
 10946   003E9C  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
 10947   003E9E  500D               	movf	___xxtofl@sign^0,w,c
 10948   003EA0  B4D8               	btfsc	status,2,c
 10949   003EA2  EF55  F01F         	goto	u4631
 10950   003EA6  EF57  F01F         	goto	u4630
 10951   003EAA                     u4631:
 10952   003EAA  EF5F  F01F         	goto	l4427
 10953   003EAE                     u4630:
 10954   003EAE  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
 10955   003EB0  EF5E  F01F         	goto	u4640
 10956   003EB4  EF5C  F01F         	goto	u4641
 10957   003EB8                     u4641:
 10958   003EB8  EF5F  F01F         	goto	l4427
 10959   003EBC                     u4640:
 10960   003EBC  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
 10961   003EBE                     l4427:
 10962   003EBE  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
 10963   003EC2  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
 10964   003EC6  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
 10965   003ECA  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
 10966   003ECE                     l1004:
 10967   003ECE  0012               	return		;funcret
 10968   003ED0                     __end_of___xxtofl:
 10969                           	callstack 0
 10970                           
 10971 ;; *************** function _TxBufferedString *****************
 10972 ;; Defined at:
 10973 ;;		line 118 in file "serialTest.c"
 10974 ;; Parameters:    Size  Location     Type
 10975 ;;  string          2    5[COMRAM] PTR unsigned char 
 10976 ;;		 -> main@string3(20), main@string2(20), main@string1(20), main@string4(20), 
 10977 ;;		 -> main@string5(20), 
 10978 ;; Auto vars:     Size  Location     Type
 10979 ;;		None
 10980 ;; Return value:  Size  Location     Type
 10981 ;;                  1    wreg      void 
 10982 ;; Registers used:
 10983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10984 ;; Tracked objects:
 10985 ;;		On entry : 0/0
 10986 ;;		On exit  : 0/0
 10987 ;;		Unchanged: 0/0
 10988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10989 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10992 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10993 ;;Total ram usage:        2 bytes
 10994 ;; Hardware stack levels used: 1
 10995 ;; Hardware stack levels required when called: 3
 10996 ;; This function calls:
 10997 ;;		_putCharToTxBuf
 10998 ;; This function is called by:
 10999 ;;		_main
 11000 ;; This function uses a non-reentrant model
 11001 ;;
 11002                           
 11003                           	psect	text46
 11004   004C7E                     __ptext46:
 11005                           	callstack 0
 11006   004C7E                     _TxBufferedString:
 11007                           	callstack 27
 11008   004C7E                     
 11009                           ;serialTest.c: 121:     while(*string != 0) {putCharToTxBuf(*string++);}
 11010   004C7E  EF4A  F026         	goto	l4363
 11011   004C82                     l4359:
 11012   004C82  C006  FFD9         	movff	TxBufferedString@string,fsr2l
 11013   004C86  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
 11014   004C8A  50DF               	movf	indf2,w,c
 11015   004C8C  EC99  F026         	call	_putCharToTxBuf
 11016   004C90  4A06               	infsnz	TxBufferedString@string^0,f,c
 11017   004C92  2A07               	incf	(TxBufferedString@string+1)^0,f,c
 11018   004C94                     l4363:
 11019   004C94  C006  FFD9         	movff	TxBufferedString@string,fsr2l
 11020   004C98  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
 11021   004C9C  50DF               	movf	indf2,w,c
 11022   004C9E  A4D8               	btfss	status,2,c
 11023   004CA0  EF54  F026         	goto	u4511
 11024   004CA4  EF56  F026         	goto	u4510
 11025   004CA8                     u4511:
 11026   004CA8  EF41  F026         	goto	l4359
 11027   004CAC                     u4510:
 11028   004CAC  0012               	return		;funcret
 11029   004CAE                     __end_of_TxBufferedString:
 11030                           	callstack 0
 11031                           
 11032 ;; *************** function _putCharToTxBuf *****************
 11033 ;; Defined at:
 11034 ;;		line 105 in file "serialTest.c"
 11035 ;; Parameters:    Size  Location     Type
 11036 ;;  byte            1    wreg     unsigned char 
 11037 ;; Auto vars:     Size  Location     Type
 11038 ;;  byte            1    4[COMRAM] unsigned char 
 11039 ;; Return value:  Size  Location     Type
 11040 ;;                  1    wreg      void 
 11041 ;; Registers used:
 11042 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11043 ;; Tracked objects:
 11044 ;;		On entry : 0/0
 11045 ;;		On exit  : 0/0
 11046 ;;		Unchanged: 0/0
 11047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11049 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11051 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11052 ;;Total ram usage:        1 bytes
 11053 ;; Hardware stack levels used: 1
 11054 ;; Hardware stack levels required when called: 2
 11055 ;; This function calls:
 11056 ;;		Nothing
 11057 ;; This function is called by:
 11058 ;;		_TxBufferedString
 11059 ;; This function uses a non-reentrant model
 11060 ;;
 11061                           
 11062                           	psect	text47
 11063   004D32                     __ptext47:
 11064                           	callstack 0
 11065   004D32                     _putCharToTxBuf:
 11066                           	callstack 27
 11067                           
 11068                           ;incstack = 0
 11069                           ;putCharToTxBuf@byte stored from wreg
 11070   004D32  6E05               	movwf	putCharToTxBuf@byte^0,c
 11071   004D34                     
 11072                           ;serialTest.c: 106:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
 11073   004D34  0E3B               	movlw	59
 11074   004D36  6458               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
 11075   004D38  EFA0  F026         	goto	u4471
 11076   004D3C  EFA2  F026         	goto	u4470
 11077   004D40                     u4471:
 11078   004D40  EFA4  F026         	goto	l4265
 11079   004D44                     u4470:
 11080   004D44  0E00               	movlw	0
 11081   004D46  6E58               	movwf	_TxBufWriteCnt^0,c	;volatile
 11082   004D48                     l4265:
 11083                           
 11084                           ;serialTest.c: 107:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
 11085   004D48  0E00               	movlw	low _EUSART4TXbuf
 11086   004D4A  2458               	addwf	_TxBufWriteCnt^0,w,c	;volatile
 11087   004D4C  6ED9               	movwf	fsr2l,c
 11088   004D4E  6ADA               	clrf	fsr2h,c
 11089   004D50  0E02               	movlw	high _EUSART4TXbuf
 11090   004D52  22DA               	addwfc	fsr2h,f,c
 11091   004D54  C005  FFDF         	movff	putCharToTxBuf@byte,indf2
 11092   004D58  2A58               	incf	_TxBufWriteCnt^0,f,c	;volatile
 11093   004D5A  0012               	return		;funcret
 11094   004D5C                     __end_of_putCharToTxBuf:
 11095                           	callstack 0
 11096                           
 11097 ;; *************** function _HighISR *****************
 11098 ;; Defined at:
 11099 ;;		line 132 in file "serialTest.c"
 11100 ;; Parameters:    Size  Location     Type
 11101 ;;		None
 11102 ;; Auto vars:     Size  Location     Type
 11103 ;;		None
 11104 ;; Return value:  Size  Location     Type
 11105 ;;                  1    wreg      void 
 11106 ;; Registers used:
 11107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11108 ;; Tracked objects:
 11109 ;;		On entry : 0/0
 11110 ;;		On exit  : 0/0
 11111 ;;		Unchanged: 0/0
 11112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11115 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11116 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11117 ;;Total ram usage:        2 bytes
 11118 ;; Hardware stack levels used: 1
 11119 ;; Hardware stack levels required when called: 1
 11120 ;; This function calls:
 11121 ;;		_getCharFromTxBuf
 11122 ;;		_putCharToRxBuf
 11123 ;;		i2_isDataInTxBuf
 11124 ;; This function is called by:
 11125 ;;		Interrupt level 2
 11126 ;; This function uses a non-reentrant model
 11127 ;;
 11128                           
 11129                           	psect	intcode
 11130   000008                     __pintcode:
 11131                           	callstack 0
 11132   000008                     _HighISR:
 11133                           	callstack 21
 11134                           
 11135                           ;incstack = 0
 11136   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11137   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
 11138   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
 11139   000012                     
 11140                           ;serialTest.c: 134:     if (PIR4bits.RC4IF){
 11141   000012  010E               	movlb	14	; () banked
 11142   000014  A737               	btfss	55,3,b	;volatile
 11143   000016  EF0F  F000         	goto	i2u507_41
 11144   00001A  EF11  F000         	goto	i2u507_40
 11145   00001E                     i2u507_41:
 11146   00001E  EF14  F000         	goto	i2l4755
 11147   000022                     i2u507_40:
 11148   000022                     
 11149                           ; BSR set to: 14
 11150                           ;serialTest.c: 135:         putCharToRxBuf(RC4REG);
 11151   000022  51E3               	movf	227,w,b	;volatile
 11152   000024  ECAE  F026         	call	_putCharToRxBuf
 11153   000028                     i2l4755:
 11154                           
 11155                           ;serialTest.c: 138:     if (PIR4bits.TX4IF && PIE4bits.TX4IE == 1){
 11156   000028  010E               	movlb	14	; () banked
 11157   00002A  A537               	btfss	55,2,b	;volatile
 11158   00002C  EF1A  F000         	goto	i2u508_41
 11159   000030  EF1C  F000         	goto	i2u508_40
 11160   000034                     i2u508_41:
 11161   000034  EF35  F000         	goto	i2l343
 11162   000038                     i2u508_40:
 11163   000038                     
 11164                           ; BSR set to: 14
 11165   000038  A52D               	btfss	45,2,b	;volatile
 11166   00003A  EF21  F000         	goto	i2u509_41
 11167   00003E  EF23  F000         	goto	i2u509_40
 11168   000042                     i2u509_41:
 11169   000042  EF35  F000         	goto	i2l343
 11170   000046                     i2u509_40:
 11171   000046                     
 11172                           ; BSR set to: 14
 11173                           ;serialTest.c: 139:         if (isDataInTxBuf() == 1){
 11174   000046  EC00  F027         	call	i2_isDataInTxBuf	;wreg free
 11175   00004A  06E8               	decf	wreg,f,c
 11176   00004C  A4D8               	btfss	status,2,c
 11177   00004E  EF2B  F000         	goto	i2u510_41
 11178   000052  EF2D  F000         	goto	i2u510_40
 11179   000056                     i2u510_41:
 11180   000056  EF33  F000         	goto	i2l341
 11181   00005A                     i2u510_40:
 11182   00005A                     
 11183                           ;serialTest.c: 140:            TX4REG = getCharFromTxBuf();
 11184   00005A  EC6E  F026         	call	_getCharFromTxBuf	;wreg free
 11185   00005E  010E               	movlb	14	; () banked
 11186   000060  6FE4               	movwf	228,b	;volatile
 11187                           
 11188                           ;serialTest.c: 141:         }
 11189   000062  EF35  F000         	goto	i2l343
 11190   000066                     i2l341:
 11191                           
 11192                           ;serialTest.c: 143:            PIE4bits.TX4IE = 0;
 11193   000066  010E               	movlb	14	; () banked
 11194   000068  952D               	bcf	45,2,b	;volatile
 11195   00006A                     i2l343:
 11196                           
 11197                           ; BSR set to: 14
 11198   00006A  C004  FFDA         	movff	??_HighISR+1,fsr2h
 11199   00006E  C003  FFD9         	movff	??_HighISR,fsr2l
 11200   000072  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11201   000074  0011               	retfie		f
 11202   000076                     __end_of_HighISR:
 11203                           	callstack 0
 11204                           
 11205 ;; *************** function i2_isDataInTxBuf *****************
 11206 ;; Defined at:
 11207 ;;		line 113 in file "serialTest.c"
 11208 ;; Parameters:    Size  Location     Type
 11209 ;;		None
 11210 ;; Auto vars:     Size  Location     Type
 11211 ;;		None
 11212 ;; Return value:  Size  Location     Type
 11213 ;;                  1    wreg      unsigned char 
 11214 ;; Registers used:
 11215 ;;		wreg, status,2, status,0
 11216 ;; Tracked objects:
 11217 ;;		On entry : 0/0
 11218 ;;		On exit  : 0/0
 11219 ;;		Unchanged: 0/0
 11220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11225 ;;Total ram usage:        0 bytes
 11226 ;; Hardware stack levels used: 1
 11227 ;; This function calls:
 11228 ;;		Nothing
 11229 ;; This function is called by:
 11230 ;;		_HighISR
 11231 ;; This function uses a non-reentrant model
 11232 ;;
 11233                           
 11234                           	psect	text49
 11235   004E00                     __ptext49:
 11236                           	callstack 0
 11237   004E00                     i2_isDataInTxBuf:
 11238                           	callstack 21
 11239   004E00                     
 11240                           ;serialTest.c: 114:     return (TxBufWriteCnt!=TxBufReadCnt);
 11241   004E00  5057               	movf	_TxBufReadCnt^0,w,c	;volatile
 11242   004E02  1858               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
 11243   004E04  A4D8               	btfss	status,2,c
 11244   004E06  EF07  F027         	goto	i2u210_41
 11245   004E0A  EF0A  F027         	goto	i2u210_40
 11246   004E0E                     i2u210_41:
 11247   004E0E  0E01               	movlw	1
 11248   004E10  EF0B  F027         	goto	i2u211_40
 11249   004E14                     i2u210_40:
 11250   004E14  0E00               	movlw	0
 11251   004E16                     i2u211_40:
 11252   004E16  0012               	return		;funcret
 11253   004E18                     __end_ofi2_isDataInTxBuf:
 11254                           	callstack 0
 11255                           
 11256 ;; *************** function _putCharToRxBuf *****************
 11257 ;; Defined at:
 11258 ;;		line 85 in file "serialTest.c"
 11259 ;; Parameters:    Size  Location     Type
 11260 ;;  byte            1    wreg     unsigned char 
 11261 ;; Auto vars:     Size  Location     Type
 11262 ;;  byte            1    0[COMRAM] unsigned char 
 11263 ;; Return value:  Size  Location     Type
 11264 ;;                  1    wreg      void 
 11265 ;; Registers used:
 11266 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11267 ;; Tracked objects:
 11268 ;;		On entry : 0/0
 11269 ;;		On exit  : 0/0
 11270 ;;		Unchanged: 0/0
 11271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11273 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11275 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11276 ;;Total ram usage:        1 bytes
 11277 ;; Hardware stack levels used: 1
 11278 ;; This function calls:
 11279 ;;		Nothing
 11280 ;; This function is called by:
 11281 ;;		_HighISR
 11282 ;; This function uses a non-reentrant model
 11283 ;;
 11284                           
 11285                           	psect	text50
 11286   004D5C                     __ptext50:
 11287                           	callstack 0
 11288   004D5C                     _putCharToRxBuf:
 11289                           	callstack 21
 11290                           
 11291                           ;incstack = 0
 11292                           ;putCharToRxBuf@byte stored from wreg
 11293   004D5C  6E01               	movwf	putCharToRxBuf@byte^0,c
 11294   004D5E                     
 11295                           ;serialTest.c: 86:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
 11296   004D5E  0E13               	movlw	19
 11297   004D60  645A               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
 11298   004D62  EFB5  F026         	goto	i2u453_41
 11299   004D66  EFB7  F026         	goto	i2u453_40
 11300   004D6A                     i2u453_41:
 11301   004D6A  EFB9  F026         	goto	i2l4373
 11302   004D6E                     i2u453_40:
 11303   004D6E  0E00               	movlw	0
 11304   004D70  6E5A               	movwf	_RxBufWriteCnt^0,c	;volatile
 11305   004D72                     i2l4373:
 11306                           
 11307                           ;serialTest.c: 87:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
 11308   004D72  0ED7               	movlw	low _EUSART4RXbuf
 11309   004D74  245A               	addwf	_RxBufWriteCnt^0,w,c	;volatile
 11310   004D76  6ED9               	movwf	fsr2l,c
 11311   004D78  6ADA               	clrf	fsr2h,c
 11312   004D7A  0E00               	movlw	high _EUSART4RXbuf
 11313   004D7C  22DA               	addwfc	fsr2h,f,c
 11314   004D7E  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
 11315   004D82  2A5A               	incf	_RxBufWriteCnt^0,f,c	;volatile
 11316   004D84  0012               	return		;funcret
 11317   004D86                     __end_of_putCharToRxBuf:
 11318                           	callstack 0
 11319                           
 11320 ;; *************** function _getCharFromTxBuf *****************
 11321 ;; Defined at:
 11322 ;;		line 99 in file "serialTest.c"
 11323 ;; Parameters:    Size  Location     Type
 11324 ;;		None
 11325 ;; Auto vars:     Size  Location     Type
 11326 ;;		None
 11327 ;; Return value:  Size  Location     Type
 11328 ;;                  1    wreg      unsigned char 
 11329 ;; Registers used:
 11330 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11331 ;; Tracked objects:
 11332 ;;		On entry : 0/0
 11333 ;;		On exit  : 0/0
 11334 ;;		Unchanged: 0/0
 11335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11338 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11339 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11340 ;;Total ram usage:        2 bytes
 11341 ;; Hardware stack levels used: 1
 11342 ;; This function calls:
 11343 ;;		Nothing
 11344 ;; This function is called by:
 11345 ;;		_HighISR
 11346 ;; This function uses a non-reentrant model
 11347 ;;
 11348                           
 11349                           	psect	text51
 11350   004CDC                     __ptext51:
 11351                           	callstack 0
 11352   004CDC                     _getCharFromTxBuf:
 11353                           	callstack 21
 11354   004CDC                     
 11355                           ;serialTest.c: 100:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
 11356   004CDC  0E3B               	movlw	59
 11357   004CDE  6457               	cpfsgt	_TxBufReadCnt^0,c	;volatile
 11358   004CE0  EF74  F026         	goto	i2u454_41
 11359   004CE4  EF76  F026         	goto	i2u454_40
 11360   004CE8                     i2u454_41:
 11361   004CE8  EF78  F026         	goto	i2l4381
 11362   004CEC                     i2u454_40:
 11363   004CEC  0E00               	movlw	0
 11364   004CEE  6E57               	movwf	_TxBufReadCnt^0,c	;volatile
 11365   004CF0                     i2l4381:
 11366                           
 11367                           ;serialTest.c: 101:     return EUSART4TXbuf[TxBufReadCnt++];
 11368   004CF0  2A57               	incf	_TxBufReadCnt^0,f,c	;volatile
 11369   004CF2  0457               	decf	_TxBufReadCnt^0,w,c	;volatile
 11370   004CF4  6E01               	movwf	??_getCharFromTxBuf^0,c
 11371   004CF6  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
 11372   004CF8  0E00               	movlw	low _EUSART4TXbuf
 11373   004CFA  2401               	addwf	??_getCharFromTxBuf^0,w,c
 11374   004CFC  6ED9               	movwf	fsr2l,c
 11375   004CFE  0E02               	movlw	high _EUSART4TXbuf
 11376   004D00  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
 11377   004D02  6EDA               	movwf	fsr2h,c
 11378   004D04  50DF               	movf	indf2,w,c
 11379   004D06  0012               	return		;funcret
 11380   004D08                     __end_of_getCharFromTxBuf:
 11381                           	callstack 0
 11382                           
 11383                           	psect	rparam
 11384   000000                     
 11385                           	psect	temp
 11386   00005B                     btemp:
 11387                           	callstack 0
 11388   00005B                     	ds	1
 11389   000000                     int$flags	set	btemp
 11390   000000                     wtemp8	set	btemp+1
 11391   000000                     ttemp5	set	btemp+1
 11392   000000                     ttemp6	set	btemp+4
 11393   000000                     ttemp7	set	btemp+8
 11394                           
 11395                           	psect	idloc
 11396                           
 11397                           ;Config register IDLOC0 @ 0x200000
 11398                           ;	unspecified, using default values
 11399   200000                     	org	2097152
 11400   200000  0FFF               	dw	4095
 11401                           
 11402                           ;Config register IDLOC1 @ 0x200002
 11403                           ;	unspecified, using default values
 11404   200002                     	org	2097154
 11405   200002  0FFF               	dw	4095
 11406                           
 11407                           ;Config register IDLOC2 @ 0x200004
 11408                           ;	unspecified, using default values
 11409   200004                     	org	2097156
 11410   200004  0FFF               	dw	4095
 11411                           
 11412                           ;Config register IDLOC3 @ 0x200006
 11413                           ;	unspecified, using default values
 11414   200006                     	org	2097158
 11415   200006  0FFF               	dw	4095
 11416                           
 11417                           ;Config register IDLOC4 @ 0x200008
 11418                           ;	unspecified, using default values
 11419   200008                     	org	2097160
 11420   200008  0FFF               	dw	4095
 11421                           
 11422                           ;Config register IDLOC5 @ 0x20000A
 11423                           ;	unspecified, using default values
 11424   20000A                     	org	2097162
 11425   20000A  0FFF               	dw	4095
 11426                           
 11427                           ;Config register IDLOC6 @ 0x20000C
 11428                           ;	unspecified, using default values
 11429   20000C                     	org	2097164
 11430   20000C  0FFF               	dw	4095
 11431                           
 11432                           ;Config register IDLOC7 @ 0x20000E
 11433                           ;	unspecified, using default values
 11434   20000E                     	org	2097166
 11435   20000E  0FFF               	dw	4095
 11436                           
 11437                           	psect	config
 11438                           
 11439                           ;Config register CONFIG1L @ 0x300000
 11440                           ;	External Oscillator mode Selection bits
 11441                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 11442                           ;	Power-up default value for COSC bits
 11443                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 11444   300000                     	org	3145728
 11445   300000  AA                 	db	170
 11446                           
 11447                           ;Config register CONFIG1H @ 0x300001
 11448                           ;	unspecified, using default values
 11449                           ;	Clock Out Enable bit
 11450                           ;	CLKOUTEN = 0x1, unprogrammed default
 11451                           ;	Clock Switch Enable bit
 11452                           ;	CSWEN = 0x1, unprogrammed default
 11453                           ;	Fail-Safe Clock Monitor Enable bit
 11454                           ;	FCMEN = 0x1, unprogrammed default
 11455   300001                     	org	3145729
 11456   300001  FF                 	db	255
 11457                           
 11458                           ;Config register CONFIG2L @ 0x300002
 11459                           ;	unspecified, using default values
 11460                           ;	Master Clear Enable bit
 11461                           ;	MCLRE = 0x1, unprogrammed default
 11462                           ;	Power-up Timer Enable bit
 11463                           ;	PWRTE = 0x1, unprogrammed default
 11464                           ;	Low-power BOR enable bit
 11465                           ;	LPBOREN = 0x1, unprogrammed default
 11466                           ;	Brown-out Reset Enable bits
 11467                           ;	BOREN = 0x3, unprogrammed default
 11468   300002                     	org	3145730
 11469   300002  FF                 	db	255
 11470                           
 11471                           ;Config register CONFIG2H @ 0x300003
 11472                           ;	unspecified, using default values
 11473                           ;	Brown Out Reset Voltage selection bits
 11474                           ;	BORV = 0x3, unprogrammed default
 11475                           ;	ZCD Disable bit
 11476                           ;	ZCD = 0x1, unprogrammed default
 11477                           ;	PPSLOCK bit One-Way Set Enable bit
 11478                           ;	PPS1WAY = 0x1, unprogrammed default
 11479                           ;	Stack Full/Underflow Reset Enable bit
 11480                           ;	STVREN = 0x1, unprogrammed default
 11481                           ;	Debugger Enable bit
 11482                           ;	DEBUG = 0x1, unprogrammed default
 11483                           ;	Extended Instruction Set Enable bit
 11484                           ;	XINST = 0x1, unprogrammed default
 11485   300003                     	org	3145731
 11486   300003  FF                 	db	255
 11487                           
 11488                           ;Config register CONFIG3L @ 0x300004
 11489                           ;	WDT Period Select bits
 11490                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 11491                           ;	WDT operating mode
 11492                           ;	WDTE = OFF, WDT Disabled
 11493   300004                     	org	3145732
 11494   300004  9F                 	db	159
 11495                           
 11496                           ;Config register CONFIG3H @ 0x300005
 11497                           ;	unspecified, using default values
 11498                           ;	WDT Window Select bits
 11499                           ;	WDTCWS = 0x7, unprogrammed default
 11500                           ;	WDT input clock selector
 11501                           ;	WDTCCS = 0x7, unprogrammed default
 11502   300005                     	org	3145733
 11503   300005  FF                 	db	255
 11504                           
 11505                           ;Config register CONFIG4L @ 0x300006
 11506                           ;	unspecified, using default values
 11507                           ;	Write Protection Block 0
 11508                           ;	WRT0 = 0x1, unprogrammed default
 11509                           ;	Write Protection Block 1
 11510                           ;	WRT1 = 0x1, unprogrammed default
 11511                           ;	Write Protection Block 2
 11512                           ;	WRT2 = 0x1, unprogrammed default
 11513                           ;	Write Protection Block 3
 11514                           ;	WRT3 = 0x1, unprogrammed default
 11515                           ;	Write Protection Block 3
 11516                           ;	WRT4 = 0x1, unprogrammed default
 11517                           ;	Write Protection Block 3
 11518                           ;	WRT5 = 0x1, unprogrammed default
 11519                           ;	Write Protection Block 3
 11520                           ;	WRT6 = 0x1, unprogrammed default
 11521                           ;	Write Protection Block 3
 11522                           ;	WRT7 = 0x1, unprogrammed default
 11523   300006                     	org	3145734
 11524   300006  FF                 	db	255
 11525                           
 11526                           ;Config register CONFIG4H @ 0x300007
 11527                           ;	unspecified, using default values
 11528                           ;	Configuration Register Write Protection bit
 11529                           ;	WRTC = 0x1, unprogrammed default
 11530                           ;	Boot Block Write Protection bit
 11531                           ;	WRTB = 0x1, unprogrammed default
 11532                           ;	Data EEPROM Write Protection bit
 11533                           ;	WRTD = 0x1, unprogrammed default
 11534                           ;	Scanner Enable bit
 11535                           ;	SCANE = 0x1, unprogrammed default
 11536                           ;	Low Voltage Programming Enable bit
 11537                           ;	LVP = 0x1, unprogrammed default
 11538   300007                     	org	3145735
 11539   300007  FF                 	db	255
 11540                           
 11541                           ;Config register CONFIG5L @ 0x300008
 11542                           ;	unspecified, using default values
 11543                           ;	UserNVM Program Memory Code Protection bit
 11544                           ;	CP = 0x1, unprogrammed default
 11545                           ;	DataNVM Memory Code Protection bit
 11546                           ;	CPD = 0x1, unprogrammed default
 11547   300008                     	org	3145736
 11548   300008  FF                 	db	255
 11549                           
 11550                           ;Config register CONFIG5H @ 0x300009
 11551                           ;	unspecified, using default values
 11552   300009                     	org	3145737
 11553   300009  FF                 	db	255
 11554                           
 11555                           ;Config register CONFIG6L @ 0x30000A
 11556                           ;	unspecified, using default values
 11557                           ;	Table Read Protection Block 0
 11558                           ;	EBTR0 = 0x1, unprogrammed default
 11559                           ;	Table Read Protection Block 1
 11560                           ;	EBTR1 = 0x1, unprogrammed default
 11561                           ;	Table Read Protection Block 2
 11562                           ;	EBTR2 = 0x1, unprogrammed default
 11563                           ;	Table Read Protection Block 3
 11564                           ;	EBTR3 = 0x1, unprogrammed default
 11565                           ;	Table Read Protection Block 4
 11566                           ;	EBTR4 = 0x1, unprogrammed default
 11567                           ;	Table Read Protection Block 5
 11568                           ;	EBTR5 = 0x1, unprogrammed default
 11569                           ;	Table Read Protection Block 6
 11570                           ;	EBTR6 = 0x1, unprogrammed default
 11571                           ;	Table Read Protection Block 7
 11572                           ;	EBTR7 = 0x1, unprogrammed default
 11573   30000A                     	org	3145738
 11574   30000A  FF                 	db	255
 11575                           
 11576                           ;Config register CONFIG6H @ 0x30000B
 11577                           ;	unspecified, using default values
 11578                           ;	Boot Block Table Read Protection bit
 11579                           ;	EBTRB = 0x1, unprogrammed default
 11580   30000B                     	org	3145739
 11581   30000B  FF                 	db	255
 11582                           tosu	equ	0xFFF
 11583                           tosh	equ	0xFFE
 11584                           tosl	equ	0xFFD
 11585                           stkptr	equ	0xFFC
 11586                           pclatu	equ	0xFFB
 11587                           pclath	equ	0xFFA
 11588                           pcl	equ	0xFF9
 11589                           tblptru	equ	0xFF8
 11590                           tblptrh	equ	0xFF7
 11591                           tblptrl	equ	0xFF6
 11592                           tablat	equ	0xFF5
 11593                           prodh	equ	0xFF4
 11594                           prodl	equ	0xFF3
 11595                           indf0	equ	0xFEF
 11596                           postinc0	equ	0xFEE
 11597                           postdec0	equ	0xFED
 11598                           preinc0	equ	0xFEC
 11599                           plusw0	equ	0xFEB
 11600                           fsr0h	equ	0xFEA
 11601                           fsr0l	equ	0xFE9
 11602                           wreg	equ	0xFE8
 11603                           indf1	equ	0xFE7
 11604                           postinc1	equ	0xFE6
 11605                           postdec1	equ	0xFE5
 11606                           preinc1	equ	0xFE4
 11607                           plusw1	equ	0xFE3
 11608                           fsr1h	equ	0xFE2
 11609                           fsr1l	equ	0xFE1
 11610                           bsr	equ	0xFE0
 11611                           indf2	equ	0xFDF
 11612                           postinc2	equ	0xFDE
 11613                           postdec2	equ	0xFDD
 11614                           preinc2	equ	0xFDC
 11615                           plusw2	equ	0xFDB
 11616                           fsr2h	equ	0xFDA
 11617                           fsr2l	equ	0xFD9
 11618                           status	equ	0xFD8

Data Sizes:
    Strings     109
    Constant    0
    Data        0
    BSS         177
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160    119     152
    BANK1           256    154     234
    BANK2           256      0      60
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_16(CODE[4]), STR_13(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_16(CODE[4]), STR_13(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_12(CODE[15]), STR_11(CODE[12]), STR_10(CODE[11]), STR_9(CODE[12]), 
		 -> STR_8(CODE[10]), STR_7(CODE[11]), STR_6(CODE[6]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[4]), STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_12(CODE[15]), STR_11(CODE[12]), STR_10(CODE[11]), STR_9(CODE[12]), 
		 -> STR_8(CODE[10]), STR_7(CODE[11]), STR_6(CODE[6]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[4]), STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 15
		 -> STR_12(CODE[15]), STR_11(CODE[12]), STR_10(CODE[11]), STR_9(CODE[12]), 
		 -> STR_8(CODE[10]), STR_7(CODE[11]), STR_6(CODE[6]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[4]), STR_1(CODE[6]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2358$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_12(CODE[15]), STR_11(CODE[12]), STR_10(CODE[11]), STR_9(CODE[12]), 
		 -> STR_8(CODE[10]), STR_7(CODE[11]), STR_6(CODE[6]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[4]), STR_1(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> ADC2String@buf(COMRAM[40]), main@string3(BANK1[20]), main@string2(BANK1[20]), main@string1(BANK1[20]), 
		 -> main@string4(BANK1[20]), main@string5(BANK1[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2274$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2274$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 20
		 -> main@string3(BANK1[20]), main@string2(BANK1[20]), main@string1(BANK1[20]), main@string4(BANK1[20]), 
		 -> main@string5(BANK1[20]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhhlll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhhlll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhhlll[1]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhhlll[1]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhhlll[1]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhhlll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhhlll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhhlll[1]), 

    motorRight.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhhlll[1]), 

    motorRight.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhhlll[1]), 

    S1403DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhhlll[1]), 

    motorLeft.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhhlll[1]), 

    S1403DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhhlll[1]), 

    motorLeft.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhhlll[1]), 

    getColor@v	PTR struct RGB size(2) Largest target is 8
		 -> main@RGBVal(BANK1[8]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___fladd
    ___flmul->___flsub
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _initDCmotorsPWM->_LRmotorsInit
    _getColor->_color_read_Blue
    _getColor->_color_read_Clear
    _getColor->_color_read_Green
    _getColor->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               180   180      0   59373
                                            117 BANK0      2     2      0
                                              0 BANK1    154   154      0
                   _TxBufferedString
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                   _color_click_init
                           _getColor
                    _initDCmotorsPWM
                         _initUSART4
                          _sendTxBuf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12   36449
                                             92 BANK0     25    13     12
                           ___xxtofl (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   33971
                                             84 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   33501
                                             84 COMRAM     2     2      0
                                             67 BANK0     17    11      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   27352
                                             82 COMRAM     2     2      0
                                             16 BANK0     51    44      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             78 COMRAM     4     0      4
                                              0 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4713
                                             20 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3416
                                             28 COMRAM    25    17      8
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    4286
                                             53 COMRAM    12     4      8
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3071
                                             53 COMRAM    25    17      8
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             31 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2     318
                                             22 COMRAM     2     0      2
                       _LRmotorsInit
 ---------------------------------------------------------------------------------
 (2) _LRmotorsInit                                        18    18      0     242
                                              4 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 (1) _getColor                                             2     0      2     768
                                             15 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4    1614
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     903
                                              5 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
                    i2_isDataInTxBuf
 ---------------------------------------------------------------------------------
 (10) i2_isDataInTxBuf                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TxBufferedString
     _putCharToTxBuf
   ___fldiv
     ___flmul (ARG)
       ___flsub (ARG)
         ___fladd
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flsub (ARG)
     ___xxtofl (ARG)
   ___flge
     ___flmul (ARG)
     ___flsub (ARG)
   ___flmul
   ___flsub
   ___xxtofl
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _getColor
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
     _LRmotorsInit
   _initUSART4
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     ___xxtofl (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf
   i2_isDataInTxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      3C       9       23.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     9A      EA       7       91.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     77      98       5       95.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBIGSFRhlllh      52      0       0      41        0.0%
BITBIGSFRhlllll     37      0       0      43        0.0%
BITBIGSFRhhhhhl     32      0       0      33        0.0%
BITBIGSFRlllhll     2A      0       0      54        0.0%
BITBIGSFRlllll      26      0       0      59        0.0%
BITBIGSFRllhh       20      0       0      46        0.0%
BITBIGSFRlllhhh     1E      0       0      48        0.0%
BITBIGSFRhhhhll     17      0       0      37        0.0%
BITBIGSFRlllhhh     11      0       0      49        0.0%
BITBIGSFRhhhhlh      E      0       0      34        0.0%
BITBIGSFRhhhhhh      D      0       0      32        0.0%
BITBIGSFRllhl        C      0       0      47        0.0%
BITBIGSFRlllhll      9      0       0      56        0.0%
BITBIGSFRlllhll      9      0       0      55        0.0%
BITBIGSFRhlllll      8      0       0      44        0.0%
BITBIGSFRllllh       6      0       0      58        0.0%
BITBIGSFRlllhll      6      0       0      53        0.0%
BITBIGSFRlllhlh      5      0       0      52        0.0%
BITBIGSFRhhhl        5      0       0      38        0.0%
BITBIGSFRlllhll      5      0       0      57        0.0%
BITBIGSFRlllhhl      3      0       0      51        0.0%
BITBIGSFRhllllh      2      0       0      42        0.0%
BITBIGSFRhhhhll      2      0       0      36        0.0%
BITBIGSFRhhhhlh      1      0       0      35        0.0%
BITBIGSFRlllhhh      1      0       0      50        0.0%
BITBIGSFRhllh        1      0       0      40        0.0%
BITBIGSFRhlhh        1      0       0      39        0.0%
BITBIGSFRlh          1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     218      60        0.0%
DATA                 0      0     218       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Dec 10 15:49:51 2022

               _color_read_Red 4902                   ___fldiv@aexp 004E                   ___fldiv@bexp 004D  
                 ___fldiv@sign 0046                _color_read_Blue 49F2                             l22 4DCC  
                           l31 4A40                             l25 4950                             l34 49F0  
                           l19 4C7C                             l28 49A0                             l37 4808  
                           l70 4DAC                             l64 4D30                             l73 4E40  
                           l82 4E22                             l67 4D86                             l76 4E2C  
                           l85 4B9A                             l79 4E36               _color_read_Clear 49A2  
             _color_read_Green 4952                            l214 46CA                            l150 121E  
                          l321 4D5A                            l217 4A8A                            l330 4CAC  
                          l324 4DFE                            l334 4DE6                            l281 4CDA  
                          l611 437E                            l460 4056                            l620 4C12  
                          l605 4636                            l616 43C4                            l473 41BA  
                          l643 42C0                            l900 2CD6                            l901 2CC4  
                          l930 33E0                            l916 4AD0                            l941 349E  
                          l933 33A4                            l942 348C                            l928 3580  
                          l960 2E82                            l970 30DE                            l874 2AEC  
                          l939 3426                            l891 2C06                            l883 2DBC  
                          l875 2ADA                            l964 31E6                            l876 2AA0  
                          l967 3078                            l977 31A8                            l969 30F0  
                          _abs 4B9C                            _pad 46CC           __end_of_LRmotorsInit 4A8C  
                          wreg 000FE8                   ___flmul@aexp 002E                   ___flmul@bexp 002F  
                 ___flmul@sign 0029                   ___flmul@temp 0034                   ___flmul@prod 0030  
                 ___fltol@exp1 000E                           l1001 3D72                           l1004 3ECE  
                         l1015 3E66                           l1008 3E0A                           l1024 48B0  
                         l1123 26DE                           ?_abs 0017                           l1060 4744  
                         l1204 4900                           l1216 458C                           l1224 4B58  
                         l1056 46EE                           l1160 485E                           l1065 3914  
                         l1233 4B14                           l1170 44C2                           l1090 28FC  
                         l1138 3886                           l1227 4E42                           l1067 391C  
                         l1068 3962                           l3101 296A                           l1093 2296  
                         l1175 4BD2                           l1079 3B04                           l3111 2994  
                         l3103 297C                           l1095 20DC                           l1184 3D1A  
                         l3201 2B6A                           l3113 29A4                           l3121 29CE  
                         l3105 297E                           l1178 4BDA                           l3211 2BD6  
                         l3203 2B74                           l3131 2A06                           l3123 29DE  
                         l3115 29B4                           l3107 2984                           l1187 3C5E  
                         l1195 479A                           l4101 4E38                           l3301 3F14  
                         l3213 2BE6                           l3205 2B7A                           l3141 2A1A  
                         l3133 2A0A                           l3125 29F0                           l3117 29C4  
                         l3109 2992                           l1198 47AA                           l4103 4E3C  
                         l4111 4E32                           l3311 3F6A                           l3303 3F34  
                         l3071 44E8                           l3231 2C68                           l3223 2C40  
                         l3207 2BA0                           l3215 2BF6                           l3151 2A2E  
                         l3143 2A1E                           l3135 2A0E                           l3127 29FE  
                         l3119 29C6                           l4105 4E1A                           l4121 4B68  
                         l4113 4E24                           l3321 3FEC                           l3313 3F7E  
                         l3305 3F38                           l3073 44F2                           l3401 328A  
                         l3233 2C70                           l3225 2C4A                           l3217 2C1C  
                         l3209 2BD4                           l3241 2C94                           l3161 2A42  
                         l3153 2A32                           l3145 2A22                           l3137 2A12  
                         l3129 2A02                           l3081 28FE                           l5001 243C  
                         l4107 4E1E                           l4123 4B70                           l4115 4E28  
                         l3331 4036                           l3323 3FEE                           l3315 3F8C  
                         l3307 3F44                           l3075 4510                           l3067 44C4  
                         l3411 32CA                           l3403 329A                           l3251 2CE6  
                         l3243 2C98                           l3235 2C74                           l3227 2C58  
                         l3219 2C2C                           l3171 2ABA                           l3163 2A6C  
                         l3155 2A36                           l3147 2A26                           l3139 2A16  
                         l3091 293A                           l3083 290A                           l5011 24DC  
                         l5003 2442                           l4221 4D1C                           l4213 4D08  
                         l4109 4E2E                           l4125 4B96                           l4117 4B5C  
                         l4301 4CBE                           l3325 4000                           l3317 3F9E  
                         l3309 3F62                           l3341 408A                           l3077 4546  
                         l3069 44D6                           l3501 3576                           l3413 32DA  
                         l3421 32FA                           l3405 329C                           l3261 2D4C  
                         l3253 2CF2                           l3245 2CA6                           l3237 2C84  
                         l3229 2C5A                           l3181 2AFA                           l3173 2ABE  
                         l3165 2A88                           l3157 2A3A                           l3149 2A2A  
                         l3093 294A                           l3085 2918                           l5021 25B8  
                         l5013 250E                           l5005 2460                           l4223 4D1E  
                         l4215 4D12                           l4127 4B98                           l4119 4B60  
                         l4311 4CD0                           l4303 4CC0                           l3319 3FCC  
                         l3327 4006                           l3351 40E2                           l3343 408E  
                         l3335 4058                           l3431 3338                           l3423 330A  
                         l3415 32E2                           l3407 32A4                           l3511 2DCA  
                         l3271 2D94                           l3263 2D5C                           l3255 2D00  
                         l3247 2CBC                           l3239 2C86                           l3191 2B3C  
                         l3183 2B0A                           l3175 2ACC                           l3167 2A98  
                         l3159 2A3E                           l3095 294C                           l3087 291A  
                         l5031 261A                           l5023 25BE                           l5015 251E  
                         l5007 2494                           l5111 35CA                           l5103 3582  
                         l4401 3DC0                           l4217 4D18                           l4225 4DB0  
                         l4241 4A38                           l4233 4952                           l4321 4638  
                         l4313 4CD2                           l4305 4CC2                           l3329 4016  
                         l3361 4164                           l3353 40F6                           l3345 409C  
                         l3337 405C                           l3441 3380                           l3433 3348  
                         l3425 330A                           l3417 32E6                           l3409 32B4  
                         l3601 309A                           l3521 2E0A                           l3513 2DD8  
                         l3273 2D96                           l3265 2D7C                           l3257 2D3A  
                         l3193 2B4A                           l3177 2ACE                           l3169 2AAE  
                         l3089 292A                           l3097 2954                           l5041 26B4  
                         l5033 2622                           l5025 25F2                           l5017 252E  
                         l5009 24C6                           l5113 35DA                           l5105 35AA  
                         l5201 4882                           l4411 3E48                           l4403 3DF2  
                         l4219 4D1A                           l4235 4998                           l4227 4902  
                         l4251 4A42                           l4331 46A2                           l4323 4648  
                         l4315 4CD4                           l4307 4CCC                           l3291 3ED0  
                         l3355 4104                           l3363 416A                           l3347 40BC  
                         l3339 406A                           l3283 4B16                           l3451 33CE  
                         l3443 3394                           l3435 3358                           l3371 31E8  
                         l3611 310C                           l3603 30A8                           l3531 2E3A  
                         l3523 2E10                           l3515 2DDA                           l3275 2D9C  
                         l3267 2D80                           l3259 2D3C                           l3195 2B56  
                         l3187 2B1E                           l3179 2AD8                           l3099 2964  
                         l5051 2712                           l5043 26D4                           l5035 2628  
                         l5027 2606                           l5019 2562                           l5131 36D6  
                         l5123 36A0                           l5115 35FA                           l5107 35B8  
                         l5203 489E                           l5211 0E78                           l4261 4D34  
                         l4421 3E9E                           l4413 3E56                           l4405 3DF4  
                         l4245 49A2                           l4229 4948                           l4253 4A4E  
                         l4341 46C4                           l4333 46AC                           l4325 4672  
                         l4317 4CD6                           l4309 4CCE                           l3293 3ED4  
                         l3365 417A                           l3357 4132                           l3349 40DA  
                         l3285 4B22                           l3461 3416                           l3453 33DE  
                         l3445 33A2                           l3437 3368                           l3429 331E  
                         l3381 3224                           l3373 31F4                           l3621 3176  
                         l3613 311A                           l3605 30D6                           l3541 2E72  
                         l3533 2E3C                           l3525 2E20                           l3517 2DEA  
                         l3509 2DBE                           l3277 2DAA                           l3269 2D8E  
                         l3197 2B5A                           l3189 2B2E                           l3701 4212  
                         l5061 273A                           l5053 2718                           l5045 26F0  
                         l5037 2630                           l5029 260A                           l5141 3768  
                         l5125 36B0                           l5117 361A                           l5109 35C6  
                         l5301 0F5A                           l5221 0E8C                           l5213 0E84  
                         l4263 4D44                           l4423 3EAE                           l4415 3E74  
                         l4407 3E00                           l4239 49F2                           l4247 49E8  
                         l4255 4A56                           l4343 46C6                           l4335 46AE  
                         l4327 4696                           l4319 4CD8                           l3295 3EE2  
                         l3367 419A                           l3359 4152                           l3287 4B34  
                         l3471 3456                           l3463 3424                           l3455 33F0  
                         l3447 33AE                           l3439 3370                           l3391 3254  
                         l3383 3234                           l3375 3202                           l3631 31CC  
                         l3623 3190                           l3615 3144                           l3551 2EC2  
                         l3543 2E92                           l3535 2E4C                           l3527 2E26  
                         l3519 2DFA                           l3279 2DAC                           l3199 2B68  
                         l3703 4222                           l5071 276E                           l5055 2720  
                         l5047 26FE                           l5063 2740                           l5039 263C  
                         l5127 36C6                           l5135 36DE                           l5119 3670  
                         l5311 0FA2                           l5303 0F6A                           l5231 0E96  
                         l5223 0E8E                           l5215 0E86                           l5207 0E70  
                         l4265 4D48                           l4361 4C90                           l4425 3EBC  
                         l4417 3E76                           l4409 3E3C                           l4257 4A72  
                         l4337 46B8                           l4329 46A0                           l3297 3F02  
                         l3289 4B38                           l3481 34C8                           l3473 3484  
                         l3457 3406                           l3465 3436                           l3449 33CC  
                         l3393 325A                           l3385 3236                           l3377 3204  
                         l3625 31AC                           l3633 31D2                           l3609 3100  
                         l3617 3148                           l3561 2F12                           l3553 2ECC  
                         l3545 2EA2                           l3537 2E5C                           l3529 2E2C  
                         l3641 4A9C                           l3713 424C                           l3705 4226  
                         l5081 2824                           l5073 27C6                           l5065 2752  
                         l5057 2730                           l5049 270E                           l5145 379C  
                         l5129 36CE                           l5137 3710                           l5161 385A  
                         l5401 16B4                           l5321 102A                           l5313 0FC8  
                         l5305 0F78                           l5241 0EA0                           l5233 0E98  
                         l5225 0E90                           l5217 0E88                           l5209 0E74  
                         l4267 4D58                           l4363 4C94                           l4427 3EBE  
                         l4419 3E7A                           l4291 4C72                           l4283 4C4A  
                         l4259 4A7A                           l4339 46BA                           l3299 3F06  
                         l3491 3540                           l3483 34F2                           l3467 3444  
                         l3459 340C                           l3395 3268                           l3379 3214  
                         l3387 323E                           l3651 45FA                           l3635 31D6  
                         l3627 31BC                           l3619 3162                           l3571 2F54  
                         l3563 2F1E                           l3555 2EE2                           l3539 2E6C  
                         l3731 42B0                           l3723 4274                           l3715 4256  
                         l3707 4234                           l3811 48B2                           l5091 2896  
                         l5083 2840                           l5075 27FA                           l5067 2764  
                         l5059 2734                           l5155 3818                           l5147 37C6  
                         l5139 3734                           l5411 1760                           l5403 16B8  
                         l5331 1066                           l5323 1036                           l5307 0F82  
                         l5251 0EAA                           l5243 0EA2                           l5235 0E9A  
                         l5227 0E92                           l5219 0E8A                           l4357 4C7E  
                         l4285 4C4E                           l4293 47AC                           l4269 4DE8  
                         l4365 4DCE                           l3741 46FA                           l3493 355C  
                         l3477 34AE                           l3485 34F6                           l3469 3448  
                         l3397 326A                           l3389 324E                           l3653 460A  
                         l3645 458E                           l3661 42C2                           l3629 31CA  
                         l3581 2FB6                           l3573 2F64                           l3565 2F2C  
                         l3557 2EEE                           l3549 2EB6                           l3725 4280  
                         l3717 4260                           l3813 48C6                           l3821 48E6  
                         l5093 28AE                           l5085 2848                           l5077 2802  
                         l5069 2768                           l5149 37E6                           l5157 3848  
                         l5501 1DE6                           l5421 17CA                           l5413 1776  
                         l5405 16CA                           l5341 10C4                           l5325 103E  
                         l5317 0FEC                           l5333 108C                           l5261 0EB4  
                         l5253 0EAC                           l5245 0EA4                           l5237 0E9C  
                         l5229 0E94                           ?_pad 0015                           l4359 4C82  
                         l4391 3D82                           l3823 4D86                           l4287 4C58  
                         l4295 4CAE                           l4367 4DE2                           l3751 4BB6  
                         l3743 470E                           l3735 46CC                           l3831 38BC  
                         l3495 3560                           l3487 3510                           l3479 34BA  
                         l3399 327A                           l3655 462E                           l3647 45BC  
                         l3671 434C                           l3663 42F0                           l3591 305E  
                         l3583 2FD2                           l3575 2F7E                           l3567 2F38  
                         l3559 2F06                           l3639 4A8C                           l3727 4290  
                         l3815 48D2                           l5095 28BE                           l5087 2858  
                         l5079 2806                           l5191 4854                           l5511 1EE2  
                         l5503 1E9A                           l5431 1854                           l5423 17FC  
                         l5415 1782                           l5407 16FC                           l5351 114C  
                         l5343 10EA                           l5335 109A                           l5327 1046  
                         l5319 1012                           l5271 0EC0                           l5263 0EB6  
                         l5255 0EAE                           l5247 0EA6                           l5239 0E9E  
                         l4393 3D98                           l4385 3D1E                           l3825 4D96  
                         l4289 4C68                           l4297 4CB4                           l3745 4712  
                         l3737 46DA                           l3841 3934                           l3833 38CC  
                         l3497 356E                           l3489 3526                           l3657 4634  
                         l3649 45CC                           l3673 435E                           l3665 4300  
                         l3593 3068                           l3585 2FFC                           l3577 2F8E  
                         l3569 2F48                           l3729 42A0                           l3761 4458  
                         l3753 43C6                           l3817 48D6                           l5097 28D4  
                         l5089 2888                           l5185 480A                           l5505 1EC0  
                         l5441 1976                           l5425 182E                           l5433 1866  
                         l5417 1786                           l5409 172E                           l5361 11E0  
                         l5353 1158                           l5337 10A4                           l5329 104E  
                         l5281 0EE2                           l5273 0ECA                           l5265 0EB8  
                         l5257 0EB0                           l5249 0EA8                           l4387 3D2E  
                         l4299 4CBC                           l3747 4730                           l3739 46E6  
                         l3851 396A                           l3843 393A                           l3835 38EC  
                         l3827 3888                           l3499 3574                           l3675 436C  
                         l3667 432E                           l3595 3076                           l3587 3032  
                         l3579 2FAA                           l3683 4BDC                           l3691 41BC  
                         l3771 44BA                           l3755 43E6                           l3819 48E2  
                         l5099 28DC                           l5611 383A                           l5187 4816  
                         l5195 4860                           l5507 1ECC                           l5451 1A04  
                         l5443 198C                           l5435 18BC                           l5427 1844  
                         l5419 1798                           l5371 134C                           l5363 11F8  
                         l5355 117A                           l5347 110E                           l5291 0F0A  
                         l5283 0EEA                           l5275 0ED2                           l5267 0EBC  
                         l5259 0EB2                           l4397 3DAC                           l4389 3D3C  
                         l3749 4B9C                           l3861 3A08                           l3853 3974  
                         l3845 394A                           l3837 3908                           l3829 38A8  
                         l3677 43BC                           l3669 433E                           l3597 3088  
                         l3589 3040                           l3685 4BF2                           l3693 41D2  
                         l3757 4424                           l3765 4464                           l3781 4764  
                         l4901 1F8E                           l5189 4834                           l5197 4872  
                         l5509 1ED0                           l5461 1AB2                           l5453 1A36  
                         l5445 1998                           l5437 18EE                           l5429 1850  
                         l5381 154A                           l5373 1400                           l5365 122A  
                         l5357 119C                           l5349 1134                           l5293 0F1A  
                         l5285 0EF2                           l5277 0EDA                           l5269 0EBE  
                         l4399 3DB4                           l3871 3ACE                           l3855 397A  
                         l3863 3A6C                           l3847 3956                           l3839 3924  
                         l3679 43C2                           l3599 3096                           l3687 4C02  
                         l3767 4476                           l3759 444C                           l3775 4AD2  
                         l4911 1FD6                           l4903 1F96                           l5607 36F2  
                         l5199 487A                           l5471 1B70                           l5455 1A8C  
                         l5463 1AC4                           l5447 199C                           l5439 1944  
                         l5383 157C                           l5391 15B4                           l5375 14B4  
                         l5367 1252                           l5359 11BE                           l5295 0F2A  
                         l5287 0EFA                           l5279 0EE2                           l3873 3AD4  
                         l3865 3A86                           l3857 39FC                           l3849 395E  
                         l3697 41E6                           l3777 4AE2                           l4913 1FDC  
                         l4905 1F9A                           l5609 37B0                           l5481 1BC4  
                         l5473 1B7C                           l5465 1AF6                           l5457 1AA2  
                         l5449 19AE                           l5393 15E6                           l5385 1592  
                         l5377 14E6                           l5369 1298                           l5297 0F3A  
                         l5289 0EFA                           l3875 3AE4                           l3867 3AA4  
                         l3859 3A02                           l3699 4210                           l3779 4746  
                         l4931 2068                           l4915 1FE4                           l4907 1FC0  
                         l4923 2026                           l5491 1CD8                           l5483 1BDA  
                         l5475 1B80                           l5467 1B28                           l5459 1AAE  
                         l5395 163C                           l5387 159E                           l5379 1518  
                         l5299 0F4A                           l3869 3ABE                           l4861 3BA0  
                         l4853 3B06                           l4933 2070                           l4925 204C  
                         l4941 208C                           l4917 1FFC                           l4909 1FD2  
                         l5493 1CEA                           l5485 1C8E                           l5469 1B5A  
                         l5397 1692                           l5389 15A2                           l5477 1B92  
                         l4871 3CBE                           l4855 3B26                           l4951 2126  
                         l4943 20A6                           l4927 205E                           l4919 2006  
                         l5495 1D9E                           l5487 1CC8                           l5479 1BB8  
                         l5399 16A8                           l4873 3CD2                           l4865 3C12  
                         l4857 3B7E                           l4961 221C                           l4953 2164  
                         l4929 2062                           l4881 1F04                           l5497 1DC4  
                         l5489 1CD4                           l4875 3CFA                           l4867 3C4E  
                         l4859 3B92                           l4971 22AE                           l4963 2224  
                         l4955 2196                           l4947 20EC                           l4891 1F50  
                         l4883 1F0A                           l5499 1DD4                           l4877 3D0A  
                         l4869 3C82                           l4981 22E0                           l4973 22BA  
                         l4957 21D4                           l4949 20F2                           l4893 1F5A  
                         l4885 1F1A                           l4991 2328                           l4983 22EE  
                         l4975 22C2                           l4959 21E8                           l4967 2264  
                         l4895 1F62                           l4887 1F28                           l4993 2338  
                         l4985 2306                           l4977 22CA                           l4969 229E  
                         l4897 1F72                           l4889 1F2C                           l4995 234C  
                         l4987 2318                           l4979 22CE                           l4899 1F82  
                         l4997 23B0                           l4989 2320                           l4999 2408  
                         STR_1 0E56                           STR_2 0E6A                           STR_3 0E48  
                         STR_4 0E4F                           STR_5 0E39                           STR_6 0E5C  
                         STR_7 0E33                           STR_8 0E3E                           STR_9 0E1C  
                         u3000 2D8E                           u3001 2D8A                           u3010 2DAA  
                         u3011 2DA6                           u3100 406A                           u3020 4B58  
                         u3101 4066                           u3021 4B54                           u3030 3EE2  
                         u3110 409C                           u3031 3EDE                           u3111 4098  
                         u3040 3F14                           u3120 40DA                           u4000 38BA  
                         u3200 327A                   _BAUD4CONbits 000EE9                           u3041 3F10  
                         u3121 40D6                           u3201 3276                           u3130 4104  
                         u4010 38CC                           u3210 328A                           u3051 3F3E  
                         u3131 4100                           u4011 38C8                           u3211 3286  
                         u3060 3F62                           u3140 4132                           u4020 3908  
                         u3300 3444                           u3220 32CA                           u3061 3F5E  
                         u3141 412E                           u4021 3904                           u3301 3440  
                         u3221 32C6                           u3070 3F8C                           u3150 417A  
                         u4030 3934                           u3310 3456                           u3230 330A  
                         u3071 3F88                           u3151 4176                           u4031 3930  
                         u3311 3452                           u3231 3306                           u3080 3FCC  
                         u2600 44E8                           u4040 394A                           u3320 3484  
                         u3240 3380                           u3160 3202                           u3400 2DEA  
                         u3081 3FC8                           u2601 44E4                           u4041 3946  
                         u3321 3480                           u3241 337C                           u3161 31FE  
                         u3401 2DE6                           u3090 4016                           u2610 4510  
                         u4050 3A86                           u3330 349A                           u3250 33A2  
                         u3170 3214                           u3410 2DFA                           _T2PR 000FBC  
                         u3091 4012                           u2611 450C                           u4051 3A82  
                         u3331 3496                           u3251 339E                           u3171 3210  
                         u3411 2DF6                           u2620 4546                           u4060 3AA4  
                         u3340 34AE                           u3260 33CC                           u3180 3224  
                         u3500 30A8                           u3420 2E3A                           u2700 29F0  
                         u2621 4542                           u4061 3AA0                           u3341 34AA  
                         u3261 33C8                           u3181 3220                           u3501 30A4  
                         u3421 2E36                           u2701 29EC                           u4070 3ABE  
                         u3350 34C8                           u3270 33F0                           u3190 3268  
                         u3510 30D6                           u3430 2E4C                           u2710 29FE  
                         u2630 2918                           u5110 3B50                           u4071 3ABA  
                         u3351 34C4                           u3271 33EC                           u3191 3264  
                         u3511 30D2                           u3431 2E48                           u2711 29FA  
                         u2631 2914                           u4080 3ACE                           u3360 3510  
                         u3280 3406                           u3600 462E                           u3520 30EC  
                         u3440 2E5C                           u2800 2B3C                           u2720 2A6C  
                         u2640 292A                           u5200 3CFA                           u5120 3B7E  
                         u4081 3ACA                           u3361 350C                           u3281 3402  
                         u3601 462A                           u3521 30E8                           u3441 2E58  
                         u2801 2B38                           u2721 2A68                           u2641 2926  
                         u5201 3CF6                           u5121 3B7A                           u4410 4B84  
                         u3370 3540                           u3290 3424                           u3610 42F0  
                         u3530 3100                           u3450 2E92                           u2810 2B4A  
                         u2730 2A84                           u2650 293A                           u5130 3BA0  
                         u5210 1F28                           u4411 4B7C                           u3371 353C  
                         u3291 3420                           u3611 42EC                           u3531 30FC  
                         u3451 2E8E                           u2811 2B46                           u2731 2A7E  
                         u2651 2936                           u5131 3B9C                           u5115 3B46  
                         u5211 1F24                           u3380 356E                           u3620 432E  
                         u3540 311A                           u3460 2EA2                           u2900 2C94  
                         u2820 2B68                           u2740 2A86                           u2660 297C  
                         u3700 4248                           u5300 2196                           u5220 1F72  
                         u3381 356A                           u3621 432A                           u3541 3116  
                         u3461 2E9E                           u2901 2C90                           u2821 2B64  
                         u2661 2978                           u3701 4244                           u5301 2192  
                         u5221 1F6E                           u4510 4CAC                           u2590 44D6  
                         u3630 434C                           u3550 3162                           u3470 301C  
                         u3390 2DD8                           u2910 2CA6                           u2830 2BA0  
                         u2750 2AAE                           u2670 2992                           u3710 4270  
                         u5150 3C0E                           u5310 21D4                           u5230 1F82  
                         u4511 4CA8                           u2591 44D2                           u3631 4348  
                         u3551 315E                           u3391 2DD4                           u2911 2CA2  
                         u2831 2B9C                           u2751 2AAA                           u2671 298E  
                         u3711 426C                           u5151 3C0A                           u5311 21D0  
                         u5231 1F7E                           u6007 101E                           u4600 3E56  
                         u4520 4DE2                           u3640 436C                           u3560 3190  
                         u3480 3076                           u2920 2CBC                           u2840 2BE6  
                         u2760 2ACC                           u2680 29A4                           u3720 4290  
                         u3800 4476                           u5160 3C32                           u5400 250E  
                         u5320 2260                           u5240 1FC0                           u4601 3E52  
                         u4521 4DDE                           u3641 4368                           u3561 318C  
                         u3481 3072                           u2921 2CB8                           u2841 2BE2  
                         u2761 2AC8                           u2681 29A0                           u3721 428C  
                         u3801 4472                           u5145 3BB4                           u5401 250A  
                         u5321 225C                           u5241 1FBC                           u6017 105A  
                         u4610 3E66                           u3650 43BC                           u3570 31CA  
                         u3490 3096                           u2930 2CD2                           u2850 2C1C  
                         u2770 2AEC                           u2690 29B4                           u3730 42A0  
                         u5170 3C4E                           u5146 3BBE                           u5410 251E  
                         u5330 2296                           u5250 1FD2                           u4611 3E62  
                         u3651 43B8                           u3571 31C6                           u3491 3092  
                         u3475 3012                           u2931 2CCE                           u2851 2C18  
                         u2771 2AE8                           u2691 29B0                           u3731 429C  
                         u5171 3C4A                           u5147 3BCE                           u5411 251A  
                         u5331 2292                           u5251 1FCE                           u6107 1ABA  
                         u6027 10F6                           u4620 3E74                           u4428 4B86  
                         u3740 46DA                           u3580 45BC                           u3660 4BF2  
                         u2940 2CE6                           u2860 2C2C                           u2780 2AFA  
                         u3820 44B0                           u5180 3CA2                           u5500 28A8  
                         u5420 25B8                           u5340 22AE                           u5260 204C  
                         u4621 3E70                           u3741 46D6                           u3581 45B8  
                         u3661 4BEE                           u2941 2CE2                           u2861 2C28  
                         u2781 2AF6                           u3821 44AA                           u5165 3C28  
                         u5501 28A2                           u5421 25B4                           u5341 22AA  
                         u5261 2048                           u6117 1B88                           u6037 1140  
                         u4470 4D44                           u4630 3EAE                           u4550 3D2E  
                         u3750 4730                           u3590 45FA                           u2950 2D00  
                         u2870 2C58                           u2790 2B0A                           u3670 41D2  
                         u3830 44B2                           u5190 3CBE                           u5510 28AA  
                         u5430 2606                           u5350 22E0                           u5270 205E  
                         u4471 4D40                           u4631 3EAA                           u4551 3D2A  
                         u3751 472C                           u3591 45F6                           u2951 2CFC  
                         u2871 2C54                           u2791 2B06                           u3671 41CE  
                         u3815 4488                           u5191 3CBA                           u5431 2602  
                         u5351 22DC                           u5271 205A                           u6127 1BD0  
                         u6047 11EC                           u4640 3EBC                           u4560 3D3C  
                         u4480 4DFC                           u3760 4BB6                           u2960 2D3A  
                         u2880 2C68                           u3680 4206                           u3840 4B14  
                         u5520 28BE                           u5440 26B4                           u5360 22EE  
                         u5280 20D8                           u5600 0FB6                           u4641 3EB8  
                         u4561 3D38                           u4481 4DF6                           u3761 4BB2  
                         u2961 2D36                           u2881 2C64                           u5185 3C98  
                         u3841 4B10                           u5521 28BA                           u5441 26B0  
                         u5361 22EA                           u5281 20D4                           u6137 1CE0  
                         u6057 15AA                           u5601 0FAC                           u4570 3D98  
                         u4490 4DFE                           u2970 2D4C                           u2890 2C84  
                         u3690 4234                           u3770 4406                           u3850 4764  
                         u5450 26F0                           u5370 2318                           u5290 2164  
                         u5530 35AA                           u4571 3D94                           u2971 2D48  
                         u2891 2C80                           u3691 4230                           u3851 4760  
                         u5451 26EC                           u5371 2314                           u5291 2160  
                         u5531 35A6                           u6147 1DDC                           u6067 16C0  
                         u4580 3DEE                           u2980 2D5C                           u3780 4424  
                         u5460 26FE                           u5380 2460                           u5540 35FA  
                         u5700 1122                           u5620 1000                           u4581 3DEA  
                         u2981 2D58                           u3685 41FC                           u3781 4420  
                         u5461 26FA                           u5381 245C                           u5541 35F6  
                         u6157 1ED8                           u6077 178E                           u5701 1118  
                         u5621 0FF6                           u4590 3E38                           u2990 2D7C  
                         u3790 444C                           u5470 2752                           u5390 24C6  
                         u5550 361A                           u4591 3E34                           u2991 2D78  
                         u3791 4448                           u3775 43FC                           u5471 274E  
                         u5391 24C2                           u5551 3616                           u6167 1EEE  
                         u6087 185C                           u3960 4900                           u5480 2824  
                         u5560 3730                           u5800 15E6                           u5720 120C  
                         u5640 107A                           u6177 4C5E                           u3961 48FC  
                         u5481 2820                           u5561 372C                           u6097 19A4  
                         u5801 15E2                           u5721 1202                           u5641 1070  
                         u3970 4D96                           u5490 2840                           u5570 4854  
                         u5810 163C                           u5618 0FBA                           u3971 4D92  
                         u5491 283C                           u5571 4850                           u5811 1638  
                         u3980 4DAC                           u5900 18EE                           u5820 1692  
                         u5740 123E                           u5660 109A                           u5580 0F78  
                         u3981 4DA8                           u5901 18EA                           u5821 168E  
                         u5741 1234                           u5661 1096                           u5581 0F74  
                         u3990 38B8                           u5910 1944                           u5830 16FC  
                         u5718 1126                           u5670 10C0                           u5638 1004  
                         u5590 0F9E                           u3991 38B2                           u5911 1940  
                         u5831 16F8                           u5671 10BC                           u5591 0F9A  
                         u5920 1976                           u5840 172E                           u5760 14E6  
                         u5680 10D8                           u5921 1972                           u5841 172A  
                         u5761 14E2                           u5681 10CE                           u5930 1A04  
                         u5850 1760                           u5770 1518                           u5738 1210  
                         u5658 107E                           u5931 1A00                           u5851 175C  
                         u5771 1514                           u5940 1A36                           u5860 17CA  
                         u5780 154A                           u5941 1A32                           u5861 17C6  
                         u5781 1546                           u5950 1A8C                           u5870 17FC  
                         u5790 157C                           u5758 1242                           u5951 1A88  
                         u5871 17F8                           u5791 1578                           u5960 1AF6  
                         u5880 182E                           u5961 1AF2                           u5881 182A  
                         u5970 1B28                           u5890 18BC                           u5698 10DC  
                         u5971 1B24                           u5891 18B8                           u5980 1B5A  
                         u5981 1B56                           u5997 0FD4                           abs@a 0017  
                         _dbuf 019A                           _labs 4746                           _main 0E70  
                         _dtoa 3888                           _prec 00F5                           pad@i 001C  
                         pad@p 0019                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001E  
                         fsr2l 000FD9                           btemp 005B                  ___fpclassifyf 43C6  
                         prodh 000FF4                           prodl 000FF3                           start 0076  
              ___fldiv@new_exp 0047                    main@string1 0100                    main@string2 0114  
                  main@string3 0128                    main@string4 013C                    main@string5 0150  
       __end_of_color_read_Red 4952                __end_of_HighISR 0076                   ___param_bank 000000  
                 main@ambientB 017E                   main@ambientG 017C                   main@ambientR 0180  
                 main@clearRef 0182                          ??_abs 0019                          ??_pad 001B  
                ___fltol@sign1 000D                __end_of___aodiv 4058                          ?_labs 0005  
              __end_of___fladd 2DBE                          ?_main 0001                          ?_dtoa 0020  
              __end_of___aomod 41BC                __end_of___fldiv 3582                __end_of___flneg 4C14  
                        STR_10 0E28                          STR_11 0E10                          STR_12 0E01  
                        STR_13 0E62                          STR_16 0E66                __end_of___flmul 31E8  
              __end_of___flsub 4AD2                __end_of___fltol 42C2                          i2l310 4D84  
                        i2l324 4E16                          i2l317 4D06                          i2l341 0066  
                        i2l343 006A                   vfpfcnvrt@fmt 00A5                   main@redPrint 018E  
   __end_of_I2C_2_Master_Start 4E42     __end_of_I2C_2_Master_Write 4E24                          _flags 00F7  
                        _fputc 44C4                          _fputs 4B16                          labs@a 0005  
                        pad@fp 0015                          _width 00F3                          _putch 4E42  
                        main@i 0174                          dtoa@d 0022                          dtoa@i 0040  
                        dtoa@n 0038                          dtoa@p 0034                          dtoa@s 0042  
                        dtoa@w 0036                          tablat 000FF5                          ttemp5 005C  
                        ttemp6 005F                          ttemp7 0063                          status 000FD8  
                        wtemp8 005C                __end_of_sprintf 48B2                 ?___fpclassifyf 0005  
      __end_of_color_read_Blue 4A42          _I2C_2_Master_RepStart 4E24             putCharToRxBuf@byte 0001  
              ?_color_read_Red 0009                __initialization 4C14                   __end_of_labs 47AC  
                 __end_of_main 1F04                   __end_of_dtoa 3B06                i2_isDataInTxBuf 4E00  
           putCharToTxBuf@byte 0005                         ??_labs 0009                         ??_main 00D5  
                       ??_dtoa 002A                  __activetblptr 000003                  main@bluePrint 0186  
                       ?_fputc 0005                         ?_fputs 000E                         _CCPR1H 000FAA  
                       _CCPR2H 000FA6                         _CCPR3H 000F25                         _CCPR4H 000F21  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RE2PPS 000E74                         _RD5PPS 000E6F                         _RC7PPS 000E69  
                       _RE4PPS 000E76                         _RD6PPS 000E70                         i2l2625 4E00  
                       i2l4371 4D6E                         i2l4381 4CF0                         i2l4373 4D72  
                       i2l4375 4D82                         i2l4377 4CDC                         i2l4369 4D5E  
                       i2l4379 4CEC                         _RG6PPS 000E88                         i2l4751 0012  
                       i2l4761 005A                         i2l4753 0022                         i2l4755 0028  
                       i2l4757 0038                         i2l4759 0046                      ??_HighISR 0003  
     __end_of_color_click_init 4C7E                         _RX4PPS 000E15                         _TX4REG 000EE4  
             __end_of___xxtofl 3ED0               __end_of_getColor 480A                   _CCPTMRS0bits 000FAD  
                 vfprintf@cfmt 00BA                         ___flge 42C2               _getCharFromTxBuf 4CDC  
                       ___fleq 458E                      ??___aodiv 0015                      ??___fladd 000D  
                    ??___aomod 0015                      ??___fldiv 003E                      ??___flneg 0009  
                    ??___flmul 0025                      ??___flsub 001D                      ??___fltol 0009  
                       _efgtoa 1F04                         _floorf 3B06                         _memcpy 48B2  
                       clear_0 4C1A                         clear_1 4C26                         clear_2 4C32  
                       isa$std 000001                         pad@buf 0017                         dtoa@fp 0020  
                       _strcpy 4AD2                         fputc@c 0005              ?_TxBufferedString 0006  
                       fputs@c 0012                         fputs@i 0013                         fputs@s 000E  
              ___fpclassifyf@e 000D                ___fpclassifyf@u 000F                ___fpclassifyf@x 0005  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8             ??_TxBufferedString 0008                         putch@c 0001  
             __end_of_vfprintf 4860              ??_initDCmotorsPWM 0019                      ??_sprintf 0057  
                   ___flge@ff1 0036                     ___flge@ff2 003A                ??___fpclassifyf 0009  
                 ___xxtofl@arg 000F                   ___xxtofl@exp 000E                   ___xxtofl@val 0005  
                   ___fleq@ff1 0005                     ___fleq@ff2 0009          __end_of_isDataInTxBuf 4E00  
                   __accesstop 0060        __end_of__initialization 4C40       __end_of_color_read_Clear 49F2  
                   ___flneg@f1 0005       __end_of_color_read_Green 49A2         ?_I2C_2_Master_RepStart 0001  
      __end_ofi2_isDataInTxBuf 4E18                  ___rparam_used 000001                     ___fltol@f1 0005  
             ?_color_read_Blue 0009                   _LRmotorsInit 4A42                 __pcstackCOMRAM 0001  
                __end_of_fputc 458E                  __end_of_fputs 4B5A                  __end_of_putch 4E44  
       LRmotorsInit@motorRight 000E                        ??_fputc 0009                        ??_fputs 0012  
                      ??_putch 0005                     __pbssBANK0 00D7                     __pbssBANK1 019A  
                   __pbssBANK2 0200              _color_writetoaddr 4DAE                   _T2CLKCONbits 000FBF  
                      ?___flge 0036                        ?___fleq 0005             ?_color_writetoaddr 0007  
                      ?_efgtoa 0070                        ?_floorf 004F                        ?_memcpy 0005  
          ??_color_writetoaddr 0008                        ?_strcpy 0005                 main@greenPrint 018A  
                    ?___xxtofl 0005                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
                    ?_getColor 0010                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
       color_writetoaddr@value 0007               ??_color_read_Red 000B                        _HighISR 0008  
    __end_of_color_writetoaddr 4DCE               ?i2_isDataInTxBuf 0001             _I2C_2_Master_Start 4E38  
                   _initUSART4 4CAE             _I2C_2_Master_Write 4E18                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000E                        ___aodiv 3ED0  
                      ___fladd 28FE                        ___aomod 4058                        ___fldiv 31E8  
                      ___flneg 4BDC                        ___flmul 2DBE                        ___flsub 4A8C  
                      ___fltol 41BC            ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 00B4                   __psmallconst 0E00                        __pcinit 4C14  
                      __ramtop 0E00                        __ptext0 0E70                        __ptext1 4860  
                      __ptext2 480A                        __ptext3 3582                        __ptext4 1F04  
                      __ptext5 4AD2                        __ptext6 48B2                        __ptext7 4746  
                      __ptext8 3B06                        __ptext9 43C6                      _T2CONbits 000FBD  
                   ??___xxtofl 0009                      _T2HLTbits 000FBE                        efgtoa@c 0076  
                      efgtoa@d 0082                        efgtoa@e 0086                        efgtoa@f 0072  
                      efgtoa@g 0099                        efgtoa@h 0090                        efgtoa@i 008E  
                      efgtoa@l 0094                        efgtoa@m 0084                        efgtoa@n 009D  
                      efgtoa@p 0079                        efgtoa@t 007B                        efgtoa@u 009F  
                      efgtoa@w 0088                     ??_getColor 0012                  _RxBufWriteCnt 005A  
     __end_of_getCharFromTxBuf 4D08                        _sprintf 4860           ??_I2C_2_Master_Start 0006  
         ??_I2C_2_Master_Write 0006           end_of_initialization 4C40              __end_of_sendTxBuf 4DE8  
                      floorf@e 006A                        floorf@m 0066                        floorf@u 006C  
                      floorf@x 004F                        memcpy@d 000B                        memcpy@n 0009  
                      memcpy@s 000D                        fputc@fp 0007                        fputs@fp 0010  
            ?_color_click_init 0001             ??_color_click_init 0009              __end_of_vfpfcnvrt 3888  
                   efgtoa@mode 0080                     efgtoa@sign 0098                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 00A9                     ??_vfprintf 0057                        strcpy@d 000B  
                      strcpy@s 0009                _initDCmotorsPWM 4638                      _PORTFbits 000F8E  
                  ___fladd@grs 0014                     main@RGBVal 0192                  ___xxtofl@sign 000D  
                    _TRISAbits 000F81                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
                    _TRISHbits 000F88                    ___fldiv@grs 0049                    ___fldiv@rem 0042  
     color_writetoaddr@address 0008        ??_I2C_2_Master_RepStart 0006                    ___flmul@grs 002A  
                  _CCP1CONbits 000FAB              ?_color_read_Clear 0009                   _EUSART4RXbuf 00D7  
                 _EUSART4TXbuf 0200                    _CCP2CONbits 000FA7              ?_color_read_Green 0009  
                  _CCP3CONbits 000F26                    ?_initUSART4 0001                    _CCP4CONbits 000F22  
                   main@whiteB 0170                     main@whiteC 0164                     main@whiteG 016C  
                   main@whiteR 0168             ??_color_read_Clear 000B             ??_color_read_Green 000B  
               __end_of___flge 43C6                 __end_of___fleq 4638                    vfpfcnvrt@ap 00A7  
                  vfpfcnvrt@cp 00B2                    vfpfcnvrt@fp 00A3                 __end_of_efgtoa 28FE  
               __end_of_floorf 3D1C                 __end_of_memcpy 4902                     floorf@F526 00EB  
               __end_of_strcpy 4B16            color_read_Clear@tmp 000E            start_initialization 4C14  
                  __end_of_abs 4BDC                    __end_of_pad 4746                  _TxBufWriteCnt 0058  
        __end_of___fpclassifyf 44C4            color_read_Green@tmp 000E        __end_of_initDCmotorsPWM 46CC  
                  vfprintf@fmt 00B6                       ??___flge 003E                       ??___fleq 000D  
                     ??_efgtoa 0053                 _putCharToRxBuf 4D5C                 _putCharToTxBuf 4D32  
                     ??_floorf 0060                       ??_memcpy 000B                       ??_strcpy 0009  
                    ___fladd@a 0009                      ___fladd@b 0005                      ___fldiv@a 003A  
                    ___fldiv@b 0036                      ___flmul@a 0021                      ___flmul@b 001D  
                  __pbssCOMRAM 0057                      ___flsub@a 0019                      ___flsub@b 0015  
                __pcstackBANK0 0060                  __pcstackBANK1 0100               ___aodiv@dividend 0005  
        LRmotorsInit@motorLeft 0005                       ?_HighISR 0001                    _efgtoa$2417 007D  
                    _main$2762 0178                      _dtoa$2386 0032         __end_of_putCharToRxBuf 4D86  
       __end_of_putCharToTxBuf 4D5C                      __pintcode 0008                       ?___aodiv 0005  
                     ?___fladd 0005                       ?___aomod 0005                       ?___fldiv 0036  
             ___aodiv@quotient 0017                       ?___flneg 0005                       ?___flmul 001D  
                     ?___flsub 0015                       ?___fltol 0005         TxBufferedString@string 0006  
         I2C_2_Master_Read@ack 0007           I2C_2_Master_Read@tmp 0008                    __smallconst 0E00  
            _I2C_2_Master_Idle 4D86              _I2C_2_Master_Init 4D08              _I2C_2_Master_Read 4B5A  
            _I2C_2_Master_Stop 4E2E                   _RxBufReadCnt 0059             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
     initDCmotorsPWM@PWMperiod 0017                       ?_sprintf 00BC              ?_getCharFromTxBuf 0001  
           ??_getCharFromTxBuf 0001            ??_I2C_2_Master_Idle 0005            ??_I2C_2_Master_Init 0005  
          ??_I2C_2_Master_Read 0006                       _LATAbits 000F79            ??_I2C_2_Master_Stop 0006  
                     _LATCbits 000F7B                  _isDataInTxBuf 4DE8                       _LATDbits 000F7C  
                     _LATEbits 000F7D                       _LATFbits 000F7E               _TxBufferedString 4C7E  
                     _LATGbits 000F7F                       _LATHbits 000F80                      _sendTxBuf 4DCE  
                     _IPR4bits 000E23                       _PIE4bits 000E2D                       i2u210_40 4E14  
                     i2u210_41 4E0E                       i2u211_40 4E16                      getColor@v 0010  
                     i2u510_40 005A                       i2u510_41 0056                       i2u507_40 0022  
                     i2u507_41 001E                       i2u508_40 0038                       i2u508_41 0034  
                     i2u453_40 4D6E                       i2u509_40 0046                       i2u453_41 4D6A  
                     i2u509_41 0042                       i2u454_40 4CEC                       i2u454_41 4CE8  
                     _PIR4bits 000E37                ?_putCharToRxBuf 0001               ?_initDCmotorsPWM 0017  
              ?_putCharToTxBuf 0001                       _SSP2CON2 000EDA                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 3582      __end_of_I2C_2_Master_Idle 4DAE      __end_of_I2C_2_Master_Init 4D32  
    __end_of_I2C_2_Master_Read 4B9C                      main@i_873 0176      __end_of_I2C_2_Master_Stop 4E38  
  I2C_2_Master_Write@data_byte 0006              ??_color_read_Blue 000B                   _TxBufReadCnt 0057  
                   vfpfcnvrt@c 00B1                 ?_isDataInTxBuf 0001  __end_of_I2C_2_Master_RepStart 4E2E  
           color_read_Blue@tmp 000E                     ?_sendTxBuf 0001                   ??_initUSART4 0005  
                ?_LRmotorsInit 0001                       __Hrparam 0000                      memcpy@tmp 000F  
                   vfprintf@ap 00B8                       __Lrparam 0000                     vfprintf@fp 00B4  
                   ?_vfpfcnvrt 00A3                ___aodiv@divisor 000D                ___aodiv@counter 0015  
                   _ANSELDbits 000EA7             ___fpclassifyf@F465 00EF                     _ANSELFbits 000EB4  
                   sprintf@fmt 00BE                       ___xxtofl 3D1C             __end_of_initUSART4 4CDC  
                     _getColor 47AC                       __ptext10 41BC                       __ptext11 4A8C  
                     __ptext20 4B16                       __ptext12 28FE                       __ptext21 44C4  
                     __ptext13 4BDC                       __ptext30 4A42                       __ptext22 4E42  
                     __ptext14 2DBE                       __ptext31 47AC                       __ptext23 4B9C  
                     __ptext15 42C2                       __ptext40 4E18                       __ptext32 4902  
                     __ptext24 4058                       __ptext16 458E                       __ptext41 4E2E  
                     __ptext33 4952                       __ptext25 3ED0                       __ptext17 31E8  
                     __ptext50 4D5C                       __ptext42 4E38                       __ptext34 49A2  
                     __ptext26 4DCE                       __ptext18 3888                       __ptext51 4CDC  
                     __ptext43 4D86                       __ptext35 49F2                       __ptext27 4DE8  
                     __ptext19 46CC                       __ptext44 4D08                       __ptext36 4E24  
                     __ptext28 4CAE                       __ptext45 3D1C                       __ptext37 4B5A  
                     __ptext29 4638                       __ptext46 4C7E                       __ptext38 4C4A  
                     __ptext47 4D32                       __ptext39 4DAE                       __ptext49 4E00  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                     strcpy@dest 0005  
               ??_LRmotorsInit 0005                       efgtoa@fp 0070                       efgtoa@ne 0077  
                     efgtoa@pp 007F                       efgtoa@ou 008A                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       int$flags 005B                       _vfprintf 480A  
             ___aomod@dividend 0005                     _INTCONbits 000FF2              ??i2_isDataInTxBuf 0001  
                     memcpy@d1 0005                       memcpy@s1 0007                ??_isDataInTxBuf 0005  
                     intlevel2 0000                      sprintf@ap 00C8                    ??_sendTxBuf 0005  
                    strcpy@src 0007                    efgtoa@nmode 0081                ___aomod@divisor 000D  
                  ??_vfpfcnvrt 0055                ___aomod@counter 0015               _color_click_init 4C4A  
     __end_of_TxBufferedString 4CAE                       sprintf@f 00CA                       sprintf@s 00BC  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C                  ___fladd@signs 0011  
                   _TX4STAbits 000EE8                   ___aodiv@sign 0016                   ___fladd@aexp 0012  
                 ___fladd@bexp 0013               ??_putCharToRxBuf 0001               ??_putCharToTxBuf 0005  
                 ___aomod@sign 0016  

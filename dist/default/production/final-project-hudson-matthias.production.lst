

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Dec 06 03:07:17 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    69                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    71   000000                     
    72                           ; Version 2.35
    73                           ; Generated 05/05/2021 GMT
    74                           ; 
    75                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution. Publication is not required when
    89                           ;        this file is used in an embedded application.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC18F67K40 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107   000000                     _TX4REG	set	3812
   108   000000                     _RC4STAbits	set	3815
   109   000000                     _SP4BRGH	set	3814
   110   000000                     _TRISEbits	set	3973
   111   000000                     _TRISGbits	set	3975
   112   000000                     _LATEbits	set	3965
   113   000000                     _LATGbits	set	3967
   114   000000                     _TRISFbits	set	3974
   115   000000                     _LATFbits	set	3966
   116   000000                     _TRISHbits	set	3976
   117   000000                     _LATHbits	set	3968
   118   000000                     _SSP2CON2bits	set	3802
   119   000000                     _RX4PPS	set	3605
   120   000000                     _SSP2CLKPPS	set	3612
   121   000000                     _SSP2DATPPS	set	3613
   122   000000                     _ANSELDbits	set	3751
   123   000000                     _SSP2ADD	set	3798
   124   000000                     _SSP2CON1bits	set	3801
   125   000000                     _RC4REG	set	3811
   126   000000                     _SP4BRGL	set	3813
   127   000000                     _TX4STAbits	set	3816
   128   000000                     _BAUD4CONbits	set	3817
   129   000000                     _LATAbits	set	3961
   130   000000                     _LATDbits	set	3964
   131   000000                     _SSP2CON2	set	3802
   132   000000                     _TRISDbits	set	3972
   133   000000                     _CCPR4H	set	3873
   134   000000                     _CCPR3H	set	3877
   135   000000                     _SSP2STAT	set	3800
   136   000000                     _SSP2BUF	set	3797
   137   000000                     _IPR4bits	set	3619
   138   000000                     _PIE4bits	set	3629
   139   000000                     _RC0PPS	set	3682
   140   000000                     _RC7PPS	set	3689
   141   000000                     _RD5PPS	set	3695
   142   000000                     _RE2PPS	set	3700
   143   000000                     _RD6PPS	set	3696
   144   000000                     _TRISCbits	set	3971
   145   000000                     _TRISAbits	set	3969
   146   000000                     _T2PR	set	4028
   147   000000                     _T2CONbits	set	4029
   148   000000                     _CCPR2H	set	4006
   149   000000                     _CCPR1H	set	4010
   150   000000                     _LATCbits	set	3963
   151   000000                     _RE4PPS	set	3702
   152   000000                     _RG6PPS	set	3720
   153   000000                     _INTCONbits	set	4082
   154   000000                     _T2CLKCONbits	set	4031
   155   000000                     _T2HLTbits	set	4030
   156   000000                     _CCP1CONbits	set	4011
   157   000000                     _CCPTMRS0bits	set	4013
   158   000000                     _CCP2CONbits	set	4007
   159   000000                     _CCP3CONbits	set	3878
   160   000000                     _CCP4CONbits	set	3874
   161   000000                     _PIR4bits	set	3639
   162                           
   163                           	psect	smallconst
   164   000E00                     __psmallconst:
   165                           	callstack 0
   166   000E00  00                 	db	0
   167   000E01  25                 	db	37
   168   000E02  64                 	db	100	;'d'
   169   000E03  2C                 	db	44
   170   000E04  25                 	db	37
   171   000E05  64                 	db	100	;'d'
   172   000E06  2C                 	db	44
   173   000E07  25                 	db	37
   174   000E08  64                 	db	100	;'d'
   175   000E09  2C                 	db	44
   176   000E0A  25                 	db	37
   177   000E0B  64                 	db	100	;'d'
   178   000E0C  20                 	db	32
   179   000E0D  0D                 	db	13
   180   000E0E  0A                 	db	10
   181   000E0F  00                 	db	0
   182   000E10                     STR_4:
   183   000E10  42                 	db	66	;'B'
   184   000E11  6C                 	db	108	;'l'
   185   000E12  75                 	db	117	;'u'
   186   000E13  65                 	db	101	;'e'
   187   000E14  3A                 	db	58	;':'
   188   000E15  20                 	db	32
   189   000E16  20                 	db	32
   190   000E17  25                 	db	37
   191   000E18  66                 	db	102	;'f'
   192   000E19  20                 	db	32
   193   000E1A  0D                 	db	13
   194   000E1B  00                 	db	0
   195   000E1C                     STR_2:
   196   000E1C  52                 	db	82	;'R'
   197   000E1D  65                 	db	101	;'e'
   198   000E1E  64                 	db	100	;'d'
   199   000E1F  3A                 	db	58	;':'
   200   000E20  20                 	db	32
   201   000E21  25                 	db	37
   202   000E22  66                 	db	102	;'f'
   203   000E23  20                 	db	32
   204   000E24  25                 	db	37
   205   000E25  64                 	db	100	;'d'
   206   000E26  20                 	db	32
   207   000E27  00                 	db	0
   208   000E28                     STR_3:
   209   000E28  47                 	db	71	;'G'
   210   000E29  72                 	db	114	;'r'
   211   000E2A  65                 	db	101	;'e'
   212   000E2B  65                 	db	101	;'e'
   213   000E2C  6E                 	db	110	;'n'
   214   000E2D  3A                 	db	58	;':'
   215   000E2E  20                 	db	32
   216   000E2F  25                 	db	37
   217   000E30  66                 	db	102	;'f'
   218   000E31  20                 	db	32
   219   000E32  00                 	db	0
   220   000E33                     STR_1:
   221   000E33  43                 	db	67	;'C'
   222   000E34  3A                 	db	58	;':'
   223   000E35  20                 	db	32
   224   000E36  20                 	db	32
   225   000E37  25                 	db	37
   226   000E38  66                 	db	102	;'f'
   227   000E39  20                 	db	32
   228   000E3A  00                 	db	0
   229   000E3B                     STR_6:
   230   000E3B  69                 	db	105	;'i'
   231   000E3C  6E                 	db	110	;'n'
   232   000E3D  66                 	db	102	;'f'
   233   000E3E  00                 	db	0
   234   000E3F                     STR_9:
   235   000E3F  6E                 	db	110	;'n'
   236   000E40  61                 	db	97	;'a'
   237   000E41  6E                 	db	110	;'n'
   238   000E42  00                 	db	0
   239   000E43  00                 	db	0	; dummy byte at the end
   240   000000                     
   241                           ; #config settings
   242                           
   243                           	psect	cinit
   244   003FFA                     __pcinit:
   245                           	callstack 0
   246   003FFA                     start_initialization:
   247                           	callstack 0
   248   003FFA                     __initialization:
   249                           	callstack 0
   250                           
   251                           ; Clear objects allocated to BANK2 (60 bytes)
   252   003FFA  EE02  F000         	lfsr	0,__pbssBANK2
   253   003FFE  0E3C               	movlw	60
   254   004000                     clear_0:
   255   004000  6AEE               	clrf	postinc0,c
   256   004002  06E8               	decf	wreg,f,c
   257   004004  E1FD               	bnz	clear_0
   258                           
   259                           ; Clear objects allocated to BANK1 (80 bytes)
   260   004006  EE01  F076         	lfsr	0,__pbssBANK1
   261   00400A  0E50               	movlw	80
   262   00400C                     clear_1:
   263   00400C  6AEE               	clrf	postinc0,c
   264   00400E  06E8               	decf	wreg,f,c
   265   004010  E1FD               	bnz	clear_1
   266                           
   267                           ; Clear objects allocated to BANK0 (33 bytes)
   268   004012  EE00  F0D7         	lfsr	0,__pbssBANK0
   269   004016  0E21               	movlw	33
   270   004018                     clear_2:
   271   004018  6AEE               	clrf	postinc0,c
   272   00401A  06E8               	decf	wreg,f,c
   273   00401C  E1FD               	bnz	clear_2
   274                           
   275                           ; Clear objects allocated to COMRAM (4 bytes)
   276   00401E  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   277   004020  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   278   004022  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   279   004024  6A57               	clrf	__pbssCOMRAM& (0+255),c
   280   004026                     end_of_initialization:
   281                           	callstack 0
   282   004026                     __end_of__initialization:
   283                           	callstack 0
   284   004026  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   285   004028  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   286   00402A  0100               	movlb	0
   287   00402C  EF7F  F00E         	goto	_main	;jump to C main() function
   288                           
   289                           	psect	bssCOMRAM
   290   000057                     __pbssCOMRAM:
   291                           	callstack 0
   292   000057                     _TxBufReadCnt:
   293                           	callstack 0
   294   000057                     	ds	1
   295   000058                     _TxBufWriteCnt:
   296                           	callstack 0
   297   000058                     	ds	1
   298   000059                     _RxBufReadCnt:
   299                           	callstack 0
   300   000059                     	ds	1
   301   00005A                     _RxBufWriteCnt:
   302                           	callstack 0
   303   00005A                     	ds	1
   304                           
   305                           	psect	bssBANK0
   306   0000D7                     __pbssBANK0:
   307                           	callstack 0
   308   0000D7                     _EUSART4RXbuf:
   309                           	callstack 0
   310   0000D7                     	ds	20
   311   0000EB                     floorf@F526:
   312                           	callstack 0
   313   0000EB                     	ds	4
   314   0000EF                     ___fpclassifyf@F465:
   315                           	callstack 0
   316   0000EF                     	ds	4
   317   0000F3                     _width:
   318                           	callstack 0
   319   0000F3                     	ds	2
   320   0000F5                     _prec:
   321                           	callstack 0
   322   0000F5                     	ds	2
   323   0000F7                     _flags:
   324                           	callstack 0
   325   0000F7                     	ds	1
   326                           
   327                           	psect	bssBANK1
   328   000176                     __pbssBANK1:
   329                           	callstack 0
   330   000176                     _dbuf:
   331                           	callstack 0
   332   000176                     	ds	80
   333                           
   334                           	psect	bssBANK2
   335   000200                     __pbssBANK2:
   336                           	callstack 0
   337   000200                     _EUSART4TXbuf:
   338                           	callstack 0
   339   000200                     	ds	60
   340                           
   341                           	psect	cstackBANK1
   342   000100                     __pcstackBANK1:
   343                           	callstack 0
   344   000100                     main@string1:
   345                           	callstack 0
   346                           
   347                           ; 20 bytes @ 0x0
   348   000100                     	ds	20
   349   000114                     main@string2:
   350                           	callstack 0
   351                           
   352                           ; 20 bytes @ 0x14
   353   000114                     	ds	20
   354   000128                     main@string3:
   355                           	callstack 0
   356                           
   357                           ; 20 bytes @ 0x28
   358   000128                     	ds	20
   359   00013C                     main@string4:
   360                           	callstack 0
   361                           
   362                           ; 20 bytes @ 0x3C
   363   00013C                     	ds	20
   364   000150                     main@whiteR:
   365                           	callstack 0
   366                           
   367                           ; 4 bytes @ 0x50
   368   000150                     	ds	4
   369   000154                     main@whiteG:
   370                           	callstack 0
   371                           
   372                           ; 4 bytes @ 0x54
   373   000154                     	ds	4
   374   000158                     main@whiteB:
   375                           	callstack 0
   376                           
   377                           ; 4 bytes @ 0x58
   378   000158                     	ds	4
   379   00015C                     main@whiteC:
   380                           	callstack 0
   381                           
   382                           ; 4 bytes @ 0x5C
   383   00015C                     	ds	4
   384   000160                     main@ambientG:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x60
   388   000160                     	ds	2
   389   000162                     main@ambientB:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x62
   393   000162                     	ds	2
   394   000164                     main@ambientR:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x64
   398   000164                     	ds	2
   399   000166                     _main$2682:
   400                           	callstack 0
   401                           
   402                           ; 4 bytes @ 0x66
   403   000166                     	ds	4
   404   00016A                     main@clearRef:
   405                           	callstack 0
   406                           
   407                           ; 4 bytes @ 0x6A
   408   00016A                     	ds	4
   409   00016E                     main@RGBVal:
   410                           	callstack 0
   411                           
   412                           ; 8 bytes @ 0x6E
   413   00016E                     	ds	8
   414                           
   415                           	psect	cstackBANK0
   416   000060                     __pcstackBANK0:
   417                           	callstack 0
   418   000060                     ??_floorf:
   419                           
   420                           ; 1 bytes @ 0x0
   421   000060                     	ds	6
   422   000066                     floorf@m:
   423                           	callstack 0
   424                           
   425                           ; 4 bytes @ 0x6
   426   000066                     	ds	4
   427   00006A                     floorf@e:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0xA
   431   00006A                     	ds	2
   432   00006C                     floorf@u:
   433                           	callstack 0
   434                           
   435                           ; 4 bytes @ 0xC
   436   00006C                     	ds	4
   437   000070                     efgtoa@fp:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x10
   441   000070                     	ds	2
   442   000072                     efgtoa@f:
   443                           	callstack 0
   444                           
   445                           ; 4 bytes @ 0x12
   446   000072                     	ds	4
   447   000076                     efgtoa@c:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x16
   451   000076                     	ds	1
   452   000077                     efgtoa@ne:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x17
   456   000077                     	ds	2
   457   000079                     efgtoa@p:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x19
   461   000079                     	ds	2
   462   00007B                     efgtoa@t:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x1B
   466   00007B                     	ds	2
   467   00007D                     _efgtoa$2337:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x1D
   471   00007D                     	ds	2
   472   00007F                     efgtoa@pp:
   473                           	callstack 0
   474                           
   475                           ; 1 bytes @ 0x1F
   476   00007F                     	ds	1
   477   000080                     efgtoa@mode:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0x20
   481   000080                     	ds	1
   482   000081                     efgtoa@nmode:
   483                           	callstack 0
   484                           
   485                           ; 1 bytes @ 0x21
   486   000081                     	ds	1
   487   000082                     efgtoa@d:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x22
   491   000082                     	ds	2
   492   000084                     efgtoa@m:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x24
   496   000084                     	ds	2
   497   000086                     efgtoa@e:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x26
   501   000086                     	ds	2
   502   000088                     efgtoa@w:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x28
   506   000088                     	ds	2
   507   00008A                     efgtoa@ou:
   508                           	callstack 0
   509                           
   510                           ; 4 bytes @ 0x2A
   511   00008A                     	ds	4
   512   00008E                     efgtoa@i:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x2E
   516   00008E                     	ds	2
   517   000090                     efgtoa@h:
   518                           	callstack 0
   519                           
   520                           ; 4 bytes @ 0x30
   521   000090                     	ds	4
   522   000094                     efgtoa@l:
   523                           	callstack 0
   524                           
   525                           ; 4 bytes @ 0x34
   526   000094                     	ds	4
   527   000098                     efgtoa@sign:
   528                           	callstack 0
   529                           
   530                           ; 1 bytes @ 0x38
   531   000098                     	ds	1
   532   000099                     efgtoa@g:
   533                           	callstack 0
   534                           
   535                           ; 4 bytes @ 0x39
   536   000099                     	ds	4
   537   00009D                     efgtoa@n:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x3D
   541   00009D                     	ds	2
   542   00009F                     efgtoa@u:
   543                           	callstack 0
   544                           
   545                           ; 4 bytes @ 0x3F
   546   00009F                     	ds	4
   547   0000A3                     vfpfcnvrt@fp:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x43
   551   0000A3                     	ds	2
   552   0000A5                     vfpfcnvrt@fmt:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x45
   556   0000A5                     	ds	2
   557   0000A7                     vfpfcnvrt@ap:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x47
   561   0000A7                     	ds	2
   562   0000A9                     vfpfcnvrt@convarg:
   563                           	callstack 0
   564                           
   565                           ; 8 bytes @ 0x49
   566   0000A9                     	ds	8
   567   0000B1                     vfpfcnvrt@c:
   568                           	callstack 0
   569                           
   570                           ; 1 bytes @ 0x51
   571   0000B1                     	ds	1
   572   0000B2                     vfpfcnvrt@cp:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x52
   576   0000B2                     	ds	2
   577   0000B4                     ?_vfprintf:
   578                           	callstack 0
   579   0000B4                     vfprintf@fp:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x54
   583   0000B4                     	ds	2
   584   0000B6                     vfprintf@fmt:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x56
   588   0000B6                     	ds	2
   589   0000B8                     vfprintf@ap:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x58
   593   0000B8                     	ds	2
   594   0000BA                     vfprintf@cfmt:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x5A
   598   0000BA                     	ds	2
   599   0000BC                     ?_sprintf:
   600                           	callstack 0
   601   0000BC                     sprintf@s:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x5C
   605   0000BC                     	ds	2
   606   0000BE                     sprintf@fmt:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x5E
   610   0000BE                     	ds	10
   611   0000C8                     sprintf@ap:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x68
   615   0000C8                     	ds	2
   616   0000CA                     sprintf@f:
   617                           	callstack 0
   618                           
   619                           ; 11 bytes @ 0x6A
   620   0000CA                     	ds	11
   621   0000D5                     ??_main:
   622                           
   623                           ; 1 bytes @ 0x75
   624   0000D5                     	ds	2
   625                           
   626                           	psect	cstackCOMRAM
   627   000001                     __pcstackCOMRAM:
   628                           	callstack 0
   629   000001                     ??_getCharFromTxBuf:
   630   000001                     putCharToRxBuf@byte:
   631                           	callstack 0
   632   000001                     
   633                           ; 1 bytes @ 0x0
   634   000001                     	ds	2
   635   000003                     ??_HighISR:
   636                           
   637                           ; 1 bytes @ 0x2
   638   000003                     	ds	2
   639   000005                     ??_I2C_2_Master_Idle:
   640   000005                     ?___fpclassifyf:
   641                           	callstack 0
   642   000005                     ?___fladd:
   643                           	callstack 0
   644   000005                     ?_labs:
   645                           	callstack 0
   646   000005                     ?___flneg:
   647                           	callstack 0
   648   000005                     ?___fltol:
   649                           	callstack 0
   650   000005                     ?___xxtofl:
   651                           	callstack 0
   652   000005                     ?___aodiv:
   653                           	callstack 0
   654   000005                     ?___aomod:
   655                           	callstack 0
   656   000005                     putCharToTxBuf@byte:
   657                           	callstack 0
   658   000005                     memcpy@d1:
   659                           	callstack 0
   660   000005                     fputc@c:
   661                           	callstack 0
   662   000005                     strcpy@dest:
   663                           	callstack 0
   664   000005                     ___fleq@ff1:
   665                           	callstack 0
   666   000005                     ___flneg@f1:
   667                           	callstack 0
   668   000005                     ___fltol@f1:
   669                           	callstack 0
   670   000005                     ___fladd@b:
   671                           	callstack 0
   672   000005                     ___xxtofl@val:
   673                           	callstack 0
   674   000005                     ___fpclassifyf@x:
   675                           	callstack 0
   676   000005                     labs@a:
   677                           	callstack 0
   678   000005                     ___aodiv@dividend:
   679                           	callstack 0
   680   000005                     ___aomod@dividend:
   681                           	callstack 0
   682   000005                     LRmotorsInit@motorLeft:
   683                           	callstack 0
   684                           
   685                           ; 9 bytes @ 0x4
   686   000005                     	ds	1
   687   000006                     ??_I2C_2_Master_Read:
   688   000006                     I2C_2_Master_Write@data_byte:
   689                           	callstack 0
   690   000006                     TxBufferedString@string:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x5
   694   000006                     	ds	1
   695   000007                     color_writetoaddr@value:
   696                           	callstack 0
   697   000007                     I2C_2_Master_Read@ack:
   698                           	callstack 0
   699   000007                     memcpy@s1:
   700                           	callstack 0
   701   000007                     fputc@fp:
   702                           	callstack 0
   703   000007                     strcpy@src:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x6
   707   000007                     	ds	1
   708   000008                     color_writetoaddr@address:
   709                           	callstack 0
   710   000008                     I2C_2_Master_Read@tmp:
   711                           	callstack 0
   712                           
   713                           ; 1 bytes @ 0x7
   714   000008                     	ds	1
   715   000009                     ??_fputc:
   716   000009                     ??___fpclassifyf:
   717   000009                     ??_labs:
   718   000009                     ??_color_click_init:
   719   000009                     ??___fltol:
   720   000009                     ??___xxtofl:
   721   000009                     ?_color_read_Red:
   722                           	callstack 0
   723   000009                     ?_color_read_Green:
   724                           	callstack 0
   725   000009                     ?_color_read_Blue:
   726                           	callstack 0
   727   000009                     ?_color_read_Clear:
   728                           	callstack 0
   729   000009                     memcpy@n:
   730                           	callstack 0
   731   000009                     strcpy@s:
   732                           	callstack 0
   733   000009                     ___fleq@ff2:
   734                           	callstack 0
   735   000009                     ___fladd@a:
   736                           	callstack 0
   737                           
   738                           ; 4 bytes @ 0x8
   739   000009                     	ds	2
   740   00000B                     ??_color_read_Red:
   741   00000B                     ??_color_read_Green:
   742   00000B                     ??_color_read_Blue:
   743   00000B                     ??_color_read_Clear:
   744   00000B                     memcpy@d:
   745                           	callstack 0
   746   00000B                     strcpy@d:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0xA
   750   00000B                     	ds	2
   751   00000D                     ??___fladd:
   752   00000D                     ??___fleq:
   753   00000D                     ___fltol@sign1:
   754                           	callstack 0
   755   00000D                     ___xxtofl@sign:
   756                           	callstack 0
   757   00000D                     ___fpclassifyf@e:
   758                           	callstack 0
   759   00000D                     memcpy@s:
   760                           	callstack 0
   761   00000D                     ___aodiv@divisor:
   762                           	callstack 0
   763   00000D                     ___aomod@divisor:
   764                           	callstack 0
   765                           
   766                           ; 8 bytes @ 0xC
   767   00000D                     	ds	1
   768   00000E                     ___fltol@exp1:
   769                           	callstack 0
   770   00000E                     ___xxtofl@exp:
   771                           	callstack 0
   772   00000E                     color_read_Red@tmp:
   773                           	callstack 0
   774   00000E                     color_read_Green@tmp:
   775                           	callstack 0
   776   00000E                     color_read_Blue@tmp:
   777                           	callstack 0
   778   00000E                     color_read_Clear@tmp:
   779                           	callstack 0
   780   00000E                     fputs@s:
   781                           	callstack 0
   782   00000E                     LRmotorsInit@motorRight:
   783                           	callstack 0
   784                           
   785                           ; 9 bytes @ 0xD
   786   00000E                     	ds	1
   787   00000F                     memcpy@tmp:
   788                           	callstack 0
   789   00000F                     ___xxtofl@arg:
   790                           	callstack 0
   791   00000F                     ___fpclassifyf@u:
   792                           	callstack 0
   793                           
   794                           ; 4 bytes @ 0xE
   795   00000F                     	ds	1
   796   000010                     getColor@v:
   797                           	callstack 0
   798   000010                     fputs@fp:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0xF
   802   000010                     	ds	1
   803   000011                     ___fladd@signs:
   804                           	callstack 0
   805                           
   806                           ; 1 bytes @ 0x10
   807   000011                     	ds	1
   808   000012                     ___fladd@aexp:
   809                           	callstack 0
   810   000012                     fputs@c:
   811                           	callstack 0
   812                           
   813                           ; 1 bytes @ 0x11
   814   000012                     	ds	1
   815   000013                     ___fladd@bexp:
   816                           	callstack 0
   817   000013                     fputs@i:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x12
   821   000013                     	ds	1
   822   000014                     ___fladd@grs:
   823                           	callstack 0
   824                           
   825                           ; 1 bytes @ 0x13
   826   000014                     	ds	1
   827   000015                     ?___flsub:
   828                           	callstack 0
   829   000015                     ___aodiv@counter:
   830                           	callstack 0
   831   000015                     ___aomod@counter:
   832                           	callstack 0
   833   000015                     pad@fp:
   834                           	callstack 0
   835   000015                     ___flsub@b:
   836                           	callstack 0
   837                           
   838                           ; 4 bytes @ 0x14
   839   000015                     	ds	1
   840   000016                     ___aodiv@sign:
   841                           	callstack 0
   842   000016                     ___aomod@sign:
   843                           	callstack 0
   844                           
   845                           ; 1 bytes @ 0x15
   846   000016                     	ds	1
   847   000017                     ?_abs:
   848                           	callstack 0
   849   000017                     initDCmotorsPWM@PWMperiod:
   850                           	callstack 0
   851   000017                     pad@buf:
   852                           	callstack 0
   853   000017                     abs@a:
   854                           	callstack 0
   855   000017                     ___aodiv@quotient:
   856                           	callstack 0
   857                           
   858                           ; 8 bytes @ 0x16
   859   000017                     	ds	2
   860   000019                     ??_abs:
   861   000019                     pad@p:
   862                           	callstack 0
   863   000019                     ___flsub@a:
   864                           	callstack 0
   865                           
   866                           ; 4 bytes @ 0x18
   867   000019                     	ds	2
   868   00001B                     ??_pad:
   869                           
   870                           ; 1 bytes @ 0x1A
   871   00001B                     	ds	1
   872   00001C                     pad@i:
   873                           	callstack 0
   874                           
   875                           ; 2 bytes @ 0x1B
   876   00001C                     	ds	1
   877   00001D                     ?___flmul:
   878                           	callstack 0
   879   00001D                     ___flmul@b:
   880                           	callstack 0
   881                           
   882                           ; 4 bytes @ 0x1C
   883   00001D                     	ds	1
   884   00001E                     pad@w:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x1D
   888   00001E                     	ds	2
   889   000020                     dtoa@fp:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x1F
   893   000020                     	ds	1
   894   000021                     ___flmul@a:
   895                           	callstack 0
   896                           
   897                           ; 4 bytes @ 0x20
   898   000021                     	ds	1
   899   000022                     dtoa@d:
   900                           	callstack 0
   901                           
   902                           ; 8 bytes @ 0x21
   903   000022                     	ds	3
   904   000025                     ??___flmul:
   905                           
   906                           ; 1 bytes @ 0x24
   907   000025                     	ds	4
   908   000029                     ___flmul@sign:
   909                           	callstack 0
   910                           
   911                           ; 1 bytes @ 0x28
   912   000029                     	ds	1
   913   00002A                     ??_dtoa:
   914   00002A                     ___flmul@grs:
   915                           	callstack 0
   916                           
   917                           ; 4 bytes @ 0x29
   918   00002A                     	ds	4
   919   00002E                     ___flmul@aexp:
   920                           	callstack 0
   921                           
   922                           ; 1 bytes @ 0x2D
   923   00002E                     	ds	1
   924   00002F                     ___flmul@bexp:
   925                           	callstack 0
   926                           
   927                           ; 1 bytes @ 0x2E
   928   00002F                     	ds	1
   929   000030                     ___flmul@prod:
   930                           	callstack 0
   931                           
   932                           ; 4 bytes @ 0x2F
   933   000030                     	ds	2
   934   000032                     _dtoa$2306:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0x31
   938   000032                     	ds	2
   939   000034                     ___flmul@temp:
   940                           	callstack 0
   941   000034                     dtoa@p:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0x33
   945   000034                     	ds	2
   946   000036                     ?___fldiv:
   947                           	callstack 0
   948   000036                     dtoa@w:
   949                           	callstack 0
   950   000036                     ___flge@ff1:
   951                           	callstack 0
   952   000036                     ___fldiv@b:
   953                           	callstack 0
   954                           
   955                           ; 4 bytes @ 0x35
   956   000036                     	ds	2
   957   000038                     dtoa@n:
   958                           	callstack 0
   959                           
   960                           ; 8 bytes @ 0x37
   961   000038                     	ds	2
   962   00003A                     ___flge@ff2:
   963                           	callstack 0
   964   00003A                     ___fldiv@a:
   965                           	callstack 0
   966                           
   967                           ; 4 bytes @ 0x39
   968   00003A                     	ds	4
   969   00003E                     ??___fldiv:
   970   00003E                     ??___flge:
   971                           
   972                           ; 1 bytes @ 0x3D
   973   00003E                     	ds	2
   974   000040                     dtoa@i:
   975                           	callstack 0
   976                           
   977                           ; 2 bytes @ 0x3F
   978   000040                     	ds	2
   979   000042                     dtoa@s:
   980                           	callstack 0
   981   000042                     ___fldiv@rem:
   982                           	callstack 0
   983                           
   984                           ; 4 bytes @ 0x41
   985   000042                     	ds	4
   986   000046                     ___fldiv@sign:
   987                           	callstack 0
   988                           
   989                           ; 1 bytes @ 0x45
   990   000046                     	ds	1
   991   000047                     ___fldiv@new_exp:
   992                           	callstack 0
   993                           
   994                           ; 2 bytes @ 0x46
   995   000047                     	ds	2
   996   000049                     ___fldiv@grs:
   997                           	callstack 0
   998                           
   999                           ; 4 bytes @ 0x48
  1000   000049                     	ds	4
  1001   00004D                     ___fldiv@bexp:
  1002                           	callstack 0
  1003                           
  1004                           ; 1 bytes @ 0x4C
  1005   00004D                     	ds	1
  1006   00004E                     ___fldiv@aexp:
  1007                           	callstack 0
  1008                           
  1009                           ; 1 bytes @ 0x4D
  1010   00004E                     	ds	1
  1011   00004F                     ?_floorf:
  1012                           	callstack 0
  1013   00004F                     floorf@x:
  1014                           	callstack 0
  1015                           
  1016                           ; 4 bytes @ 0x4E
  1017   00004F                     	ds	4
  1018   000053                     ??_efgtoa:
  1019                           
  1020                           ; 1 bytes @ 0x52
  1021   000053                     	ds	2
  1022   000055                     ??_vfpfcnvrt:
  1023                           
  1024                           ; 1 bytes @ 0x54
  1025   000055                     	ds	2
  1026   000057                     
  1027                           ; 1 bytes @ 0x56
  1028 ;;
  1029 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1030 ;;
  1031 ;; *************** function _main *****************
  1032 ;; Defined at:
  1033 ;;		line 22 in file "newmain.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;		None
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;  string4        20   60[BANK1 ] unsigned char [20]
  1038 ;;  string3        20   40[BANK1 ] unsigned char [20]
  1039 ;;  string2        20   20[BANK1 ] unsigned char [20]
  1040 ;;  string1        20    0[BANK1 ] unsigned char [20]
  1041 ;;  testString     20    0        unsigned char [20]
  1042 ;;  RGBVal          8  110[BANK1 ] struct RGB
  1043 ;;  clearRef        4  106[BANK1 ] struct RGB
  1044 ;;  whiteC          4   92[BANK1 ] float 
  1045 ;;  whiteB          4   88[BANK1 ] float 
  1046 ;;  whiteG          4   84[BANK1 ] float 
  1047 ;;  whiteR          4   80[BANK1 ] float 
  1048 ;;  ambientC        4    0        float 
  1049 ;;  ambientR        2  100[BANK1 ] unsigned int 
  1050 ;;  ambientB        2   98[BANK1 ] unsigned int 
  1051 ;;  ambientG        2   96[BANK1 ] unsigned int 
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  1    wreg      void 
  1054 ;; Registers used:
  1055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1062 ;;      Locals:         0       0     118       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1063 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1064 ;;      Totals:         0       2     118       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1065 ;;Total ram usage:      120 bytes
  1066 ;; Hardware stack levels required when called: 10
  1067 ;; This function calls:
  1068 ;;		_TxBufferedString
  1069 ;;		___fldiv
  1070 ;;		___flmul
  1071 ;;		___flsub
  1072 ;;		___xxtofl
  1073 ;;		_color_click_init
  1074 ;;		_getColor
  1075 ;;		_initDCmotorsPWM
  1076 ;;		_initUSART4
  1077 ;;		_sendTxBuf
  1078 ;;		_sprintf
  1079 ;; This function is called by:
  1080 ;;		Startup code after reset
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           	psect	text0
  1085   001CFE                     __ptext0:
  1086                           	callstack 0
  1087   001CFE                     _main:
  1088                           	callstack 21
  1089   001CFE                     
  1090                           ;newmain.c: 24:     color_click_init();
  1091   001CFE  EC18  F020         	call	_color_click_init	;wreg free
  1092   001D02                     
  1093                           ;newmain.c: 25:     initUSART4();
  1094   001D02  EC4A  F020         	call	_initUSART4	;wreg free
  1095   001D06                     
  1096                           ;newmain.c: 26:     initDCmotorsPWM(199);
  1097   001D06  0E00               	movlw	0
  1098   001D08  6E18               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1099   001D0A  0EC7               	movlw	199
  1100   001D0C  6E17               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1101   001D0E  EC0F  F01D         	call	_initDCmotorsPWM	;wreg free
  1102   001D12                     
  1103                           ;newmain.c: 35:     LATDbits.LATD7=0;
  1104   001D12  9E7C               	bcf	124,7,c	;volatile
  1105   001D14                     
  1106                           ;newmain.c: 36:     TRISDbits.TRISD7=0;
  1107   001D14  9E84               	bcf	132,7,c	;volatile
  1108   001D16                     
  1109                           ;newmain.c: 38:     LATDbits.LATD4 = 0;
  1110   001D16  987C               	bcf	124,4,c	;volatile
  1111   001D18                     
  1112                           ;newmain.c: 39:     TRISDbits.TRISD4 = 0;
  1113   001D18  9884               	bcf	132,4,c	;volatile
  1114   001D1A                     
  1115                           ;newmain.c: 41:     LATHbits.LATH0 = 0;
  1116   001D1A  9080               	bcf	128,0,c	;volatile
  1117   001D1C                     
  1118                           ;newmain.c: 42:     TRISHbits.TRISH0 = 0;
  1119   001D1C  9088               	bcf	136,0,c	;volatile
  1120   001D1E                     
  1121                           ;newmain.c: 44:     LATFbits.LATF0 = 0;
  1122   001D1E  907E               	bcf	126,0,c	;volatile
  1123   001D20                     
  1124                           ;newmain.c: 45:     TRISFbits.TRISF0 = 0;
  1125   001D20  9086               	bcf	134,0,c	;volatile
  1126   001D22                     
  1127                           ;newmain.c: 47:     LATHbits.LATH1 = 0;
  1128   001D22  9280               	bcf	128,1,c	;volatile
  1129   001D24                     
  1130                           ;newmain.c: 48:     TRISHbits.TRISH1 = 0;
  1131   001D24  9288               	bcf	136,1,c	;volatile
  1132   001D26                     
  1133                           ;newmain.c: 50:     LATDbits.LATD3 = 0;
  1134   001D26  967C               	bcf	124,3,c	;volatile
  1135   001D28                     
  1136                           ;newmain.c: 51:     TRISDbits.TRISD3 = 0;
  1137   001D28  9684               	bcf	132,3,c	;volatile
  1138   001D2A                     
  1139                           ;newmain.c: 54:     LATDbits.LATD4 = 1;
  1140   001D2A  887C               	bsf	124,4,c	;volatile
  1141   001D2C                     
  1142                           ;newmain.c: 55:     LATFbits.LATF0 = 1;
  1143   001D2C  807E               	bsf	126,0,c	;volatile
  1144   001D2E                     
  1145                           ;newmain.c: 56:     LATHbits.LATH0 = 1;
  1146   001D2E  8080               	bsf	128,0,c	;volatile
  1147   001D30                     
  1148                           ;newmain.c: 57:     LATFbits.LATF0 = 1;
  1149   001D30  807E               	bsf	126,0,c	;volatile
  1150   001D32                     
  1151                           ;newmain.c: 58:     LATDbits.LATD3 = 1;
  1152   001D32  867C               	bsf	124,3,c	;volatile
  1153   001D34                     
  1154                           ;newmain.c: 63:     LATGbits.LATG0=0;
  1155   001D34  907F               	bcf	127,0,c	;volatile
  1156   001D36                     
  1157                           ;newmain.c: 64:     LATEbits.LATE7=0;
  1158   001D36  9E7D               	bcf	125,7,c	;volatile
  1159   001D38                     
  1160                           ;newmain.c: 65:     LATAbits.LATA3=0;
  1161   001D38  9679               	bcf	121,3,c	;volatile
  1162   001D3A                     
  1163                           ;newmain.c: 67:     TRISGbits.TRISG0=0;
  1164   001D3A  9087               	bcf	135,0,c	;volatile
  1165   001D3C                     
  1166                           ;newmain.c: 68:     TRISEbits.TRISE7=0;
  1167   001D3C  9E85               	bcf	133,7,c	;volatile
  1168   001D3E                     
  1169                           ;newmain.c: 69:     TRISAbits.TRISA3=0;
  1170   001D3E  9681               	bcf	129,3,c	;volatile
  1171   001D40                     
  1172                           ;newmain.c: 71:     char testString[20];;newmain.c: 72:     char string1[20];;newmain.c:
      +                           73:     char string2[20];;newmain.c: 74:     char string3[20];;newmain.c: 75:     char 
      +                          string4[20];;newmain.c: 78:     RGB RGBVal;;newmain.c: 79:     RGBVal.R = 0;
  1173   001D40  0E00               	movlw	0
  1174   001D42  0101               	movlb	1	; () banked
  1175   001D44  6F6F               	movwf	(main@RGBVal+1)& (0+255),b
  1176   001D46  0E00               	movlw	0
  1177   001D48  6F6E               	movwf	main@RGBVal& (0+255),b
  1178   001D4A                     
  1179                           ; BSR set to: 1
  1180                           ;newmain.c: 80:     RGBVal.G = 0;
  1181   001D4A  0E00               	movlw	0
  1182   001D4C  6F71               	movwf	(main@RGBVal+3)& (0+255),b
  1183   001D4E  0E00               	movlw	0
  1184   001D50  6F70               	movwf	(main@RGBVal+2)& (0+255),b
  1185   001D52                     
  1186                           ; BSR set to: 1
  1187                           ;newmain.c: 81:     RGBVal.B = 0;
  1188   001D52  0E00               	movlw	0
  1189   001D54  6F73               	movwf	(main@RGBVal+5)& (0+255),b
  1190   001D56  0E00               	movlw	0
  1191   001D58  6F72               	movwf	(main@RGBVal+4)& (0+255),b
  1192   001D5A                     
  1193                           ; BSR set to: 1
  1194                           ;newmain.c: 82:     RGBVal.C = 0;
  1195   001D5A  0E00               	movlw	0
  1196   001D5C  6F75               	movwf	(main@RGBVal+7)& (0+255),b
  1197   001D5E  0E00               	movlw	0
  1198   001D60  6F74               	movwf	(main@RGBVal+6)& (0+255),b
  1199   001D62                     
  1200                           ; BSR set to: 1
  1201                           ;newmain.c: 85:     unsigned int ambientR = 30;
  1202   001D62  0E00               	movlw	0
  1203   001D64  6F65               	movwf	(main@ambientR+1)& (0+255),b
  1204   001D66  0E1E               	movlw	30
  1205   001D68  6F64               	movwf	main@ambientR& (0+255),b
  1206   001D6A                     
  1207                           ; BSR set to: 1
  1208                           ;newmain.c: 86:     unsigned int ambientG = 12;
  1209   001D6A  0E00               	movlw	0
  1210   001D6C  6F61               	movwf	(main@ambientG+1)& (0+255),b
  1211   001D6E  0E0C               	movlw	12
  1212   001D70  6F60               	movwf	main@ambientG& (0+255),b
  1213   001D72                     
  1214                           ; BSR set to: 1
  1215                           ;newmain.c: 87:     unsigned int ambientB = 10;
  1216   001D72  0E00               	movlw	0
  1217   001D74  6F63               	movwf	(main@ambientB+1)& (0+255),b
  1218   001D76  0E0A               	movlw	10
  1219   001D78  6F62               	movwf	main@ambientB& (0+255),b
  1220   001D7A                     
  1221                           ; BSR set to: 1
  1222                           ;newmain.c: 90:     float whiteR = 68.0;
  1223   001D7A  0E00               	movlw	0
  1224   001D7C  6F50               	movwf	main@whiteR& (0+255),b
  1225   001D7E  0E00               	movlw	0
  1226   001D80  6F51               	movwf	(main@whiteR+1)& (0+255),b
  1227   001D82  0E88               	movlw	136
  1228   001D84  6F52               	movwf	(main@whiteR+2)& (0+255),b
  1229   001D86  0E42               	movlw	66
  1230   001D88  6F53               	movwf	(main@whiteR+3)& (0+255),b
  1231   001D8A                     
  1232                           ; BSR set to: 1
  1233                           ;newmain.c: 91:     float whiteG = 57.0;
  1234   001D8A  0E00               	movlw	0
  1235   001D8C  6F54               	movwf	main@whiteG& (0+255),b
  1236   001D8E  0E00               	movlw	0
  1237   001D90  6F55               	movwf	(main@whiteG+1)& (0+255),b
  1238   001D92  0E64               	movlw	100
  1239   001D94  6F56               	movwf	(main@whiteG+2)& (0+255),b
  1240   001D96  0E42               	movlw	66
  1241   001D98  6F57               	movwf	(main@whiteG+3)& (0+255),b
  1242   001D9A                     
  1243                           ; BSR set to: 1
  1244                           ;newmain.c: 92:     float whiteB = 54.0;
  1245   001D9A  0E00               	movlw	0
  1246   001D9C  6F58               	movwf	main@whiteB& (0+255),b
  1247   001D9E  0E00               	movlw	0
  1248   001DA0  6F59               	movwf	(main@whiteB+1)& (0+255),b
  1249   001DA2  0E58               	movlw	88
  1250   001DA4  6F5A               	movwf	(main@whiteB+2)& (0+255),b
  1251   001DA6  0E42               	movlw	66
  1252   001DA8  6F5B               	movwf	(main@whiteB+3)& (0+255),b
  1253   001DAA                     
  1254                           ; BSR set to: 1
  1255                           ;newmain.c: 93:     float whiteC = 195.0;
  1256   001DAA  0E00               	movlw	0
  1257   001DAC  6F5C               	movwf	main@whiteC& (0+255),b
  1258   001DAE  0E00               	movlw	0
  1259   001DB0  6F5D               	movwf	(main@whiteC+1)& (0+255),b
  1260   001DB2  0E43               	movlw	67
  1261   001DB4  6F5E               	movwf	(main@whiteC+2)& (0+255),b
  1262   001DB6  0E43               	movlw	67
  1263   001DB8  6F5F               	movwf	(main@whiteC+3)& (0+255),b
  1264   001DBA                     l4903:
  1265                           
  1266                           ;newmain.c: 101:         getColor(&RGBVal);
  1267   001DBA  0E6E               	movlw	low main@RGBVal
  1268   001DBC  6E10               	movwf	getColor@v^0,c
  1269   001DBE  0E01               	movlw	high main@RGBVal
  1270   001DC0  6E11               	movwf	(getColor@v+1)^0,c
  1271   001DC2  ECC9  F01D         	call	_getColor	;wreg free
  1272   001DC6                     
  1273                           ;newmain.c: 102:         LATDbits.LATD7=!LATDbits.LATD7;
  1274   001DC6  AE7C               	btfss	124,7,c	;volatile
  1275   001DC8  EFE8  F00E         	goto	u4801
  1276   001DCC  EFED  F00E         	goto	u4800
  1277   001DD0                     u4801:
  1278   001DD0  0100               	movlb	0	; () banked
  1279   001DD2  6BD5               	clrf	??_main& (0+255),b
  1280   001DD4  2BD5               	incf	??_main& (0+255),f,b
  1281   001DD6  EFEF  F00E         	goto	u4818
  1282   001DDA                     u4800:
  1283   001DDA  0100               	movlb	0	; () banked
  1284   001DDC  6BD5               	clrf	??_main& (0+255),b
  1285   001DDE                     u4818:
  1286   001DDE  33D5               	rrcf	??_main& (0+255),f,b
  1287   001DE0  33D5               	rrcf	??_main& (0+255),f,b
  1288   001DE2  507C               	movf	124,w,c	;volatile
  1289   001DE4  19D5               	xorwf	??_main& (0+255),w,b
  1290   001DE6  0B7F               	andlw	-129
  1291   001DE8  19D5               	xorwf	??_main& (0+255),w,b
  1292   001DEA  6E7C               	movwf	124,c	;volatile
  1293   001DEC                     
  1294                           ; BSR set to: 0
  1295                           ;newmain.c: 104:         clearRef = RGBVal.C/whiteC;
  1296   001DEC  C174  F005         	movff	main@RGBVal+6,___xxtofl@val
  1297   001DF0  C175  F006         	movff	main@RGBVal+7,___xxtofl@val+1
  1298   001DF4  6A07               	clrf	(___xxtofl@val+2)^0,c
  1299   001DF6  6A08               	clrf	(___xxtofl@val+3)^0,c
  1300   001DF8  0E00               	movlw	0
  1301   001DFA  EC81  F018         	call	___xxtofl
  1302   001DFE  C005  F036         	movff	?___xxtofl,___fldiv@b
  1303   001E02  C006  F037         	movff	?___xxtofl+1,___fldiv@b+1
  1304   001E06  C007  F038         	movff	?___xxtofl+2,___fldiv@b+2
  1305   001E0A  C008  F039         	movff	?___xxtofl+3,___fldiv@b+3
  1306   001E0E  C15C  F03A         	movff	main@whiteC,___fldiv@a
  1307   001E12  C15D  F03B         	movff	main@whiteC+1,___fldiv@a+1
  1308   001E16  C15E  F03C         	movff	main@whiteC+2,___fldiv@a+2
  1309   001E1A  C15F  F03D         	movff	main@whiteC+3,___fldiv@a+3
  1310   001E1E  ECE7  F012         	call	___fldiv	;wreg free
  1311   001E22  C036  F16A         	movff	?___fldiv,main@clearRef
  1312   001E26  C037  F16B         	movff	?___fldiv+1,main@clearRef+1
  1313   001E2A  C038  F16C         	movff	?___fldiv+2,main@clearRef+2
  1314   001E2E  C039  F16D         	movff	?___fldiv+3,main@clearRef+3
  1315   001E32                     
  1316                           ;newmain.c: 107:         sprintf(string4,"C:  %f ",clearRef);
  1317   001E32  0E3C               	movlw	low main@string4
  1318   001E34  0100               	movlb	0	; () banked
  1319   001E36  6FBC               	movwf	sprintf@s& (0+255),b
  1320   001E38  0E01               	movlw	high main@string4
  1321   001E3A  6FBD               	movwf	(sprintf@s+1)& (0+255),b
  1322   001E3C  0E33               	movlw	low STR_1
  1323   001E3E  6FBE               	movwf	sprintf@fmt& (0+255),b
  1324   001E40  0E0E               	movlw	high STR_1
  1325   001E42  6FBF               	movwf	(sprintf@fmt+1)& (0+255),b
  1326   001E44  C16A  F0C0         	movff	main@clearRef,?_sprintf+4
  1327   001E48  C16B  F0C1         	movff	main@clearRef+1,?_sprintf+5
  1328   001E4C  C16C  F0C2         	movff	main@clearRef+2,?_sprintf+6
  1329   001E50  C16D  F0C3         	movff	main@clearRef+3,?_sprintf+7
  1330   001E54  EC23  F01E         	call	_sprintf	;wreg free
  1331   001E58                     
  1332                           ;newmain.c: 108:         TxBufferedString(string4);
  1333   001E58  0E3C               	movlw	low main@string4
  1334   001E5A  6E06               	movwf	TxBufferedString@string^0,c
  1335   001E5C  0E01               	movlw	high main@string4
  1336   001E5E  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1337   001E60  EC32  F020         	call	_TxBufferedString	;wreg free
  1338   001E64                     
  1339                           ;newmain.c: 109:         sendTxBuf();
  1340   001E64  ECDA  F020         	call	_sendTxBuf	;wreg free
  1341   001E68                     
  1342                           ;newmain.c: 110:         _delay((unsigned long)((2)*(64000000/4000.0)));
  1343   001E68  0E2A               	movlw	42
  1344   001E6A  0100               	movlb	0	; () banked
  1345   001E6C  6FD5               	movwf	??_main& (0+255),b
  1346   001E6E  0E8D               	movlw	141
  1347   001E70                     u4827:
  1348   001E70  2EE8               	decfsz	wreg,f,c
  1349   001E72  D7FE               	bra	u4827
  1350   001E74  2FD5               	decfsz	??_main& (0+255),f,b
  1351   001E76  D7FC               	bra	u4827
  1352   001E78  D000               	nop2	
  1353   001E7A                     
  1354                           ;newmain.c: 112:         sprintf(string1,"Red: %f %d ",(RGBVal.R-ambientR)/((whiteR-(flo
      +                          at)ambientR)*(clearRef)), RGBVal.R-ambientR);
  1355   001E7A  0101               	movlb	1	; () banked
  1356   001E7C  5164               	movf	main@ambientR& (0+255),w,b
  1357   001E7E  5D6E               	subwf	main@RGBVal& (0+255),w,b
  1358   001E80  0100               	movlb	0	; () banked
  1359   001E82  6FD5               	movwf	??_main& (0+255),b
  1360   001E84  0101               	movlb	1	; () banked
  1361   001E86  5165               	movf	(main@ambientR+1)& (0+255),w,b
  1362   001E88  596F               	subwfb	(main@RGBVal+1)& (0+255),w,b
  1363   001E8A  0100               	movlb	0	; () banked
  1364   001E8C  6FD6               	movwf	(??_main+1)& (0+255),b
  1365   001E8E  C0D5  F005         	movff	??_main,___xxtofl@val
  1366   001E92  C0D6  F006         	movff	??_main+1,___xxtofl@val+1
  1367   001E96  6A07               	clrf	(___xxtofl@val+2)^0,c
  1368   001E98  6A08               	clrf	(___xxtofl@val+3)^0,c
  1369   001E9A  0E00               	movlw	0
  1370   001E9C  EC81  F018         	call	___xxtofl
  1371   001EA0  C005  F036         	movff	?___xxtofl,___fldiv@b
  1372   001EA4  C006  F037         	movff	?___xxtofl+1,___fldiv@b+1
  1373   001EA8  C007  F038         	movff	?___xxtofl+2,___fldiv@b+2
  1374   001EAC  C008  F039         	movff	?___xxtofl+3,___fldiv@b+3
  1375   001EB0  C16A  F021         	movff	main@clearRef,___flmul@a
  1376   001EB4  C16B  F022         	movff	main@clearRef+1,___flmul@a+1
  1377   001EB8  C16C  F023         	movff	main@clearRef+2,___flmul@a+2
  1378   001EBC  C16D  F024         	movff	main@clearRef+3,___flmul@a+3
  1379   001EC0  C164  F005         	movff	main@ambientR,___xxtofl@val
  1380   001EC4  C165  F006         	movff	main@ambientR+1,___xxtofl@val+1
  1381   001EC8  6A07               	clrf	(___xxtofl@val+2)^0,c
  1382   001ECA  6A08               	clrf	(___xxtofl@val+3)^0,c
  1383   001ECC  0E00               	movlw	0
  1384   001ECE  EC81  F018         	call	___xxtofl
  1385   001ED2  C005  F019         	movff	?___xxtofl,___flsub@a
  1386   001ED6  C006  F01A         	movff	?___xxtofl+1,___flsub@a+1
  1387   001EDA  C007  F01B         	movff	?___xxtofl+2,___flsub@a+2
  1388   001EDE  C008  F01C         	movff	?___xxtofl+3,___flsub@a+3
  1389   001EE2  C150  F015         	movff	main@whiteR,___flsub@b
  1390   001EE6  C151  F016         	movff	main@whiteR+1,___flsub@b+1
  1391   001EEA  C152  F017         	movff	main@whiteR+2,___flsub@b+2
  1392   001EEE  C153  F018         	movff	main@whiteR+3,___flsub@b+3
  1393   001EF2  EC39  F01F         	call	___flsub	;wreg free
  1394   001EF6  C015  F01D         	movff	?___flsub,___flmul@b
  1395   001EFA  C016  F01E         	movff	?___flsub+1,___flmul@b+1
  1396   001EFE  C017  F01F         	movff	?___flsub+2,___flmul@b+2
  1397   001F02  C018  F020         	movff	?___flsub+3,___flmul@b+3
  1398   001F06  ECD2  F010         	call	___flmul	;wreg free
  1399   001F0A  C01D  F03A         	movff	?___flmul,___fldiv@a
  1400   001F0E  C01E  F03B         	movff	?___flmul+1,___fldiv@a+1
  1401   001F12  C01F  F03C         	movff	?___flmul+2,___fldiv@a+2
  1402   001F16  C020  F03D         	movff	?___flmul+3,___fldiv@a+3
  1403   001F1A  ECE7  F012         	call	___fldiv	;wreg free
  1404   001F1E  C036  F166         	movff	?___fldiv,_main$2682
  1405   001F22  C037  F167         	movff	?___fldiv+1,_main$2682+1
  1406   001F26  C038  F168         	movff	?___fldiv+2,_main$2682+2
  1407   001F2A  C039  F169         	movff	?___fldiv+3,_main$2682+3
  1408   001F2E                     
  1409                           ;newmain.c: 112:         sprintf(string1,"Red: %f %d ",(RGBVal.R-ambientR)/((whiteR-(flo
      +                          at)ambientR)*(clearRef)), RGBVal.R-ambientR);
  1410   001F2E  0E00               	movlw	low main@string1
  1411   001F30  0100               	movlb	0	; () banked
  1412   001F32  6FBC               	movwf	sprintf@s& (0+255),b
  1413   001F34  0E01               	movlw	high main@string1
  1414   001F36  6FBD               	movwf	(sprintf@s+1)& (0+255),b
  1415   001F38  0E1C               	movlw	low STR_2
  1416   001F3A  6FBE               	movwf	sprintf@fmt& (0+255),b
  1417   001F3C  0E0E               	movlw	high STR_2
  1418   001F3E  6FBF               	movwf	(sprintf@fmt+1)& (0+255),b
  1419   001F40  C166  F0C0         	movff	_main$2682,?_sprintf+4
  1420   001F44  C167  F0C1         	movff	_main$2682+1,?_sprintf+5
  1421   001F48  C168  F0C2         	movff	_main$2682+2,?_sprintf+6
  1422   001F4C  C169  F0C3         	movff	_main$2682+3,?_sprintf+7
  1423   001F50  0101               	movlb	1	; () banked
  1424   001F52  5164               	movf	main@ambientR& (0+255),w,b
  1425   001F54  5D6E               	subwf	main@RGBVal& (0+255),w,b
  1426   001F56  0100               	movlb	0	; () banked
  1427   001F58  6FC4               	movwf	(?_sprintf+8)& (0+255),b
  1428   001F5A  0101               	movlb	1	; () banked
  1429   001F5C  5165               	movf	(main@ambientR+1)& (0+255),w,b
  1430   001F5E  596F               	subwfb	(main@RGBVal+1)& (0+255),w,b
  1431   001F60  0100               	movlb	0	; () banked
  1432   001F62  6FC5               	movwf	(?_sprintf+9)& (0+255),b
  1433   001F64  EC23  F01E         	call	_sprintf	;wreg free
  1434   001F68                     
  1435                           ;newmain.c: 113:         TxBufferedString(string1);
  1436   001F68  0E00               	movlw	low main@string1
  1437   001F6A  6E06               	movwf	TxBufferedString@string^0,c
  1438   001F6C  0E01               	movlw	high main@string1
  1439   001F6E  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1440   001F70  EC32  F020         	call	_TxBufferedString	;wreg free
  1441   001F74                     
  1442                           ;newmain.c: 114:         sendTxBuf();
  1443   001F74  ECDA  F020         	call	_sendTxBuf	;wreg free
  1444   001F78                     
  1445                           ;newmain.c: 115:         _delay((unsigned long)((2)*(64000000/4000.0)));
  1446   001F78  0E2A               	movlw	42
  1447   001F7A  0100               	movlb	0	; () banked
  1448   001F7C  6FD5               	movwf	??_main& (0+255),b
  1449   001F7E  0E8D               	movlw	141
  1450   001F80                     u4837:
  1451   001F80  2EE8               	decfsz	wreg,f,c
  1452   001F82  D7FE               	bra	u4837
  1453   001F84  2FD5               	decfsz	??_main& (0+255),f,b
  1454   001F86  D7FC               	bra	u4837
  1455   001F88  D000               	nop2	
  1456   001F8A                     
  1457                           ;newmain.c: 117:         sprintf(string2,"Green: %f ",(RGBVal.G-ambientG)/((whiteG-(floa
      +                          t)ambientG)*(clearRef)));
  1458   001F8A  0101               	movlb	1	; () banked
  1459   001F8C  5160               	movf	main@ambientG& (0+255),w,b
  1460   001F8E  5D70               	subwf	(main@RGBVal+2)& (0+255),w,b
  1461   001F90  0100               	movlb	0	; () banked
  1462   001F92  6FD5               	movwf	??_main& (0+255),b
  1463   001F94  0101               	movlb	1	; () banked
  1464   001F96  5161               	movf	(main@ambientG+1)& (0+255),w,b
  1465   001F98  5971               	subwfb	(main@RGBVal+3)& (0+255),w,b
  1466   001F9A  0100               	movlb	0	; () banked
  1467   001F9C  6FD6               	movwf	(??_main+1)& (0+255),b
  1468   001F9E  C0D5  F005         	movff	??_main,___xxtofl@val
  1469   001FA2  C0D6  F006         	movff	??_main+1,___xxtofl@val+1
  1470   001FA6  6A07               	clrf	(___xxtofl@val+2)^0,c
  1471   001FA8  6A08               	clrf	(___xxtofl@val+3)^0,c
  1472   001FAA  0E00               	movlw	0
  1473   001FAC  EC81  F018         	call	___xxtofl
  1474   001FB0  C005  F036         	movff	?___xxtofl,___fldiv@b
  1475   001FB4  C006  F037         	movff	?___xxtofl+1,___fldiv@b+1
  1476   001FB8  C007  F038         	movff	?___xxtofl+2,___fldiv@b+2
  1477   001FBC  C008  F039         	movff	?___xxtofl+3,___fldiv@b+3
  1478   001FC0  C16A  F021         	movff	main@clearRef,___flmul@a
  1479   001FC4  C16B  F022         	movff	main@clearRef+1,___flmul@a+1
  1480   001FC8  C16C  F023         	movff	main@clearRef+2,___flmul@a+2
  1481   001FCC  C16D  F024         	movff	main@clearRef+3,___flmul@a+3
  1482   001FD0  C160  F005         	movff	main@ambientG,___xxtofl@val
  1483   001FD4  C161  F006         	movff	main@ambientG+1,___xxtofl@val+1
  1484   001FD8  6A07               	clrf	(___xxtofl@val+2)^0,c
  1485   001FDA  6A08               	clrf	(___xxtofl@val+3)^0,c
  1486   001FDC  0E00               	movlw	0
  1487   001FDE  EC81  F018         	call	___xxtofl
  1488   001FE2  C005  F019         	movff	?___xxtofl,___flsub@a
  1489   001FE6  C006  F01A         	movff	?___xxtofl+1,___flsub@a+1
  1490   001FEA  C007  F01B         	movff	?___xxtofl+2,___flsub@a+2
  1491   001FEE  C008  F01C         	movff	?___xxtofl+3,___flsub@a+3
  1492   001FF2  C154  F015         	movff	main@whiteG,___flsub@b
  1493   001FF6  C155  F016         	movff	main@whiteG+1,___flsub@b+1
  1494   001FFA  C156  F017         	movff	main@whiteG+2,___flsub@b+2
  1495   001FFE  C157  F018         	movff	main@whiteG+3,___flsub@b+3
  1496   002002  EC39  F01F         	call	___flsub	;wreg free
  1497   002006  C015  F01D         	movff	?___flsub,___flmul@b
  1498   00200A  C016  F01E         	movff	?___flsub+1,___flmul@b+1
  1499   00200E  C017  F01F         	movff	?___flsub+2,___flmul@b+2
  1500   002012  C018  F020         	movff	?___flsub+3,___flmul@b+3
  1501   002016  ECD2  F010         	call	___flmul	;wreg free
  1502   00201A  C01D  F03A         	movff	?___flmul,___fldiv@a
  1503   00201E  C01E  F03B         	movff	?___flmul+1,___fldiv@a+1
  1504   002022  C01F  F03C         	movff	?___flmul+2,___fldiv@a+2
  1505   002026  C020  F03D         	movff	?___flmul+3,___fldiv@a+3
  1506   00202A  ECE7  F012         	call	___fldiv	;wreg free
  1507   00202E  C036  F166         	movff	?___fldiv,_main$2682
  1508   002032  C037  F167         	movff	?___fldiv+1,_main$2682+1
  1509   002036  C038  F168         	movff	?___fldiv+2,_main$2682+2
  1510   00203A  C039  F169         	movff	?___fldiv+3,_main$2682+3
  1511   00203E                     
  1512                           ;newmain.c: 117:         sprintf(string2,"Green: %f ",(RGBVal.G-ambientG)/((whiteG-(floa
      +                          t)ambientG)*(clearRef)));
  1513   00203E  0E14               	movlw	low main@string2
  1514   002040  0100               	movlb	0	; () banked
  1515   002042  6FBC               	movwf	sprintf@s& (0+255),b
  1516   002044  0E01               	movlw	high main@string2
  1517   002046  6FBD               	movwf	(sprintf@s+1)& (0+255),b
  1518   002048  0E28               	movlw	low STR_3
  1519   00204A  6FBE               	movwf	sprintf@fmt& (0+255),b
  1520   00204C  0E0E               	movlw	high STR_3
  1521   00204E  6FBF               	movwf	(sprintf@fmt+1)& (0+255),b
  1522   002050  C166  F0C0         	movff	_main$2682,?_sprintf+4
  1523   002054  C167  F0C1         	movff	_main$2682+1,?_sprintf+5
  1524   002058  C168  F0C2         	movff	_main$2682+2,?_sprintf+6
  1525   00205C  C169  F0C3         	movff	_main$2682+3,?_sprintf+7
  1526   002060  EC23  F01E         	call	_sprintf	;wreg free
  1527   002064                     
  1528                           ;newmain.c: 118:         TxBufferedString(string2);
  1529   002064  0E14               	movlw	low main@string2
  1530   002066  6E06               	movwf	TxBufferedString@string^0,c
  1531   002068  0E01               	movlw	high main@string2
  1532   00206A  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1533   00206C  EC32  F020         	call	_TxBufferedString	;wreg free
  1534   002070                     
  1535                           ;newmain.c: 119:         sendTxBuf();
  1536   002070  ECDA  F020         	call	_sendTxBuf	;wreg free
  1537   002074                     
  1538                           ;newmain.c: 120:         _delay((unsigned long)((2)*(64000000/4000.0)));
  1539   002074  0E2A               	movlw	42
  1540   002076  0100               	movlb	0	; () banked
  1541   002078  6FD5               	movwf	??_main& (0+255),b
  1542   00207A  0E8D               	movlw	141
  1543   00207C                     u4847:
  1544   00207C  2EE8               	decfsz	wreg,f,c
  1545   00207E  D7FE               	bra	u4847
  1546   002080  2FD5               	decfsz	??_main& (0+255),f,b
  1547   002082  D7FC               	bra	u4847
  1548   002084  D000               	nop2	
  1549   002086                     
  1550                           ;newmain.c: 122:         sprintf(string3,"Blue:  %f \r",(RGBVal.B-ambientB)/((whiteB-(fl
      +                          oat)ambientB)*(clearRef)));
  1551   002086  0101               	movlb	1	; () banked
  1552   002088  5162               	movf	main@ambientB& (0+255),w,b
  1553   00208A  5D72               	subwf	(main@RGBVal+4)& (0+255),w,b
  1554   00208C  0100               	movlb	0	; () banked
  1555   00208E  6FD5               	movwf	??_main& (0+255),b
  1556   002090  0101               	movlb	1	; () banked
  1557   002092  5163               	movf	(main@ambientB+1)& (0+255),w,b
  1558   002094  5973               	subwfb	(main@RGBVal+5)& (0+255),w,b
  1559   002096  0100               	movlb	0	; () banked
  1560   002098  6FD6               	movwf	(??_main+1)& (0+255),b
  1561   00209A  C0D5  F005         	movff	??_main,___xxtofl@val
  1562   00209E  C0D6  F006         	movff	??_main+1,___xxtofl@val+1
  1563   0020A2  6A07               	clrf	(___xxtofl@val+2)^0,c
  1564   0020A4  6A08               	clrf	(___xxtofl@val+3)^0,c
  1565   0020A6  0E00               	movlw	0
  1566   0020A8  EC81  F018         	call	___xxtofl
  1567   0020AC  C005  F036         	movff	?___xxtofl,___fldiv@b
  1568   0020B0  C006  F037         	movff	?___xxtofl+1,___fldiv@b+1
  1569   0020B4  C007  F038         	movff	?___xxtofl+2,___fldiv@b+2
  1570   0020B8  C008  F039         	movff	?___xxtofl+3,___fldiv@b+3
  1571   0020BC  C16A  F021         	movff	main@clearRef,___flmul@a
  1572   0020C0  C16B  F022         	movff	main@clearRef+1,___flmul@a+1
  1573   0020C4  C16C  F023         	movff	main@clearRef+2,___flmul@a+2
  1574   0020C8  C16D  F024         	movff	main@clearRef+3,___flmul@a+3
  1575   0020CC  C162  F005         	movff	main@ambientB,___xxtofl@val
  1576   0020D0  C163  F006         	movff	main@ambientB+1,___xxtofl@val+1
  1577   0020D4  6A07               	clrf	(___xxtofl@val+2)^0,c
  1578   0020D6  6A08               	clrf	(___xxtofl@val+3)^0,c
  1579   0020D8  0E00               	movlw	0
  1580   0020DA  EC81  F018         	call	___xxtofl
  1581   0020DE  C005  F019         	movff	?___xxtofl,___flsub@a
  1582   0020E2  C006  F01A         	movff	?___xxtofl+1,___flsub@a+1
  1583   0020E6  C007  F01B         	movff	?___xxtofl+2,___flsub@a+2
  1584   0020EA  C008  F01C         	movff	?___xxtofl+3,___flsub@a+3
  1585   0020EE  C158  F015         	movff	main@whiteB,___flsub@b
  1586   0020F2  C159  F016         	movff	main@whiteB+1,___flsub@b+1
  1587   0020F6  C15A  F017         	movff	main@whiteB+2,___flsub@b+2
  1588   0020FA  C15B  F018         	movff	main@whiteB+3,___flsub@b+3
  1589   0020FE  EC39  F01F         	call	___flsub	;wreg free
  1590   002102  C015  F01D         	movff	?___flsub,___flmul@b
  1591   002106  C016  F01E         	movff	?___flsub+1,___flmul@b+1
  1592   00210A  C017  F01F         	movff	?___flsub+2,___flmul@b+2
  1593   00210E  C018  F020         	movff	?___flsub+3,___flmul@b+3
  1594   002112  ECD2  F010         	call	___flmul	;wreg free
  1595   002116  C01D  F03A         	movff	?___flmul,___fldiv@a
  1596   00211A  C01E  F03B         	movff	?___flmul+1,___fldiv@a+1
  1597   00211E  C01F  F03C         	movff	?___flmul+2,___fldiv@a+2
  1598   002122  C020  F03D         	movff	?___flmul+3,___fldiv@a+3
  1599   002126  ECE7  F012         	call	___fldiv	;wreg free
  1600   00212A  C036  F166         	movff	?___fldiv,_main$2682
  1601   00212E  C037  F167         	movff	?___fldiv+1,_main$2682+1
  1602   002132  C038  F168         	movff	?___fldiv+2,_main$2682+2
  1603   002136  C039  F169         	movff	?___fldiv+3,_main$2682+3
  1604   00213A                     
  1605                           ;newmain.c: 122:         sprintf(string3,"Blue:  %f \r",(RGBVal.B-ambientB)/((whiteB-(fl
      +                          oat)ambientB)*(clearRef)));
  1606   00213A  0E28               	movlw	low main@string3
  1607   00213C  0100               	movlb	0	; () banked
  1608   00213E  6FBC               	movwf	sprintf@s& (0+255),b
  1609   002140  0E01               	movlw	high main@string3
  1610   002142  6FBD               	movwf	(sprintf@s+1)& (0+255),b
  1611   002144  0E10               	movlw	low STR_4
  1612   002146  6FBE               	movwf	sprintf@fmt& (0+255),b
  1613   002148  0E0E               	movlw	high STR_4
  1614   00214A  6FBF               	movwf	(sprintf@fmt+1)& (0+255),b
  1615   00214C  C166  F0C0         	movff	_main$2682,?_sprintf+4
  1616   002150  C167  F0C1         	movff	_main$2682+1,?_sprintf+5
  1617   002154  C168  F0C2         	movff	_main$2682+2,?_sprintf+6
  1618   002158  C169  F0C3         	movff	_main$2682+3,?_sprintf+7
  1619   00215C  EC23  F01E         	call	_sprintf	;wreg free
  1620   002160                     
  1621                           ;newmain.c: 123:         TxBufferedString(string3);
  1622   002160  0E28               	movlw	low main@string3
  1623   002162  6E06               	movwf	TxBufferedString@string^0,c
  1624   002164  0E01               	movlw	high main@string3
  1625   002166  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1626   002168  EC32  F020         	call	_TxBufferedString	;wreg free
  1627   00216C                     
  1628                           ;newmain.c: 124:         sendTxBuf();
  1629   00216C  ECDA  F020         	call	_sendTxBuf	;wreg free
  1630   002170                     
  1631                           ;newmain.c: 125:         _delay((unsigned long)((2)*(64000000/4000.0)));
  1632   002170  0E2A               	movlw	42
  1633   002172  0100               	movlb	0	; () banked
  1634   002174  6FD5               	movwf	??_main& (0+255),b
  1635   002176  0E8D               	movlw	141
  1636   002178                     u4857:
  1637   002178  2EE8               	decfsz	wreg,f,c
  1638   00217A  D7FE               	bra	u4857
  1639   00217C  2FD5               	decfsz	??_main& (0+255),f,b
  1640   00217E  D7FC               	bra	u4857
  1641   002180  D000               	nop2	
  1642   002182                     
  1643                           ;newmain.c: 129:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1644   002182  0E52               	movlw	82
  1645   002184  0100               	movlb	0	; () banked
  1646   002186  6FD6               	movwf	(??_main+1)& (0+255),b
  1647   002188  0E2B               	movlw	43
  1648   00218A  6FD5               	movwf	??_main& (0+255),b
  1649   00218C  0E00               	movlw	0
  1650   00218E                     u4867:
  1651   00218E  2EE8               	decfsz	wreg,f,c
  1652   002190  D7FE               	bra	u4867
  1653   002192  2FD5               	decfsz	??_main& (0+255),f,b
  1654   002194  D7FC               	bra	u4867
  1655   002196  2FD6               	decfsz	(??_main+1)& (0+255),f,b
  1656   002198  D7FA               	bra	u4867
  1657   00219A  F000               	nop	
  1658   00219C  EFDD  F00E         	goto	l4903
  1659   0021A0  EF3B  F000         	goto	start
  1660   0021A4                     __end_of_main:
  1661                           	callstack 0
  1662                           
  1663 ;; *************** function _sprintf *****************
  1664 ;; Defined at:
  1665 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;  s               2   92[BANK0 ] PTR unsigned char 
  1668 ;;		 -> ADC2String@buf(40), main@string3(20), main@string2(20), main@string1(20), 
  1669 ;;		 -> main@string4(20), 
  1670 ;;  fmt             2   94[BANK0 ] PTR const unsigned char 
  1671 ;;		 -> STR_5(15), STR_4(12), STR_3(11), STR_2(12), 
  1672 ;;		 -> STR_1(8), 
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;  f              11  106[BANK0 ] struct _IO_FILE
  1675 ;;  ap              2  104[BANK0 ] PTR void [1]
  1676 ;;		 -> ?_sprintf(2), 
  1677 ;;  ret             2    0        int 
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  2   92[BANK0 ] int 
  1680 ;; Registers used:
  1681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1687 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1688 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1690 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1691 ;;Total ram usage:       25 bytes
  1692 ;; Hardware stack levels used: 1
  1693 ;; Hardware stack levels required when called: 9
  1694 ;; This function calls:
  1695 ;;		_vfprintf
  1696 ;; This function is called by:
  1697 ;;		_main
  1698 ;;		_ADC2String
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           	psect	text1
  1703   003C46                     __ptext1:
  1704                           	callstack 0
  1705   003C46                     _sprintf:
  1706                           	callstack 21
  1707   003C46  0EC0               	movlw	low (?_sprintf+4)
  1708   003C48  0100               	movlb	0	; () banked
  1709   003C4A  6FC8               	movwf	sprintf@ap& (0+255),b
  1710   003C4C  0E00               	movlw	high (?_sprintf+4)
  1711   003C4E  6FC9               	movwf	(sprintf@ap+1)& (0+255),b
  1712   003C50  C0BC  F0CA         	movff	sprintf@s,sprintf@f
  1713   003C54  C0BD  F0CB         	movff	sprintf@s+1,sprintf@f+1
  1714   003C58                     
  1715                           ; BSR set to: 0
  1716   003C58  0E00               	movlw	0
  1717   003C5A  6FCE               	movwf	(sprintf@f+4)& (0+255),b
  1718   003C5C  0E00               	movlw	0
  1719   003C5E  6FCD               	movwf	(sprintf@f+3)& (0+255),b
  1720   003C60                     
  1721                           ; BSR set to: 0
  1722   003C60  0E00               	movlw	0
  1723   003C62  6FD4               	movwf	(sprintf@f+10)& (0+255),b
  1724   003C64  0E00               	movlw	0
  1725   003C66  6FD3               	movwf	(sprintf@f+9)& (0+255),b
  1726   003C68                     
  1727                           ; BSR set to: 0
  1728   003C68  0ECA               	movlw	low sprintf@f
  1729   003C6A  6FB4               	movwf	vfprintf@fp& (0+255),b
  1730   003C6C  0E00               	movlw	high sprintf@f
  1731   003C6E  6FB5               	movwf	(vfprintf@fp+1)& (0+255),b
  1732   003C70  C0BE  F0B6         	movff	sprintf@fmt,vfprintf@fmt
  1733   003C74  C0BF  F0B7         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1734   003C78  0EC8               	movlw	low sprintf@ap
  1735   003C7A  6FB8               	movwf	vfprintf@ap& (0+255),b
  1736   003C7C  0E00               	movlw	high sprintf@ap
  1737   003C7E  6FB9               	movwf	(vfprintf@ap+1)& (0+255),b
  1738   003C80  ECF8  F01D         	call	_vfprintf	;wreg free
  1739   003C84  0100               	movlb	0	; () banked
  1740   003C86  51CD               	movf	(sprintf@f+3)& (0+255),w,b
  1741   003C88  25BC               	addwf	sprintf@s& (0+255),w,b
  1742   003C8A  6ED9               	movwf	fsr2l,c
  1743   003C8C  51CE               	movf	(sprintf@f+4)& (0+255),w,b
  1744   003C8E  21BD               	addwfc	(sprintf@s+1)& (0+255),w,b
  1745   003C90  6EDA               	movwf	fsr2h,c
  1746   003C92  0E00               	movlw	0
  1747   003C94  6EDF               	movwf	indf2,c
  1748   003C96                     
  1749                           ; BSR set to: 0
  1750   003C96  0012               	return		;funcret
  1751   003C98                     __end_of_sprintf:
  1752                           	callstack 0
  1753                           
  1754 ;; *************** function _vfprintf *****************
  1755 ;; Defined at:
  1756 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  fp              2   84[BANK0 ] PTR struct _IO_FILE
  1759 ;;		 -> sprintf@f(11), 
  1760 ;;  fmt             2   86[BANK0 ] PTR const unsigned char 
  1761 ;;		 -> STR_5(15), STR_4(12), STR_3(11), STR_2(12), 
  1762 ;;		 -> STR_1(8), 
  1763 ;;  ap              2   88[BANK0 ] PTR PTR void 
  1764 ;;		 -> sprintf@ap(2), 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  cfmt            2   90[BANK0 ] PTR unsigned char 
  1767 ;;		 -> STR_5(15), STR_4(12), STR_3(11), STR_2(12), 
  1768 ;;		 -> STR_1(8), 
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  2   84[BANK0 ] int 
  1771 ;; Registers used:
  1772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1778 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1779 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1781 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1782 ;;Total ram usage:        8 bytes
  1783 ;; Hardware stack levels used: 1
  1784 ;; Hardware stack levels required when called: 8
  1785 ;; This function calls:
  1786 ;;		_vfpfcnvrt
  1787 ;; This function is called by:
  1788 ;;		_sprintf
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792                           	psect	text2
  1793   003BF0                     __ptext2:
  1794                           	callstack 0
  1795   003BF0                     _vfprintf:
  1796                           	callstack 21
  1797   003BF0                     
  1798                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1799   003BF0  C0B6  F0BA         	movff	vfprintf@fmt,vfprintf@cfmt
  1800   003BF4  C0B7  F0BB         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1801                           
  1802                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1803   003BF8  EF0D  F01E         	goto	l4807
  1804   003BFC                     l4805:
  1805                           
  1806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1807   003BFC  C0B4  F0A3         	movff	vfprintf@fp,vfpfcnvrt@fp
  1808   003C00  C0B5  F0A4         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1809   003C04  0EBA               	movlw	low vfprintf@cfmt
  1810   003C06  0100               	movlb	0	; () banked
  1811   003C08  6FA5               	movwf	vfpfcnvrt@fmt& (0+255),b
  1812   003C0A  0E00               	movlw	high vfprintf@cfmt
  1813   003C0C  6FA6               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1814   003C0E  C0B8  F0A7         	movff	vfprintf@ap,vfpfcnvrt@ap
  1815   003C12  C0B9  F0A8         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1816   003C16  ECB4  F014         	call	_vfpfcnvrt	;wreg free
  1817   003C1A                     l4807:
  1818                           
  1819                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1820   003C1A  C0BA  FFF6         	movff	vfprintf@cfmt,tblptrl
  1821   003C1E  C0BB  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1822   003C22                     	if	0	;tblptru may be non-zero
  1823   003C22                     	endif
  1824   003C22                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1825   003C22  0E00               	movlw	low (__mediumconst shr (0+16))
  1826   003C24  6EF8               	movwf	tblptru,c
  1827   003C26                     	endif
  1828   003C26  0008               	tblrd		*
  1829   003C28  50F5               	movf	tablat,w,c
  1830   003C2A  0900               	iorlw	0
  1831   003C2C  A4D8               	btfss	status,2,c
  1832   003C2E  EF1B  F01E         	goto	u4791
  1833   003C32  EF1D  F01E         	goto	u4790
  1834   003C36                     u4791:
  1835   003C36  EFFE  F01D         	goto	l4805
  1836   003C3A                     u4790:
  1837   003C3A                     
  1838                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1839   003C3A  0E00               	movlw	0
  1840   003C3C  0100               	movlb	0	; () banked
  1841   003C3E  6FB5               	movwf	(?_vfprintf+1)& (0+255),b
  1842   003C40  0E00               	movlw	0
  1843   003C42  6FB4               	movwf	?_vfprintf& (0+255),b
  1844   003C44                     
  1845                           ; BSR set to: 0
  1846   003C44  0012               	return		;funcret
  1847   003C46                     __end_of_vfprintf:
  1848                           	callstack 0
  1849                           
  1850 ;; *************** function _vfpfcnvrt *****************
  1851 ;; Defined at:
  1852 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  fp              2   67[BANK0 ] PTR struct _IO_FILE
  1855 ;;		 -> sprintf@f(11), 
  1856 ;;  fmt             2   69[BANK0 ] PTR PTR unsigned char 
  1857 ;;		 -> vfprintf@cfmt(2), 
  1858 ;;  ap              2   71[BANK0 ] PTR PTR void 
  1859 ;;		 -> sprintf@ap(2), 
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;  convarg         8   73[BANK0 ] struct .
  1862 ;;  cp              2   82[BANK0 ] PTR unsigned char 
  1863 ;;		 -> STR_5(15), STR_4(12), STR_3(11), STR_2(12), 
  1864 ;;		 -> STR_1(8), 
  1865 ;;  i               2    0        int 
  1866 ;;  done            2    0        int 
  1867 ;;  c               1   81[BANK0 ] unsigned char 
  1868 ;; Return value:  Size  Location     Type
  1869 ;;                  1    wreg      void 
  1870 ;; Registers used:
  1871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1877 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1878 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1879 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1880 ;;      Totals:         2      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1881 ;;Total ram usage:       19 bytes
  1882 ;; Hardware stack levels used: 1
  1883 ;; Hardware stack levels required when called: 7
  1884 ;; This function calls:
  1885 ;;		_dtoa
  1886 ;;		_efgtoa
  1887 ;;		_fputc
  1888 ;; This function is called by:
  1889 ;;		_vfprintf
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893                           	psect	text3
  1894   002968                     __ptext3:
  1895                           	callstack 0
  1896   002968                     _vfpfcnvrt:
  1897                           	callstack 21
  1898   002968                     
  1899                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1900   002968  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1901   00296C  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1902   002970  CFDE FFF6          	movff	postinc2,tblptrl
  1903   002974  CFDD FFF7          	movff	postdec2,tblptrh
  1904   002978                     	if	0	;tblptru may be non-zero
  1905   002978                     	endif
  1906   002978                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1907   002978  0E00               	movlw	low (__mediumconst shr (0+16))
  1908   00297A  6EF8               	movwf	tblptru,c
  1909   00297C                     	endif
  1910   00297C  0008               	tblrd		*
  1911   00297E  50F5               	movf	tablat,w,c
  1912   002980  0A25               	xorlw	37
  1913   002982  A4D8               	btfss	status,2,c
  1914   002984  EFC6  F014         	goto	u4751
  1915   002988  EFC8  F014         	goto	u4750
  1916   00298C                     u4751:
  1917   00298C  EF20  F016         	goto	l4779
  1918   002990                     u4750:
  1919   002990                     
  1920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1921   002990  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1922   002994  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1923   002998  2ADE               	incf	postinc2,f,c
  1924   00299A  0E00               	movlw	0
  1925   00299C  22DD               	addwfc	postdec2,f,c
  1926   00299E                     
  1927                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1928   00299E  0E00               	movlw	0
  1929   0029A0  0100               	movlb	0	; () banked
  1930   0029A2  6FF4               	movwf	(_width+1)& (0+255),b
  1931   0029A4  0E00               	movlw	0
  1932   0029A6  6FF3               	movwf	_width& (0+255),b
  1933   0029A8  C0F3  F0F7         	movff	_width,_flags
  1934   0029AC                     
  1935                           ; BSR set to: 0
  1936                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1937   0029AC  69F5               	setf	_prec& (0+255),b
  1938   0029AE  69F6               	setf	(_prec+1)& (0+255),b
  1939   0029B0                     
  1940                           ; BSR set to: 0
  1941                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1942   0029B0  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1943   0029B4  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1944   0029B8  CFDE F0B2          	movff	postinc2,vfpfcnvrt@cp
  1945   0029BC  CFDD F0B3          	movff	postdec2,vfpfcnvrt@cp+1
  1946   0029C0                     
  1947                           ; BSR set to: 0
  1948                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1949   0029C0  C0B2  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1950   0029C4  C0B3  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1951   0029C8                     	if	0	;tblptru may be non-zero
  1952   0029C8                     	endif
  1953   0029C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1954   0029C8  0E00               	movlw	low (__mediumconst shr (0+16))
  1955   0029CA  6EF8               	movwf	tblptru,c
  1956   0029CC                     	endif
  1957   0029CC  0008               	tblrd		*
  1958   0029CE  50F5               	movf	tablat,w,c
  1959   0029D0  0A64               	xorlw	100
  1960   0029D2  B4D8               	btfsc	status,2,c
  1961   0029D4  EFEE  F014         	goto	u4761
  1962   0029D8  EFF0  F014         	goto	u4760
  1963   0029DC                     u4761:
  1964   0029DC  EF00  F015         	goto	l4735
  1965   0029E0                     u4760:
  1966   0029E0                     
  1967                           ; BSR set to: 0
  1968   0029E0  C0B2  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1969   0029E4  C0B3  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1970   0029E8                     	if	0	;tblptru may be non-zero
  1971   0029E8                     	endif
  1972   0029E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1973   0029E8  0E00               	movlw	low (__mediumconst shr (0+16))
  1974   0029EA  6EF8               	movwf	tblptru,c
  1975   0029EC                     	endif
  1976   0029EC  0008               	tblrd		*
  1977   0029EE  50F5               	movf	tablat,w,c
  1978   0029F0  0A69               	xorlw	105
  1979   0029F2  A4D8               	btfss	status,2,c
  1980   0029F4  EFFE  F014         	goto	u4771
  1981   0029F8  EF00  F015         	goto	u4770
  1982   0029FC                     u4771:
  1983   0029FC  EF43  F015         	goto	l4741
  1984   002A00                     u4770:
  1985   002A00                     l4735:
  1986                           
  1987                           ; BSR set to: 0
  1988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1989   002A00  C0A7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1990   002A04  C0A8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1991   002A08  CFDF F055          	movff	indf2,??_vfpfcnvrt
  1992   002A0C  0E02               	movlw	2
  1993   002A0E  26DE               	addwf	postinc2,f,c
  1994   002A10  CFDF F056          	movff	indf2,??_vfpfcnvrt+1
  1995   002A14  0E00               	movlw	0
  1996   002A16  22DD               	addwfc	postdec2,f,c
  1997   002A18  C055  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1998   002A1C  C056  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1999   002A20  CFDE F0A9          	movff	postinc2,vfpfcnvrt@convarg
  2000   002A24  CFDD F0AA          	movff	postdec2,vfpfcnvrt@convarg+1
  2001   002A28  0E00               	movlw	0
  2002   002A2A  BFAA               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2003   002A2C  0EFF               	movlw	-1
  2004   002A2E  6FAB               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2005   002A30  6FAC               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2006   002A32  6FAD               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2007   002A34  6FAE               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2008   002A36  6FAF               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2009   002A38  6FB0               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2010                           
  2011                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2012   002A3A  0E01               	movlw	1
  2013   002A3C  25B2               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2014   002A3E  6E55               	movwf	??_vfpfcnvrt^0,c
  2015   002A40  0E00               	movlw	0
  2016   002A42  21B3               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2017   002A44  6E56               	movwf	(??_vfpfcnvrt+1)^0,c
  2018   002A46  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2019   002A4A  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2020   002A4E  C055  FFDE         	movff	??_vfpfcnvrt,postinc2
  2021   002A52  C056  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2022   002A56                     
  2023                           ; BSR set to: 0
  2024                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2025   002A56  C0A3  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  2026   002A5A  C0A4  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2027   002A5E  C0A9  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  2028   002A62  C0AA  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2029   002A66  C0AB  F024         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2030   002A6A  C0AC  F025         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2031   002A6E  C0AD  F026         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2032   002A72  C0AE  F027         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2033   002A76  C0AF  F028         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2034   002A7A  C0B0  F029         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2035   002A7E  EC37  F016         	call	_dtoa	;wreg free
  2036   002A82  EF36  F016         	goto	l1120
  2037   002A86                     l4741:
  2038                           
  2039                           ; BSR set to: 0
  2040                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  2041   002A86  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2042   002A8A  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2043   002A8E  CFDE F0B2          	movff	postinc2,vfpfcnvrt@cp
  2044   002A92  CFDD F0B3          	movff	postdec2,vfpfcnvrt@cp+1
  2045   002A96                     
  2046                           ; BSR set to: 0
  2047                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  2048   002A96  C0B2  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2049   002A9A  C0B3  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2050   002A9E                     	if	0	;tblptru may be non-zero
  2051   002A9E                     	endif
  2052   002A9E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2053   002A9E  0E00               	movlw	low (__mediumconst shr (0+16))
  2054   002AA0  6EF8               	movwf	tblptru,c
  2055   002AA2                     	endif
  2056   002AA2  0008               	tblrd		*
  2057   002AA4  CFF5 F0B1          	movff	tablat,vfpfcnvrt@c
  2058                           
  2059                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  2060   002AA8  EF62  F015         	goto	l4753
  2061   002AAC                     l4745:
  2062                           
  2063                           ; BSR set to: 0
  2064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  2065   002AAC  4BB2               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  2066   002AAE  2BB3               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  2067                           
  2068                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  2069   002AB0  EF7B  F015         	goto	l4755
  2070   002AB4                     l4747:
  2071                           
  2072                           ; BSR set to: 0
  2073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  2074   002AB4  0E6C               	movlw	108
  2075   002AB6  6FB1               	movwf	vfpfcnvrt@c& (0+255),b
  2076                           
  2077                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  2078   002AB8  EF7B  F015         	goto	l4755
  2079   002ABC                     l4749:
  2080                           
  2081                           ; BSR set to: 0
  2082                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  2083   002ABC  0E00               	movlw	0
  2084   002ABE  6FB1               	movwf	vfpfcnvrt@c& (0+255),b
  2085                           
  2086                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  2087   002AC0  EF7B  F015         	goto	l4755
  2088   002AC4                     l4753:
  2089                           
  2090                           ; BSR set to: 0
  2091   002AC4  51B1               	movf	vfpfcnvrt@c& (0+255),w,b
  2092   002AC6  6E55               	movwf	??_vfpfcnvrt^0,c
  2093   002AC8  6A56               	clrf	(??_vfpfcnvrt+1)^0,c
  2094                           
  2095                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2096                           ; Switch size 1, requested type "simple"
  2097                           ; Number of cases is 1, Range of values is 0 to 0
  2098                           ; switch strategies available:
  2099                           ; Name         Instructions Cycles
  2100                           ; simple_byte            4     3 (average)
  2101                           ;	Chosen strategy is simple_byte
  2102   002ACA  5056               	movf	(??_vfpfcnvrt+1)^0,w,c
  2103   002ACC  0A00               	xorlw	0	; case 0
  2104   002ACE  B4D8               	btfsc	status,2,c
  2105   002AD0  EF6C  F015         	goto	l5043
  2106   002AD4  EF5E  F015         	goto	l4749
  2107   002AD8                     l5043:
  2108                           
  2109                           ; BSR set to: 0
  2110                           ; Switch size 1, requested type "simple"
  2111                           ; Number of cases is 3, Range of values is 76 to 108
  2112                           ; switch strategies available:
  2113                           ; Name         Instructions Cycles
  2114                           ; simple_byte           10     6 (average)
  2115                           ;	Chosen strategy is simple_byte
  2116   002AD8  5055               	movf	??_vfpfcnvrt^0,w,c
  2117   002ADA  0A4C               	xorlw	76	; case 76
  2118   002ADC  B4D8               	btfsc	status,2,c
  2119   002ADE  EF56  F015         	goto	l4745
  2120   002AE2  0A2A               	xorlw	42	; case 102
  2121   002AE4  B4D8               	btfsc	status,2,c
  2122   002AE6  EF5A  F015         	goto	l4747
  2123   002AEA  0A0A               	xorlw	10	; case 108
  2124   002AEC  B4D8               	btfsc	status,2,c
  2125   002AEE  EF56  F015         	goto	l4745
  2126   002AF2  EF5E  F015         	goto	l4749
  2127   002AF6                     l4755:
  2128                           
  2129                           ; BSR set to: 0
  2130   002AF6  C0B2  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2131   002AFA  C0B3  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2132   002AFE                     	if	0	;tblptru may be non-zero
  2133   002AFE                     	endif
  2134   002AFE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2135   002AFE  0E00               	movlw	low (__mediumconst shr (0+16))
  2136   002B00  6EF8               	movwf	tblptru,c
  2137   002B02                     	endif
  2138   002B02  0008               	tblrd		*
  2139   002B04  50F5               	movf	tablat,w,c
  2140   002B06  0A66               	xorlw	102
  2141   002B08  A4D8               	btfss	status,2,c
  2142   002B0A  EF89  F015         	goto	u4781
  2143   002B0E  EF8B  F015         	goto	u4780
  2144   002B12                     u4781:
  2145   002B12  EF17  F016         	goto	l4775
  2146   002B16                     u4780:
  2147   002B16  EFC1  F015         	goto	l4763
  2148   002B1A                     l4757:
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2152   002B1A  C0A7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2153   002B1E  C0A8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2154   002B22  CFDF F055          	movff	indf2,??_vfpfcnvrt
  2155   002B26  0E04               	movlw	4
  2156   002B28  26DE               	addwf	postinc2,f,c
  2157   002B2A  CFDF F056          	movff	indf2,??_vfpfcnvrt+1
  2158   002B2E  0E00               	movlw	0
  2159   002B30  22DD               	addwfc	postdec2,f,c
  2160   002B32  C055  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2161   002B36  C056  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2162   002B3A  CFDE F0A9          	movff	postinc2,vfpfcnvrt@convarg
  2163   002B3E  CFDE F0AA          	movff	postinc2,vfpfcnvrt@convarg+1
  2164   002B42  CFDE F0AB          	movff	postinc2,vfpfcnvrt@convarg+2
  2165   002B46  CFDE F0AC          	movff	postinc2,vfpfcnvrt@convarg+3
  2166                           
  2167                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  2168   002B4A  EFD6  F015         	goto	l4765
  2169   002B4E                     l4759:
  2170                           
  2171                           ; BSR set to: 0
  2172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2173   002B4E  C0A7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2174   002B52  C0A8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2175   002B56  CFDF F055          	movff	indf2,??_vfpfcnvrt
  2176   002B5A  0E04               	movlw	4
  2177   002B5C  26DE               	addwf	postinc2,f,c
  2178   002B5E  CFDF F056          	movff	indf2,??_vfpfcnvrt+1
  2179   002B62  0E00               	movlw	0
  2180   002B64  22DD               	addwfc	postdec2,f,c
  2181   002B66  C055  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2182   002B6A  C056  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2183   002B6E  CFDE F0A9          	movff	postinc2,vfpfcnvrt@convarg
  2184   002B72  CFDE F0AA          	movff	postinc2,vfpfcnvrt@convarg+1
  2185   002B76  CFDE F0AB          	movff	postinc2,vfpfcnvrt@convarg+2
  2186   002B7A  CFDE F0AC          	movff	postinc2,vfpfcnvrt@convarg+3
  2187                           
  2188                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  2189   002B7E  EFD6  F015         	goto	l4765
  2190   002B82                     l4763:
  2191                           
  2192                           ; BSR set to: 0
  2193   002B82  51B1               	movf	vfpfcnvrt@c& (0+255),w,b
  2194   002B84  6E55               	movwf	??_vfpfcnvrt^0,c
  2195   002B86  6A56               	clrf	(??_vfpfcnvrt+1)^0,c
  2196                           
  2197                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2198                           ; Switch size 1, requested type "simple"
  2199                           ; Number of cases is 1, Range of values is 0 to 0
  2200                           ; switch strategies available:
  2201                           ; Name         Instructions Cycles
  2202                           ; simple_byte            4     3 (average)
  2203                           ;	Chosen strategy is simple_byte
  2204   002B88  5056               	movf	(??_vfpfcnvrt+1)^0,w,c
  2205   002B8A  0A00               	xorlw	0	; case 0
  2206   002B8C  B4D8               	btfsc	status,2,c
  2207   002B8E  EFCB  F015         	goto	l5045
  2208   002B92  EFD6  F015         	goto	l4765
  2209   002B96                     l5045:
  2210                           
  2211                           ; BSR set to: 0
  2212                           ; Switch size 1, requested type "simple"
  2213                           ; Number of cases is 2, Range of values is 76 to 108
  2214                           ; switch strategies available:
  2215                           ; Name         Instructions Cycles
  2216                           ; simple_byte            7     4 (average)
  2217                           ;	Chosen strategy is simple_byte
  2218   002B96  5055               	movf	??_vfpfcnvrt^0,w,c
  2219   002B98  0A4C               	xorlw	76	; case 76
  2220   002B9A  B4D8               	btfsc	status,2,c
  2221   002B9C  EFA7  F015         	goto	l4759
  2222   002BA0  0A20               	xorlw	32	; case 108
  2223   002BA2  B4D8               	btfsc	status,2,c
  2224   002BA4  EF8D  F015         	goto	l4757
  2225   002BA8  EFD6  F015         	goto	l4765
  2226   002BAC                     l4765:
  2227                           
  2228                           ; BSR set to: 0
  2229                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  2230   002BAC  0E01               	movlw	1
  2231   002BAE  25B2               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2232   002BB0  6E55               	movwf	??_vfpfcnvrt^0,c
  2233   002BB2  0E00               	movlw	0
  2234   002BB4  21B3               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2235   002BB6  6E56               	movwf	(??_vfpfcnvrt+1)^0,c
  2236   002BB8  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2237   002BBC  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2238   002BC0  C055  FFDE         	movff	??_vfpfcnvrt,postinc2
  2239   002BC4  C056  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2240                           
  2241                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  2242   002BC8  EFFF  F015         	goto	l4773
  2243   002BCC                     l4767:
  2244                           
  2245                           ; BSR set to: 0
  2246                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2247   002BCC  C0A3  F070         	movff	vfpfcnvrt@fp,efgtoa@fp
  2248   002BD0  C0A4  F071         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2249   002BD4  C0A9  F072         	movff	vfpfcnvrt@convarg,efgtoa@f
  2250   002BD8  C0AA  F073         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2251   002BDC  C0AB  F074         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2252   002BE0  C0AC  F075         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2253   002BE4  C0B2  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2254   002BE8  C0B3  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2255   002BEC                     	if	0	;tblptru may be non-zero
  2256   002BEC                     	endif
  2257   002BEC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2258   002BEC  0E00               	movlw	low (__mediumconst shr (0+16))
  2259   002BEE  6EF8               	movwf	tblptru,c
  2260   002BF0                     	endif
  2261   002BF0  0008               	tblrd		*
  2262   002BF2  CFF5 F076          	movff	tablat,efgtoa@c
  2263   002BF6  EC22  F007         	call	_efgtoa	;wreg free
  2264   002BFA  EF36  F016         	goto	l1120
  2265   002BFE                     l4773:
  2266                           
  2267                           ; BSR set to: 0
  2268   002BFE  C0B2  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2269   002C02  C0B3  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2270   002C06                     	if	0	;tblptru may be non-zero
  2271   002C06                     	endif
  2272   002C06                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2273   002C06  0E00               	movlw	low (__mediumconst shr (0+16))
  2274   002C08  6EF8               	movwf	tblptru,c
  2275   002C0A                     	endif
  2276   002C0A  0008               	tblrd		*
  2277   002C0C  50F5               	movf	tablat,w,c
  2278   002C0E  6E55               	movwf	??_vfpfcnvrt^0,c
  2279   002C10  6A56               	clrf	(??_vfpfcnvrt+1)^0,c
  2280                           
  2281                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2282                           ; Switch size 1, requested type "simple"
  2283                           ; Number of cases is 1, Range of values is 0 to 0
  2284                           ; switch strategies available:
  2285                           ; Name         Instructions Cycles
  2286                           ; simple_byte            4     3 (average)
  2287                           ;	Chosen strategy is simple_byte
  2288   002C12  5056               	movf	(??_vfpfcnvrt+1)^0,w,c
  2289   002C14  0A00               	xorlw	0	; case 0
  2290   002C16  B4D8               	btfsc	status,2,c
  2291   002C18  EF10  F016         	goto	l5047
  2292   002C1C  EF17  F016         	goto	l4775
  2293   002C20                     l5047:
  2294                           
  2295                           ; BSR set to: 0
  2296                           ; Switch size 1, requested type "simple"
  2297                           ; Number of cases is 1, Range of values is 102 to 102
  2298                           ; switch strategies available:
  2299                           ; Name         Instructions Cycles
  2300                           ; simple_byte            4     3 (average)
  2301                           ;	Chosen strategy is simple_byte
  2302   002C20  5055               	movf	??_vfpfcnvrt^0,w,c
  2303   002C22  0A66               	xorlw	102	; case 102
  2304   002C24  B4D8               	btfsc	status,2,c
  2305   002C26  EFE6  F015         	goto	l4767
  2306   002C2A  EF17  F016         	goto	l4775
  2307   002C2E                     l4775:
  2308                           
  2309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2310   002C2E  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2311   002C32  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2312   002C36  2ADE               	incf	postinc2,f,c
  2313   002C38  0E00               	movlw	0
  2314   002C3A  22DD               	addwfc	postdec2,f,c
  2315   002C3C  EF36  F016         	goto	l1120
  2316   002C40                     l4779:
  2317                           
  2318                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2319   002C40  C0A5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2320   002C44  C0A6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2321   002C48  CFDE FFF6          	movff	postinc2,tblptrl
  2322   002C4C  CFDD FFF7          	movff	postdec2,tblptrh
  2323   002C50                     	if	0	;tblptru may be non-zero
  2324   002C50                     	endif
  2325   002C50                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2326   002C50  0E00               	movlw	low (__mediumconst shr (0+16))
  2327   002C52  6EF8               	movwf	tblptru,c
  2328   002C54                     	endif
  2329   002C54  0008               	tblrd		*
  2330   002C56  50F5               	movf	tablat,w,c
  2331   002C58  6E05               	movwf	fputc@c^0,c
  2332   002C5A  6A06               	clrf	(fputc@c+1)^0,c
  2333   002C5C  C0A3  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2334   002C60  C0A4  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2335   002C64  EC55  F01C         	call	_fputc	;wreg free
  2336   002C68  EF17  F016         	goto	l4775
  2337   002C6C                     l1120:
  2338   002C6C  0012               	return		;funcret
  2339   002C6E                     __end_of_vfpfcnvrt:
  2340                           	callstack 0
  2341                           
  2342 ;; *************** function _efgtoa *****************
  2343 ;; Defined at:
  2344 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  2347 ;;		 -> sprintf@f(11), 
  2348 ;;  f               4   18[BANK0 ] PTR struct _IO_FILE
  2349 ;;  c               1   22[BANK0 ] unsigned char 
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;  u               4   63[BANK0 ] struct flui
  2352 ;;  g               4   57[BANK0 ] struct flui
  2353 ;;  l               4   52[BANK0 ] struct flui
  2354 ;;  h               4   48[BANK0 ] struct flui
  2355 ;;  ou              4   42[BANK0 ] struct flui
  2356 ;;  n               2   61[BANK0 ] int 
  2357 ;;  i               2   46[BANK0 ] int 
  2358 ;;  w               2   40[BANK0 ] int 
  2359 ;;  e               2   38[BANK0 ] int 
  2360 ;;  m               2   36[BANK0 ] int 
  2361 ;;  d               2   34[BANK0 ] int 
  2362 ;;  t               2   27[BANK0 ] int 
  2363 ;;  p               2   25[BANK0 ] int 
  2364 ;;  ne              2   23[BANK0 ] int 
  2365 ;;  sign            1   56[BANK0 ] unsigned char 
  2366 ;;  nmode           1   33[BANK0 ] unsigned char 
  2367 ;;  mode            1   32[BANK0 ] unsigned char 
  2368 ;;  pp              1   31[BANK0 ] unsigned char 
  2369 ;;  esign           1    0        unsigned char 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  1    wreg      void 
  2372 ;; Registers used:
  2373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2379 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2380 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2381 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2382 ;;      Totals:         2      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2383 ;;Total ram usage:       53 bytes
  2384 ;; Hardware stack levels used: 1
  2385 ;; Hardware stack levels required when called: 6
  2386 ;; This function calls:
  2387 ;;		___fladd
  2388 ;;		___fldiv
  2389 ;;		___fleq
  2390 ;;		___flge
  2391 ;;		___flmul
  2392 ;;		___flneg
  2393 ;;		___flsub
  2394 ;;		___fltol
  2395 ;;		___fpclassifyf
  2396 ;;		_floorf
  2397 ;;		_labs
  2398 ;;		_memcpy
  2399 ;;		_pad
  2400 ;;		_strcpy
  2401 ;; This function is called by:
  2402 ;;		_vfpfcnvrt
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           	psect	text4
  2407   000E44                     __ptext4:
  2408                           	callstack 0
  2409   000E44                     _efgtoa:
  2410                           	callstack 21
  2411   000E44                     
  2412                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  2413   000E44  0E00               	movlw	0
  2414   000E46  0100               	movlb	0	; () banked
  2415   000E48  6F98               	movwf	efgtoa@sign& (0+255),b
  2416   000E4A                     
  2417                           ; BSR set to: 0
  2418                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  2419   000E4A  C072  F099         	movff	efgtoa@f,efgtoa@g
  2420   000E4E  C073  F09A         	movff	efgtoa@f+1,efgtoa@g+1
  2421   000E52  C074  F09B         	movff	efgtoa@f+2,efgtoa@g+2
  2422   000E56  C075  F09C         	movff	efgtoa@f+3,efgtoa@g+3
  2423   000E5A                     
  2424                           ; BSR set to: 0
  2425                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  2426   000E5A  BF9C               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2427   000E5C  EF34  F007         	goto	u4430
  2428   000E60  EF32  F007         	goto	u4431
  2429   000E64                     u4431:
  2430   000E64  EF48  F007         	goto	l4509
  2431   000E68                     u4430:
  2432   000E68                     
  2433                           ; BSR set to: 0
  2434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  2435   000E68  0E01               	movlw	1
  2436   000E6A  6F98               	movwf	efgtoa@sign& (0+255),b
  2437   000E6C                     
  2438                           ; BSR set to: 0
  2439                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  2440   000E6C  C099  F005         	movff	efgtoa@g,___flneg@f1
  2441   000E70  C09A  F006         	movff	efgtoa@g+1,___flneg@f1+1
  2442   000E74  C09B  F007         	movff	efgtoa@g+2,___flneg@f1+2
  2443   000E78  C09C  F008         	movff	efgtoa@g+3,___flneg@f1+3
  2444   000E7C  ECE1  F01F         	call	___flneg	;wreg free
  2445   000E80  C005  F099         	movff	?___flneg,efgtoa@g
  2446   000E84  C006  F09A         	movff	?___flneg+1,efgtoa@g+1
  2447   000E88  C007  F09B         	movff	?___flneg+2,efgtoa@g+2
  2448   000E8C  C008  F09C         	movff	?___flneg+3,efgtoa@g+3
  2449   000E90                     l4509:
  2450                           
  2451                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  2452   000E90  0E00               	movlw	0
  2453   000E92  0100               	movlb	0	; () banked
  2454   000E94  6F9E               	movwf	(efgtoa@n+1)& (0+255),b
  2455   000E96  0E00               	movlw	0
  2456   000E98  6F9D               	movwf	efgtoa@n& (0+255),b
  2457   000E9A                     
  2458                           ; BSR set to: 0
  2459                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  2460   000E9A  C0F3  F088         	movff	_width,efgtoa@w
  2461   000E9E  C0F4  F089         	movff	_width+1,efgtoa@w+1
  2462   000EA2                     
  2463                           ; BSR set to: 0
  2464                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  2465   000EA2  5198               	movf	efgtoa@sign& (0+255),w,b
  2466   000EA4  B4D8               	btfsc	status,2,c
  2467   000EA6  EF57  F007         	goto	u4441
  2468   000EAA  EF59  F007         	goto	u4440
  2469   000EAE                     u4441:
  2470   000EAE  EF6D  F007         	goto	l4523
  2471   000EB2                     u4440:
  2472   000EB2                     
  2473                           ; BSR set to: 0
  2474                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  2475   000EB2  5198               	movf	efgtoa@sign& (0+255),w,b
  2476   000EB4  A4D8               	btfss	status,2,c
  2477   000EB6  EF5F  F007         	goto	u4451
  2478   000EBA  EF61  F007         	goto	u4450
  2479   000EBE                     u4451:
  2480   000EBE  EF67  F007         	goto	l4519
  2481   000EC2                     u4450:
  2482   000EC2                     
  2483                           ; BSR set to: 0
  2484   000EC2  0E00               	movlw	0
  2485   000EC4  6F7E               	movwf	(_efgtoa$2337+1)& (0+255),b
  2486   000EC6  0E2B               	movlw	43
  2487   000EC8  6F7D               	movwf	_efgtoa$2337& (0+255),b
  2488   000ECA  EF6B  F007         	goto	l4521
  2489   000ECE                     l4519:
  2490                           
  2491                           ; BSR set to: 0
  2492   000ECE  0E00               	movlw	0
  2493   000ED0  6F7E               	movwf	(_efgtoa$2337+1)& (0+255),b
  2494   000ED2  0E2D               	movlw	45
  2495   000ED4  6F7D               	movwf	_efgtoa$2337& (0+255),b
  2496   000ED6                     l4521:
  2497                           
  2498                           ; BSR set to: 0
  2499   000ED6  C07D  F098         	movff	_efgtoa$2337,efgtoa@sign
  2500   000EDA                     l4523:
  2501                           
  2502                           ; BSR set to: 0
  2503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2504   000EDA  C099  F005         	movff	efgtoa@g,___fpclassifyf@x
  2505   000EDE  C09A  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2506   000EE2  C09B  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2507   000EE6  C09C  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2508   000EEA  ECD6  F01B         	call	___fpclassifyf	;wreg free
  2509   000EEE  0405               	decf	?___fpclassifyf^0,w,c
  2510   000EF0  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2511   000EF2  A4D8               	btfss	status,2,c
  2512   000EF4  EF7E  F007         	goto	u4461
  2513   000EF8  EF80  F007         	goto	u4460
  2514   000EFC                     u4461:
  2515   000EFC  EFB3  F007         	goto	l4541
  2516   000F00                     u4460:
  2517   000F00                     
  2518                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  2519   000F00  0100               	movlb	0	; () banked
  2520   000F02  5198               	movf	efgtoa@sign& (0+255),w,b
  2521   000F04  B4D8               	btfsc	status,2,c
  2522   000F06  EF87  F007         	goto	u4471
  2523   000F0A  EF89  F007         	goto	u4470
  2524   000F0E                     u4471:
  2525   000F0E  EF92  F007         	goto	l4533
  2526   000F12                     u4470:
  2527   000F12                     
  2528                           ; BSR set to: 0
  2529                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  2530   000F12  C098  F176         	movff	efgtoa@sign,_dbuf
  2531   000F16                     
  2532                           ; BSR set to: 0
  2533                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  2534   000F16  0788               	decf	efgtoa@w& (0+255),f,b
  2535   000F18  A0D8               	btfss	status,0,c
  2536   000F1A  0789               	decf	(efgtoa@w+1)& (0+255),f,b
  2537   000F1C                     
  2538                           ; BSR set to: 0
  2539                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  2540   000F1C  0E00               	movlw	0
  2541   000F1E  6F9E               	movwf	(efgtoa@n+1)& (0+255),b
  2542   000F20  0E01               	movlw	1
  2543   000F22  6F9D               	movwf	efgtoa@n& (0+255),b
  2544   000F24                     l4533:
  2545                           
  2546                           ; BSR set to: 0
  2547                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  2548   000F24  0E76               	movlw	low _dbuf
  2549   000F26  259D               	addwf	efgtoa@n& (0+255),w,b
  2550   000F28  6E05               	movwf	strcpy@dest^0,c
  2551   000F2A  0E01               	movlw	high _dbuf
  2552   000F2C  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2553   000F2E  6E06               	movwf	(strcpy@dest+1)^0,c
  2554   000F30  0E3B               	movlw	low STR_6
  2555   000F32  6E07               	movwf	strcpy@src^0,c
  2556   000F34  0E0E               	movlw	high STR_6
  2557   000F36  6E08               	movwf	(strcpy@src+1)^0,c
  2558   000F38  EC5C  F01F         	call	_strcpy	;wreg free
  2559   000F3C                     l4535:
  2560                           
  2561                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2562   000F3C  0100               	movlb	0	; () banked
  2563   000F3E  0EFD               	movlw	253
  2564   000F40  2788               	addwf	efgtoa@w& (0+255),f,b
  2565   000F42  0EFF               	movlw	255
  2566   000F44  2389               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2567   000F46                     
  2568                           ; BSR set to: 0
  2569                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2570   000F46  C070  F015         	movff	efgtoa@fp,pad@fp
  2571   000F4A  C071  F016         	movff	efgtoa@fp+1,pad@fp+1
  2572   000F4E  0E76               	movlw	low _dbuf
  2573   000F50  6E17               	movwf	pad@buf^0,c
  2574   000F52  0E01               	movlw	high _dbuf
  2575   000F54  6E18               	movwf	(pad@buf+1)^0,c
  2576   000F56  C088  F019         	movff	efgtoa@w,pad@p
  2577   000F5A  C089  F01A         	movff	efgtoa@w+1,pad@p+1
  2578   000F5E  EC59  F01D         	call	_pad	;wreg free
  2579   000F62  EF1E  F00C         	goto	l1072
  2580   000F66                     l4541:
  2581                           
  2582                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2583   000F66  C099  F005         	movff	efgtoa@g,___fpclassifyf@x
  2584   000F6A  C09A  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2585   000F6E  C09B  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2586   000F72  C09C  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2587   000F76  ECD6  F01B         	call	___fpclassifyf	;wreg free
  2588   000F7A  5005               	movf	?___fpclassifyf^0,w,c
  2589   000F7C  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2590   000F7E  A4D8               	btfss	status,2,c
  2591   000F80  EFC4  F007         	goto	u4481
  2592   000F84  EFC6  F007         	goto	u4480
  2593   000F88                     u4481:
  2594   000F88  EFE6  F007         	goto	l4559
  2595   000F8C                     u4480:
  2596   000F8C                     
  2597                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  2598   000F8C  0100               	movlb	0	; () banked
  2599   000F8E  5198               	movf	efgtoa@sign& (0+255),w,b
  2600   000F90  B4D8               	btfsc	status,2,c
  2601   000F92  EFCD  F007         	goto	u4491
  2602   000F96  EFCF  F007         	goto	u4490
  2603   000F9A                     u4491:
  2604   000F9A  EFD8  F007         	goto	l4551
  2605   000F9E                     u4490:
  2606   000F9E                     
  2607                           ; BSR set to: 0
  2608                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  2609   000F9E  C098  F176         	movff	efgtoa@sign,_dbuf
  2610   000FA2                     
  2611                           ; BSR set to: 0
  2612                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  2613   000FA2  0788               	decf	efgtoa@w& (0+255),f,b
  2614   000FA4  A0D8               	btfss	status,0,c
  2615   000FA6  0789               	decf	(efgtoa@w+1)& (0+255),f,b
  2616   000FA8                     
  2617                           ; BSR set to: 0
  2618                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  2619   000FA8  0E00               	movlw	0
  2620   000FAA  6F9E               	movwf	(efgtoa@n+1)& (0+255),b
  2621   000FAC  0E01               	movlw	1
  2622   000FAE  6F9D               	movwf	efgtoa@n& (0+255),b
  2623   000FB0                     l4551:
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  2627   000FB0  0E76               	movlw	low _dbuf
  2628   000FB2  259D               	addwf	efgtoa@n& (0+255),w,b
  2629   000FB4  6E05               	movwf	strcpy@dest^0,c
  2630   000FB6  0E01               	movlw	high _dbuf
  2631   000FB8  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2632   000FBA  6E06               	movwf	(strcpy@dest+1)^0,c
  2633   000FBC  0E3F               	movlw	low STR_9
  2634   000FBE  6E07               	movwf	strcpy@src^0,c
  2635   000FC0  0E0E               	movlw	high STR_9
  2636   000FC2  6E08               	movwf	(strcpy@src+1)^0,c
  2637   000FC4  EC5C  F01F         	call	_strcpy	;wreg free
  2638   000FC8  EF9E  F007         	goto	l4535
  2639   000FCC                     l4559:
  2640                           
  2641                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  2642   000FCC  0E00               	movlw	0
  2643   000FCE  0100               	movlb	0	; () banked
  2644   000FD0  6F9F               	movwf	efgtoa@u& (0+255),b
  2645   000FD2  0E00               	movlw	0
  2646   000FD4  6FA0               	movwf	(efgtoa@u+1)& (0+255),b
  2647   000FD6  0E80               	movlw	128
  2648   000FD8  6FA1               	movwf	(efgtoa@u+2)& (0+255),b
  2649   000FDA  0E3F               	movlw	63
  2650   000FDC  6FA2               	movwf	(efgtoa@u+3)& (0+255),b
  2651                           
  2652                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  2653   000FDE  0E00               	movlw	0
  2654   000FE0  6F87               	movwf	(efgtoa@e+1)& (0+255),b
  2655   000FE2  0E00               	movlw	0
  2656   000FE4  6F86               	movwf	efgtoa@e& (0+255),b
  2657   000FE6                     
  2658                           ; BSR set to: 0
  2659                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  2660   000FE6  C099  F005         	movff	efgtoa@g,___fleq@ff1
  2661   000FEA  C09A  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  2662   000FEE  C09B  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  2663   000FF2  C09C  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  2664   000FF6  0E00               	movlw	0
  2665   000FF8  6E09               	movwf	___fleq@ff2^0,c
  2666   000FFA  0E00               	movlw	0
  2667   000FFC  6E0A               	movwf	(___fleq@ff2+1)^0,c
  2668   000FFE  0E00               	movlw	0
  2669   001000  6E0B               	movwf	(___fleq@ff2+2)^0,c
  2670   001002  0E00               	movlw	0
  2671   001004  6E0C               	movwf	(___fleq@ff2+3)^0,c
  2672   001006  ECBA  F01C         	call	___fleq	;wreg free
  2673   00100A  B0D8               	btfsc	status,0,c
  2674   00100C  EF0A  F008         	goto	u4501
  2675   001010  EF0C  F008         	goto	u4500
  2676   001014                     u4501:
  2677   001014  EFEB  F008         	goto	l1075
  2678   001018                     u4500:
  2679   001018  EF19  F008         	goto	l4567
  2680   00101C                     l1077:
  2681                           
  2682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  2683   00101C  C08A  F09F         	movff	efgtoa@ou,efgtoa@u
  2684   001020  C08B  F0A0         	movff	efgtoa@ou+1,efgtoa@u+1
  2685   001024  C08C  F0A1         	movff	efgtoa@ou+2,efgtoa@u+2
  2686   001028  C08D  F0A2         	movff	efgtoa@ou+3,efgtoa@u+3
  2687   00102C                     
  2688                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  2689   00102C  0100               	movlb	0	; () banked
  2690   00102E  4B86               	infsnz	efgtoa@e& (0+255),f,b
  2691   001030  2B87               	incf	(efgtoa@e+1)& (0+255),f,b
  2692   001032                     l4567:
  2693                           
  2694                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2695   001032  C09F  F01D         	movff	efgtoa@u,___flmul@b
  2696   001036  C0A0  F01E         	movff	efgtoa@u+1,___flmul@b+1
  2697   00103A  C0A1  F01F         	movff	efgtoa@u+2,___flmul@b+2
  2698   00103E  C0A2  F020         	movff	efgtoa@u+3,___flmul@b+3
  2699   001042  0E00               	movlw	0
  2700   001044  6E21               	movwf	___flmul@a^0,c
  2701   001046  0E00               	movlw	0
  2702   001048  6E22               	movwf	(___flmul@a+1)^0,c
  2703   00104A  0E20               	movlw	32
  2704   00104C  6E23               	movwf	(___flmul@a+2)^0,c
  2705   00104E  0E41               	movlw	65
  2706   001050  6E24               	movwf	(___flmul@a+3)^0,c
  2707   001052  ECD2  F010         	call	___flmul	;wreg free
  2708   001056  C01D  F08A         	movff	?___flmul,efgtoa@ou
  2709   00105A  C01E  F08B         	movff	?___flmul+1,efgtoa@ou+1
  2710   00105E  C01F  F08C         	movff	?___flmul+2,efgtoa@ou+2
  2711   001062  C020  F08D         	movff	?___flmul+3,efgtoa@ou+3
  2712   001066  0100               	movlb	0	; () banked
  2713   001068  518A               	movf	efgtoa@ou& (0+255),w,b
  2714   00106A  5D99               	subwf	efgtoa@g& (0+255),w,b
  2715   00106C  6E05               	movwf	labs@a^0,c
  2716   00106E  518B               	movf	(efgtoa@ou+1)& (0+255),w,b
  2717   001070  599A               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2718   001072  6E06               	movwf	(labs@a+1)^0,c
  2719   001074  518C               	movf	(efgtoa@ou+2)& (0+255),w,b
  2720   001076  599B               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2721   001078  6E07               	movwf	(labs@a+2)^0,c
  2722   00107A  518D               	movf	(efgtoa@ou+3)& (0+255),w,b
  2723   00107C  599C               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2724   00107E  6E08               	movwf	(labs@a+3)^0,c
  2725   001080  EC96  F01D         	call	_labs	;wreg free
  2726   001084  BE08               	btfsc	(?_labs+3)^0,7,c
  2727   001086  EF50  F008         	goto	u4511
  2728   00108A  5008               	movf	(?_labs+3)^0,w,c
  2729   00108C  1007               	iorwf	(?_labs+2)^0,w,c
  2730   00108E  1006               	iorwf	(?_labs+1)^0,w,c
  2731   001090  E109               	bnz	u4510
  2732   001092  0E02               	movlw	2
  2733   001094  5C05               	subwf	?_labs^0,w,c
  2734   001096  A0D8               	btfss	status,0,c
  2735   001098  EF50  F008         	goto	u4511
  2736   00109C  EF52  F008         	goto	u4510
  2737   0010A0                     u4511:
  2738   0010A0  EF0E  F008         	goto	l1077
  2739   0010A4                     u4510:
  2740   0010A4  C08A  F036         	movff	efgtoa@ou,___flge@ff1
  2741   0010A8  C08B  F037         	movff	efgtoa@ou+1,___flge@ff1+1
  2742   0010AC  C08C  F038         	movff	efgtoa@ou+2,___flge@ff1+2
  2743   0010B0  C08D  F039         	movff	efgtoa@ou+3,___flge@ff1+3
  2744   0010B4  C099  F03A         	movff	efgtoa@g,___flge@ff2
  2745   0010B8  C09A  F03B         	movff	efgtoa@g+1,___flge@ff2+1
  2746   0010BC  C09B  F03C         	movff	efgtoa@g+2,___flge@ff2+2
  2747   0010C0  C09C  F03D         	movff	efgtoa@g+3,___flge@ff2+3
  2748   0010C4  EC54  F01B         	call	___flge	;wreg free
  2749   0010C8  A0D8               	btfss	status,0,c
  2750   0010CA  EF69  F008         	goto	u4521
  2751   0010CE  EF6B  F008         	goto	u4520
  2752   0010D2                     u4521:
  2753   0010D2  EF0E  F008         	goto	l1077
  2754   0010D6                     u4520:
  2755   0010D6                     
  2756                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2757   0010D6  0100               	movlb	0	; () banked
  2758   0010D8  519F               	movf	efgtoa@u& (0+255),w,b
  2759   0010DA  5D99               	subwf	efgtoa@g& (0+255),w,b
  2760   0010DC  6E05               	movwf	labs@a^0,c
  2761   0010DE  51A0               	movf	(efgtoa@u+1)& (0+255),w,b
  2762   0010E0  599A               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2763   0010E2  6E06               	movwf	(labs@a+1)^0,c
  2764   0010E4  51A1               	movf	(efgtoa@u+2)& (0+255),w,b
  2765   0010E6  599B               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2766   0010E8  6E07               	movwf	(labs@a+2)^0,c
  2767   0010EA  51A2               	movf	(efgtoa@u+3)& (0+255),w,b
  2768   0010EC  599C               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2769   0010EE  6E08               	movwf	(labs@a+3)^0,c
  2770   0010F0  EC96  F01D         	call	_labs	;wreg free
  2771   0010F4  BE08               	btfsc	(?_labs+3)^0,7,c
  2772   0010F6  EF8A  F008         	goto	u4530
  2773   0010FA  5008               	movf	(?_labs+3)^0,w,c
  2774   0010FC  1007               	iorwf	(?_labs+2)^0,w,c
  2775   0010FE  1006               	iorwf	(?_labs+1)^0,w,c
  2776   001100  E107               	bnz	u4531
  2777   001102  0E02               	movlw	2
  2778   001104  5C05               	subwf	?_labs^0,w,c
  2779   001106  B0D8               	btfsc	status,0,c
  2780   001108  EF88  F008         	goto	u4531
  2781   00110C  EF8A  F008         	goto	u4530
  2782   001110                     u4531:
  2783   001110  EFD2  F008         	goto	l4585
  2784   001114                     u4530:
  2785   001114                     l4575:
  2786                           
  2787                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  2788   001114  C09F  F099         	movff	efgtoa@u,efgtoa@g
  2789   001118  C0A0  F09A         	movff	efgtoa@u+1,efgtoa@g+1
  2790   00111C  C0A1  F09B         	movff	efgtoa@u+2,efgtoa@g+2
  2791   001120  C0A2  F09C         	movff	efgtoa@u+3,efgtoa@g+3
  2792                           
  2793                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  2794   001124  EFEB  F008         	goto	l1075
  2795   001128                     l4577:
  2796                           
  2797                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  2798   001128  C09F  F036         	movff	efgtoa@u,___fldiv@b
  2799   00112C  C0A0  F037         	movff	efgtoa@u+1,___fldiv@b+1
  2800   001130  C0A1  F038         	movff	efgtoa@u+2,___fldiv@b+2
  2801   001134  C0A2  F039         	movff	efgtoa@u+3,___fldiv@b+3
  2802   001138  0E00               	movlw	0
  2803   00113A  6E3A               	movwf	___fldiv@a^0,c
  2804   00113C  0E00               	movlw	0
  2805   00113E  6E3B               	movwf	(___fldiv@a+1)^0,c
  2806   001140  0E20               	movlw	32
  2807   001142  6E3C               	movwf	(___fldiv@a+2)^0,c
  2808   001144  0E41               	movlw	65
  2809   001146  6E3D               	movwf	(___fldiv@a+3)^0,c
  2810   001148  ECE7  F012         	call	___fldiv	;wreg free
  2811   00114C  C036  F09F         	movff	?___fldiv,efgtoa@u
  2812   001150  C037  F0A0         	movff	?___fldiv+1,efgtoa@u+1
  2813   001154  C038  F0A1         	movff	?___fldiv+2,efgtoa@u+2
  2814   001158  C039  F0A2         	movff	?___fldiv+3,efgtoa@u+3
  2815   00115C                     
  2816                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  2817   00115C  0100               	movlb	0	; () banked
  2818   00115E  0786               	decf	efgtoa@e& (0+255),f,b
  2819   001160  A0D8               	btfss	status,0,c
  2820   001162  0787               	decf	(efgtoa@e+1)& (0+255),f,b
  2821   001164                     
  2822                           ; BSR set to: 0
  2823                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2824   001164  519F               	movf	efgtoa@u& (0+255),w,b
  2825   001166  5D99               	subwf	efgtoa@g& (0+255),w,b
  2826   001168  6E05               	movwf	labs@a^0,c
  2827   00116A  51A0               	movf	(efgtoa@u+1)& (0+255),w,b
  2828   00116C  599A               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2829   00116E  6E06               	movwf	(labs@a+1)^0,c
  2830   001170  51A1               	movf	(efgtoa@u+2)& (0+255),w,b
  2831   001172  599B               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2832   001174  6E07               	movwf	(labs@a+2)^0,c
  2833   001176  51A2               	movf	(efgtoa@u+3)& (0+255),w,b
  2834   001178  599C               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2835   00117A  6E08               	movwf	(labs@a+3)^0,c
  2836   00117C  EC96  F01D         	call	_labs	;wreg free
  2837   001180  BE08               	btfsc	(?_labs+3)^0,7,c
  2838   001182  EFD0  F008         	goto	u4540
  2839   001186  5008               	movf	(?_labs+3)^0,w,c
  2840   001188  1007               	iorwf	(?_labs+2)^0,w,c
  2841   00118A  1006               	iorwf	(?_labs+1)^0,w,c
  2842   00118C  E107               	bnz	u4541
  2843   00118E  0E02               	movlw	2
  2844   001190  5C05               	subwf	?_labs^0,w,c
  2845   001192  B0D8               	btfsc	status,0,c
  2846   001194  EFCE  F008         	goto	u4541
  2847   001198  EFD0  F008         	goto	u4540
  2848   00119C                     u4541:
  2849   00119C  EFD2  F008         	goto	l4585
  2850   0011A0                     u4540:
  2851   0011A0  EF8A  F008         	goto	l4575
  2852   0011A4                     l4585:
  2853                           
  2854                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  2855   0011A4  C099  F036         	movff	efgtoa@g,___flge@ff1
  2856   0011A8  C09A  F037         	movff	efgtoa@g+1,___flge@ff1+1
  2857   0011AC  C09B  F038         	movff	efgtoa@g+2,___flge@ff1+2
  2858   0011B0  C09C  F039         	movff	efgtoa@g+3,___flge@ff1+3
  2859   0011B4  C09F  F03A         	movff	efgtoa@u,___flge@ff2
  2860   0011B8  C0A0  F03B         	movff	efgtoa@u+1,___flge@ff2+1
  2861   0011BC  C0A1  F03C         	movff	efgtoa@u+2,___flge@ff2+2
  2862   0011C0  C0A2  F03D         	movff	efgtoa@u+3,___flge@ff2+3
  2863   0011C4  EC54  F01B         	call	___flge	;wreg free
  2864   0011C8  A0D8               	btfss	status,0,c
  2865   0011CA  EFE9  F008         	goto	u4551
  2866   0011CE  EFEB  F008         	goto	u4550
  2867   0011D2                     u4551:
  2868   0011D2  EF94  F008         	goto	l4577
  2869   0011D6                     u4550:
  2870   0011D6                     l1075:
  2871                           
  2872                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  2873   0011D6  C076  F080         	movff	efgtoa@c,efgtoa@mode
  2874                           
  2875                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  2876   0011DA  C080  F081         	movff	efgtoa@mode,efgtoa@nmode
  2877   0011DE                     
  2878                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  2879   0011DE  0100               	movlb	0	; () banked
  2880   0011E0  BFF6               	btfsc	(_prec+1)& (0+255),7,b
  2881   0011E2  EFF5  F008         	goto	u4561
  2882   0011E6  EFF7  F008         	goto	u4560
  2883   0011EA                     u4561:
  2884   0011EA  EFFD  F008         	goto	l4591
  2885   0011EE                     u4560:
  2886   0011EE                     
  2887                           ; BSR set to: 0
  2888   0011EE  C0F5  F079         	movff	_prec,efgtoa@p
  2889   0011F2  C0F6  F07A         	movff	_prec+1,efgtoa@p+1
  2890   0011F6  EF01  F009         	goto	l4593
  2891   0011FA                     l4591:
  2892                           
  2893                           ; BSR set to: 0
  2894   0011FA  0E00               	movlw	0
  2895   0011FC  6F7A               	movwf	(efgtoa@p+1)& (0+255),b
  2896   0011FE  0E06               	movlw	6
  2897   001200  6F79               	movwf	efgtoa@p& (0+255),b
  2898   001202                     l4593:
  2899                           
  2900                           ; BSR set to: 0
  2901                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  2902   001202  C079  F084         	movff	efgtoa@p,efgtoa@m
  2903   001206  C07A  F085         	movff	efgtoa@p+1,efgtoa@m+1
  2904   00120A                     
  2905                           ; BSR set to: 0
  2906                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  2907   00120A  4B84               	infsnz	efgtoa@m& (0+255),f,b
  2908   00120C  2B85               	incf	(efgtoa@m+1)& (0+255),f,b
  2909   00120E                     
  2910                           ; BSR set to: 0
  2911                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  2912   00120E  0E66               	movlw	102
  2913   001210  1981               	xorwf	efgtoa@nmode& (0+255),w,b
  2914   001212  A4D8               	btfss	status,2,c
  2915   001214  EF0E  F009         	goto	u4571
  2916   001218  EF10  F009         	goto	u4570
  2917   00121C                     u4571:
  2918   00121C  EF30  F009         	goto	l4607
  2919   001220                     u4570:
  2920   001220                     
  2921                           ; BSR set to: 0
  2922                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  2923   001220  BF87               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2924   001222  EF17  F009         	goto	u4580
  2925   001226  EF15  F009         	goto	u4581
  2926   00122A                     u4581:
  2927   00122A  EF23  F009         	goto	l4603
  2928   00122E                     u4580:
  2929   00122E                     
  2930                           ; BSR set to: 0
  2931                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  2932   00122E  0E00               	movlw	0
  2933   001230  6F9F               	movwf	efgtoa@u& (0+255),b
  2934   001232  0E00               	movlw	0
  2935   001234  6FA0               	movwf	(efgtoa@u+1)& (0+255),b
  2936   001236  0E80               	movlw	128
  2937   001238  6FA1               	movwf	(efgtoa@u+2)& (0+255),b
  2938   00123A  0E3F               	movlw	63
  2939   00123C  6FA2               	movwf	(efgtoa@u+3)& (0+255),b
  2940                           
  2941                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  2942   00123E  0E00               	movlw	0
  2943   001240  6F87               	movwf	(efgtoa@e+1)& (0+255),b
  2944   001242  0E00               	movlw	0
  2945   001244  6F86               	movwf	efgtoa@e& (0+255),b
  2946   001246                     l4603:
  2947                           
  2948                           ; BSR set to: 0
  2949                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  2950   001246  0E67               	movlw	103
  2951   001248  1980               	xorwf	efgtoa@mode& (0+255),w,b
  2952   00124A  B4D8               	btfsc	status,2,c
  2953   00124C  EF2A  F009         	goto	u4591
  2954   001250  EF2C  F009         	goto	u4590
  2955   001254                     u4591:
  2956   001254  EF30  F009         	goto	l4607
  2957   001258                     u4590:
  2958   001258                     
  2959                           ; BSR set to: 0
  2960                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  2961   001258  5186               	movf	efgtoa@e& (0+255),w,b
  2962   00125A  2784               	addwf	efgtoa@m& (0+255),f,b
  2963   00125C  5187               	movf	(efgtoa@e+1)& (0+255),w,b
  2964   00125E  2385               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2965   001260                     l4607:
  2966                           
  2967                           ; BSR set to: 0
  2968                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  2969   001260  0E00               	movlw	0
  2970   001262  6F8F               	movwf	(efgtoa@i+1)& (0+255),b
  2971   001264  0E00               	movlw	0
  2972   001266  6F8E               	movwf	efgtoa@i& (0+255),b
  2973   001268                     
  2974                           ; BSR set to: 0
  2975                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  2976   001268  C099  F090         	movff	efgtoa@g,efgtoa@h
  2977   00126C  C09A  F091         	movff	efgtoa@g+1,efgtoa@h+1
  2978   001270  C09B  F092         	movff	efgtoa@g+2,efgtoa@h+2
  2979   001274  C09C  F093         	movff	efgtoa@g+3,efgtoa@h+3
  2980   001278                     
  2981                           ; BSR set to: 0
  2982                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  2983   001278  C09F  F08A         	movff	efgtoa@u,efgtoa@ou
  2984   00127C  C0A0  F08B         	movff	efgtoa@u+1,efgtoa@ou+1
  2985   001280  C0A1  F08C         	movff	efgtoa@u+2,efgtoa@ou+2
  2986   001284  C0A2  F08D         	movff	efgtoa@u+3,efgtoa@ou+3
  2987                           
  2988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2989   001288  EFC1  F009         	goto	l4621
  2990   00128C                     l4613:
  2991                           
  2992                           ; BSR set to: 0
  2993                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  2994   00128C  C090  F036         	movff	efgtoa@h,___fldiv@b
  2995   001290  C091  F037         	movff	efgtoa@h+1,___fldiv@b+1
  2996   001294  C092  F038         	movff	efgtoa@h+2,___fldiv@b+2
  2997   001298  C093  F039         	movff	efgtoa@h+3,___fldiv@b+3
  2998   00129C  C09F  F03A         	movff	efgtoa@u,___fldiv@a
  2999   0012A0  C0A0  F03B         	movff	efgtoa@u+1,___fldiv@a+1
  3000   0012A4  C0A1  F03C         	movff	efgtoa@u+2,___fldiv@a+2
  3001   0012A8  C0A2  F03D         	movff	efgtoa@u+3,___fldiv@a+3
  3002   0012AC  ECE7  F012         	call	___fldiv	;wreg free
  3003   0012B0  C036  F04F         	movff	?___fldiv,floorf@x
  3004   0012B4  C037  F050         	movff	?___fldiv+1,floorf@x+1
  3005   0012B8  C038  F051         	movff	?___fldiv+2,floorf@x+2
  3006   0012BC  C039  F052         	movff	?___fldiv+3,floorf@x+3
  3007   0012C0  EC76  F017         	call	_floorf	;wreg free
  3008   0012C4  C04F  F094         	movff	?_floorf,efgtoa@l
  3009   0012C8  C050  F095         	movff	?_floorf+1,efgtoa@l+1
  3010   0012CC  C051  F096         	movff	?_floorf+2,efgtoa@l+2
  3011   0012D0  C052  F097         	movff	?_floorf+3,efgtoa@l+3
  3012                           
  3013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  3014   0012D4  C094  F005         	movff	efgtoa@l,___fltol@f1
  3015   0012D8  C095  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3016   0012DC  C096  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3017   0012E0  C097  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3018   0012E4  ECD1  F01A         	call	___fltol	;wreg free
  3019   0012E8  C005  F082         	movff	?___fltol,efgtoa@d
  3020   0012EC  C006  F083         	movff	?___fltol+1,efgtoa@d+1
  3021   0012F0                     
  3022                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  3023   0012F0  C090  F015         	movff	efgtoa@h,___flsub@b
  3024   0012F4  C091  F016         	movff	efgtoa@h+1,___flsub@b+1
  3025   0012F8  C092  F017         	movff	efgtoa@h+2,___flsub@b+2
  3026   0012FC  C093  F018         	movff	efgtoa@h+3,___flsub@b+3
  3027   001300  C094  F021         	movff	efgtoa@l,___flmul@a
  3028   001304  C095  F022         	movff	efgtoa@l+1,___flmul@a+1
  3029   001308  C096  F023         	movff	efgtoa@l+2,___flmul@a+2
  3030   00130C  C097  F024         	movff	efgtoa@l+3,___flmul@a+3
  3031   001310  C09F  F01D         	movff	efgtoa@u,___flmul@b
  3032   001314  C0A0  F01E         	movff	efgtoa@u+1,___flmul@b+1
  3033   001318  C0A1  F01F         	movff	efgtoa@u+2,___flmul@b+2
  3034   00131C  C0A2  F020         	movff	efgtoa@u+3,___flmul@b+3
  3035   001320  ECD2  F010         	call	___flmul	;wreg free
  3036   001324  C01D  F019         	movff	?___flmul,___flsub@a
  3037   001328  C01E  F01A         	movff	?___flmul+1,___flsub@a+1
  3038   00132C  C01F  F01B         	movff	?___flmul+2,___flsub@a+2
  3039   001330  C020  F01C         	movff	?___flmul+3,___flsub@a+3
  3040   001334  EC39  F01F         	call	___flsub	;wreg free
  3041   001338  C015  F090         	movff	?___flsub,efgtoa@h
  3042   00133C  C016  F091         	movff	?___flsub+1,efgtoa@h+1
  3043   001340  C017  F092         	movff	?___flsub+2,efgtoa@h+2
  3044   001344  C018  F093         	movff	?___flsub+3,efgtoa@h+3
  3045   001348                     
  3046                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  3047   001348  C09F  F036         	movff	efgtoa@u,___fldiv@b
  3048   00134C  C0A0  F037         	movff	efgtoa@u+1,___fldiv@b+1
  3049   001350  C0A1  F038         	movff	efgtoa@u+2,___fldiv@b+2
  3050   001354  C0A2  F039         	movff	efgtoa@u+3,___fldiv@b+3
  3051   001358  0E00               	movlw	0
  3052   00135A  6E3A               	movwf	___fldiv@a^0,c
  3053   00135C  0E00               	movlw	0
  3054   00135E  6E3B               	movwf	(___fldiv@a+1)^0,c
  3055   001360  0E20               	movlw	32
  3056   001362  6E3C               	movwf	(___fldiv@a+2)^0,c
  3057   001364  0E41               	movlw	65
  3058   001366  6E3D               	movwf	(___fldiv@a+3)^0,c
  3059   001368  ECE7  F012         	call	___fldiv	;wreg free
  3060   00136C  C036  F09F         	movff	?___fldiv,efgtoa@u
  3061   001370  C037  F0A0         	movff	?___fldiv+1,efgtoa@u+1
  3062   001374  C038  F0A1         	movff	?___fldiv+2,efgtoa@u+2
  3063   001378  C039  F0A2         	movff	?___fldiv+3,efgtoa@u+3
  3064   00137C                     
  3065                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  3066   00137C  0100               	movlb	0	; () banked
  3067   00137E  4B8E               	infsnz	efgtoa@i& (0+255),f,b
  3068   001380  2B8F               	incf	(efgtoa@i+1)& (0+255),f,b
  3069   001382                     l4621:
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3073   001382  5184               	movf	efgtoa@m& (0+255),w,b
  3074   001384  5D8E               	subwf	efgtoa@i& (0+255),w,b
  3075   001386  518F               	movf	(efgtoa@i+1)& (0+255),w,b
  3076   001388  0A80               	xorlw	128
  3077   00138A  6E53               	movwf	??_efgtoa^0,c
  3078   00138C  5185               	movf	(efgtoa@m+1)& (0+255),w,b
  3079   00138E  0A80               	xorlw	128
  3080   001390  5853               	subwfb	??_efgtoa^0,w,c
  3081   001392  A0D8               	btfss	status,0,c
  3082   001394  EFCE  F009         	goto	u4601
  3083   001398  EFD0  F009         	goto	u4600
  3084   00139C                     u4601:
  3085   00139C  EF46  F009         	goto	l4613
  3086   0013A0                     u4600:
  3087   0013A0                     
  3088                           ; BSR set to: 0
  3089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  3090   0013A0  C09F  F01D         	movff	efgtoa@u,___flmul@b
  3091   0013A4  C0A0  F01E         	movff	efgtoa@u+1,___flmul@b+1
  3092   0013A8  C0A1  F01F         	movff	efgtoa@u+2,___flmul@b+2
  3093   0013AC  C0A2  F020         	movff	efgtoa@u+3,___flmul@b+3
  3094   0013B0  0E00               	movlw	0
  3095   0013B2  6E21               	movwf	___flmul@a^0,c
  3096   0013B4  0E00               	movlw	0
  3097   0013B6  6E22               	movwf	(___flmul@a+1)^0,c
  3098   0013B8  0EA0               	movlw	160
  3099   0013BA  6E23               	movwf	(___flmul@a+2)^0,c
  3100   0013BC  0E40               	movlw	64
  3101   0013BE  6E24               	movwf	(___flmul@a+3)^0,c
  3102   0013C0  ECD2  F010         	call	___flmul	;wreg free
  3103   0013C4  C01D  F094         	movff	?___flmul,efgtoa@l
  3104   0013C8  C01E  F095         	movff	?___flmul+1,efgtoa@l+1
  3105   0013CC  C01F  F096         	movff	?___flmul+2,efgtoa@l+2
  3106   0013D0  C020  F097         	movff	?___flmul+3,efgtoa@l+3
  3107   0013D4                     
  3108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  3109   0013D4  C090  F036         	movff	efgtoa@h,___flge@ff1
  3110   0013D8  C091  F037         	movff	efgtoa@h+1,___flge@ff1+1
  3111   0013DC  C092  F038         	movff	efgtoa@h+2,___flge@ff1+2
  3112   0013E0  C093  F039         	movff	efgtoa@h+3,___flge@ff1+3
  3113   0013E4  C094  F03A         	movff	efgtoa@l,___flge@ff2
  3114   0013E8  C095  F03B         	movff	efgtoa@l+1,___flge@ff2+1
  3115   0013EC  C096  F03C         	movff	efgtoa@l+2,___flge@ff2+2
  3116   0013F0  C097  F03D         	movff	efgtoa@l+3,___flge@ff2+3
  3117   0013F4  EC54  F01B         	call	___flge	;wreg free
  3118   0013F8  B0D8               	btfsc	status,0,c
  3119   0013FA  EF01  F00A         	goto	u4611
  3120   0013FE  EF03  F00A         	goto	u4610
  3121   001402                     u4611:
  3122   001402  EF0E  F00A         	goto	l4629
  3123   001406                     u4610:
  3124   001406                     
  3125                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  3126   001406  0E00               	movlw	0
  3127   001408  0100               	movlb	0	; () banked
  3128   00140A  6F94               	movwf	efgtoa@l& (0+255),b
  3129   00140C  0E00               	movlw	0
  3130   00140E  6F95               	movwf	(efgtoa@l+1)& (0+255),b
  3131   001410  0E00               	movlw	0
  3132   001412  6F96               	movwf	(efgtoa@l+2)& (0+255),b
  3133   001414  0E00               	movlw	0
  3134   001416  6F97               	movwf	(efgtoa@l+3)& (0+255),b
  3135                           
  3136                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  3137   001418  EF37  F00A         	goto	l4635
  3138   00141C                     l4629:
  3139                           
  3140                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  3141   00141C  C090  F005         	movff	efgtoa@h,___fleq@ff1
  3142   001420  C091  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  3143   001424  C092  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  3144   001428  C093  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  3145   00142C  C094  F009         	movff	efgtoa@l,___fleq@ff2
  3146   001430  C095  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  3147   001434  C096  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  3148   001438  C097  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  3149   00143C  ECBA  F01C         	call	___fleq	;wreg free
  3150   001440  A0D8               	btfss	status,0,c
  3151   001442  EF25  F00A         	goto	u4621
  3152   001446  EF27  F00A         	goto	u4620
  3153   00144A                     u4621:
  3154   00144A  EF37  F00A         	goto	l4635
  3155   00144E                     u4620:
  3156   00144E  0100               	movlb	0	; () banked
  3157   001450  B182               	btfsc	efgtoa@d& (0+255),0,b
  3158   001452  EF2D  F00A         	goto	u4631
  3159   001456  EF2F  F00A         	goto	u4630
  3160   00145A                     u4631:
  3161   00145A  EF37  F00A         	goto	l4635
  3162   00145E                     u4630:
  3163   00145E                     
  3164                           ; BSR set to: 0
  3165                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  3166   00145E  0E00               	movlw	0
  3167   001460  6F94               	movwf	efgtoa@l& (0+255),b
  3168   001462  0E00               	movlw	0
  3169   001464  6F95               	movwf	(efgtoa@l+1)& (0+255),b
  3170   001466  0E00               	movlw	0
  3171   001468  6F96               	movwf	(efgtoa@l+2)& (0+255),b
  3172   00146A  0E00               	movlw	0
  3173   00146C  6F97               	movwf	(efgtoa@l+3)& (0+255),b
  3174   00146E                     l4635:
  3175                           
  3176                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  3177   00146E  C099  F005         	movff	efgtoa@g,___fladd@b
  3178   001472  C09A  F006         	movff	efgtoa@g+1,___fladd@b+1
  3179   001476  C09B  F007         	movff	efgtoa@g+2,___fladd@b+2
  3180   00147A  C09C  F008         	movff	efgtoa@g+3,___fladd@b+3
  3181   00147E  C094  F009         	movff	efgtoa@l,___fladd@a
  3182   001482  C095  F00A         	movff	efgtoa@l+1,___fladd@a+1
  3183   001486  C096  F00B         	movff	efgtoa@l+2,___fladd@a+2
  3184   00148A  C097  F00C         	movff	efgtoa@l+3,___fladd@a+3
  3185   00148E  EC1F  F00C         	call	___fladd	;wreg free
  3186   001492  C005  F090         	movff	?___fladd,efgtoa@h
  3187   001496  C006  F091         	movff	?___fladd+1,efgtoa@h+1
  3188   00149A  C007  F092         	movff	?___fladd+2,efgtoa@h+2
  3189   00149E  C008  F093         	movff	?___fladd+3,efgtoa@h+3
  3190   0014A2                     
  3191                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  3192   0014A2  C090  F036         	movff	efgtoa@h,___flge@ff1
  3193   0014A6  C091  F037         	movff	efgtoa@h+1,___flge@ff1+1
  3194   0014AA  C092  F038         	movff	efgtoa@h+2,___flge@ff1+2
  3195   0014AE  C093  F039         	movff	efgtoa@h+3,___flge@ff1+3
  3196   0014B2  0E00               	movlw	0
  3197   0014B4  6E21               	movwf	___flmul@a^0,c
  3198   0014B6  0E00               	movlw	0
  3199   0014B8  6E22               	movwf	(___flmul@a+1)^0,c
  3200   0014BA  0E20               	movlw	32
  3201   0014BC  6E23               	movwf	(___flmul@a+2)^0,c
  3202   0014BE  0E41               	movlw	65
  3203   0014C0  6E24               	movwf	(___flmul@a+3)^0,c
  3204   0014C2  C08A  F01D         	movff	efgtoa@ou,___flmul@b
  3205   0014C6  C08B  F01E         	movff	efgtoa@ou+1,___flmul@b+1
  3206   0014CA  C08C  F01F         	movff	efgtoa@ou+2,___flmul@b+2
  3207   0014CE  C08D  F020         	movff	efgtoa@ou+3,___flmul@b+3
  3208   0014D2  ECD2  F010         	call	___flmul	;wreg free
  3209   0014D6  C01D  F03A         	movff	?___flmul,___flge@ff2
  3210   0014DA  C01E  F03B         	movff	?___flmul+1,___flge@ff2+1
  3211   0014DE  C01F  F03C         	movff	?___flmul+2,___flge@ff2+2
  3212   0014E2  C020  F03D         	movff	?___flmul+3,___flge@ff2+3
  3213   0014E6  EC54  F01B         	call	___flge	;wreg free
  3214   0014EA  A0D8               	btfss	status,0,c
  3215   0014EC  EF7A  F00A         	goto	u4641
  3216   0014F0  EF7C  F00A         	goto	u4640
  3217   0014F4                     u4641:
  3218   0014F4  EFA5  F00A         	goto	l4647
  3219   0014F8                     u4640:
  3220   0014F8                     
  3221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  3222   0014F8  0100               	movlb	0	; () banked
  3223   0014FA  4B86               	infsnz	efgtoa@e& (0+255),f,b
  3224   0014FC  2B87               	incf	(efgtoa@e+1)& (0+255),f,b
  3225   0014FE                     
  3226                           ; BSR set to: 0
  3227                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  3228   0014FE  C08A  F01D         	movff	efgtoa@ou,___flmul@b
  3229   001502  C08B  F01E         	movff	efgtoa@ou+1,___flmul@b+1
  3230   001506  C08C  F01F         	movff	efgtoa@ou+2,___flmul@b+2
  3231   00150A  C08D  F020         	movff	efgtoa@ou+3,___flmul@b+3
  3232   00150E  0E00               	movlw	0
  3233   001510  6E21               	movwf	___flmul@a^0,c
  3234   001512  0E00               	movlw	0
  3235   001514  6E22               	movwf	(___flmul@a+1)^0,c
  3236   001516  0E20               	movlw	32
  3237   001518  6E23               	movwf	(___flmul@a+2)^0,c
  3238   00151A  0E41               	movlw	65
  3239   00151C  6E24               	movwf	(___flmul@a+3)^0,c
  3240   00151E  ECD2  F010         	call	___flmul	;wreg free
  3241   001522  C01D  F08A         	movff	?___flmul,efgtoa@ou
  3242   001526  C01E  F08B         	movff	?___flmul+1,efgtoa@ou+1
  3243   00152A  C01F  F08C         	movff	?___flmul+2,efgtoa@ou+2
  3244   00152E  C020  F08D         	movff	?___flmul+3,efgtoa@ou+3
  3245   001532                     
  3246                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  3247   001532  0E66               	movlw	102
  3248   001534  0100               	movlb	0	; () banked
  3249   001536  1981               	xorwf	efgtoa@nmode& (0+255),w,b
  3250   001538  A4D8               	btfss	status,2,c
  3251   00153A  EFA1  F00A         	goto	u4651
  3252   00153E  EFA3  F00A         	goto	u4650
  3253   001542                     u4651:
  3254   001542  EFA5  F00A         	goto	l4647
  3255   001546                     u4650:
  3256   001546                     
  3257                           ; BSR set to: 0
  3258                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  3259   001546  4B84               	infsnz	efgtoa@m& (0+255),f,b
  3260   001548  2B85               	incf	(efgtoa@m+1)& (0+255),f,b
  3261   00154A                     l4647:
  3262                           
  3263                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  3264   00154A  C08A  F09F         	movff	efgtoa@ou,efgtoa@u
  3265   00154E  C08B  F0A0         	movff	efgtoa@ou+1,efgtoa@u+1
  3266   001552  C08C  F0A1         	movff	efgtoa@ou+2,efgtoa@u+2
  3267   001556  C08D  F0A2         	movff	efgtoa@ou+3,efgtoa@u+3
  3268   00155A                     
  3269                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  3270   00155A  C086  F077         	movff	efgtoa@e,efgtoa@ne
  3271   00155E  C087  F078         	movff	efgtoa@e+1,efgtoa@ne+1
  3272   001562                     
  3273                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  3274   001562  0E00               	movlw	0
  3275   001564  0100               	movlb	0	; () banked
  3276   001566  6F7F               	movwf	efgtoa@pp& (0+255),b
  3277   001568                     
  3278                           ; BSR set to: 0
  3279                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  3280   001568  0E00               	movlw	0
  3281   00156A  6F7C               	movwf	(efgtoa@t+1)& (0+255),b
  3282   00156C  0E00               	movlw	0
  3283   00156E  6F7B               	movwf	efgtoa@t& (0+255),b
  3284   001570                     
  3285                           ; BSR set to: 0
  3286                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  3287   001570  0E00               	movlw	0
  3288   001572  6F8F               	movwf	(efgtoa@i+1)& (0+255),b
  3289   001574  0E00               	movlw	0
  3290   001576  6F8E               	movwf	efgtoa@i& (0+255),b
  3291                           
  3292                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3293   001578  EFA3  F00B         	goto	l4697
  3294   00157C                     l4657:
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  3298   00157C  C090  F036         	movff	efgtoa@h,___fldiv@b
  3299   001580  C091  F037         	movff	efgtoa@h+1,___fldiv@b+1
  3300   001584  C092  F038         	movff	efgtoa@h+2,___fldiv@b+2
  3301   001588  C093  F039         	movff	efgtoa@h+3,___fldiv@b+3
  3302   00158C  C09F  F03A         	movff	efgtoa@u,___fldiv@a
  3303   001590  C0A0  F03B         	movff	efgtoa@u+1,___fldiv@a+1
  3304   001594  C0A1  F03C         	movff	efgtoa@u+2,___fldiv@a+2
  3305   001598  C0A2  F03D         	movff	efgtoa@u+3,___fldiv@a+3
  3306   00159C  ECE7  F012         	call	___fldiv	;wreg free
  3307   0015A0  C036  F04F         	movff	?___fldiv,floorf@x
  3308   0015A4  C037  F050         	movff	?___fldiv+1,floorf@x+1
  3309   0015A8  C038  F051         	movff	?___fldiv+2,floorf@x+2
  3310   0015AC  C039  F052         	movff	?___fldiv+3,floorf@x+3
  3311   0015B0  EC76  F017         	call	_floorf	;wreg free
  3312   0015B4  C04F  F094         	movff	?_floorf,efgtoa@l
  3313   0015B8  C050  F095         	movff	?_floorf+1,efgtoa@l+1
  3314   0015BC  C051  F096         	movff	?_floorf+2,efgtoa@l+2
  3315   0015C0  C052  F097         	movff	?_floorf+3,efgtoa@l+3
  3316                           
  3317                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3318   0015C4  C094  F005         	movff	efgtoa@l,___fltol@f1
  3319   0015C8  C095  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3320   0015CC  C096  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3321   0015D0  C097  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3322   0015D4  ECD1  F01A         	call	___fltol	;wreg free
  3323   0015D8  BE06               	btfsc	(?___fltol+1)^0,7,c
  3324   0015DA  EFFA  F00A         	goto	u4660
  3325   0015DE  5006               	movf	(?___fltol+1)^0,w,c
  3326   0015E0  E107               	bnz	u4661
  3327   0015E2  0E0A               	movlw	10
  3328   0015E4  5C05               	subwf	?___fltol^0,w,c
  3329   0015E6  B0D8               	btfsc	status,0,c
  3330   0015E8  EFF8  F00A         	goto	u4661
  3331   0015EC  EFFA  F00A         	goto	u4660
  3332   0015F0                     u4661:
  3333   0015F0  EF0A  F00B         	goto	l4661
  3334   0015F4                     u4660:
  3335   0015F4  C094  F005         	movff	efgtoa@l,___fltol@f1
  3336   0015F8  C095  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3337   0015FC  C096  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3338   001600  C097  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3339   001604  ECD1  F01A         	call	___fltol	;wreg free
  3340   001608  C005  F082         	movff	?___fltol,efgtoa@d
  3341   00160C  C006  F083         	movff	?___fltol+1,efgtoa@d+1
  3342   001610  EF0F  F00B         	goto	l1105
  3343   001614                     l4661:
  3344   001614  0E00               	movlw	0
  3345   001616  0100               	movlb	0	; () banked
  3346   001618  6F83               	movwf	(efgtoa@d+1)& (0+255),b
  3347   00161A  0E09               	movlw	9
  3348   00161C  6F82               	movwf	efgtoa@d& (0+255),b
  3349   00161E                     l1105:
  3350                           
  3351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  3352   00161E  0100               	movlb	0	; () banked
  3353   001620  517F               	movf	efgtoa@pp& (0+255),w,b
  3354   001622  A4D8               	btfss	status,2,c
  3355   001624  EF16  F00B         	goto	u4671
  3356   001628  EF18  F00B         	goto	u4670
  3357   00162C                     u4671:
  3358   00162C  EF40  F00B         	goto	l4681
  3359   001630                     u4670:
  3360   001630                     
  3361                           ; BSR set to: 0
  3362   001630  BF78               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3363   001632  EF1F  F00B         	goto	u4680
  3364   001636  EF1D  F00B         	goto	u4681
  3365   00163A                     u4681:
  3366   00163A  EF40  F00B         	goto	l4681
  3367   00163E                     u4680:
  3368   00163E                     
  3369                           ; BSR set to: 0
  3370                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  3371   00163E  0E76               	movlw	low _dbuf
  3372   001640  259D               	addwf	efgtoa@n& (0+255),w,b
  3373   001642  6ED9               	movwf	fsr2l,c
  3374   001644  0E01               	movlw	high _dbuf
  3375   001646  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3376   001648  6EDA               	movwf	fsr2h,c
  3377   00164A  0E2E               	movlw	46
  3378   00164C  6EDF               	movwf	indf2,c
  3379   00164E                     
  3380                           ; BSR set to: 0
  3381   00164E  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  3382   001650  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  3383   001652                     
  3384                           ; BSR set to: 0
  3385                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  3386   001652  0788               	decf	efgtoa@w& (0+255),f,b
  3387   001654  A0D8               	btfss	status,0,c
  3388   001656  0789               	decf	(efgtoa@w+1)& (0+255),f,b
  3389   001658                     
  3390                           ; BSR set to: 0
  3391                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  3392   001658  0E01               	movlw	1
  3393   00165A  6F7F               	movwf	efgtoa@pp& (0+255),b
  3394   00165C  EF40  F00B         	goto	l4681
  3395   001660                     l4673:
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  3399   001660  0E76               	movlw	low _dbuf
  3400   001662  259D               	addwf	efgtoa@n& (0+255),w,b
  3401   001664  6ED9               	movwf	fsr2l,c
  3402   001666  0E01               	movlw	high _dbuf
  3403   001668  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3404   00166A  6EDA               	movwf	fsr2h,c
  3405   00166C  0E30               	movlw	48
  3406   00166E  6EDF               	movwf	indf2,c
  3407   001670                     
  3408                           ; BSR set to: 0
  3409   001670  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  3410   001672  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  3411   001674                     
  3412                           ; BSR set to: 0
  3413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  3414   001674  0788               	decf	efgtoa@w& (0+255),f,b
  3415   001676  A0D8               	btfss	status,0,c
  3416   001678  0789               	decf	(efgtoa@w+1)& (0+255),f,b
  3417   00167A                     
  3418                           ; BSR set to: 0
  3419                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  3420   00167A  077B               	decf	efgtoa@t& (0+255),f,b
  3421   00167C  A0D8               	btfss	status,0,c
  3422   00167E  077C               	decf	(efgtoa@t+1)& (0+255),f,b
  3423   001680                     l4681:
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  3427   001680  517B               	movf	efgtoa@t& (0+255),w,b
  3428   001682  117C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3429   001684  A4D8               	btfss	status,2,c
  3430   001686  EF47  F00B         	goto	u4691
  3431   00168A  EF49  F00B         	goto	u4690
  3432   00168E                     u4691:
  3433   00168E  EF30  F00B         	goto	l4673
  3434   001692                     u4690:
  3435   001692                     
  3436                           ; BSR set to: 0
  3437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3438   001692  0E76               	movlw	low _dbuf
  3439   001694  259D               	addwf	efgtoa@n& (0+255),w,b
  3440   001696  6ED9               	movwf	fsr2l,c
  3441   001698  0E01               	movlw	high _dbuf
  3442   00169A  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3443   00169C  6EDA               	movwf	fsr2h,c
  3444   00169E  5182               	movf	efgtoa@d& (0+255),w,b
  3445   0016A0  0F30               	addlw	48
  3446   0016A2  6EDF               	movwf	indf2,c
  3447   0016A4                     
  3448                           ; BSR set to: 0
  3449   0016A4  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  3450   0016A6  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  3451   0016A8                     
  3452                           ; BSR set to: 0
  3453                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  3454   0016A8  0788               	decf	efgtoa@w& (0+255),f,b
  3455   0016AA  A0D8               	btfss	status,0,c
  3456   0016AC  0789               	decf	(efgtoa@w+1)& (0+255),f,b
  3457   0016AE                     
  3458                           ; BSR set to: 0
  3459                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  3460   0016AE  C090  F015         	movff	efgtoa@h,___flsub@b
  3461   0016B2  C091  F016         	movff	efgtoa@h+1,___flsub@b+1
  3462   0016B6  C092  F017         	movff	efgtoa@h+2,___flsub@b+2
  3463   0016BA  C093  F018         	movff	efgtoa@h+3,___flsub@b+3
  3464   0016BE  C094  F021         	movff	efgtoa@l,___flmul@a
  3465   0016C2  C095  F022         	movff	efgtoa@l+1,___flmul@a+1
  3466   0016C6  C096  F023         	movff	efgtoa@l+2,___flmul@a+2
  3467   0016CA  C097  F024         	movff	efgtoa@l+3,___flmul@a+3
  3468   0016CE  C09F  F01D         	movff	efgtoa@u,___flmul@b
  3469   0016D2  C0A0  F01E         	movff	efgtoa@u+1,___flmul@b+1
  3470   0016D6  C0A1  F01F         	movff	efgtoa@u+2,___flmul@b+2
  3471   0016DA  C0A2  F020         	movff	efgtoa@u+3,___flmul@b+3
  3472   0016DE  ECD2  F010         	call	___flmul	;wreg free
  3473   0016E2  C01D  F019         	movff	?___flmul,___flsub@a
  3474   0016E6  C01E  F01A         	movff	?___flmul+1,___flsub@a+1
  3475   0016EA  C01F  F01B         	movff	?___flmul+2,___flsub@a+2
  3476   0016EE  C020  F01C         	movff	?___flmul+3,___flsub@a+3
  3477   0016F2  EC39  F01F         	call	___flsub	;wreg free
  3478   0016F6  C015  F090         	movff	?___flsub,efgtoa@h
  3479   0016FA  C016  F091         	movff	?___flsub+1,efgtoa@h+1
  3480   0016FE  C017  F092         	movff	?___flsub+2,efgtoa@h+2
  3481   001702  C018  F093         	movff	?___flsub+3,efgtoa@h+3
  3482   001706                     
  3483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  3484   001706  C09F  F036         	movff	efgtoa@u,___fldiv@b
  3485   00170A  C0A0  F037         	movff	efgtoa@u+1,___fldiv@b+1
  3486   00170E  C0A1  F038         	movff	efgtoa@u+2,___fldiv@b+2
  3487   001712  C0A2  F039         	movff	efgtoa@u+3,___fldiv@b+3
  3488   001716  0E00               	movlw	0
  3489   001718  6E3A               	movwf	___fldiv@a^0,c
  3490   00171A  0E00               	movlw	0
  3491   00171C  6E3B               	movwf	(___fldiv@a+1)^0,c
  3492   00171E  0E20               	movlw	32
  3493   001720  6E3C               	movwf	(___fldiv@a+2)^0,c
  3494   001722  0E41               	movlw	65
  3495   001724  6E3D               	movwf	(___fldiv@a+3)^0,c
  3496   001726  ECE7  F012         	call	___fldiv	;wreg free
  3497   00172A  C036  F09F         	movff	?___fldiv,efgtoa@u
  3498   00172E  C037  F0A0         	movff	?___fldiv+1,efgtoa@u+1
  3499   001732  C038  F0A1         	movff	?___fldiv+2,efgtoa@u+2
  3500   001736  C039  F0A2         	movff	?___fldiv+3,efgtoa@u+3
  3501   00173A                     
  3502                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  3503   00173A  0100               	movlb	0	; () banked
  3504   00173C  0777               	decf	efgtoa@ne& (0+255),f,b
  3505   00173E  A0D8               	btfss	status,0,c
  3506   001740  0778               	decf	(efgtoa@ne+1)& (0+255),f,b
  3507   001742                     
  3508                           ; BSR set to: 0
  3509                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  3510   001742  4B8E               	infsnz	efgtoa@i& (0+255),f,b
  3511   001744  2B8F               	incf	(efgtoa@i+1)& (0+255),f,b
  3512   001746                     l4697:
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3516   001746  5184               	movf	efgtoa@m& (0+255),w,b
  3517   001748  5D8E               	subwf	efgtoa@i& (0+255),w,b
  3518   00174A  518F               	movf	(efgtoa@i+1)& (0+255),w,b
  3519   00174C  0A80               	xorlw	128
  3520   00174E  6E53               	movwf	??_efgtoa^0,c
  3521   001750  5185               	movf	(efgtoa@m+1)& (0+255),w,b
  3522   001752  0A80               	xorlw	128
  3523   001754  5853               	subwfb	??_efgtoa^0,w,c
  3524   001756  B0D8               	btfsc	status,0,c
  3525   001758  EFB0  F00B         	goto	u4701
  3526   00175C  EFB2  F00B         	goto	u4700
  3527   001760                     u4701:
  3528   001760  EFC0  F00B         	goto	l4701
  3529   001764                     u4700:
  3530   001764                     
  3531                           ; BSR set to: 0
  3532   001764  BF9E               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3533   001766  EFBE  F00B         	goto	u4711
  3534   00176A  519E               	movf	(efgtoa@n+1)& (0+255),w,b
  3535   00176C  E109               	bnz	u4710
  3536   00176E  0E4B               	movlw	75
  3537   001770  5D9D               	subwf	efgtoa@n& (0+255),w,b
  3538   001772  A0D8               	btfss	status,0,c
  3539   001774  EFBE  F00B         	goto	u4711
  3540   001778  EFC0  F00B         	goto	u4710
  3541   00177C                     u4711:
  3542   00177C  EFBE  F00A         	goto	l4657
  3543   001780                     u4710:
  3544   001780                     l4701:
  3545                           
  3546                           ; BSR set to: 0
  3547                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  3548   001780  0E00               	movlw	0
  3549   001782  6F8F               	movwf	(efgtoa@i+1)& (0+255),b
  3550   001784  0E4F               	movlw	79
  3551   001786  6F8E               	movwf	efgtoa@i& (0+255),b
  3552   001788                     
  3553                           ; BSR set to: 0
  3554                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  3555   001788  0E76               	movlw	low _dbuf
  3556   00178A  258E               	addwf	efgtoa@i& (0+255),w,b
  3557   00178C  6ED9               	movwf	fsr2l,c
  3558   00178E  0E01               	movlw	high _dbuf
  3559   001790  218F               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3560   001792  6EDA               	movwf	fsr2h,c
  3561   001794  0E00               	movlw	0
  3562   001796  6EDF               	movwf	indf2,c
  3563   001798                     
  3564                           ; BSR set to: 0
  3565                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3566   001798  0E76               	movlw	low _dbuf
  3567   00179A  6E53               	movwf	??_efgtoa^0,c
  3568   00179C  0E01               	movlw	high _dbuf
  3569   00179E  6E54               	movwf	(??_efgtoa+1)^0,c
  3570   0017A0  519D               	movf	efgtoa@n& (0+255),w,b
  3571   0017A2  5E53               	subwf	??_efgtoa^0,f,c
  3572   0017A4  519E               	movf	(efgtoa@n+1)& (0+255),w,b
  3573   0017A6  5A54               	subwfb	(??_efgtoa+1)^0,f,c
  3574   0017A8  518E               	movf	efgtoa@i& (0+255),w,b
  3575   0017AA  2453               	addwf	??_efgtoa^0,w,c
  3576   0017AC  6E05               	movwf	memcpy@d1^0,c
  3577   0017AE  518F               	movf	(efgtoa@i+1)& (0+255),w,b
  3578   0017B0  2054               	addwfc	(??_efgtoa+1)^0,w,c
  3579   0017B2  6E06               	movwf	(memcpy@d1+1)^0,c
  3580   0017B4  0E76               	movlw	low _dbuf
  3581   0017B6  6E07               	movwf	memcpy@s1^0,c
  3582   0017B8  0E01               	movlw	high _dbuf
  3583   0017BA  6E08               	movwf	(memcpy@s1+1)^0,c
  3584   0017BC  C09D  F009         	movff	efgtoa@n,memcpy@n
  3585   0017C0  C09E  F00A         	movff	efgtoa@n+1,memcpy@n+1
  3586   0017C4  EC4C  F01E         	call	_memcpy	;wreg free
  3587   0017C8                     
  3588                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  3589   0017C8  0100               	movlb	0	; () banked
  3590   0017CA  519D               	movf	efgtoa@n& (0+255),w,b
  3591   0017CC  5D8E               	subwf	efgtoa@i& (0+255),w,b
  3592   0017CE  6F9D               	movwf	efgtoa@n& (0+255),b
  3593   0017D0  519E               	movf	(efgtoa@n+1)& (0+255),w,b
  3594   0017D2  598F               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3595   0017D4  6F9E               	movwf	(efgtoa@n+1)& (0+255),b
  3596   0017D6                     
  3597                           ; BSR set to: 0
  3598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  3599   0017D6  5198               	movf	efgtoa@sign& (0+255),w,b
  3600   0017D8  A4D8               	btfss	status,2,c
  3601   0017DA  EFF1  F00B         	goto	u4721
  3602   0017DE  EFF4  F00B         	goto	u4720
  3603   0017E2                     u4721:
  3604   0017E2  0E01               	movlw	1
  3605   0017E4  EFF5  F00B         	goto	u4730
  3606   0017E8                     u4720:
  3607   0017E8  0E00               	movlw	0
  3608   0017EA                     u4730:
  3609   0017EA  6F8E               	movwf	efgtoa@i& (0+255),b
  3610   0017EC  6B8F               	clrf	(efgtoa@i+1)& (0+255),b
  3611   0017EE                     
  3612                           ; BSR set to: 0
  3613                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  3614   0017EE  5198               	movf	efgtoa@sign& (0+255),w,b
  3615   0017F0  B4D8               	btfsc	status,2,c
  3616   0017F2  EFFD  F00B         	goto	u4741
  3617   0017F6  EFFF  F00B         	goto	u4740
  3618   0017FA                     u4741:
  3619   0017FA  EF0A  F00C         	goto	l4715
  3620   0017FE                     u4740:
  3621   0017FE                     
  3622                           ; BSR set to: 0
  3623                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  3624   0017FE  079D               	decf	efgtoa@n& (0+255),f,b
  3625   001800  A0D8               	btfss	status,0,c
  3626   001802  079E               	decf	(efgtoa@n+1)& (0+255),f,b
  3627   001804  0E76               	movlw	low _dbuf
  3628   001806  259D               	addwf	efgtoa@n& (0+255),w,b
  3629   001808  6ED9               	movwf	fsr2l,c
  3630   00180A  0E01               	movlw	high _dbuf
  3631   00180C  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3632   00180E  6EDA               	movwf	fsr2h,c
  3633   001810  C098  FFDF         	movff	efgtoa@sign,indf2
  3634   001814                     l4715:
  3635                           
  3636                           ; BSR set to: 0
  3637                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  3638   001814  518E               	movf	efgtoa@i& (0+255),w,b
  3639   001816  5F88               	subwf	efgtoa@w& (0+255),f,b
  3640   001818  518F               	movf	(efgtoa@i+1)& (0+255),w,b
  3641   00181A  5B89               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3642   00181C                     
  3643                           ; BSR set to: 0
  3644                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3645   00181C  C070  F015         	movff	efgtoa@fp,pad@fp
  3646   001820  C071  F016         	movff	efgtoa@fp+1,pad@fp+1
  3647   001824  0E76               	movlw	low _dbuf
  3648   001826  259D               	addwf	efgtoa@n& (0+255),w,b
  3649   001828  6E17               	movwf	pad@buf^0,c
  3650   00182A  0E01               	movlw	high _dbuf
  3651   00182C  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3652   00182E  6E18               	movwf	(pad@buf+1)^0,c
  3653   001830  C088  F019         	movff	efgtoa@w,pad@p
  3654   001834  C089  F01A         	movff	efgtoa@w+1,pad@p+1
  3655   001838  EC59  F01D         	call	_pad	;wreg free
  3656   00183C                     l1072:
  3657   00183C  0012               	return		;funcret
  3658   00183E                     __end_of_efgtoa:
  3659                           	callstack 0
  3660                           
  3661 ;; *************** function _strcpy *****************
  3662 ;; Defined at:
  3663 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  dest            2    4[COMRAM] PTR unsigned char 
  3666 ;;		 -> dbuf(80), 
  3667 ;;  src             2    6[COMRAM] PTR const unsigned char 
  3668 ;;		 -> STR_9(4), STR_6(4), 
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;  d               2   10[COMRAM] PTR unsigned char 
  3671 ;;		 -> dbuf(80), 
  3672 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3673 ;;		 -> STR_9(4), STR_6(4), 
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  2    4[COMRAM] PTR unsigned char 
  3676 ;; Registers used:
  3677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3683 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3684 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3686 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3687 ;;Total ram usage:        8 bytes
  3688 ;; Hardware stack levels used: 1
  3689 ;; Hardware stack levels required when called: 2
  3690 ;; This function calls:
  3691 ;;		Nothing
  3692 ;; This function is called by:
  3693 ;;		_efgtoa
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           	psect	text5
  3698   003EB8                     __ptext5:
  3699                           	callstack 0
  3700   003EB8                     _strcpy:
  3701                           	callstack 24
  3702   003EB8  C007  F009         	movff	strcpy@src,strcpy@s
  3703   003EBC  C008  F00A         	movff	strcpy@src+1,strcpy@s+1
  3704   003EC0  C005  F00B         	movff	strcpy@dest,strcpy@d
  3705   003EC4  C006  F00C         	movff	strcpy@dest+1,strcpy@d+1
  3706   003EC8                     l3577:
  3707   003EC8  C009  FFF6         	movff	strcpy@s,tblptrl
  3708   003ECC  C00A  FFF7         	movff	strcpy@s+1,tblptrh
  3709   003ED0  4A09               	infsnz	strcpy@s^0,f,c
  3710   003ED2  2A0A               	incf	(strcpy@s+1)^0,f,c
  3711   003ED4                     	if	0	;tblptru may be non-zero
  3712   003ED4                     	endif
  3713   003ED4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3714   003ED4  0E00               	movlw	low (__mediumconst shr (0+16))
  3715   003ED6  6EF8               	movwf	tblptru,c
  3716   003ED8                     	endif
  3717   003ED8  C00B  FFD9         	movff	strcpy@d,fsr2l
  3718   003EDC  C00C  FFDA         	movff	strcpy@d+1,fsr2h
  3719   003EE0  4A0B               	infsnz	strcpy@d^0,f,c
  3720   003EE2  2A0C               	incf	(strcpy@d+1)^0,f,c
  3721   003EE4  0008               	tblrd		*
  3722   003EE6  CFF5 FFDF          	movff	tablat,indf2
  3723   003EEA  50DF               	movf	indf2,w,c
  3724   003EEC  A4D8               	btfss	status,2,c
  3725   003EEE  EF7B  F01F         	goto	u3451
  3726   003EF2  EF7D  F01F         	goto	u3450
  3727   003EF6                     u3451:
  3728   003EF6  EF64  F01F         	goto	l3577
  3729   003EFA                     u3450:
  3730   003EFA  0012               	return		;funcret
  3731   003EFC                     __end_of_strcpy:
  3732                           	callstack 0
  3733                           
  3734 ;; *************** function _memcpy *****************
  3735 ;; Defined at:
  3736 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  3737 ;; Parameters:    Size  Location     Type
  3738 ;;  d1              2    4[COMRAM] PTR void 
  3739 ;;		 -> dbuf(80), 
  3740 ;;  s1              2    6[COMRAM] PTR const void 
  3741 ;;		 -> dbuf(80), 
  3742 ;;  n               2    8[COMRAM] unsigned int 
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;  s               2   12[COMRAM] PTR const unsigned char 
  3745 ;;		 -> dbuf(80), 
  3746 ;;  d               2   10[COMRAM] PTR unsigned char 
  3747 ;;		 -> dbuf(80), 
  3748 ;;  tmp             1   14[COMRAM] unsigned char 
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  2    4[COMRAM] PTR void 
  3751 ;; Registers used:
  3752 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3758 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3759 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3761 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3762 ;;Total ram usage:       11 bytes
  3763 ;; Hardware stack levels used: 1
  3764 ;; Hardware stack levels required when called: 2
  3765 ;; This function calls:
  3766 ;;		Nothing
  3767 ;; This function is called by:
  3768 ;;		_efgtoa
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772                           	psect	text6
  3773   003C98                     __ptext6:
  3774                           	callstack 0
  3775   003C98                     _memcpy:
  3776                           	callstack 24
  3777   003C98  C007  F00D         	movff	memcpy@s1,memcpy@s
  3778   003C9C  C008  F00E         	movff	memcpy@s1+1,memcpy@s+1
  3779   003CA0  C005  F00B         	movff	memcpy@d1,memcpy@d
  3780   003CA4  C006  F00C         	movff	memcpy@d1+1,memcpy@d+1
  3781   003CA8  EF66  F01E         	goto	l3621
  3782   003CAC                     l3613:
  3783   003CAC  C00D  FFD9         	movff	memcpy@s,fsr2l
  3784   003CB0  C00E  FFDA         	movff	memcpy@s+1,fsr2h
  3785   003CB4  50DF               	movf	indf2,w,c
  3786   003CB6  6E0F               	movwf	memcpy@tmp^0,c
  3787   003CB8  4A0D               	infsnz	memcpy@s^0,f,c
  3788   003CBA  2A0E               	incf	(memcpy@s+1)^0,f,c
  3789   003CBC  C00B  FFD9         	movff	memcpy@d,fsr2l
  3790   003CC0  C00C  FFDA         	movff	memcpy@d+1,fsr2h
  3791   003CC4  C00F  FFDF         	movff	memcpy@tmp,indf2
  3792   003CC8  4A0B               	infsnz	memcpy@d^0,f,c
  3793   003CCA  2A0C               	incf	(memcpy@d+1)^0,f,c
  3794   003CCC                     l3621:
  3795   003CCC  0609               	decf	memcpy@n^0,f,c
  3796   003CCE  A0D8               	btfss	status,0,c
  3797   003CD0  060A               	decf	(memcpy@n+1)^0,f,c
  3798   003CD2  2809               	incf	memcpy@n^0,w,c
  3799   003CD4  E106               	bnz	u3571
  3800   003CD6  280A               	incf	(memcpy@n+1)^0,w,c
  3801   003CD8  A4D8               	btfss	status,2,c
  3802   003CDA  EF71  F01E         	goto	u3571
  3803   003CDE  EF73  F01E         	goto	u3570
  3804   003CE2                     u3571:
  3805   003CE2  EF56  F01E         	goto	l3613
  3806   003CE6                     u3570:
  3807   003CE6  0012               	return		;funcret
  3808   003CE8                     __end_of_memcpy:
  3809                           	callstack 0
  3810                           
  3811 ;; *************** function _labs *****************
  3812 ;; Defined at:
  3813 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;  a               4    4[COMRAM] long 
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;		None
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  4    4[COMRAM] long 
  3820 ;; Registers used:
  3821 ;;		wreg, status,2, status,0
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3827 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3829 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3830 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3831 ;;Total ram usage:        8 bytes
  3832 ;; Hardware stack levels used: 1
  3833 ;; Hardware stack levels required when called: 2
  3834 ;; This function calls:
  3835 ;;		Nothing
  3836 ;; This function is called by:
  3837 ;;		_efgtoa
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841                           	psect	text7
  3842   003B2C                     __ptext7:
  3843                           	callstack 0
  3844   003B2C                     _labs:
  3845                           	callstack 24
  3846   003B2C  BE08               	btfsc	(labs@a+3)^0,7,c
  3847   003B2E  EFA5  F01D         	goto	u3460
  3848   003B32  5008               	movf	(labs@a+3)^0,w,c
  3849   003B34  1007               	iorwf	(labs@a+2)^0,w,c
  3850   003B36  1006               	iorwf	(labs@a+1)^0,w,c
  3851   003B38  E106               	bnz	u3461
  3852   003B3A  0405               	decf	labs@a^0,w,c
  3853   003B3C  B0D8               	btfsc	status,0,c
  3854   003B3E  EFA3  F01D         	goto	u3461
  3855   003B42  EFA5  F01D         	goto	u3460
  3856   003B46                     u3461:
  3857   003B46  EFC0  F01D         	goto	l1177
  3858   003B4A                     u3460:
  3859   003B4A  C005  F009         	movff	labs@a,??_labs
  3860   003B4E  C006  F00A         	movff	labs@a+1,??_labs+1
  3861   003B52  C007  F00B         	movff	labs@a+2,??_labs+2
  3862   003B56  C008  F00C         	movff	labs@a+3,??_labs+3
  3863   003B5A  1E09               	comf	??_labs^0,f,c
  3864   003B5C  1E0A               	comf	(??_labs+1)^0,f,c
  3865   003B5E  1E0B               	comf	(??_labs+2)^0,f,c
  3866   003B60  1E0C               	comf	(??_labs+3)^0,f,c
  3867   003B62  2A09               	incf	??_labs^0,f,c
  3868   003B64  0E00               	movlw	0
  3869   003B66  220A               	addwfc	(??_labs+1)^0,f,c
  3870   003B68  220B               	addwfc	(??_labs+2)^0,f,c
  3871   003B6A  220C               	addwfc	(??_labs+3)^0,f,c
  3872   003B6C  C009  F005         	movff	??_labs,?_labs
  3873   003B70  C00A  F006         	movff	??_labs+1,?_labs+1
  3874   003B74  C00B  F007         	movff	??_labs+2,?_labs+2
  3875   003B78  C00C  F008         	movff	??_labs+3,?_labs+3
  3876   003B7C  EFC8  F01D         	goto	l1180
  3877   003B80                     l1177:
  3878   003B80  C005  F005         	movff	labs@a,?_labs
  3879   003B84  C006  F006         	movff	labs@a+1,?_labs+1
  3880   003B88  C007  F007         	movff	labs@a+2,?_labs+2
  3881   003B8C  C008  F008         	movff	labs@a+3,?_labs+3
  3882   003B90                     l1180:
  3883   003B90  0012               	return		;funcret
  3884   003B92                     __end_of_labs:
  3885                           	callstack 0
  3886                           
  3887 ;; *************** function _floorf *****************
  3888 ;; Defined at:
  3889 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;  x               4   78[COMRAM] float 
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;  u               4   12[BANK0 ] struct .
  3894 ;;  m               4    6[BANK0 ] unsigned long 
  3895 ;;  e               2   10[BANK0 ] int 
  3896 ;; Return value:  Size  Location     Type
  3897 ;;                  4   78[COMRAM] float 
  3898 ;; Registers used:
  3899 ;;		wreg, status,2, status,0
  3900 ;; Tracked objects:
  3901 ;;		On entry : 0/0
  3902 ;;		On exit  : 0/0
  3903 ;;		Unchanged: 0/0
  3904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3905 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3906 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3907 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3908 ;;      Totals:         4      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3909 ;;Total ram usage:       20 bytes
  3910 ;; Hardware stack levels used: 1
  3911 ;; Hardware stack levels required when called: 2
  3912 ;; This function calls:
  3913 ;;		Nothing
  3914 ;; This function is called by:
  3915 ;;		_efgtoa
  3916 ;; This function uses a non-reentrant model
  3917 ;;
  3918                           
  3919                           	psect	text8
  3920   002EEC                     __ptext8:
  3921                           	callstack 0
  3922   002EEC                     _floorf:
  3923                           	callstack 24
  3924   002EEC  C0EB  F06C         	movff	floorf@F526,floorf@u
  3925   002EF0  C0EC  F06D         	movff	floorf@F526+1,floorf@u+1
  3926   002EF4  C0ED  F06E         	movff	floorf@F526+2,floorf@u+2
  3927   002EF8  C0EE  F06F         	movff	floorf@F526+3,floorf@u+3
  3928   002EFC  C04F  F06C         	movff	floorf@x,floorf@u
  3929   002F00  C050  F06D         	movff	floorf@x+1,floorf@u+1
  3930   002F04  C051  F06E         	movff	floorf@x+2,floorf@u+2
  3931   002F08  C052  F06F         	movff	floorf@x+3,floorf@u+3
  3932   002F0C  0E81               	movlw	129
  3933   002F0E  0100               	movlb	0	; () banked
  3934   002F10  6F60               	movwf	??_floorf& (0+255),b
  3935   002F12  0EFF               	movlw	255
  3936   002F14  6F61               	movwf	(??_floorf+1)& (0+255),b
  3937   002F16  C06C  F062         	movff	floorf@u,??_floorf+2
  3938   002F1A  C06D  F063         	movff	floorf@u+1,??_floorf+3
  3939   002F1E  C06E  F064         	movff	floorf@u+2,??_floorf+4
  3940   002F22  C06F  F065         	movff	floorf@u+3,??_floorf+5
  3941   002F26  0E18               	movlw	24
  3942   002F28  EF9B  F017         	goto	u4330
  3943   002F2C                     u4335:
  3944   002F2C  90D8               	bcf	status,0,c
  3945   002F2E  3365               	rrcf	(??_floorf+5)& (0+255),f,b
  3946   002F30  3364               	rrcf	(??_floorf+4)& (0+255),f,b
  3947   002F32  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  3948   002F34  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  3949   002F36                     u4330:
  3950   002F36  2EE8               	decfsz	wreg,f,c
  3951   002F38  EF96  F017         	goto	u4335
  3952   002F3C  5162               	movf	(??_floorf+2)& (0+255),w,b
  3953   002F3E  2560               	addwf	??_floorf& (0+255),w,b
  3954   002F40  6F6A               	movwf	floorf@e& (0+255),b
  3955   002F42  0E00               	movlw	0
  3956   002F44  2161               	addwfc	(??_floorf+1)& (0+255),w,b
  3957   002F46  6F6B               	movwf	(floorf@e+1)& (0+255),b
  3958   002F48  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
  3959   002F4A  EFB0  F017         	goto	u4341
  3960   002F4E  516B               	movf	(floorf@e+1)& (0+255),w,b
  3961   002F50  E109               	bnz	u4340
  3962   002F52  0E17               	movlw	23
  3963   002F54  5D6A               	subwf	floorf@e& (0+255),w,b
  3964   002F56  A0D8               	btfss	status,0,c
  3965   002F58  EFB0  F017         	goto	u4341
  3966   002F5C  EFB2  F017         	goto	u4340
  3967   002F60                     u4341:
  3968   002F60  EFBC  F017         	goto	l4477
  3969   002F64                     u4340:
  3970   002F64                     l4475:
  3971                           
  3972                           ; BSR set to: 0
  3973   002F64  C04F  F04F         	movff	floorf@x,?_floorf
  3974   002F68  C050  F050         	movff	floorf@x+1,?_floorf+1
  3975   002F6C  C051  F051         	movff	floorf@x+2,?_floorf+2
  3976   002F70  C052  F052         	movff	floorf@x+3,?_floorf+3
  3977   002F74  EF80  F018         	goto	l1166
  3978   002F78                     l4477:
  3979                           
  3980                           ; BSR set to: 0
  3981   002F78  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
  3982   002F7A  EFC1  F017         	goto	u4351
  3983   002F7E  EFC3  F017         	goto	u4350
  3984   002F82                     u4351:
  3985   002F82  EF34  F018         	goto	l4487
  3986   002F86                     u4350:
  3987   002F86                     
  3988                           ; BSR set to: 0
  3989   002F86  C06A  F060         	movff	floorf@e,??_floorf
  3990   002F8A  0EFF               	movlw	255
  3991   002F8C  6F61               	movwf	(??_floorf+1)& (0+255),b
  3992   002F8E  0EFF               	movlw	255
  3993   002F90  6F62               	movwf	(??_floorf+2)& (0+255),b
  3994   002F92  0E7F               	movlw	127
  3995   002F94  6F63               	movwf	(??_floorf+3)& (0+255),b
  3996   002F96  0E00               	movlw	0
  3997   002F98  6F64               	movwf	(??_floorf+4)& (0+255),b
  3998   002F9A                     u4365:
  3999   002F9A  6760               	tstfsz	??_floorf& (0+255),b
  4000   002F9C  EFD2  F017         	goto	u4366
  4001   002FA0  EFDA  F017         	goto	u4367
  4002   002FA4                     u4366:
  4003   002FA4  3564               	rlcf	(??_floorf+4)& (0+255),w,b
  4004   002FA6  3364               	rrcf	(??_floorf+4)& (0+255),f,b
  4005   002FA8  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4006   002FAA  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4007   002FAC  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  4008   002FAE  2F60               	decfsz	??_floorf& (0+255),f,b
  4009   002FB0  EFCD  F017         	goto	u4365
  4010   002FB4                     u4367:
  4011   002FB4  C061  F066         	movff	??_floorf+1,floorf@m
  4012   002FB8  C062  F067         	movff	??_floorf+2,floorf@m+1
  4013   002FBC  C063  F068         	movff	??_floorf+3,floorf@m+2
  4014   002FC0  C064  F069         	movff	??_floorf+4,floorf@m+3
  4015   002FC4  0100               	movlb	0	; () banked
  4016   002FC6  5166               	movf	floorf@m& (0+255),w,b
  4017   002FC8  156C               	andwf	floorf@u& (0+255),w,b
  4018   002FCA  6F60               	movwf	??_floorf& (0+255),b
  4019   002FCC  5167               	movf	(floorf@m+1)& (0+255),w,b
  4020   002FCE  156D               	andwf	(floorf@u+1)& (0+255),w,b
  4021   002FD0  6F61               	movwf	(??_floorf+1)& (0+255),b
  4022   002FD2  5168               	movf	(floorf@m+2)& (0+255),w,b
  4023   002FD4  156E               	andwf	(floorf@u+2)& (0+255),w,b
  4024   002FD6  6F62               	movwf	(??_floorf+2)& (0+255),b
  4025   002FD8  5169               	movf	(floorf@m+3)& (0+255),w,b
  4026   002FDA  156F               	andwf	(floorf@u+3)& (0+255),w,b
  4027   002FDC  6F63               	movwf	(??_floorf+3)& (0+255),b
  4028   002FDE  5160               	movf	??_floorf& (0+255),w,b
  4029   002FE0  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  4030   002FE2  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  4031   002FE4  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  4032   002FE6  A4D8               	btfss	status,2,c
  4033   002FE8  EFF8  F017         	goto	u4371
  4034   002FEC  EFFA  F017         	goto	u4370
  4035   002FF0                     u4371:
  4036   002FF0  EFFC  F017         	goto	l4483
  4037   002FF4                     u4370:
  4038   002FF4  EFB2  F017         	goto	l4475
  4039   002FF8                     l4483:
  4040                           
  4041                           ; BSR set to: 0
  4042   002FF8  C06C  F060         	movff	floorf@u,??_floorf
  4043   002FFC  C06D  F061         	movff	floorf@u+1,??_floorf+1
  4044   003000  C06E  F062         	movff	floorf@u+2,??_floorf+2
  4045   003004  C06F  F063         	movff	floorf@u+3,??_floorf+3
  4046   003008  0E20               	movlw	32
  4047   00300A  EF0C  F018         	goto	u4380
  4048   00300E                     u4385:
  4049   00300E  90D8               	bcf	status,0,c
  4050   003010  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4051   003012  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4052   003014  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  4053   003016  3360               	rrcf	??_floorf& (0+255),f,b
  4054   003018                     u4380:
  4055   003018  2EE8               	decfsz	wreg,f,c
  4056   00301A  EF07  F018         	goto	u4385
  4057   00301E  5160               	movf	??_floorf& (0+255),w,b
  4058   003020  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  4059   003022  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  4060   003024  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  4061   003026  B4D8               	btfsc	status,2,c
  4062   003028  EF18  F018         	goto	u4391
  4063   00302C  EF1A  F018         	goto	u4390
  4064   003030                     u4391:
  4065   003030  EF22  F018         	goto	l1169
  4066   003034                     u4390:
  4067   003034                     
  4068                           ; BSR set to: 0
  4069   003034  5166               	movf	floorf@m& (0+255),w,b
  4070   003036  276C               	addwf	floorf@u& (0+255),f,b
  4071   003038  5167               	movf	(floorf@m+1)& (0+255),w,b
  4072   00303A  236D               	addwfc	(floorf@u+1)& (0+255),f,b
  4073   00303C  5168               	movf	(floorf@m+2)& (0+255),w,b
  4074   00303E  236E               	addwfc	(floorf@u+2)& (0+255),f,b
  4075   003040  5169               	movf	(floorf@m+3)& (0+255),w,b
  4076   003042  236F               	addwfc	(floorf@u+3)& (0+255),f,b
  4077   003044                     l1169:
  4078                           
  4079                           ; BSR set to: 0
  4080   003044  1D66               	comf	floorf@m& (0+255),w,b
  4081   003046  6F60               	movwf	??_floorf& (0+255),b
  4082   003048  1D67               	comf	(floorf@m+1)& (0+255),w,b
  4083   00304A  6F61               	movwf	(??_floorf+1)& (0+255),b
  4084   00304C  1D68               	comf	(floorf@m+2)& (0+255),w,b
  4085   00304E  6F62               	movwf	(??_floorf+2)& (0+255),b
  4086   003050  1D69               	comf	(floorf@m+3)& (0+255),w,b
  4087   003052  6F63               	movwf	(??_floorf+3)& (0+255),b
  4088   003054  5160               	movf	??_floorf& (0+255),w,b
  4089   003056  176C               	andwf	floorf@u& (0+255),f,b
  4090   003058  5161               	movf	(??_floorf+1)& (0+255),w,b
  4091   00305A  176D               	andwf	(floorf@u+1)& (0+255),f,b
  4092   00305C  5162               	movf	(??_floorf+2)& (0+255),w,b
  4093   00305E  176E               	andwf	(floorf@u+2)& (0+255),f,b
  4094   003060  5163               	movf	(??_floorf+3)& (0+255),w,b
  4095   003062  176F               	andwf	(floorf@u+3)& (0+255),f,b
  4096   003064  EF78  F018         	goto	l4495
  4097   003068                     l4487:
  4098                           
  4099                           ; BSR set to: 0
  4100   003068  C06C  F060         	movff	floorf@u,??_floorf
  4101   00306C  C06D  F061         	movff	floorf@u+1,??_floorf+1
  4102   003070  C06E  F062         	movff	floorf@u+2,??_floorf+2
  4103   003074  C06F  F063         	movff	floorf@u+3,??_floorf+3
  4104   003078  0E20               	movlw	32
  4105   00307A  EF44  F018         	goto	u4400
  4106   00307E                     u4405:
  4107   00307E  90D8               	bcf	status,0,c
  4108   003080  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4109   003082  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4110   003084  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  4111   003086  3360               	rrcf	??_floorf& (0+255),f,b
  4112   003088                     u4400:
  4113   003088  2EE8               	decfsz	wreg,f,c
  4114   00308A  EF3F  F018         	goto	u4405
  4115   00308E  5160               	movf	??_floorf& (0+255),w,b
  4116   003090  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  4117   003092  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  4118   003094  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  4119   003096  A4D8               	btfss	status,2,c
  4120   003098  EF50  F018         	goto	u4411
  4121   00309C  EF52  F018         	goto	u4410
  4122   0030A0                     u4411:
  4123   0030A0  EF5C  F018         	goto	l4491
  4124   0030A4                     u4410:
  4125   0030A4                     
  4126                           ; BSR set to: 0
  4127   0030A4  0E00               	movlw	0
  4128   0030A6  6F6C               	movwf	floorf@u& (0+255),b
  4129   0030A8  0E00               	movlw	0
  4130   0030AA  6F6D               	movwf	(floorf@u+1)& (0+255),b
  4131   0030AC  0E00               	movlw	0
  4132   0030AE  6F6E               	movwf	(floorf@u+2)& (0+255),b
  4133   0030B0  0E00               	movlw	0
  4134   0030B2  6F6F               	movwf	(floorf@u+3)& (0+255),b
  4135   0030B4  EF78  F018         	goto	l4495
  4136   0030B8                     l4491:
  4137                           
  4138                           ; BSR set to: 0
  4139   0030B8  90D8               	bcf	status,0,c
  4140   0030BA  356C               	rlcf	floorf@u& (0+255),w,b
  4141   0030BC  6F60               	movwf	??_floorf& (0+255),b
  4142   0030BE  356D               	rlcf	(floorf@u+1)& (0+255),w,b
  4143   0030C0  6F61               	movwf	(??_floorf+1)& (0+255),b
  4144   0030C2  356E               	rlcf	(floorf@u+2)& (0+255),w,b
  4145   0030C4  6F62               	movwf	(??_floorf+2)& (0+255),b
  4146   0030C6  356F               	rlcf	(floorf@u+3)& (0+255),w,b
  4147   0030C8  6F63               	movwf	(??_floorf+3)& (0+255),b
  4148   0030CA  5160               	movf	??_floorf& (0+255),w,b
  4149   0030CC  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  4150   0030CE  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  4151   0030D0  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  4152   0030D2  B4D8               	btfsc	status,2,c
  4153   0030D4  EF6E  F018         	goto	u4421
  4154   0030D8  EF70  F018         	goto	u4420
  4155   0030DC                     u4421:
  4156   0030DC  EF78  F018         	goto	l4495
  4157   0030E0                     u4420:
  4158   0030E0                     
  4159                           ; BSR set to: 0
  4160   0030E0  0E00               	movlw	0
  4161   0030E2  6F6C               	movwf	floorf@u& (0+255),b
  4162   0030E4  0E00               	movlw	0
  4163   0030E6  6F6D               	movwf	(floorf@u+1)& (0+255),b
  4164   0030E8  0E80               	movlw	128
  4165   0030EA  6F6E               	movwf	(floorf@u+2)& (0+255),b
  4166   0030EC  0EBF               	movlw	191
  4167   0030EE  6F6F               	movwf	(floorf@u+3)& (0+255),b
  4168   0030F0                     l4495:
  4169                           
  4170                           ; BSR set to: 0
  4171   0030F0  C06C  F04F         	movff	floorf@u,?_floorf
  4172   0030F4  C06D  F050         	movff	floorf@u+1,?_floorf+1
  4173   0030F8  C06E  F051         	movff	floorf@u+2,?_floorf+2
  4174   0030FC  C06F  F052         	movff	floorf@u+3,?_floorf+3
  4175   003100                     l1166:
  4176                           
  4177                           ; BSR set to: 0
  4178   003100  0012               	return		;funcret
  4179   003102                     __end_of_floorf:
  4180                           	callstack 0
  4181                           
  4182 ;; *************** function ___fpclassifyf *****************
  4183 ;; Defined at:
  4184 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;  x               4    4[COMRAM] float 
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;  u               4   14[COMRAM] struct .
  4189 ;;  e               2   12[COMRAM] int 
  4190 ;; Return value:  Size  Location     Type
  4191 ;;                  2    4[COMRAM] int 
  4192 ;; Registers used:
  4193 ;;		wreg, status,2, status,0
  4194 ;; Tracked objects:
  4195 ;;		On entry : 0/0
  4196 ;;		On exit  : 0/0
  4197 ;;		Unchanged: 0/0
  4198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4199 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4200 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4201 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4202 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4203 ;;Total ram usage:       14 bytes
  4204 ;; Hardware stack levels used: 1
  4205 ;; Hardware stack levels required when called: 2
  4206 ;; This function calls:
  4207 ;;		Nothing
  4208 ;; This function is called by:
  4209 ;;		_efgtoa
  4210 ;; This function uses a non-reentrant model
  4211 ;;
  4212                           
  4213                           	psect	text9
  4214   0037AC                     __ptext9:
  4215                           	callstack 0
  4216   0037AC                     ___fpclassifyf:
  4217                           	callstack 24
  4218   0037AC  C0EF  F00F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4219   0037B0  C0F0  F010         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4220   0037B4  C0F1  F011         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4221   0037B8  C0F2  F012         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4222   0037BC  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  4223   0037C0  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4224   0037C4  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4225   0037C8  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4226   0037CC  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  4227   0037D0  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4228   0037D4  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4229   0037D8  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4230   0037DC  0E18               	movlw	24
  4231   0037DE  EFF6  F01B         	goto	u3380
  4232   0037E2                     u3385:
  4233   0037E2  90D8               	bcf	status,0,c
  4234   0037E4  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  4235   0037E6  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  4236   0037E8  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  4237   0037EA  3209               	rrcf	??___fpclassifyf^0,f,c
  4238   0037EC                     u3380:
  4239   0037EC  2EE8               	decfsz	wreg,f,c
  4240   0037EE  EFF1  F01B         	goto	u3385
  4241   0037F2  5009               	movf	??___fpclassifyf^0,w,c
  4242   0037F4  6E0D               	movwf	___fpclassifyf@e^0,c
  4243   0037F6  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  4244   0037F8  500D               	movf	___fpclassifyf@e^0,w,c
  4245   0037FA  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4246   0037FC  A4D8               	btfss	status,2,c
  4247   0037FE  EF03  F01C         	goto	u3391
  4248   003802  EF05  F01C         	goto	u3390
  4249   003806                     u3391:
  4250   003806  EF25  F01C         	goto	l3565
  4251   00380A                     u3390:
  4252   00380A  90D8               	bcf	status,0,c
  4253   00380C  340F               	rlcf	___fpclassifyf@u^0,w,c
  4254   00380E  6E09               	movwf	??___fpclassifyf^0,c
  4255   003810  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4256   003812  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  4257   003814  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4258   003816  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  4259   003818  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4260   00381A  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  4261   00381C  5009               	movf	??___fpclassifyf^0,w,c
  4262   00381E  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  4263   003820  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  4264   003822  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  4265   003824  A4D8               	btfss	status,2,c
  4266   003826  EF17  F01C         	goto	u3401
  4267   00382A  EF19  F01C         	goto	u3400
  4268   00382E                     u3401:
  4269   00382E  EF1F  F01C         	goto	l3561
  4270   003832                     u3400:
  4271   003832  0E00               	movlw	0
  4272   003834  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4273   003836  0E02               	movlw	2
  4274   003838  6E05               	movwf	?___fpclassifyf^0,c
  4275   00383A  EF54  F01C         	goto	l1152
  4276   00383E                     l3561:
  4277   00383E  0E00               	movlw	0
  4278   003840  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4279   003842  0E03               	movlw	3
  4280   003844  6E05               	movwf	?___fpclassifyf^0,c
  4281   003846  EF54  F01C         	goto	l1152
  4282   00384A                     l3565:
  4283   00384A  280D               	incf	___fpclassifyf@e^0,w,c
  4284   00384C  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4285   00384E  A4D8               	btfss	status,2,c
  4286   003850  EF2C  F01C         	goto	u3411
  4287   003854  EF2E  F01C         	goto	u3410
  4288   003858                     u3411:
  4289   003858  EF50  F01C         	goto	l3571
  4290   00385C                     u3410:
  4291   00385C  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  4292   003860  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4293   003864  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4294   003868  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4295   00386C  0E09               	movlw	9
  4296   00386E                     u3425:
  4297   00386E  90D8               	bcf	status,0,c
  4298   003870  3609               	rlcf	??___fpclassifyf^0,f,c
  4299   003872  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  4300   003874  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  4301   003876  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  4302   003878  2EE8               	decfsz	wreg,f,c
  4303   00387A  EF37  F01C         	goto	u3425
  4304   00387E  5009               	movf	??___fpclassifyf^0,w,c
  4305   003880  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  4306   003882  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  4307   003884  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  4308   003886  B4D8               	btfsc	status,2,c
  4309   003888  EF48  F01C         	goto	u3431
  4310   00388C  EF4B  F01C         	goto	u3430
  4311   003890                     u3431:
  4312   003890  0E01               	movlw	1
  4313   003892  EF4C  F01C         	goto	u3440
  4314   003896                     u3430:
  4315   003896  0E00               	movlw	0
  4316   003898                     u3440:
  4317   003898  6E05               	movwf	?___fpclassifyf^0,c
  4318   00389A  6A06               	clrf	(?___fpclassifyf+1)^0,c
  4319   00389C  EF54  F01C         	goto	l1152
  4320   0038A0                     l3571:
  4321   0038A0  0E00               	movlw	0
  4322   0038A2  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4323   0038A4  0E04               	movlw	4
  4324   0038A6  6E05               	movwf	?___fpclassifyf^0,c
  4325   0038A8                     l1152:
  4326   0038A8  0012               	return		;funcret
  4327   0038AA                     __end_of___fpclassifyf:
  4328                           	callstack 0
  4329                           
  4330 ;; *************** function ___fltol *****************
  4331 ;; Defined at:
  4332 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  4333 ;; Parameters:    Size  Location     Type
  4334 ;;  f1              4    4[COMRAM] int 
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;  exp1            1   13[COMRAM] unsigned char 
  4337 ;;  sign1           1   12[COMRAM] unsigned char 
  4338 ;; Return value:  Size  Location     Type
  4339 ;;                  4    4[COMRAM] long 
  4340 ;; Registers used:
  4341 ;;		wreg, status,2, status,0
  4342 ;; Tracked objects:
  4343 ;;		On entry : 0/0
  4344 ;;		On exit  : 0/0
  4345 ;;		Unchanged: 0/0
  4346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4347 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4348 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4349 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4350 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4351 ;;Total ram usage:       10 bytes
  4352 ;; Hardware stack levels used: 1
  4353 ;; Hardware stack levels required when called: 2
  4354 ;; This function calls:
  4355 ;;		Nothing
  4356 ;; This function is called by:
  4357 ;;		_efgtoa
  4358 ;; This function uses a non-reentrant model
  4359 ;;
  4360                           
  4361                           	psect	text10
  4362   0035A2                     __ptext10:
  4363                           	callstack 0
  4364   0035A2                     ___fltol:
  4365                           	callstack 24
  4366   0035A2  3407               	rlcf	(___fltol@f1+2)^0,w,c
  4367   0035A4  3408               	rlcf	(___fltol@f1+3)^0,w,c
  4368   0035A6  6E0E               	movwf	___fltol@exp1^0,c
  4369   0035A8  500E               	movf	___fltol@exp1^0,w,c
  4370   0035AA  A4D8               	btfss	status,2,c
  4371   0035AC  EFDA  F01A         	goto	u3281
  4372   0035B0  EFDC  F01A         	goto	u3280
  4373   0035B4                     u3281:
  4374   0035B4  EFE6  F01A         	goto	l3497
  4375   0035B8                     u3280:
  4376   0035B8                     l3493:
  4377   0035B8  0E00               	movlw	0
  4378   0035BA  6E05               	movwf	?___fltol^0,c
  4379   0035BC  0E00               	movlw	0
  4380   0035BE  6E06               	movwf	(?___fltol+1)^0,c
  4381   0035C0  0E00               	movlw	0
  4382   0035C2  6E07               	movwf	(?___fltol+2)^0,c
  4383   0035C4  0E00               	movlw	0
  4384   0035C6  6E08               	movwf	(?___fltol+3)^0,c
  4385   0035C8  EF53  F01B         	goto	l625
  4386   0035CC                     l3497:
  4387   0035CC  C005  F009         	movff	___fltol@f1,??___fltol
  4388   0035D0  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  4389   0035D4  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  4390   0035D8  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  4391   0035DC  0E20               	movlw	32
  4392   0035DE  EFF6  F01A         	goto	u3290
  4393   0035E2                     u3295:
  4394   0035E2  90D8               	bcf	status,0,c
  4395   0035E4  320C               	rrcf	(??___fltol+3)^0,f,c
  4396   0035E6  320B               	rrcf	(??___fltol+2)^0,f,c
  4397   0035E8  320A               	rrcf	(??___fltol+1)^0,f,c
  4398   0035EA  3209               	rrcf	??___fltol^0,f,c
  4399   0035EC                     u3290:
  4400   0035EC  2EE8               	decfsz	wreg,f,c
  4401   0035EE  EFF1  F01A         	goto	u3295
  4402   0035F2  5009               	movf	??___fltol^0,w,c
  4403   0035F4  6E0D               	movwf	___fltol@sign1^0,c
  4404   0035F6  8E07               	bsf	(___fltol@f1+2)^0,7,c
  4405   0035F8  0EFF               	movlw	255
  4406   0035FA  1605               	andwf	___fltol@f1^0,f,c
  4407   0035FC  0EFF               	movlw	255
  4408   0035FE  1606               	andwf	(___fltol@f1+1)^0,f,c
  4409   003600  0EFF               	movlw	255
  4410   003602  1607               	andwf	(___fltol@f1+2)^0,f,c
  4411   003604  0E00               	movlw	0
  4412   003606  1608               	andwf	(___fltol@f1+3)^0,f,c
  4413   003608  0E96               	movlw	150
  4414   00360A  5E0E               	subwf	___fltol@exp1^0,f,c
  4415   00360C  BE0E               	btfsc	___fltol@exp1^0,7,c
  4416   00360E  EF0D  F01B         	goto	u3300
  4417   003612  EF0B  F01B         	goto	u3301
  4418   003616                     u3301:
  4419   003616  EF23  F01B         	goto	l3517
  4420   00361A                     u3300:
  4421   00361A  500E               	movf	___fltol@exp1^0,w,c
  4422   00361C  0A80               	xorlw	128
  4423   00361E  0F97               	addlw	151
  4424   003620  B0D8               	btfsc	status,0,c
  4425   003622  EF15  F01B         	goto	u3311
  4426   003626  EF17  F01B         	goto	u3310
  4427   00362A                     u3311:
  4428   00362A  EF19  F01B         	goto	l3513
  4429   00362E                     u3310:
  4430   00362E  EFDC  F01A         	goto	l3493
  4431   003632                     l3513:
  4432   003632  90D8               	bcf	status,0,c
  4433   003634  3208               	rrcf	(___fltol@f1+3)^0,f,c
  4434   003636  3207               	rrcf	(___fltol@f1+2)^0,f,c
  4435   003638  3206               	rrcf	(___fltol@f1+1)^0,f,c
  4436   00363A  3205               	rrcf	___fltol@f1^0,f,c
  4437   00363C  3E0E               	incfsz	___fltol@exp1^0,f,c
  4438   00363E  EF19  F01B         	goto	l3513
  4439   003642  EF3B  F01B         	goto	l3527
  4440   003646                     l3517:
  4441   003646  0E1F               	movlw	31
  4442   003648  640E               	cpfsgt	___fltol@exp1^0,c
  4443   00364A  EF29  F01B         	goto	u3321
  4444   00364E  EF2B  F01B         	goto	u3320
  4445   003652                     u3321:
  4446   003652  EF33  F01B         	goto	l3525
  4447   003656                     u3320:
  4448   003656  EFDC  F01A         	goto	l3493
  4449   00365A                     l3523:
  4450   00365A  90D8               	bcf	status,0,c
  4451   00365C  3605               	rlcf	___fltol@f1^0,f,c
  4452   00365E  3606               	rlcf	(___fltol@f1+1)^0,f,c
  4453   003660  3607               	rlcf	(___fltol@f1+2)^0,f,c
  4454   003662  3608               	rlcf	(___fltol@f1+3)^0,f,c
  4455   003664  060E               	decf	___fltol@exp1^0,f,c
  4456   003666                     l3525:
  4457   003666  500E               	movf	___fltol@exp1^0,w,c
  4458   003668  A4D8               	btfss	status,2,c
  4459   00366A  EF39  F01B         	goto	u3331
  4460   00366E  EF3B  F01B         	goto	u3330
  4461   003672                     u3331:
  4462   003672  EF2D  F01B         	goto	l3523
  4463   003676                     u3330:
  4464   003676                     l3527:
  4465   003676  500D               	movf	___fltol@sign1^0,w,c
  4466   003678  B4D8               	btfsc	status,2,c
  4467   00367A  EF41  F01B         	goto	u3341
  4468   00367E  EF43  F01B         	goto	u3340
  4469   003682                     u3341:
  4470   003682  EF4B  F01B         	goto	l3531
  4471   003686                     u3340:
  4472   003686  1E08               	comf	(___fltol@f1+3)^0,f,c
  4473   003688  1E07               	comf	(___fltol@f1+2)^0,f,c
  4474   00368A  1E06               	comf	(___fltol@f1+1)^0,f,c
  4475   00368C  6C05               	negf	___fltol@f1^0,c
  4476   00368E  0E00               	movlw	0
  4477   003690  2206               	addwfc	(___fltol@f1+1)^0,f,c
  4478   003692  2207               	addwfc	(___fltol@f1+2)^0,f,c
  4479   003694  2208               	addwfc	(___fltol@f1+3)^0,f,c
  4480   003696                     l3531:
  4481   003696  C005  F005         	movff	___fltol@f1,?___fltol
  4482   00369A  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  4483   00369E  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  4484   0036A2  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  4485   0036A6                     l625:
  4486   0036A6  0012               	return		;funcret
  4487   0036A8                     __end_of___fltol:
  4488                           	callstack 0
  4489                           
  4490 ;; *************** function ___flsub *****************
  4491 ;; Defined at:
  4492 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;  b               4   20[COMRAM] long 
  4495 ;;  a               4   24[COMRAM] long 
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;		None
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  4   20[COMRAM] long 
  4500 ;; Registers used:
  4501 ;;		wreg, status,2, status,0, cstack
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4507 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4510 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4511 ;;Total ram usage:        8 bytes
  4512 ;; Hardware stack levels used: 1
  4513 ;; Hardware stack levels required when called: 3
  4514 ;; This function calls:
  4515 ;;		___fladd
  4516 ;; This function is called by:
  4517 ;;		_main
  4518 ;;		_efgtoa
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           	psect	text11
  4523   003E72                     __ptext11:
  4524                           	callstack 0
  4525   003E72                     ___flsub:
  4526                           	callstack 23
  4527   003E72  0E00               	movlw	0
  4528   003E74  1A19               	xorwf	___flsub@a^0,f,c
  4529   003E76  0E00               	movlw	0
  4530   003E78  1A1A               	xorwf	(___flsub@a+1)^0,f,c
  4531   003E7A  0E00               	movlw	0
  4532   003E7C  1A1B               	xorwf	(___flsub@a+2)^0,f,c
  4533   003E7E  0E80               	movlw	128
  4534   003E80  1A1C               	xorwf	(___flsub@a+3)^0,f,c
  4535   003E82  C015  F005         	movff	___flsub@b,___fladd@b
  4536   003E86  C016  F006         	movff	___flsub@b+1,___fladd@b+1
  4537   003E8A  C017  F007         	movff	___flsub@b+2,___fladd@b+2
  4538   003E8E  C018  F008         	movff	___flsub@b+3,___fladd@b+3
  4539   003E92  C019  F009         	movff	___flsub@a,___fladd@a
  4540   003E96  C01A  F00A         	movff	___flsub@a+1,___fladd@a+1
  4541   003E9A  C01B  F00B         	movff	___flsub@a+2,___fladd@a+2
  4542   003E9E  C01C  F00C         	movff	___flsub@a+3,___fladd@a+3
  4543   003EA2  EC1F  F00C         	call	___fladd	;wreg free
  4544   003EA6  C005  F015         	movff	?___fladd,?___flsub
  4545   003EAA  C006  F016         	movff	?___fladd+1,?___flsub+1
  4546   003EAE  C007  F017         	movff	?___fladd+2,?___flsub+2
  4547   003EB2  C008  F018         	movff	?___fladd+3,?___flsub+3
  4548   003EB6  0012               	return		;funcret
  4549   003EB8                     __end_of___flsub:
  4550                           	callstack 0
  4551                           
  4552 ;; *************** function ___fladd *****************
  4553 ;; Defined at:
  4554 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;  b               4    4[COMRAM] long 
  4557 ;;  a               4    8[COMRAM] long 
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;  grs             1   19[COMRAM] unsigned char 
  4560 ;;  bexp            1   18[COMRAM] unsigned char 
  4561 ;;  aexp            1   17[COMRAM] unsigned char 
  4562 ;;  signs           1   16[COMRAM] unsigned char 
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  4    4[COMRAM] unsigned char 
  4565 ;; Registers used:
  4566 ;;		wreg, status,2, status,0
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4572 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4573 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4574 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4575 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4576 ;;Total ram usage:       16 bytes
  4577 ;; Hardware stack levels used: 1
  4578 ;; Hardware stack levels required when called: 2
  4579 ;; This function calls:
  4580 ;;		Nothing
  4581 ;; This function is called by:
  4582 ;;		___flsub
  4583 ;;		_efgtoa
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587                           	psect	text12
  4588   00183E                     __ptext12:
  4589                           	callstack 0
  4590   00183E                     ___fladd:
  4591                           	callstack 23
  4592   00183E  5008               	movf	(___fladd@b+3)^0,w,c
  4593   001840  0B80               	andlw	128
  4594   001842  6E11               	movwf	___fladd@signs^0,c
  4595   001844  5008               	movf	(___fladd@b+3)^0,w,c
  4596   001846  2408               	addwf	(___fladd@b+3)^0,w,c
  4597   001848  6E13               	movwf	___fladd@bexp^0,c
  4598   00184A  AE07               	btfss	(___fladd@b+2)^0,7,c
  4599   00184C  EF2A  F00C         	goto	u2241
  4600   001850  EF2C  F00C         	goto	u2240
  4601   001854                     u2241:
  4602   001854  EF2D  F00C         	goto	l2887
  4603   001858                     u2240:
  4604   001858  8013               	bsf	___fladd@bexp^0,0,c
  4605   00185A                     l2887:
  4606   00185A  5013               	movf	___fladd@bexp^0,w,c
  4607   00185C  B4D8               	btfsc	status,2,c
  4608   00185E  EF33  F00C         	goto	u2251
  4609   001862  EF35  F00C         	goto	u2250
  4610   001866                     u2251:
  4611   001866  EF4A  F00C         	goto	l2897
  4612   00186A                     u2250:
  4613   00186A  2813               	incf	___fladd@bexp^0,w,c
  4614   00186C  A4D8               	btfss	status,2,c
  4615   00186E  EF3B  F00C         	goto	u2261
  4616   001872  EF3D  F00C         	goto	u2260
  4617   001876                     u2261:
  4618   001876  EF45  F00C         	goto	l2893
  4619   00187A                     u2260:
  4620   00187A  0E00               	movlw	0
  4621   00187C  6E05               	movwf	___fladd@b^0,c
  4622   00187E  0E00               	movlw	0
  4623   001880  6E06               	movwf	(___fladd@b+1)^0,c
  4624   001882  0E00               	movlw	0
  4625   001884  6E07               	movwf	(___fladd@b+2)^0,c
  4626   001886  0E00               	movlw	0
  4627   001888  6E08               	movwf	(___fladd@b+3)^0,c
  4628   00188A                     l2893:
  4629   00188A  8E07               	bsf	(___fladd@b+2)^0,7,c
  4630   00188C  0E00               	movlw	0
  4631   00188E  6E08               	movwf	(___fladd@b+3)^0,c
  4632   001890  EF52  F00C         	goto	l2899
  4633   001894                     l2897:
  4634   001894  0E00               	movlw	0
  4635   001896  6E05               	movwf	___fladd@b^0,c
  4636   001898  0E00               	movlw	0
  4637   00189A  6E06               	movwf	(___fladd@b+1)^0,c
  4638   00189C  0E00               	movlw	0
  4639   00189E  6E07               	movwf	(___fladd@b+2)^0,c
  4640   0018A0  0E00               	movlw	0
  4641   0018A2  6E08               	movwf	(___fladd@b+3)^0,c
  4642   0018A4                     l2899:
  4643   0018A4  500C               	movf	(___fladd@a+3)^0,w,c
  4644   0018A6  0B80               	andlw	128
  4645   0018A8  6E12               	movwf	___fladd@aexp^0,c
  4646   0018AA  5011               	movf	___fladd@signs^0,w,c
  4647   0018AC  1812               	xorwf	___fladd@aexp^0,w,c
  4648   0018AE  B4D8               	btfsc	status,2,c
  4649   0018B0  EF5C  F00C         	goto	u2271
  4650   0018B4  EF5E  F00C         	goto	u2270
  4651   0018B8                     u2271:
  4652   0018B8  EF5F  F00C         	goto	l2905
  4653   0018BC                     u2270:
  4654   0018BC  8C11               	bsf	___fladd@signs^0,6,c
  4655   0018BE                     l2905:
  4656   0018BE  500C               	movf	(___fladd@a+3)^0,w,c
  4657   0018C0  240C               	addwf	(___fladd@a+3)^0,w,c
  4658   0018C2  6E12               	movwf	___fladd@aexp^0,c
  4659   0018C4  AE0B               	btfss	(___fladd@a+2)^0,7,c
  4660   0018C6  EF67  F00C         	goto	u2281
  4661   0018CA  EF69  F00C         	goto	u2280
  4662   0018CE                     u2281:
  4663   0018CE  EF6A  F00C         	goto	l2911
  4664   0018D2                     u2280:
  4665   0018D2  8012               	bsf	___fladd@aexp^0,0,c
  4666   0018D4                     l2911:
  4667   0018D4  5012               	movf	___fladd@aexp^0,w,c
  4668   0018D6  B4D8               	btfsc	status,2,c
  4669   0018D8  EF70  F00C         	goto	u2291
  4670   0018DC  EF72  F00C         	goto	u2290
  4671   0018E0                     u2291:
  4672   0018E0  EF87  F00C         	goto	l2921
  4673   0018E4                     u2290:
  4674   0018E4  2812               	incf	___fladd@aexp^0,w,c
  4675   0018E6  A4D8               	btfss	status,2,c
  4676   0018E8  EF78  F00C         	goto	u2301
  4677   0018EC  EF7A  F00C         	goto	u2300
  4678   0018F0                     u2301:
  4679   0018F0  EF82  F00C         	goto	l2917
  4680   0018F4                     u2300:
  4681   0018F4  0E00               	movlw	0
  4682   0018F6  6E09               	movwf	___fladd@a^0,c
  4683   0018F8  0E00               	movlw	0
  4684   0018FA  6E0A               	movwf	(___fladd@a+1)^0,c
  4685   0018FC  0E00               	movlw	0
  4686   0018FE  6E0B               	movwf	(___fladd@a+2)^0,c
  4687   001900  0E00               	movlw	0
  4688   001902  6E0C               	movwf	(___fladd@a+3)^0,c
  4689   001904                     l2917:
  4690   001904  8E0B               	bsf	(___fladd@a+2)^0,7,c
  4691   001906  0E00               	movlw	0
  4692   001908  6E0C               	movwf	(___fladd@a+3)^0,c
  4693   00190A  EF8F  F00C         	goto	l2923
  4694   00190E                     l2921:
  4695   00190E  0E00               	movlw	0
  4696   001910  6E09               	movwf	___fladd@a^0,c
  4697   001912  0E00               	movlw	0
  4698   001914  6E0A               	movwf	(___fladd@a+1)^0,c
  4699   001916  0E00               	movlw	0
  4700   001918  6E0B               	movwf	(___fladd@a+2)^0,c
  4701   00191A  0E00               	movlw	0
  4702   00191C  6E0C               	movwf	(___fladd@a+3)^0,c
  4703   00191E                     l2923:
  4704   00191E  5013               	movf	___fladd@bexp^0,w,c
  4705   001920  5C12               	subwf	___fladd@aexp^0,w,c
  4706   001922  B0D8               	btfsc	status,0,c
  4707   001924  EF96  F00C         	goto	u2311
  4708   001928  EF98  F00C         	goto	u2310
  4709   00192C                     u2311:
  4710   00192C  EFBF  F00C         	goto	l2959
  4711   001930                     u2310:
  4712   001930  AC11               	btfss	___fladd@signs^0,6,c
  4713   001932  EF9D  F00C         	goto	u2321
  4714   001936  EF9F  F00C         	goto	u2320
  4715   00193A                     u2321:
  4716   00193A  EFA1  F00C         	goto	l2929
  4717   00193E                     u2320:
  4718   00193E  0E80               	movlw	128
  4719   001940  1A11               	xorwf	___fladd@signs^0,f,c
  4720   001942                     l2929:
  4721   001942  C013  F014         	movff	___fladd@bexp,___fladd@grs
  4722   001946  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  4723   00194A  C014  F012         	movff	___fladd@grs,___fladd@aexp
  4724   00194E  C005  F014         	movff	___fladd@b,___fladd@grs
  4725   001952  C009  F005         	movff	___fladd@a,___fladd@b
  4726   001956  C014  F009         	movff	___fladd@grs,___fladd@a
  4727   00195A  C006  F014         	movff	___fladd@b+1,___fladd@grs
  4728   00195E  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  4729   001962  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  4730   001966  C007  F014         	movff	___fladd@b+2,___fladd@grs
  4731   00196A  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  4732   00196E  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  4733   001972  C008  F014         	movff	___fladd@b+3,___fladd@grs
  4734   001976  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  4735   00197A  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  4736   00197E                     l2959:
  4737   00197E  0E00               	movlw	0
  4738   001980  6E14               	movwf	___fladd@grs^0,c
  4739   001982  5013               	movf	___fladd@bexp^0,w,c
  4740   001984  C012  F00D         	movff	___fladd@aexp,??___fladd
  4741   001988  6A0E               	clrf	(??___fladd+1)^0,c
  4742   00198A  5E0D               	subwf	??___fladd^0,f,c
  4743   00198C  0E00               	movlw	0
  4744   00198E  5A0E               	subwfb	(??___fladd+1)^0,f,c
  4745   001990  BE0E               	btfsc	(??___fladd+1)^0,7,c
  4746   001992  EFD4  F00C         	goto	u2331
  4747   001996  500E               	movf	(??___fladd+1)^0,w,c
  4748   001998  E109               	bnz	u2330
  4749   00199A  0E1A               	movlw	26
  4750   00199C  5C0D               	subwf	??___fladd^0,w,c
  4751   00199E  A0D8               	btfss	status,0,c
  4752   0019A0  EFD4  F00C         	goto	u2331
  4753   0019A4  EFD6  F00C         	goto	u2330
  4754   0019A8                     u2331:
  4755   0019A8  EF0D  F00D         	goto	l857
  4756   0019AC                     u2330:
  4757   0019AC  5005               	movf	___fladd@b^0,w,c
  4758   0019AE  1006               	iorwf	(___fladd@b+1)^0,w,c
  4759   0019B0  1007               	iorwf	(___fladd@b+2)^0,w,c
  4760   0019B2  1008               	iorwf	(___fladd@b+3)^0,w,c
  4761   0019B4  A4D8               	btfss	status,2,c
  4762   0019B6  EFDF  F00C         	goto	u2341
  4763   0019BA  EFE2  F00C         	goto	u2340
  4764   0019BE                     u2341:
  4765   0019BE  0E01               	movlw	1
  4766   0019C0  EFE3  F00C         	goto	u2350
  4767   0019C4                     u2340:
  4768   0019C4  0E00               	movlw	0
  4769   0019C6                     u2350:
  4770   0019C6  6E14               	movwf	___fladd@grs^0,c
  4771   0019C8  0E00               	movlw	0
  4772   0019CA  6E05               	movwf	___fladd@b^0,c
  4773   0019CC  0E00               	movlw	0
  4774   0019CE  6E06               	movwf	(___fladd@b+1)^0,c
  4775   0019D0  0E00               	movlw	0
  4776   0019D2  6E07               	movwf	(___fladd@b+2)^0,c
  4777   0019D4  0E00               	movlw	0
  4778   0019D6  6E08               	movwf	(___fladd@b+3)^0,c
  4779   0019D8  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  4780   0019DC  EF16  F00D         	goto	l856
  4781   0019E0                     l858:
  4782   0019E0  A014               	btfss	___fladd@grs^0,0,c
  4783   0019E2  EFF5  F00C         	goto	u2361
  4784   0019E6  EFF7  F00C         	goto	u2360
  4785   0019EA                     u2361:
  4786   0019EA  EFFD  F00C         	goto	l2971
  4787   0019EE                     u2360:
  4788   0019EE  90D8               	bcf	status,0,c
  4789   0019F0  3014               	rrcf	___fladd@grs^0,w,c
  4790   0019F2  0901               	iorlw	1
  4791   0019F4  6E14               	movwf	___fladd@grs^0,c
  4792   0019F6  EFFF  F00C         	goto	l2973
  4793   0019FA                     l2971:
  4794   0019FA  90D8               	bcf	status,0,c
  4795   0019FC  3214               	rrcf	___fladd@grs^0,f,c
  4796   0019FE                     l2973:
  4797   0019FE  A005               	btfss	___fladd@b^0,0,c
  4798   001A00  EF04  F00D         	goto	u2371
  4799   001A04  EF06  F00D         	goto	u2370
  4800   001A08                     u2371:
  4801   001A08  EF07  F00D         	goto	l2977
  4802   001A0C                     u2370:
  4803   001A0C  8E14               	bsf	___fladd@grs^0,7,c
  4804   001A0E                     l2977:
  4805   001A0E  3408               	rlcf	(___fladd@b+3)^0,w,c
  4806   001A10  3208               	rrcf	(___fladd@b+3)^0,f,c
  4807   001A12  3207               	rrcf	(___fladd@b+2)^0,f,c
  4808   001A14  3206               	rrcf	(___fladd@b+1)^0,f,c
  4809   001A16  3205               	rrcf	___fladd@b^0,f,c
  4810   001A18  2A13               	incf	___fladd@bexp^0,f,c
  4811   001A1A                     l857:
  4812   001A1A  5012               	movf	___fladd@aexp^0,w,c
  4813   001A1C  5C13               	subwf	___fladd@bexp^0,w,c
  4814   001A1E  A0D8               	btfss	status,0,c
  4815   001A20  EF14  F00D         	goto	u2381
  4816   001A24  EF16  F00D         	goto	u2380
  4817   001A28                     u2381:
  4818   001A28  EFF0  F00C         	goto	l858
  4819   001A2C                     u2380:
  4820   001A2C                     l856:
  4821   001A2C  BC11               	btfsc	___fladd@signs^0,6,c
  4822   001A2E  EF1B  F00D         	goto	u2391
  4823   001A32  EF1D  F00D         	goto	u2390
  4824   001A36                     u2391:
  4825   001A36  EF5D  F00D         	goto	l3005
  4826   001A3A                     u2390:
  4827   001A3A  5013               	movf	___fladd@bexp^0,w,c
  4828   001A3C  A4D8               	btfss	status,2,c
  4829   001A3E  EF23  F00D         	goto	u2401
  4830   001A42  EF25  F00D         	goto	u2400
  4831   001A46                     u2401:
  4832   001A46  EF2F  F00D         	goto	l2987
  4833   001A4A                     u2400:
  4834   001A4A  0E00               	movlw	0
  4835   001A4C  6E05               	movwf	?___fladd^0,c
  4836   001A4E  0E00               	movlw	0
  4837   001A50  6E06               	movwf	(?___fladd+1)^0,c
  4838   001A52  0E00               	movlw	0
  4839   001A54  6E07               	movwf	(?___fladd+2)^0,c
  4840   001A56  0E00               	movlw	0
  4841   001A58  6E08               	movwf	(?___fladd+3)^0,c
  4842   001A5A  EF7E  F00E         	goto	l865
  4843   001A5E                     l2987:
  4844   001A5E  5009               	movf	___fladd@a^0,w,c
  4845   001A60  2605               	addwf	___fladd@b^0,f,c
  4846   001A62  500A               	movf	(___fladd@a+1)^0,w,c
  4847   001A64  2206               	addwfc	(___fladd@b+1)^0,f,c
  4848   001A66  500B               	movf	(___fladd@a+2)^0,w,c
  4849   001A68  2207               	addwfc	(___fladd@b+2)^0,f,c
  4850   001A6A  500C               	movf	(___fladd@a+3)^0,w,c
  4851   001A6C  2208               	addwfc	(___fladd@b+3)^0,f,c
  4852   001A6E  A008               	btfss	(___fladd@b+3)^0,0,c
  4853   001A70  EF3C  F00D         	goto	u2411
  4854   001A74  EF3E  F00D         	goto	u2410
  4855   001A78                     u2411:
  4856   001A78  EFEA  F00D         	goto	l3041
  4857   001A7C                     u2410:
  4858   001A7C  A014               	btfss	___fladd@grs^0,0,c
  4859   001A7E  EF43  F00D         	goto	u2421
  4860   001A82  EF45  F00D         	goto	u2420
  4861   001A86                     u2421:
  4862   001A86  EF4B  F00D         	goto	l2995
  4863   001A8A                     u2420:
  4864   001A8A  90D8               	bcf	status,0,c
  4865   001A8C  3014               	rrcf	___fladd@grs^0,w,c
  4866   001A8E  0901               	iorlw	1
  4867   001A90  6E14               	movwf	___fladd@grs^0,c
  4868   001A92  EF4D  F00D         	goto	l2997
  4869   001A96                     l2995:
  4870   001A96  90D8               	bcf	status,0,c
  4871   001A98  3214               	rrcf	___fladd@grs^0,f,c
  4872   001A9A                     l2997:
  4873   001A9A  A005               	btfss	___fladd@b^0,0,c
  4874   001A9C  EF52  F00D         	goto	u2431
  4875   001AA0  EF54  F00D         	goto	u2430
  4876   001AA4                     u2431:
  4877   001AA4  EF55  F00D         	goto	l3001
  4878   001AA8                     u2430:
  4879   001AA8  8E14               	bsf	___fladd@grs^0,7,c
  4880   001AAA                     l3001:
  4881   001AAA  3408               	rlcf	(___fladd@b+3)^0,w,c
  4882   001AAC  3208               	rrcf	(___fladd@b+3)^0,f,c
  4883   001AAE  3207               	rrcf	(___fladd@b+2)^0,f,c
  4884   001AB0  3206               	rrcf	(___fladd@b+1)^0,f,c
  4885   001AB2  3205               	rrcf	___fladd@b^0,f,c
  4886   001AB4  2A13               	incf	___fladd@bexp^0,f,c
  4887   001AB6  EFEA  F00D         	goto	l3041
  4888   001ABA                     l3005:
  4889   001ABA  5009               	movf	___fladd@a^0,w,c
  4890   001ABC  5C05               	subwf	___fladd@b^0,w,c
  4891   001ABE  500A               	movf	(___fladd@a+1)^0,w,c
  4892   001AC0  5806               	subwfb	(___fladd@b+1)^0,w,c
  4893   001AC2  500B               	movf	(___fladd@a+2)^0,w,c
  4894   001AC4  5807               	subwfb	(___fladd@b+2)^0,w,c
  4895   001AC6  5008               	movf	(___fladd@b+3)^0,w,c
  4896   001AC8  0A80               	xorlw	128
  4897   001ACA  6E0D               	movwf	??___fladd^0,c
  4898   001ACC  500C               	movf	(___fladd@a+3)^0,w,c
  4899   001ACE  0A80               	xorlw	128
  4900   001AD0  580D               	subwfb	??___fladd^0,w,c
  4901   001AD2  B0D8               	btfsc	status,0,c
  4902   001AD4  EF6E  F00D         	goto	u2441
  4903   001AD8  EF70  F00D         	goto	u2440
  4904   001ADC                     u2441:
  4905   001ADC  EF9B  F00D         	goto	l3015
  4906   001AE0                     u2440:
  4907   001AE0  5005               	movf	___fladd@b^0,w,c
  4908   001AE2  5C09               	subwf	___fladd@a^0,w,c
  4909   001AE4  6E0D               	movwf	??___fladd^0,c
  4910   001AE6  5006               	movf	(___fladd@b+1)^0,w,c
  4911   001AE8  580A               	subwfb	(___fladd@a+1)^0,w,c
  4912   001AEA  6E0E               	movwf	(??___fladd+1)^0,c
  4913   001AEC  5007               	movf	(___fladd@b+2)^0,w,c
  4914   001AEE  580B               	subwfb	(___fladd@a+2)^0,w,c
  4915   001AF0  6E0F               	movwf	(??___fladd+2)^0,c
  4916   001AF2  5008               	movf	(___fladd@b+3)^0,w,c
  4917   001AF4  580C               	subwfb	(___fladd@a+3)^0,w,c
  4918   001AF6  6E10               	movwf	(??___fladd+3)^0,c
  4919   001AF8  0EFF               	movlw	255
  4920   001AFA  240D               	addwf	??___fladd^0,w,c
  4921   001AFC  6E05               	movwf	___fladd@b^0,c
  4922   001AFE  0EFF               	movlw	255
  4923   001B00  200E               	addwfc	(??___fladd+1)^0,w,c
  4924   001B02  6E06               	movwf	(___fladd@b+1)^0,c
  4925   001B04  0EFF               	movlw	255
  4926   001B06  200F               	addwfc	(??___fladd+2)^0,w,c
  4927   001B08  6E07               	movwf	(___fladd@b+2)^0,c
  4928   001B0A  0EFF               	movlw	255
  4929   001B0C  2010               	addwfc	(??___fladd+3)^0,w,c
  4930   001B0E  6E08               	movwf	(___fladd@b+3)^0,c
  4931   001B10  0E80               	movlw	128
  4932   001B12  1A11               	xorwf	___fladd@signs^0,f,c
  4933   001B14  6C14               	negf	___fladd@grs^0,c
  4934   001B16  5014               	movf	___fladd@grs^0,w,c
  4935   001B18  A4D8               	btfss	status,2,c
  4936   001B1A  EF91  F00D         	goto	u2451
  4937   001B1E  EF93  F00D         	goto	u2450
  4938   001B22                     u2451:
  4939   001B22  EFA3  F00D         	goto	l873
  4940   001B26                     u2450:
  4941   001B26  0E01               	movlw	1
  4942   001B28  2605               	addwf	___fladd@b^0,f,c
  4943   001B2A  0E00               	movlw	0
  4944   001B2C  2206               	addwfc	(___fladd@b+1)^0,f,c
  4945   001B2E  2207               	addwfc	(___fladd@b+2)^0,f,c
  4946   001B30  2208               	addwfc	(___fladd@b+3)^0,f,c
  4947   001B32  EFA3  F00D         	goto	l873
  4948   001B36                     l3015:
  4949   001B36  5009               	movf	___fladd@a^0,w,c
  4950   001B38  5E05               	subwf	___fladd@b^0,f,c
  4951   001B3A  500A               	movf	(___fladd@a+1)^0,w,c
  4952   001B3C  5A06               	subwfb	(___fladd@b+1)^0,f,c
  4953   001B3E  500B               	movf	(___fladd@a+2)^0,w,c
  4954   001B40  5A07               	subwfb	(___fladd@b+2)^0,f,c
  4955   001B42  500C               	movf	(___fladd@a+3)^0,w,c
  4956   001B44  5A08               	subwfb	(___fladd@b+3)^0,f,c
  4957   001B46                     l873:
  4958   001B46  5005               	movf	___fladd@b^0,w,c
  4959   001B48  1006               	iorwf	(___fladd@b+1)^0,w,c
  4960   001B4A  1007               	iorwf	(___fladd@b+2)^0,w,c
  4961   001B4C  1008               	iorwf	(___fladd@b+3)^0,w,c
  4962   001B4E  A4D8               	btfss	status,2,c
  4963   001B50  EFAC  F00D         	goto	u2461
  4964   001B54  EFAE  F00D         	goto	u2460
  4965   001B58                     u2461:
  4966   001B58  EFE3  F00D         	goto	l3039
  4967   001B5C                     u2460:
  4968   001B5C  5014               	movf	___fladd@grs^0,w,c
  4969   001B5E  A4D8               	btfss	status,2,c
  4970   001B60  EFB4  F00D         	goto	u2471
  4971   001B64  EFB6  F00D         	goto	u2470
  4972   001B68                     u2471:
  4973   001B68  EFE3  F00D         	goto	l3039
  4974   001B6C                     u2470:
  4975   001B6C  0E00               	movlw	0
  4976   001B6E  6E05               	movwf	?___fladd^0,c
  4977   001B70  0E00               	movlw	0
  4978   001B72  6E06               	movwf	(?___fladd+1)^0,c
  4979   001B74  0E00               	movlw	0
  4980   001B76  6E07               	movwf	(?___fladd+2)^0,c
  4981   001B78  0E00               	movlw	0
  4982   001B7A  6E08               	movwf	(?___fladd+3)^0,c
  4983   001B7C  EF7E  F00E         	goto	l865
  4984   001B80                     l3023:
  4985   001B80  90D8               	bcf	status,0,c
  4986   001B82  3605               	rlcf	___fladd@b^0,f,c
  4987   001B84  3606               	rlcf	(___fladd@b+1)^0,f,c
  4988   001B86  3607               	rlcf	(___fladd@b+2)^0,f,c
  4989   001B88  3608               	rlcf	(___fladd@b+3)^0,f,c
  4990   001B8A  AE14               	btfss	___fladd@grs^0,7,c
  4991   001B8C  EFCA  F00D         	goto	u2481
  4992   001B90  EFCC  F00D         	goto	u2480
  4993   001B94                     u2481:
  4994   001B94  EFCD  F00D         	goto	l3029
  4995   001B98                     u2480:
  4996   001B98  8005               	bsf	___fladd@b^0,0,c
  4997   001B9A                     l3029:
  4998   001B9A  A014               	btfss	___fladd@grs^0,0,c
  4999   001B9C  EFD2  F00D         	goto	u2491
  5000   001BA0  EFD4  F00D         	goto	u2490
  5001   001BA4                     u2491:
  5002   001BA4  EFD8  F00D         	goto	l3033
  5003   001BA8                     u2490:
  5004   001BA8  80D8               	bsf	status,0,c
  5005   001BAA  3614               	rlcf	___fladd@grs^0,f,c
  5006   001BAC  EFDA  F00D         	goto	l3035
  5007   001BB0                     l3033:
  5008   001BB0  90D8               	bcf	status,0,c
  5009   001BB2  3614               	rlcf	___fladd@grs^0,f,c
  5010   001BB4                     l3035:
  5011   001BB4  5013               	movf	___fladd@bexp^0,w,c
  5012   001BB6  B4D8               	btfsc	status,2,c
  5013   001BB8  EFE0  F00D         	goto	u2501
  5014   001BBC  EFE2  F00D         	goto	u2500
  5015   001BC0                     u2501:
  5016   001BC0  EFE3  F00D         	goto	l3039
  5017   001BC4                     u2500:
  5018   001BC4  0613               	decf	___fladd@bexp^0,f,c
  5019   001BC6                     l3039:
  5020   001BC6  AE07               	btfss	(___fladd@b+2)^0,7,c
  5021   001BC8  EFE8  F00D         	goto	u2511
  5022   001BCC  EFEA  F00D         	goto	u2510
  5023   001BD0                     u2511:
  5024   001BD0  EFC0  F00D         	goto	l3023
  5025   001BD4                     u2510:
  5026   001BD4                     l3041:
  5027   001BD4  0E00               	movlw	0
  5028   001BD6  6E12               	movwf	___fladd@aexp^0,c
  5029   001BD8  AE14               	btfss	___fladd@grs^0,7,c
  5030   001BDA  EFF1  F00D         	goto	u2521
  5031   001BDE  EFF3  F00D         	goto	u2520
  5032   001BE2                     u2521:
  5033   001BE2  EF0B  F00E         	goto	l882
  5034   001BE6                     u2520:
  5035   001BE6  C014  F00D         	movff	___fladd@grs,??___fladd
  5036   001BEA  0E7F               	movlw	127
  5037   001BEC  160D               	andwf	??___fladd^0,f,c
  5038   001BEE  B4D8               	btfsc	status,2,c
  5039   001BF0  EFFC  F00D         	goto	u2531
  5040   001BF4  EFFE  F00D         	goto	u2530
  5041   001BF8                     u2531:
  5042   001BF8  EF02  F00E         	goto	l883
  5043   001BFC                     u2530:
  5044   001BFC                     l3047:
  5045   001BFC  0E01               	movlw	1
  5046   001BFE  6E12               	movwf	___fladd@aexp^0,c
  5047   001C00  EF0B  F00E         	goto	l882
  5048   001C04                     l883:
  5049   001C04  A005               	btfss	___fladd@b^0,0,c
  5050   001C06  EF07  F00E         	goto	u2541
  5051   001C0A  EF09  F00E         	goto	u2540
  5052   001C0E                     u2541:
  5053   001C0E  EF0B  F00E         	goto	l882
  5054   001C12                     u2540:
  5055   001C12  EFFE  F00D         	goto	l3047
  5056   001C16                     l882:
  5057   001C16  5012               	movf	___fladd@aexp^0,w,c
  5058   001C18  B4D8               	btfsc	status,2,c
  5059   001C1A  EF11  F00E         	goto	u2551
  5060   001C1E  EF13  F00E         	goto	u2550
  5061   001C22                     u2551:
  5062   001C22  EF3E  F00E         	goto	l3059
  5063   001C26                     u2550:
  5064   001C26  0E01               	movlw	1
  5065   001C28  2605               	addwf	___fladd@b^0,f,c
  5066   001C2A  0E00               	movlw	0
  5067   001C2C  2206               	addwfc	(___fladd@b+1)^0,f,c
  5068   001C2E  2207               	addwfc	(___fladd@b+2)^0,f,c
  5069   001C30  2208               	addwfc	(___fladd@b+3)^0,f,c
  5070   001C32  A008               	btfss	(___fladd@b+3)^0,0,c
  5071   001C34  EF1E  F00E         	goto	u2561
  5072   001C38  EF20  F00E         	goto	u2560
  5073   001C3C                     u2561:
  5074   001C3C  EF3E  F00E         	goto	l3059
  5075   001C40                     u2560:
  5076   001C40  C005  F00D         	movff	___fladd@b,??___fladd
  5077   001C44  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  5078   001C48  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  5079   001C4C  C008  F010         	movff	___fladd@b+3,??___fladd+3
  5080   001C50  3410               	rlcf	(??___fladd+3)^0,w,c
  5081   001C52  3210               	rrcf	(??___fladd+3)^0,f,c
  5082   001C54  320F               	rrcf	(??___fladd+2)^0,f,c
  5083   001C56  320E               	rrcf	(??___fladd+1)^0,f,c
  5084   001C58  320D               	rrcf	??___fladd^0,f,c
  5085   001C5A  C00D  F005         	movff	??___fladd,___fladd@b
  5086   001C5E  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  5087   001C62  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  5088   001C66  C010  F008         	movff	??___fladd+3,___fladd@b+3
  5089   001C6A  2813               	incf	___fladd@bexp^0,w,c
  5090   001C6C  B4D8               	btfsc	status,2,c
  5091   001C6E  EF3B  F00E         	goto	u2571
  5092   001C72  EF3D  F00E         	goto	u2570
  5093   001C76                     u2571:
  5094   001C76  EF3E  F00E         	goto	l3059
  5095   001C7A                     u2570:
  5096   001C7A  2A13               	incf	___fladd@bexp^0,f,c
  5097   001C7C                     l3059:
  5098   001C7C  2813               	incf	___fladd@bexp^0,w,c
  5099   001C7E  B4D8               	btfsc	status,2,c
  5100   001C80  EF44  F00E         	goto	u2581
  5101   001C84  EF46  F00E         	goto	u2580
  5102   001C88                     u2581:
  5103   001C88  EF4E  F00E         	goto	l3063
  5104   001C8C                     u2580:
  5105   001C8C  5013               	movf	___fladd@bexp^0,w,c
  5106   001C8E  A4D8               	btfss	status,2,c
  5107   001C90  EF4C  F00E         	goto	u2591
  5108   001C94  EF4E  F00E         	goto	u2590
  5109   001C98                     u2591:
  5110   001C98  EF60  F00E         	goto	l3067
  5111   001C9C                     u2590:
  5112   001C9C                     l3063:
  5113   001C9C  0E00               	movlw	0
  5114   001C9E  6E05               	movwf	___fladd@b^0,c
  5115   001CA0  0E00               	movlw	0
  5116   001CA2  6E06               	movwf	(___fladd@b+1)^0,c
  5117   001CA4  0E00               	movlw	0
  5118   001CA6  6E07               	movwf	(___fladd@b+2)^0,c
  5119   001CA8  0E00               	movlw	0
  5120   001CAA  6E08               	movwf	(___fladd@b+3)^0,c
  5121   001CAC  5013               	movf	___fladd@bexp^0,w,c
  5122   001CAE  A4D8               	btfss	status,2,c
  5123   001CB0  EF5C  F00E         	goto	u2601
  5124   001CB4  EF5E  F00E         	goto	u2600
  5125   001CB8                     u2601:
  5126   001CB8  EF60  F00E         	goto	l3067
  5127   001CBC                     u2600:
  5128   001CBC  0E00               	movlw	0
  5129   001CBE  6E11               	movwf	___fladd@signs^0,c
  5130   001CC0                     l3067:
  5131   001CC0  A013               	btfss	___fladd@bexp^0,0,c
  5132   001CC2  EF65  F00E         	goto	u2611
  5133   001CC6  EF67  F00E         	goto	u2610
  5134   001CCA                     u2611:
  5135   001CCA  EF6A  F00E         	goto	l3071
  5136   001CCE                     u2610:
  5137   001CCE  8E07               	bsf	(___fladd@b+2)^0,7,c
  5138   001CD0  EF6B  F00E         	goto	l3073
  5139   001CD4                     l3071:
  5140   001CD4  9E07               	bcf	(___fladd@b+2)^0,7,c
  5141   001CD6                     l3073:
  5142   001CD6  90D8               	bcf	status,0,c
  5143   001CD8  3013               	rrcf	___fladd@bexp^0,w,c
  5144   001CDA  6E08               	movwf	(___fladd@b+3)^0,c
  5145   001CDC  AE11               	btfss	___fladd@signs^0,7,c
  5146   001CDE  EF73  F00E         	goto	u2621
  5147   001CE2  EF75  F00E         	goto	u2620
  5148   001CE6                     u2621:
  5149   001CE6  EF76  F00E         	goto	l3079
  5150   001CEA                     u2620:
  5151   001CEA  8E08               	bsf	(___fladd@b+3)^0,7,c
  5152   001CEC                     l3079:
  5153   001CEC  C005  F005         	movff	___fladd@b,?___fladd
  5154   001CF0  C006  F006         	movff	___fladd@b+1,?___fladd+1
  5155   001CF4  C007  F007         	movff	___fladd@b+2,?___fladd+2
  5156   001CF8  C008  F008         	movff	___fladd@b+3,?___fladd+3
  5157   001CFC                     l865:
  5158   001CFC  0012               	return		;funcret
  5159   001CFE                     __end_of___fladd:
  5160                           	callstack 0
  5161                           
  5162 ;; *************** function ___flneg *****************
  5163 ;; Defined at:
  5164 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  5165 ;; Parameters:    Size  Location     Type
  5166 ;;  f1              4    4[COMRAM] unsigned char 
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;		None
  5169 ;; Return value:  Size  Location     Type
  5170 ;;                  4    4[COMRAM] unsigned char 
  5171 ;; Registers used:
  5172 ;;		wreg, status,2, status,0
  5173 ;; Tracked objects:
  5174 ;;		On entry : 0/0
  5175 ;;		On exit  : 0/0
  5176 ;;		Unchanged: 0/0
  5177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5178 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5181 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5182 ;;Total ram usage:        4 bytes
  5183 ;; Hardware stack levels used: 1
  5184 ;; Hardware stack levels required when called: 2
  5185 ;; This function calls:
  5186 ;;		Nothing
  5187 ;; This function is called by:
  5188 ;;		_efgtoa
  5189 ;; This function uses a non-reentrant model
  5190 ;;
  5191                           
  5192                           	psect	text13
  5193   003FC2                     __ptext13:
  5194                           	callstack 0
  5195   003FC2                     ___flneg:
  5196                           	callstack 24
  5197   003FC2  5005               	movf	___flneg@f1^0,w,c
  5198   003FC4  1006               	iorwf	(___flneg@f1+1)^0,w,c
  5199   003FC6  1007               	iorwf	(___flneg@f1+2)^0,w,c
  5200   003FC8  1008               	iorwf	(___flneg@f1+3)^0,w,c
  5201   003FCA  B4D8               	btfsc	status,2,c
  5202   003FCC  EFEA  F01F         	goto	u3271
  5203   003FD0  EFEC  F01F         	goto	u3270
  5204   003FD4                     u3271:
  5205   003FD4  EFF4  F01F         	goto	l3487
  5206   003FD8                     u3270:
  5207   003FD8  0E00               	movlw	0
  5208   003FDA  1A05               	xorwf	___flneg@f1^0,f,c
  5209   003FDC  0E00               	movlw	0
  5210   003FDE  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  5211   003FE0  0E00               	movlw	0
  5212   003FE2  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  5213   003FE4  0E80               	movlw	128
  5214   003FE6  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  5215   003FE8                     l3487:
  5216   003FE8  C005  F005         	movff	___flneg@f1,?___flneg
  5217   003FEC  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  5218   003FF0  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  5219   003FF4  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  5220   003FF8  0012               	return		;funcret
  5221   003FFA                     __end_of___flneg:
  5222                           	callstack 0
  5223                           
  5224 ;; *************** function ___flmul *****************
  5225 ;; Defined at:
  5226 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  5227 ;; Parameters:    Size  Location     Type
  5228 ;;  b               4   28[COMRAM] unsigned char 
  5229 ;;  a               4   32[COMRAM] unsigned char 
  5230 ;; Auto vars:     Size  Location     Type
  5231 ;;  prod            4   47[COMRAM] struct .
  5232 ;;  grs             4   41[COMRAM] unsigned long 
  5233 ;;  temp            2   51[COMRAM] struct .
  5234 ;;  bexp            1   46[COMRAM] unsigned char 
  5235 ;;  aexp            1   45[COMRAM] unsigned char 
  5236 ;;  sign            1   40[COMRAM] unsigned char 
  5237 ;; Return value:  Size  Location     Type
  5238 ;;                  4   28[COMRAM] unsigned char 
  5239 ;; Registers used:
  5240 ;;		wreg, status,2, status,0, prodl, prodh
  5241 ;; Tracked objects:
  5242 ;;		On entry : 0/0
  5243 ;;		On exit  : 0/0
  5244 ;;		Unchanged: 0/0
  5245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5246 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5247 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5248 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5249 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5250 ;;Total ram usage:       25 bytes
  5251 ;; Hardware stack levels used: 1
  5252 ;; Hardware stack levels required when called: 2
  5253 ;; This function calls:
  5254 ;;		Nothing
  5255 ;; This function is called by:
  5256 ;;		_main
  5257 ;;		_efgtoa
  5258 ;; This function uses a non-reentrant model
  5259 ;;
  5260                           
  5261                           	psect	text14
  5262   0021A4                     __ptext14:
  5263                           	callstack 0
  5264   0021A4                     ___flmul:
  5265                           	callstack 24
  5266   0021A4  5020               	movf	(___flmul@b+3)^0,w,c
  5267   0021A6  0B80               	andlw	128
  5268   0021A8  6E29               	movwf	___flmul@sign^0,c
  5269   0021AA  5020               	movf	(___flmul@b+3)^0,w,c
  5270   0021AC  2420               	addwf	(___flmul@b+3)^0,w,c
  5271   0021AE  6E2F               	movwf	___flmul@bexp^0,c
  5272   0021B0  AE1F               	btfss	(___flmul@b+2)^0,7,c
  5273   0021B2  EFDD  F010         	goto	u3001
  5274   0021B6  EFDF  F010         	goto	u3000
  5275   0021BA                     u3001:
  5276   0021BA  EFE0  F010         	goto	l3315
  5277   0021BE                     u3000:
  5278   0021BE  802F               	bsf	___flmul@bexp^0,0,c
  5279   0021C0                     l3315:
  5280   0021C0  502F               	movf	___flmul@bexp^0,w,c
  5281   0021C2  B4D8               	btfsc	status,2,c
  5282   0021C4  EFE6  F010         	goto	u3011
  5283   0021C8  EFE8  F010         	goto	u3010
  5284   0021CC                     u3011:
  5285   0021CC  EFFB  F010         	goto	l3323
  5286   0021D0                     u3010:
  5287   0021D0  282F               	incf	___flmul@bexp^0,w,c
  5288   0021D2  A4D8               	btfss	status,2,c
  5289   0021D4  EFEE  F010         	goto	u3021
  5290   0021D8  EFF0  F010         	goto	u3020
  5291   0021DC                     u3021:
  5292   0021DC  EFF8  F010         	goto	l3321
  5293   0021E0                     u3020:
  5294   0021E0  0E00               	movlw	0
  5295   0021E2  6E1D               	movwf	___flmul@b^0,c
  5296   0021E4  0E00               	movlw	0
  5297   0021E6  6E1E               	movwf	(___flmul@b+1)^0,c
  5298   0021E8  0E00               	movlw	0
  5299   0021EA  6E1F               	movwf	(___flmul@b+2)^0,c
  5300   0021EC  0E00               	movlw	0
  5301   0021EE  6E20               	movwf	(___flmul@b+3)^0,c
  5302   0021F0                     l3321:
  5303   0021F0  8E1F               	bsf	(___flmul@b+2)^0,7,c
  5304   0021F2  EF03  F011         	goto	l3325
  5305   0021F6                     l3323:
  5306   0021F6  0E00               	movlw	0
  5307   0021F8  6E1D               	movwf	___flmul@b^0,c
  5308   0021FA  0E00               	movlw	0
  5309   0021FC  6E1E               	movwf	(___flmul@b+1)^0,c
  5310   0021FE  0E00               	movlw	0
  5311   002200  6E1F               	movwf	(___flmul@b+2)^0,c
  5312   002202  0E00               	movlw	0
  5313   002204  6E20               	movwf	(___flmul@b+3)^0,c
  5314   002206                     l3325:
  5315   002206  5024               	movf	(___flmul@a+3)^0,w,c
  5316   002208  0B80               	andlw	128
  5317   00220A  1A29               	xorwf	___flmul@sign^0,f,c
  5318   00220C  5024               	movf	(___flmul@a+3)^0,w,c
  5319   00220E  2424               	addwf	(___flmul@a+3)^0,w,c
  5320   002210  6E2E               	movwf	___flmul@aexp^0,c
  5321   002212  AE23               	btfss	(___flmul@a+2)^0,7,c
  5322   002214  EF0E  F011         	goto	u3031
  5323   002218  EF10  F011         	goto	u3030
  5324   00221C                     u3031:
  5325   00221C  EF11  F011         	goto	l3333
  5326   002220                     u3030:
  5327   002220  802E               	bsf	___flmul@aexp^0,0,c
  5328   002222                     l3333:
  5329   002222  502E               	movf	___flmul@aexp^0,w,c
  5330   002224  B4D8               	btfsc	status,2,c
  5331   002226  EF17  F011         	goto	u3041
  5332   00222A  EF19  F011         	goto	u3040
  5333   00222E                     u3041:
  5334   00222E  EF2C  F011         	goto	l3341
  5335   002232                     u3040:
  5336   002232  282E               	incf	___flmul@aexp^0,w,c
  5337   002234  A4D8               	btfss	status,2,c
  5338   002236  EF1F  F011         	goto	u3051
  5339   00223A  EF21  F011         	goto	u3050
  5340   00223E                     u3051:
  5341   00223E  EF29  F011         	goto	l3339
  5342   002242                     u3050:
  5343   002242  0E00               	movlw	0
  5344   002244  6E21               	movwf	___flmul@a^0,c
  5345   002246  0E00               	movlw	0
  5346   002248  6E22               	movwf	(___flmul@a+1)^0,c
  5347   00224A  0E00               	movlw	0
  5348   00224C  6E23               	movwf	(___flmul@a+2)^0,c
  5349   00224E  0E00               	movlw	0
  5350   002250  6E24               	movwf	(___flmul@a+3)^0,c
  5351   002252                     l3339:
  5352   002252  8E23               	bsf	(___flmul@a+2)^0,7,c
  5353   002254  EF34  F011         	goto	l942
  5354   002258                     l3341:
  5355   002258  0E00               	movlw	0
  5356   00225A  6E21               	movwf	___flmul@a^0,c
  5357   00225C  0E00               	movlw	0
  5358   00225E  6E22               	movwf	(___flmul@a+1)^0,c
  5359   002260  0E00               	movlw	0
  5360   002262  6E23               	movwf	(___flmul@a+2)^0,c
  5361   002264  0E00               	movlw	0
  5362   002266  6E24               	movwf	(___flmul@a+3)^0,c
  5363   002268                     l942:
  5364   002268  502E               	movf	___flmul@aexp^0,w,c
  5365   00226A  B4D8               	btfsc	status,2,c
  5366   00226C  EF3A  F011         	goto	u3061
  5367   002270  EF3C  F011         	goto	u3060
  5368   002274                     u3061:
  5369   002274  EF44  F011         	goto	l3345
  5370   002278                     u3060:
  5371   002278  502F               	movf	___flmul@bexp^0,w,c
  5372   00227A  A4D8               	btfss	status,2,c
  5373   00227C  EF42  F011         	goto	u3071
  5374   002280  EF44  F011         	goto	u3070
  5375   002284                     u3071:
  5376   002284  EF4E  F011         	goto	l3349
  5377   002288                     u3070:
  5378   002288                     l3345:
  5379   002288  0E00               	movlw	0
  5380   00228A  6E1D               	movwf	?___flmul^0,c
  5381   00228C  0E00               	movlw	0
  5382   00228E  6E1E               	movwf	(?___flmul+1)^0,c
  5383   002290  0E00               	movlw	0
  5384   002292  6E1F               	movwf	(?___flmul+2)^0,c
  5385   002294  0E00               	movlw	0
  5386   002296  6E20               	movwf	(?___flmul+3)^0,c
  5387   002298  EFE6  F012         	goto	l946
  5388   00229C                     l3349:
  5389   00229C  5023               	movf	(___flmul@a+2)^0,w,c
  5390   00229E  021D               	mulwf	___flmul@b^0,c
  5391   0022A0  CFF3 F034          	movff	prodl,___flmul@temp
  5392   0022A4  CFF4 F035          	movff	prodh,___flmul@temp+1
  5393   0022A8  5034               	movf	___flmul@temp^0,w,c
  5394   0022AA  6E2A               	movwf	___flmul@grs^0,c
  5395   0022AC  6A2B               	clrf	(___flmul@grs+1)^0,c
  5396   0022AE  6A2C               	clrf	(___flmul@grs+2)^0,c
  5397   0022B0  6A2D               	clrf	(___flmul@grs+3)^0,c
  5398   0022B2  5035               	movf	(___flmul@temp+1)^0,w,c
  5399   0022B4  6E30               	movwf	___flmul@prod^0,c
  5400   0022B6  6A31               	clrf	(___flmul@prod+1)^0,c
  5401   0022B8  6A32               	clrf	(___flmul@prod+2)^0,c
  5402   0022BA  6A33               	clrf	(___flmul@prod+3)^0,c
  5403   0022BC  5022               	movf	(___flmul@a+1)^0,w,c
  5404   0022BE  021E               	mulwf	(___flmul@b+1)^0,c
  5405   0022C0  CFF3 F034          	movff	prodl,___flmul@temp
  5406   0022C4  CFF4 F035          	movff	prodh,___flmul@temp+1
  5407   0022C8  5034               	movf	___flmul@temp^0,w,c
  5408   0022CA  262A               	addwf	___flmul@grs^0,f,c
  5409   0022CC  0E00               	movlw	0
  5410   0022CE  222B               	addwfc	(___flmul@grs+1)^0,f,c
  5411   0022D0  222C               	addwfc	(___flmul@grs+2)^0,f,c
  5412   0022D2  222D               	addwfc	(___flmul@grs+3)^0,f,c
  5413   0022D4  5035               	movf	(___flmul@temp+1)^0,w,c
  5414   0022D6  2630               	addwf	___flmul@prod^0,f,c
  5415   0022D8  0E00               	movlw	0
  5416   0022DA  2231               	addwfc	(___flmul@prod+1)^0,f,c
  5417   0022DC  2232               	addwfc	(___flmul@prod+2)^0,f,c
  5418   0022DE  2233               	addwfc	(___flmul@prod+3)^0,f,c
  5419   0022E0  5021               	movf	___flmul@a^0,w,c
  5420   0022E2  021F               	mulwf	(___flmul@b+2)^0,c
  5421   0022E4  CFF3 F034          	movff	prodl,___flmul@temp
  5422   0022E8  CFF4 F035          	movff	prodh,___flmul@temp+1
  5423   0022EC  5034               	movf	___flmul@temp^0,w,c
  5424   0022EE  262A               	addwf	___flmul@grs^0,f,c
  5425   0022F0  0E00               	movlw	0
  5426   0022F2  222B               	addwfc	(___flmul@grs+1)^0,f,c
  5427   0022F4  222C               	addwfc	(___flmul@grs+2)^0,f,c
  5428   0022F6  222D               	addwfc	(___flmul@grs+3)^0,f,c
  5429   0022F8  5035               	movf	(___flmul@temp+1)^0,w,c
  5430   0022FA  2630               	addwf	___flmul@prod^0,f,c
  5431   0022FC  0E00               	movlw	0
  5432   0022FE  2231               	addwfc	(___flmul@prod+1)^0,f,c
  5433   002300  2232               	addwfc	(___flmul@prod+2)^0,f,c
  5434   002302  2233               	addwfc	(___flmul@prod+3)^0,f,c
  5435   002304  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  5436   002308  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  5437   00230C  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  5438   002310  6A2A               	clrf	___flmul@grs^0,c
  5439   002312  5021               	movf	___flmul@a^0,w,c
  5440   002314  021E               	mulwf	(___flmul@b+1)^0,c
  5441   002316  CFF3 F034          	movff	prodl,___flmul@temp
  5442   00231A  CFF4 F035          	movff	prodh,___flmul@temp+1
  5443   00231E  5034               	movf	___flmul@temp^0,w,c
  5444   002320  262A               	addwf	___flmul@grs^0,f,c
  5445   002322  5035               	movf	(___flmul@temp+1)^0,w,c
  5446   002324  222B               	addwfc	(___flmul@grs+1)^0,f,c
  5447   002326  0E00               	movlw	0
  5448   002328  222C               	addwfc	(___flmul@grs+2)^0,f,c
  5449   00232A  0E00               	movlw	0
  5450   00232C  222D               	addwfc	(___flmul@grs+3)^0,f,c
  5451   00232E  5022               	movf	(___flmul@a+1)^0,w,c
  5452   002330  021D               	mulwf	___flmul@b^0,c
  5453   002332  CFF3 F034          	movff	prodl,___flmul@temp
  5454   002336  CFF4 F035          	movff	prodh,___flmul@temp+1
  5455   00233A  5034               	movf	___flmul@temp^0,w,c
  5456   00233C  262A               	addwf	___flmul@grs^0,f,c
  5457   00233E  5035               	movf	(___flmul@temp+1)^0,w,c
  5458   002340  222B               	addwfc	(___flmul@grs+1)^0,f,c
  5459   002342  0E00               	movlw	0
  5460   002344  222C               	addwfc	(___flmul@grs+2)^0,f,c
  5461   002346  0E00               	movlw	0
  5462   002348  222D               	addwfc	(___flmul@grs+3)^0,f,c
  5463   00234A  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  5464   00234E  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  5465   002352  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  5466   002356  6A2A               	clrf	___flmul@grs^0,c
  5467   002358  5021               	movf	___flmul@a^0,w,c
  5468   00235A  021D               	mulwf	___flmul@b^0,c
  5469   00235C  CFF3 F034          	movff	prodl,___flmul@temp
  5470   002360  CFF4 F035          	movff	prodh,___flmul@temp+1
  5471   002364  5034               	movf	___flmul@temp^0,w,c
  5472   002366  262A               	addwf	___flmul@grs^0,f,c
  5473   002368  5035               	movf	(___flmul@temp+1)^0,w,c
  5474   00236A  222B               	addwfc	(___flmul@grs+1)^0,f,c
  5475   00236C  0E00               	movlw	0
  5476   00236E  222C               	addwfc	(___flmul@grs+2)^0,f,c
  5477   002370  0E00               	movlw	0
  5478   002372  222D               	addwfc	(___flmul@grs+3)^0,f,c
  5479   002374  5023               	movf	(___flmul@a+2)^0,w,c
  5480   002376  021E               	mulwf	(___flmul@b+1)^0,c
  5481   002378  CFF3 F034          	movff	prodl,___flmul@temp
  5482   00237C  CFF4 F035          	movff	prodh,___flmul@temp+1
  5483   002380  5034               	movf	___flmul@temp^0,w,c
  5484   002382  2630               	addwf	___flmul@prod^0,f,c
  5485   002384  5035               	movf	(___flmul@temp+1)^0,w,c
  5486   002386  2231               	addwfc	(___flmul@prod+1)^0,f,c
  5487   002388  0E00               	movlw	0
  5488   00238A  2232               	addwfc	(___flmul@prod+2)^0,f,c
  5489   00238C  0E00               	movlw	0
  5490   00238E  2233               	addwfc	(___flmul@prod+3)^0,f,c
  5491   002390  5022               	movf	(___flmul@a+1)^0,w,c
  5492   002392  021F               	mulwf	(___flmul@b+2)^0,c
  5493   002394  CFF3 F034          	movff	prodl,___flmul@temp
  5494   002398  CFF4 F035          	movff	prodh,___flmul@temp+1
  5495   00239C  5034               	movf	___flmul@temp^0,w,c
  5496   00239E  2630               	addwf	___flmul@prod^0,f,c
  5497   0023A0  5035               	movf	(___flmul@temp+1)^0,w,c
  5498   0023A2  2231               	addwfc	(___flmul@prod+1)^0,f,c
  5499   0023A4  0E00               	movlw	0
  5500   0023A6  2232               	addwfc	(___flmul@prod+2)^0,f,c
  5501   0023A8  0E00               	movlw	0
  5502   0023AA  2233               	addwfc	(___flmul@prod+3)^0,f,c
  5503   0023AC  5023               	movf	(___flmul@a+2)^0,w,c
  5504   0023AE  021F               	mulwf	(___flmul@b+2)^0,c
  5505   0023B0  CFF3 F034          	movff	prodl,___flmul@temp
  5506   0023B4  CFF4 F035          	movff	prodh,___flmul@temp+1
  5507   0023B8  5034               	movf	___flmul@temp^0,w,c
  5508   0023BA  6E25               	movwf	??___flmul^0,c
  5509   0023BC  5035               	movf	(___flmul@temp+1)^0,w,c
  5510   0023BE  6E26               	movwf	(??___flmul+1)^0,c
  5511   0023C0  6A27               	clrf	(??___flmul+2)^0,c
  5512   0023C2  6A28               	clrf	(??___flmul+3)^0,c
  5513   0023C4  C027  F028         	movff	??___flmul+2,??___flmul+3
  5514   0023C8  C026  F027         	movff	??___flmul+1,??___flmul+2
  5515   0023CC  C025  F026         	movff	??___flmul,??___flmul+1
  5516   0023D0  6A25               	clrf	??___flmul^0,c
  5517   0023D2  5025               	movf	??___flmul^0,w,c
  5518   0023D4  2630               	addwf	___flmul@prod^0,f,c
  5519   0023D6  5026               	movf	(??___flmul+1)^0,w,c
  5520   0023D8  2231               	addwfc	(___flmul@prod+1)^0,f,c
  5521   0023DA  5027               	movf	(??___flmul+2)^0,w,c
  5522   0023DC  2232               	addwfc	(___flmul@prod+2)^0,f,c
  5523   0023DE  5028               	movf	(??___flmul+3)^0,w,c
  5524   0023E0  2233               	addwfc	(___flmul@prod+3)^0,f,c
  5525   0023E2  C02A  F025         	movff	___flmul@grs,??___flmul
  5526   0023E6  C02B  F026         	movff	___flmul@grs+1,??___flmul+1
  5527   0023EA  C02C  F027         	movff	___flmul@grs+2,??___flmul+2
  5528   0023EE  C02D  F028         	movff	___flmul@grs+3,??___flmul+3
  5529   0023F2  0E19               	movlw	25
  5530   0023F4  EF01  F012         	goto	u3080
  5531   0023F8                     u3085:
  5532   0023F8  90D8               	bcf	status,0,c
  5533   0023FA  3228               	rrcf	(??___flmul+3)^0,f,c
  5534   0023FC  3227               	rrcf	(??___flmul+2)^0,f,c
  5535   0023FE  3226               	rrcf	(??___flmul+1)^0,f,c
  5536   002400  3225               	rrcf	??___flmul^0,f,c
  5537   002402                     u3080:
  5538   002402  2EE8               	decfsz	wreg,f,c
  5539   002404  EFFC  F011         	goto	u3085
  5540   002408  5025               	movf	??___flmul^0,w,c
  5541   00240A  2630               	addwf	___flmul@prod^0,f,c
  5542   00240C  5026               	movf	(??___flmul+1)^0,w,c
  5543   00240E  2231               	addwfc	(___flmul@prod+1)^0,f,c
  5544   002410  5027               	movf	(??___flmul+2)^0,w,c
  5545   002412  2232               	addwfc	(___flmul@prod+2)^0,f,c
  5546   002414  5028               	movf	(??___flmul+3)^0,w,c
  5547   002416  2233               	addwfc	(___flmul@prod+3)^0,f,c
  5548   002418  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  5549   00241C  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  5550   002420  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  5551   002424  6A2A               	clrf	___flmul@grs^0,c
  5552   002426  502E               	movf	___flmul@aexp^0,w,c
  5553   002428  C02F  F025         	movff	___flmul@bexp,??___flmul
  5554   00242C  6A26               	clrf	(??___flmul+1)^0,c
  5555   00242E  2625               	addwf	??___flmul^0,f,c
  5556   002430  0E00               	movlw	0
  5557   002432  2226               	addwfc	(??___flmul+1)^0,f,c
  5558   002434  0E82               	movlw	130
  5559   002436  2425               	addwf	??___flmul^0,w,c
  5560   002438  6E34               	movwf	___flmul@temp^0,c
  5561   00243A  0EFF               	movlw	255
  5562   00243C  2026               	addwfc	(??___flmul+1)^0,w,c
  5563   00243E  6E35               	movwf	(___flmul@temp+1)^0,c
  5564   002440  EF37  F012         	goto	l3397
  5565   002444                     l3391:
  5566   002444  90D8               	bcf	status,0,c
  5567   002446  3630               	rlcf	___flmul@prod^0,f,c
  5568   002448  3631               	rlcf	(___flmul@prod+1)^0,f,c
  5569   00244A  3632               	rlcf	(___flmul@prod+2)^0,f,c
  5570   00244C  3633               	rlcf	(___flmul@prod+3)^0,f,c
  5571   00244E  AE2D               	btfss	(___flmul@grs+3)^0,7,c
  5572   002450  EF2C  F012         	goto	u3091
  5573   002454  EF2E  F012         	goto	u3090
  5574   002458                     u3091:
  5575   002458  EF2F  F012         	goto	l949
  5576   00245C                     u3090:
  5577   00245C  8030               	bsf	___flmul@prod^0,0,c
  5578   00245E                     l949:
  5579   00245E  90D8               	bcf	status,0,c
  5580   002460  362A               	rlcf	___flmul@grs^0,f,c
  5581   002462  362B               	rlcf	(___flmul@grs+1)^0,f,c
  5582   002464  362C               	rlcf	(___flmul@grs+2)^0,f,c
  5583   002466  362D               	rlcf	(___flmul@grs+3)^0,f,c
  5584   002468  0634               	decf	___flmul@temp^0,f,c
  5585   00246A  A0D8               	btfss	status,0,c
  5586   00246C  0635               	decf	(___flmul@temp+1)^0,f,c
  5587   00246E                     l3397:
  5588   00246E  AE32               	btfss	(___flmul@prod+2)^0,7,c
  5589   002470  EF3C  F012         	goto	u3101
  5590   002474  EF3E  F012         	goto	u3100
  5591   002478                     u3101:
  5592   002478  EF22  F012         	goto	l3391
  5593   00247C                     u3100:
  5594   00247C  0E00               	movlw	0
  5595   00247E  6E2E               	movwf	___flmul@aexp^0,c
  5596   002480  AE2D               	btfss	(___flmul@grs+3)^0,7,c
  5597   002482  EF45  F012         	goto	u3111
  5598   002486  EF47  F012         	goto	u3110
  5599   00248A                     u3111:
  5600   00248A  EF6B  F012         	goto	l951
  5601   00248E                     u3110:
  5602   00248E  0EFF               	movlw	255
  5603   002490  142A               	andwf	___flmul@grs^0,w,c
  5604   002492  6E25               	movwf	??___flmul^0,c
  5605   002494  0EFF               	movlw	255
  5606   002496  142B               	andwf	(___flmul@grs+1)^0,w,c
  5607   002498  6E26               	movwf	(??___flmul+1)^0,c
  5608   00249A  0EFF               	movlw	255
  5609   00249C  142C               	andwf	(___flmul@grs+2)^0,w,c
  5610   00249E  6E27               	movwf	(??___flmul+2)^0,c
  5611   0024A0  0E7F               	movlw	127
  5612   0024A2  142D               	andwf	(___flmul@grs+3)^0,w,c
  5613   0024A4  6E28               	movwf	(??___flmul+3)^0,c
  5614   0024A6  5025               	movf	??___flmul^0,w,c
  5615   0024A8  1026               	iorwf	(??___flmul+1)^0,w,c
  5616   0024AA  1027               	iorwf	(??___flmul+2)^0,w,c
  5617   0024AC  1028               	iorwf	(??___flmul+3)^0,w,c
  5618   0024AE  B4D8               	btfsc	status,2,c
  5619   0024B0  EF5C  F012         	goto	u3121
  5620   0024B4  EF5E  F012         	goto	u3120
  5621   0024B8                     u3121:
  5622   0024B8  EF62  F012         	goto	l952
  5623   0024BC                     u3120:
  5624   0024BC                     l3405:
  5625   0024BC  0E01               	movlw	1
  5626   0024BE  6E2E               	movwf	___flmul@aexp^0,c
  5627   0024C0  EF6B  F012         	goto	l951
  5628   0024C4                     l952:
  5629   0024C4  A030               	btfss	___flmul@prod^0,0,c
  5630   0024C6  EF67  F012         	goto	u3131
  5631   0024CA  EF69  F012         	goto	u3130
  5632   0024CE                     u3131:
  5633   0024CE  EF6B  F012         	goto	l951
  5634   0024D2                     u3130:
  5635   0024D2  EF5E  F012         	goto	l3405
  5636   0024D6                     l951:
  5637   0024D6  502E               	movf	___flmul@aexp^0,w,c
  5638   0024D8  B4D8               	btfsc	status,2,c
  5639   0024DA  EF71  F012         	goto	u3141
  5640   0024DE  EF73  F012         	goto	u3140
  5641   0024E2                     u3141:
  5642   0024E2  EF97  F012         	goto	l3417
  5643   0024E6                     u3140:
  5644   0024E6  0E01               	movlw	1
  5645   0024E8  2630               	addwf	___flmul@prod^0,f,c
  5646   0024EA  0E00               	movlw	0
  5647   0024EC  2231               	addwfc	(___flmul@prod+1)^0,f,c
  5648   0024EE  2232               	addwfc	(___flmul@prod+2)^0,f,c
  5649   0024F0  2233               	addwfc	(___flmul@prod+3)^0,f,c
  5650   0024F2  A033               	btfss	(___flmul@prod+3)^0,0,c
  5651   0024F4  EF7E  F012         	goto	u3151
  5652   0024F8  EF80  F012         	goto	u3150
  5653   0024FC                     u3151:
  5654   0024FC  EF97  F012         	goto	l3417
  5655   002500                     u3150:
  5656   002500  C030  F025         	movff	___flmul@prod,??___flmul
  5657   002504  C031  F026         	movff	___flmul@prod+1,??___flmul+1
  5658   002508  C032  F027         	movff	___flmul@prod+2,??___flmul+2
  5659   00250C  C033  F028         	movff	___flmul@prod+3,??___flmul+3
  5660   002510  3428               	rlcf	(??___flmul+3)^0,w,c
  5661   002512  3228               	rrcf	(??___flmul+3)^0,f,c
  5662   002514  3227               	rrcf	(??___flmul+2)^0,f,c
  5663   002516  3226               	rrcf	(??___flmul+1)^0,f,c
  5664   002518  3225               	rrcf	??___flmul^0,f,c
  5665   00251A  C025  F030         	movff	??___flmul,___flmul@prod
  5666   00251E  C026  F031         	movff	??___flmul+1,___flmul@prod+1
  5667   002522  C027  F032         	movff	??___flmul+2,___flmul@prod+2
  5668   002526  C028  F033         	movff	??___flmul+3,___flmul@prod+3
  5669   00252A  4A34               	infsnz	___flmul@temp^0,f,c
  5670   00252C  2A35               	incf	(___flmul@temp+1)^0,f,c
  5671   00252E                     l3417:
  5672   00252E  BE35               	btfsc	(___flmul@temp+1)^0,7,c
  5673   002530  EFA2  F012         	goto	u3161
  5674   002534  5035               	movf	(___flmul@temp+1)^0,w,c
  5675   002536  E108               	bnz	u3160
  5676   002538  2834               	incf	___flmul@temp^0,w,c
  5677   00253A  A0D8               	btfss	status,0,c
  5678   00253C  EFA2  F012         	goto	u3161
  5679   002540  EFA4  F012         	goto	u3160
  5680   002544                     u3161:
  5681   002544  EFAE  F012         	goto	l3421
  5682   002548                     u3160:
  5683   002548  0E00               	movlw	0
  5684   00254A  6E30               	movwf	___flmul@prod^0,c
  5685   00254C  0E00               	movlw	0
  5686   00254E  6E31               	movwf	(___flmul@prod+1)^0,c
  5687   002550  0E80               	movlw	128
  5688   002552  6E32               	movwf	(___flmul@prod+2)^0,c
  5689   002554  0E7F               	movlw	127
  5690   002556  6E33               	movwf	(___flmul@prod+3)^0,c
  5691   002558  EFDC  F012         	goto	l3433
  5692   00255C                     l3421:
  5693   00255C  BE35               	btfsc	(___flmul@temp+1)^0,7,c
  5694   00255E  EFBB  F012         	goto	u3170
  5695   002562  5035               	movf	(___flmul@temp+1)^0,w,c
  5696   002564  E106               	bnz	u3171
  5697   002566  0434               	decf	___flmul@temp^0,w,c
  5698   002568  B0D8               	btfsc	status,0,c
  5699   00256A  EFB9  F012         	goto	u3171
  5700   00256E  EFBB  F012         	goto	u3170
  5701   002572                     u3171:
  5702   002572  EFC7  F012         	goto	l959
  5703   002576                     u3170:
  5704   002576  0E00               	movlw	0
  5705   002578  6E30               	movwf	___flmul@prod^0,c
  5706   00257A  0E00               	movlw	0
  5707   00257C  6E31               	movwf	(___flmul@prod+1)^0,c
  5708   00257E  0E00               	movlw	0
  5709   002580  6E32               	movwf	(___flmul@prod+2)^0,c
  5710   002582  0E00               	movlw	0
  5711   002584  6E33               	movwf	(___flmul@prod+3)^0,c
  5712   002586  0E00               	movlw	0
  5713   002588  6E29               	movwf	___flmul@sign^0,c
  5714   00258A  EFDC  F012         	goto	l3433
  5715   00258E                     l959:
  5716   00258E  C034  F02F         	movff	___flmul@temp,___flmul@bexp
  5717   002592  0EFF               	movlw	255
  5718   002594  1630               	andwf	___flmul@prod^0,f,c
  5719   002596  0EFF               	movlw	255
  5720   002598  1631               	andwf	(___flmul@prod+1)^0,f,c
  5721   00259A  0E7F               	movlw	127
  5722   00259C  1632               	andwf	(___flmul@prod+2)^0,f,c
  5723   00259E  0E00               	movlw	0
  5724   0025A0  1633               	andwf	(___flmul@prod+3)^0,f,c
  5725   0025A2  A02F               	btfss	___flmul@bexp^0,0,c
  5726   0025A4  EFD6  F012         	goto	u3181
  5727   0025A8  EFD8  F012         	goto	u3180
  5728   0025AC                     u3181:
  5729   0025AC  EFD9  F012         	goto	l3431
  5730   0025B0                     u3180:
  5731   0025B0  8E32               	bsf	(___flmul@prod+2)^0,7,c
  5732   0025B2                     l3431:
  5733   0025B2  90D8               	bcf	status,0,c
  5734   0025B4  302F               	rrcf	___flmul@bexp^0,w,c
  5735   0025B6  6E33               	movwf	(___flmul@prod+3)^0,c
  5736   0025B8                     l3433:
  5737   0025B8  5029               	movf	___flmul@sign^0,w,c
  5738   0025BA  1233               	iorwf	(___flmul@prod+3)^0,f,c
  5739   0025BC  C030  F01D         	movff	___flmul@prod,?___flmul
  5740   0025C0  C031  F01E         	movff	___flmul@prod+1,?___flmul+1
  5741   0025C4  C032  F01F         	movff	___flmul@prod+2,?___flmul+2
  5742   0025C8  C033  F020         	movff	___flmul@prod+3,?___flmul+3
  5743   0025CC                     l946:
  5744   0025CC  0012               	return		;funcret
  5745   0025CE                     __end_of___flmul:
  5746                           	callstack 0
  5747                           
  5748 ;; *************** function ___flge *****************
  5749 ;; Defined at:
  5750 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  5751 ;; Parameters:    Size  Location     Type
  5752 ;;  ff1             4   53[COMRAM] unsigned char 
  5753 ;;  ff2             4   57[COMRAM] unsigned char 
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;		None
  5756 ;; Return value:  Size  Location     Type
  5757 ;;		None               void
  5758 ;; Registers used:
  5759 ;;		wreg, status,2, status,0
  5760 ;; Tracked objects:
  5761 ;;		On entry : 0/0
  5762 ;;		On exit  : 0/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5765 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5767 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5768 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5769 ;;Total ram usage:       12 bytes
  5770 ;; Hardware stack levels used: 1
  5771 ;; Hardware stack levels required when called: 2
  5772 ;; This function calls:
  5773 ;;		Nothing
  5774 ;; This function is called by:
  5775 ;;		_efgtoa
  5776 ;; This function uses a non-reentrant model
  5777 ;;
  5778                           
  5779                           	psect	text15
  5780   0036A8                     __ptext15:
  5781                           	callstack 0
  5782   0036A8                     ___flge:
  5783                           	callstack 24
  5784   0036A8  0E00               	movlw	0
  5785   0036AA  1436               	andwf	___flge@ff1^0,w,c
  5786   0036AC  6E3E               	movwf	??___flge^0,c
  5787   0036AE  0E00               	movlw	0
  5788   0036B0  1437               	andwf	(___flge@ff1+1)^0,w,c
  5789   0036B2  6E3F               	movwf	(??___flge+1)^0,c
  5790   0036B4  0E80               	movlw	128
  5791   0036B6  1438               	andwf	(___flge@ff1+2)^0,w,c
  5792   0036B8  6E40               	movwf	(??___flge+2)^0,c
  5793   0036BA  0E7F               	movlw	127
  5794   0036BC  1439               	andwf	(___flge@ff1+3)^0,w,c
  5795   0036BE  6E41               	movwf	(??___flge+3)^0,c
  5796   0036C0  503E               	movf	??___flge^0,w,c
  5797   0036C2  103F               	iorwf	(??___flge+1)^0,w,c
  5798   0036C4  1040               	iorwf	(??___flge+2)^0,w,c
  5799   0036C6  1041               	iorwf	(??___flge+3)^0,w,c
  5800   0036C8  A4D8               	btfss	status,2,c
  5801   0036CA  EF69  F01B         	goto	u3221
  5802   0036CE  EF6B  F01B         	goto	u3220
  5803   0036D2                     u3221:
  5804   0036D2  EF73  F01B         	goto	l3465
  5805   0036D6                     u3220:
  5806   0036D6  0E00               	movlw	0
  5807   0036D8  6E36               	movwf	___flge@ff1^0,c
  5808   0036DA  0E00               	movlw	0
  5809   0036DC  6E37               	movwf	(___flge@ff1+1)^0,c
  5810   0036DE  0E00               	movlw	0
  5811   0036E0  6E38               	movwf	(___flge@ff1+2)^0,c
  5812   0036E2  0E00               	movlw	0
  5813   0036E4  6E39               	movwf	(___flge@ff1+3)^0,c
  5814   0036E6                     l3465:
  5815   0036E6  0E00               	movlw	0
  5816   0036E8  143A               	andwf	___flge@ff2^0,w,c
  5817   0036EA  6E3E               	movwf	??___flge^0,c
  5818   0036EC  0E00               	movlw	0
  5819   0036EE  143B               	andwf	(___flge@ff2+1)^0,w,c
  5820   0036F0  6E3F               	movwf	(??___flge+1)^0,c
  5821   0036F2  0E80               	movlw	128
  5822   0036F4  143C               	andwf	(___flge@ff2+2)^0,w,c
  5823   0036F6  6E40               	movwf	(??___flge+2)^0,c
  5824   0036F8  0E7F               	movlw	127
  5825   0036FA  143D               	andwf	(___flge@ff2+3)^0,w,c
  5826   0036FC  6E41               	movwf	(??___flge+3)^0,c
  5827   0036FE  503E               	movf	??___flge^0,w,c
  5828   003700  103F               	iorwf	(??___flge+1)^0,w,c
  5829   003702  1040               	iorwf	(??___flge+2)^0,w,c
  5830   003704  1041               	iorwf	(??___flge+3)^0,w,c
  5831   003706  A4D8               	btfss	status,2,c
  5832   003708  EF88  F01B         	goto	u3231
  5833   00370C  EF8A  F01B         	goto	u3230
  5834   003710                     u3231:
  5835   003710  EF92  F01B         	goto	l3469
  5836   003714                     u3230:
  5837   003714  0E00               	movlw	0
  5838   003716  6E3A               	movwf	___flge@ff2^0,c
  5839   003718  0E00               	movlw	0
  5840   00371A  6E3B               	movwf	(___flge@ff2+1)^0,c
  5841   00371C  0E00               	movlw	0
  5842   00371E  6E3C               	movwf	(___flge@ff2+2)^0,c
  5843   003720  0E00               	movlw	0
  5844   003722  6E3D               	movwf	(___flge@ff2+3)^0,c
  5845   003724                     l3469:
  5846   003724  AE39               	btfss	(___flge@ff1+3)^0,7,c
  5847   003726  EF97  F01B         	goto	u3241
  5848   00372A  EF99  F01B         	goto	u3240
  5849   00372E                     u3241:
  5850   00372E  EFA2  F01B         	goto	l3473
  5851   003732                     u3240:
  5852   003732  6C36               	negf	___flge@ff1^0,c
  5853   003734  1E37               	comf	(___flge@ff1+1)^0,f,c
  5854   003736  B0D8               	btfsc	status,0,c
  5855   003738  2A37               	incf	(___flge@ff1+1)^0,f,c
  5856   00373A  1E38               	comf	(___flge@ff1+2)^0,f,c
  5857   00373C  B0D8               	btfsc	status,0,c
  5858   00373E  2A38               	incf	(___flge@ff1+2)^0,f,c
  5859   003740  0E80               	movlw	128
  5860   003742  5639               	subfwb	(___flge@ff1+3)^0,f,c
  5861   003744                     l3473:
  5862   003744  AE3D               	btfss	(___flge@ff2+3)^0,7,c
  5863   003746  EFA7  F01B         	goto	u3251
  5864   00374A  EFA9  F01B         	goto	u3250
  5865   00374E                     u3251:
  5866   00374E  EFB2  F01B         	goto	l593
  5867   003752                     u3250:
  5868   003752  6C3A               	negf	___flge@ff2^0,c
  5869   003754  1E3B               	comf	(___flge@ff2+1)^0,f,c
  5870   003756  B0D8               	btfsc	status,0,c
  5871   003758  2A3B               	incf	(___flge@ff2+1)^0,f,c
  5872   00375A  1E3C               	comf	(___flge@ff2+2)^0,f,c
  5873   00375C  B0D8               	btfsc	status,0,c
  5874   00375E  2A3C               	incf	(___flge@ff2+2)^0,f,c
  5875   003760  0E80               	movlw	128
  5876   003762  563D               	subfwb	(___flge@ff2+3)^0,f,c
  5877   003764                     l593:
  5878   003764  0E00               	movlw	0
  5879   003766  1A36               	xorwf	___flge@ff1^0,f,c
  5880   003768  0E00               	movlw	0
  5881   00376A  1A37               	xorwf	(___flge@ff1+1)^0,f,c
  5882   00376C  0E00               	movlw	0
  5883   00376E  1A38               	xorwf	(___flge@ff1+2)^0,f,c
  5884   003770  0E80               	movlw	128
  5885   003772  1A39               	xorwf	(___flge@ff1+3)^0,f,c
  5886   003774  0E00               	movlw	0
  5887   003776  1A3A               	xorwf	___flge@ff2^0,f,c
  5888   003778  0E00               	movlw	0
  5889   00377A  1A3B               	xorwf	(___flge@ff2+1)^0,f,c
  5890   00377C  0E00               	movlw	0
  5891   00377E  1A3C               	xorwf	(___flge@ff2+2)^0,f,c
  5892   003780  0E80               	movlw	128
  5893   003782  1A3D               	xorwf	(___flge@ff2+3)^0,f,c
  5894   003784  503A               	movf	___flge@ff2^0,w,c
  5895   003786  5C36               	subwf	___flge@ff1^0,w,c
  5896   003788  503B               	movf	(___flge@ff2+1)^0,w,c
  5897   00378A  5837               	subwfb	(___flge@ff1+1)^0,w,c
  5898   00378C  503C               	movf	(___flge@ff2+2)^0,w,c
  5899   00378E  5838               	subwfb	(___flge@ff1+2)^0,w,c
  5900   003790  503D               	movf	(___flge@ff2+3)^0,w,c
  5901   003792  5839               	subwfb	(___flge@ff1+3)^0,w,c
  5902   003794  B0D8               	btfsc	status,0,c
  5903   003796  EFCF  F01B         	goto	u3261
  5904   00379A  EFD1  F01B         	goto	u3260
  5905   00379E                     u3261:
  5906   00379E  EFD4  F01B         	goto	l3479
  5907   0037A2                     u3260:
  5908   0037A2  90D8               	bcf	status,0,c
  5909   0037A4  EFD5  F01B         	goto	l598
  5910   0037A8                     l3479:
  5911   0037A8  80D8               	bsf	status,0,c
  5912   0037AA                     l598:
  5913   0037AA  0012               	return		;funcret
  5914   0037AC                     __end_of___flge:
  5915                           	callstack 0
  5916                           
  5917 ;; *************** function ___fleq *****************
  5918 ;; Defined at:
  5919 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;  ff1             4    4[COMRAM] unsigned char 
  5922 ;;  ff2             4    8[COMRAM] unsigned char 
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;		None
  5925 ;; Return value:  Size  Location     Type
  5926 ;;		None               void
  5927 ;; Registers used:
  5928 ;;		wreg, status,2, status,0
  5929 ;; Tracked objects:
  5930 ;;		On entry : 0/0
  5931 ;;		On exit  : 0/0
  5932 ;;		Unchanged: 0/0
  5933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5934 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5936 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5937 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5938 ;;Total ram usage:       12 bytes
  5939 ;; Hardware stack levels used: 1
  5940 ;; Hardware stack levels required when called: 2
  5941 ;; This function calls:
  5942 ;;		Nothing
  5943 ;; This function is called by:
  5944 ;;		_efgtoa
  5945 ;; This function uses a non-reentrant model
  5946 ;;
  5947                           
  5948                           	psect	text16
  5949   003974                     __ptext16:
  5950                           	callstack 0
  5951   003974                     ___fleq:
  5952                           	callstack 24
  5953   003974  0E00               	movlw	0
  5954   003976  1405               	andwf	___fleq@ff1^0,w,c
  5955   003978  6E0D               	movwf	??___fleq^0,c
  5956   00397A  0E00               	movlw	0
  5957   00397C  1406               	andwf	(___fleq@ff1+1)^0,w,c
  5958   00397E  6E0E               	movwf	(??___fleq+1)^0,c
  5959   003980  0E80               	movlw	128
  5960   003982  1407               	andwf	(___fleq@ff1+2)^0,w,c
  5961   003984  6E0F               	movwf	(??___fleq+2)^0,c
  5962   003986  0E7F               	movlw	127
  5963   003988  1408               	andwf	(___fleq@ff1+3)^0,w,c
  5964   00398A  6E10               	movwf	(??___fleq+3)^0,c
  5965   00398C  500D               	movf	??___fleq^0,w,c
  5966   00398E  100E               	iorwf	(??___fleq+1)^0,w,c
  5967   003990  100F               	iorwf	(??___fleq+2)^0,w,c
  5968   003992  1010               	iorwf	(??___fleq+3)^0,w,c
  5969   003994  A4D8               	btfss	status,2,c
  5970   003996  EFCF  F01C         	goto	u3191
  5971   00399A  EFD1  F01C         	goto	u3190
  5972   00399E                     u3191:
  5973   00399E  EFD9  F01C         	goto	l3449
  5974   0039A2                     u3190:
  5975   0039A2  0E00               	movlw	0
  5976   0039A4  6E05               	movwf	___fleq@ff1^0,c
  5977   0039A6  0E00               	movlw	0
  5978   0039A8  6E06               	movwf	(___fleq@ff1+1)^0,c
  5979   0039AA  0E00               	movlw	0
  5980   0039AC  6E07               	movwf	(___fleq@ff1+2)^0,c
  5981   0039AE  0E00               	movlw	0
  5982   0039B0  6E08               	movwf	(___fleq@ff1+3)^0,c
  5983   0039B2                     l3449:
  5984   0039B2  0E00               	movlw	0
  5985   0039B4  1409               	andwf	___fleq@ff2^0,w,c
  5986   0039B6  6E0D               	movwf	??___fleq^0,c
  5987   0039B8  0E00               	movlw	0
  5988   0039BA  140A               	andwf	(___fleq@ff2+1)^0,w,c
  5989   0039BC  6E0E               	movwf	(??___fleq+1)^0,c
  5990   0039BE  0E80               	movlw	128
  5991   0039C0  140B               	andwf	(___fleq@ff2+2)^0,w,c
  5992   0039C2  6E0F               	movwf	(??___fleq+2)^0,c
  5993   0039C4  0E7F               	movlw	127
  5994   0039C6  140C               	andwf	(___fleq@ff2+3)^0,w,c
  5995   0039C8  6E10               	movwf	(??___fleq+3)^0,c
  5996   0039CA  500D               	movf	??___fleq^0,w,c
  5997   0039CC  100E               	iorwf	(??___fleq+1)^0,w,c
  5998   0039CE  100F               	iorwf	(??___fleq+2)^0,w,c
  5999   0039D0  1010               	iorwf	(??___fleq+3)^0,w,c
  6000   0039D2  A4D8               	btfss	status,2,c
  6001   0039D4  EFEE  F01C         	goto	u3201
  6002   0039D8  EFF0  F01C         	goto	u3200
  6003   0039DC                     u3201:
  6004   0039DC  EFF8  F01C         	goto	l3453
  6005   0039E0                     u3200:
  6006   0039E0  0E00               	movlw	0
  6007   0039E2  6E09               	movwf	___fleq@ff2^0,c
  6008   0039E4  0E00               	movlw	0
  6009   0039E6  6E0A               	movwf	(___fleq@ff2+1)^0,c
  6010   0039E8  0E00               	movlw	0
  6011   0039EA  6E0B               	movwf	(___fleq@ff2+2)^0,c
  6012   0039EC  0E00               	movlw	0
  6013   0039EE  6E0C               	movwf	(___fleq@ff2+3)^0,c
  6014   0039F0                     l3453:
  6015   0039F0  5009               	movf	___fleq@ff2^0,w,c
  6016   0039F2  1805               	xorwf	___fleq@ff1^0,w,c
  6017   0039F4  E10F               	bnz	u3210
  6018   0039F6  500A               	movf	(___fleq@ff2+1)^0,w,c
  6019   0039F8  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  6020   0039FA  E10C               	bnz	u3210
  6021   0039FC  500B               	movf	(___fleq@ff2+2)^0,w,c
  6022   0039FE  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  6023   003A00  E109               	bnz	u3210
  6024   003A02  500C               	movf	(___fleq@ff2+3)^0,w,c
  6025   003A04  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  6026   003A06  B4D8               	btfsc	status,2,c
  6027   003A08  EF08  F01D         	goto	u3211
  6028   003A0C  EF0A  F01D         	goto	u3210
  6029   003A10                     u3211:
  6030   003A10  EF0D  F01D         	goto	l3457
  6031   003A14                     u3210:
  6032   003A14  90D8               	bcf	status,0,c
  6033   003A16  EF0E  F01D         	goto	l587
  6034   003A1A                     l3457:
  6035   003A1A  80D8               	bsf	status,0,c
  6036   003A1C                     l587:
  6037   003A1C  0012               	return		;funcret
  6038   003A1E                     __end_of___fleq:
  6039                           	callstack 0
  6040                           
  6041 ;; *************** function ___fldiv *****************
  6042 ;; Defined at:
  6043 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  6044 ;; Parameters:    Size  Location     Type
  6045 ;;  b               4   53[COMRAM] unsigned char 
  6046 ;;  a               4   57[COMRAM] unsigned char 
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;  grs             4   72[COMRAM] unsigned long 
  6049 ;;  rem             4   65[COMRAM] unsigned long 
  6050 ;;  new_exp         2   70[COMRAM] short 
  6051 ;;  aexp            1   77[COMRAM] unsigned char 
  6052 ;;  bexp            1   76[COMRAM] unsigned char 
  6053 ;;  sign            1   69[COMRAM] unsigned char 
  6054 ;; Return value:  Size  Location     Type
  6055 ;;                  4   53[COMRAM] unsigned char 
  6056 ;; Registers used:
  6057 ;;		wreg, status,2, status,0
  6058 ;; Tracked objects:
  6059 ;;		On entry : 0/0
  6060 ;;		On exit  : 0/0
  6061 ;;		Unchanged: 0/0
  6062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6063 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6064 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6065 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6066 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6067 ;;Total ram usage:       25 bytes
  6068 ;; Hardware stack levels used: 1
  6069 ;; Hardware stack levels required when called: 2
  6070 ;; This function calls:
  6071 ;;		Nothing
  6072 ;; This function is called by:
  6073 ;;		_main
  6074 ;;		_efgtoa
  6075 ;; This function uses a non-reentrant model
  6076 ;;
  6077                           
  6078                           	psect	text17
  6079   0025CE                     __ptext17:
  6080                           	callstack 0
  6081   0025CE                     ___fldiv:
  6082                           	callstack 24
  6083   0025CE  5039               	movf	(___fldiv@b+3)^0,w,c
  6084   0025D0  0B80               	andlw	128
  6085   0025D2  6E46               	movwf	___fldiv@sign^0,c
  6086   0025D4  5039               	movf	(___fldiv@b+3)^0,w,c
  6087   0025D6  2439               	addwf	(___fldiv@b+3)^0,w,c
  6088   0025D8  6E4D               	movwf	___fldiv@bexp^0,c
  6089   0025DA  AE38               	btfss	(___fldiv@b+2)^0,7,c
  6090   0025DC  EFF2  F012         	goto	u2771
  6091   0025E0  EFF4  F012         	goto	u2770
  6092   0025E4                     u2771:
  6093   0025E4  EFF5  F012         	goto	l3177
  6094   0025E8                     u2770:
  6095   0025E8  804D               	bsf	___fldiv@bexp^0,0,c
  6096   0025EA                     l3177:
  6097   0025EA  504D               	movf	___fldiv@bexp^0,w,c
  6098   0025EC  B4D8               	btfsc	status,2,c
  6099   0025EE  EFFB  F012         	goto	u2781
  6100   0025F2  EFFD  F012         	goto	u2780
  6101   0025F6                     u2781:
  6102   0025F6  EF12  F013         	goto	l3187
  6103   0025FA                     u2780:
  6104   0025FA  284D               	incf	___fldiv@bexp^0,w,c
  6105   0025FC  A4D8               	btfss	status,2,c
  6106   0025FE  EF03  F013         	goto	u2791
  6107   002602  EF05  F013         	goto	u2790
  6108   002606                     u2791:
  6109   002606  EF0D  F013         	goto	l3183
  6110   00260A                     u2790:
  6111   00260A  0E00               	movlw	0
  6112   00260C  6E36               	movwf	___fldiv@b^0,c
  6113   00260E  0E00               	movlw	0
  6114   002610  6E37               	movwf	(___fldiv@b+1)^0,c
  6115   002612  0E00               	movlw	0
  6116   002614  6E38               	movwf	(___fldiv@b+2)^0,c
  6117   002616  0E00               	movlw	0
  6118   002618  6E39               	movwf	(___fldiv@b+3)^0,c
  6119   00261A                     l3183:
  6120   00261A  8E38               	bsf	(___fldiv@b+2)^0,7,c
  6121   00261C  0E00               	movlw	0
  6122   00261E  6E39               	movwf	(___fldiv@b+3)^0,c
  6123   002620  EF1A  F013         	goto	l3189
  6124   002624                     l3187:
  6125   002624  0E00               	movlw	0
  6126   002626  6E36               	movwf	___fldiv@b^0,c
  6127   002628  0E00               	movlw	0
  6128   00262A  6E37               	movwf	(___fldiv@b+1)^0,c
  6129   00262C  0E00               	movlw	0
  6130   00262E  6E38               	movwf	(___fldiv@b+2)^0,c
  6131   002630  0E00               	movlw	0
  6132   002632  6E39               	movwf	(___fldiv@b+3)^0,c
  6133   002634                     l3189:
  6134   002634  503D               	movf	(___fldiv@a+3)^0,w,c
  6135   002636  0B80               	andlw	128
  6136   002638  1A46               	xorwf	___fldiv@sign^0,f,c
  6137   00263A  503D               	movf	(___fldiv@a+3)^0,w,c
  6138   00263C  243D               	addwf	(___fldiv@a+3)^0,w,c
  6139   00263E  6E4E               	movwf	___fldiv@aexp^0,c
  6140   002640  AE3C               	btfss	(___fldiv@a+2)^0,7,c
  6141   002642  EF25  F013         	goto	u2801
  6142   002646  EF27  F013         	goto	u2800
  6143   00264A                     u2801:
  6144   00264A  EF28  F013         	goto	l3197
  6145   00264E                     u2800:
  6146   00264E  804E               	bsf	___fldiv@aexp^0,0,c
  6147   002650                     l3197:
  6148   002650  504E               	movf	___fldiv@aexp^0,w,c
  6149   002652  B4D8               	btfsc	status,2,c
  6150   002654  EF2E  F013         	goto	u2811
  6151   002658  EF30  F013         	goto	u2810
  6152   00265C                     u2811:
  6153   00265C  EF45  F013         	goto	l3207
  6154   002660                     u2810:
  6155   002660  284E               	incf	___fldiv@aexp^0,w,c
  6156   002662  A4D8               	btfss	status,2,c
  6157   002664  EF36  F013         	goto	u2821
  6158   002668  EF38  F013         	goto	u2820
  6159   00266C                     u2821:
  6160   00266C  EF40  F013         	goto	l3203
  6161   002670                     u2820:
  6162   002670  0E00               	movlw	0
  6163   002672  6E3A               	movwf	___fldiv@a^0,c
  6164   002674  0E00               	movlw	0
  6165   002676  6E3B               	movwf	(___fldiv@a+1)^0,c
  6166   002678  0E00               	movlw	0
  6167   00267A  6E3C               	movwf	(___fldiv@a+2)^0,c
  6168   00267C  0E00               	movlw	0
  6169   00267E  6E3D               	movwf	(___fldiv@a+3)^0,c
  6170   002680                     l3203:
  6171   002680  8E3C               	bsf	(___fldiv@a+2)^0,7,c
  6172   002682  0E00               	movlw	0
  6173   002684  6E3D               	movwf	(___fldiv@a+3)^0,c
  6174   002686  EF4D  F013         	goto	l3209
  6175   00268A                     l3207:
  6176   00268A  0E00               	movlw	0
  6177   00268C  6E3A               	movwf	___fldiv@a^0,c
  6178   00268E  0E00               	movlw	0
  6179   002690  6E3B               	movwf	(___fldiv@a+1)^0,c
  6180   002692  0E00               	movlw	0
  6181   002694  6E3C               	movwf	(___fldiv@a+2)^0,c
  6182   002696  0E00               	movlw	0
  6183   002698  6E3D               	movwf	(___fldiv@a+3)^0,c
  6184   00269A                     l3209:
  6185   00269A  503A               	movf	___fldiv@a^0,w,c
  6186   00269C  103B               	iorwf	(___fldiv@a+1)^0,w,c
  6187   00269E  103C               	iorwf	(___fldiv@a+2)^0,w,c
  6188   0026A0  103D               	iorwf	(___fldiv@a+3)^0,w,c
  6189   0026A2  A4D8               	btfss	status,2,c
  6190   0026A4  EF56  F013         	goto	u2831
  6191   0026A8  EF58  F013         	goto	u2830
  6192   0026AC                     u2831:
  6193   0026AC  EF70  F013         	goto	l3221
  6194   0026B0                     u2830:
  6195   0026B0  0E00               	movlw	0
  6196   0026B2  6E36               	movwf	___fldiv@b^0,c
  6197   0026B4  0E00               	movlw	0
  6198   0026B6  6E37               	movwf	(___fldiv@b+1)^0,c
  6199   0026B8  0E00               	movlw	0
  6200   0026BA  6E38               	movwf	(___fldiv@b+2)^0,c
  6201   0026BC  0E00               	movlw	0
  6202   0026BE  6E39               	movwf	(___fldiv@b+3)^0,c
  6203   0026C0  0E80               	movlw	128
  6204   0026C2  1238               	iorwf	(___fldiv@b+2)^0,f,c
  6205   0026C4  0E7F               	movlw	127
  6206   0026C6  1239               	iorwf	(___fldiv@b+3)^0,f,c
  6207   0026C8                     l3215:
  6208   0026C8  5046               	movf	___fldiv@sign^0,w,c
  6209   0026CA  1239               	iorwf	(___fldiv@b+3)^0,f,c
  6210   0026CC  C036  F036         	movff	___fldiv@b,?___fldiv
  6211   0026D0  C037  F037         	movff	___fldiv@b+1,?___fldiv+1
  6212   0026D4  C038  F038         	movff	___fldiv@b+2,?___fldiv+2
  6213   0026D8  C039  F039         	movff	___fldiv@b+3,?___fldiv+3
  6214   0026DC  EFB3  F014         	goto	l910
  6215   0026E0                     l3221:
  6216   0026E0  504D               	movf	___fldiv@bexp^0,w,c
  6217   0026E2  A4D8               	btfss	status,2,c
  6218   0026E4  EF76  F013         	goto	u2841
  6219   0026E8  EF78  F013         	goto	u2840
  6220   0026EC                     u2841:
  6221   0026EC  EF82  F013         	goto	l3229
  6222   0026F0                     u2840:
  6223   0026F0  0E00               	movlw	0
  6224   0026F2  6E36               	movwf	?___fldiv^0,c
  6225   0026F4  0E00               	movlw	0
  6226   0026F6  6E37               	movwf	(?___fldiv+1)^0,c
  6227   0026F8  0E00               	movlw	0
  6228   0026FA  6E38               	movwf	(?___fldiv+2)^0,c
  6229   0026FC  0E00               	movlw	0
  6230   0026FE  6E39               	movwf	(?___fldiv+3)^0,c
  6231   002700  EFB3  F014         	goto	l910
  6232   002704                     l3229:
  6233   002704  504E               	movf	___fldiv@aexp^0,w,c
  6234   002706  C04D  F03E         	movff	___fldiv@bexp,??___fldiv
  6235   00270A  6A3F               	clrf	(??___fldiv+1)^0,c
  6236   00270C  5E3E               	subwf	??___fldiv^0,f,c
  6237   00270E  0E00               	movlw	0
  6238   002710  5A3F               	subwfb	(??___fldiv+1)^0,f,c
  6239   002712  0E7F               	movlw	127
  6240   002714  243E               	addwf	??___fldiv^0,w,c
  6241   002716  6E47               	movwf	___fldiv@new_exp^0,c
  6242   002718  0E00               	movlw	0
  6243   00271A  203F               	addwfc	(??___fldiv+1)^0,w,c
  6244   00271C  6E48               	movwf	(___fldiv@new_exp+1)^0,c
  6245   00271E  C036  F042         	movff	___fldiv@b,___fldiv@rem
  6246   002722  C037  F043         	movff	___fldiv@b+1,___fldiv@rem+1
  6247   002726  C038  F044         	movff	___fldiv@b+2,___fldiv@rem+2
  6248   00272A  C039  F045         	movff	___fldiv@b+3,___fldiv@rem+3
  6249   00272E  0E00               	movlw	0
  6250   002730  6E36               	movwf	___fldiv@b^0,c
  6251   002732  0E00               	movlw	0
  6252   002734  6E37               	movwf	(___fldiv@b+1)^0,c
  6253   002736  0E00               	movlw	0
  6254   002738  6E38               	movwf	(___fldiv@b+2)^0,c
  6255   00273A  0E00               	movlw	0
  6256   00273C  6E39               	movwf	(___fldiv@b+3)^0,c
  6257   00273E  0E00               	movlw	0
  6258   002740  6E49               	movwf	___fldiv@grs^0,c
  6259   002742  0E00               	movlw	0
  6260   002744  6E4A               	movwf	(___fldiv@grs+1)^0,c
  6261   002746  0E00               	movlw	0
  6262   002748  6E4B               	movwf	(___fldiv@grs+2)^0,c
  6263   00274A  0E00               	movlw	0
  6264   00274C  6E4C               	movwf	(___fldiv@grs+3)^0,c
  6265   00274E  0E00               	movlw	0
  6266   002750  6E4E               	movwf	___fldiv@aexp^0,c
  6267   002752  EFE3  F013         	goto	l912
  6268   002756                     l3239:
  6269   002756  504E               	movf	___fldiv@aexp^0,w,c
  6270   002758  B4D8               	btfsc	status,2,c
  6271   00275A  EFB1  F013         	goto	u2851
  6272   00275E  EFB3  F013         	goto	u2850
  6273   002762                     u2851:
  6274   002762  EFCA  F013         	goto	l3247
  6275   002766                     u2850:
  6276   002766  90D8               	bcf	status,0,c
  6277   002768  3642               	rlcf	___fldiv@rem^0,f,c
  6278   00276A  3643               	rlcf	(___fldiv@rem+1)^0,f,c
  6279   00276C  3644               	rlcf	(___fldiv@rem+2)^0,f,c
  6280   00276E  3645               	rlcf	(___fldiv@rem+3)^0,f,c
  6281   002770  90D8               	bcf	status,0,c
  6282   002772  3636               	rlcf	___fldiv@b^0,f,c
  6283   002774  3637               	rlcf	(___fldiv@b+1)^0,f,c
  6284   002776  3638               	rlcf	(___fldiv@b+2)^0,f,c
  6285   002778  3639               	rlcf	(___fldiv@b+3)^0,f,c
  6286   00277A  AE4C               	btfss	(___fldiv@grs+3)^0,7,c
  6287   00277C  EFC2  F013         	goto	u2861
  6288   002780  EFC4  F013         	goto	u2860
  6289   002784                     u2861:
  6290   002784  EFC5  F013         	goto	l915
  6291   002788                     u2860:
  6292   002788  8036               	bsf	___fldiv@b^0,0,c
  6293   00278A                     l915:
  6294   00278A  90D8               	bcf	status,0,c
  6295   00278C  3649               	rlcf	___fldiv@grs^0,f,c
  6296   00278E  364A               	rlcf	(___fldiv@grs+1)^0,f,c
  6297   002790  364B               	rlcf	(___fldiv@grs+2)^0,f,c
  6298   002792  364C               	rlcf	(___fldiv@grs+3)^0,f,c
  6299   002794                     l3247:
  6300   002794  503A               	movf	___fldiv@a^0,w,c
  6301   002796  5C42               	subwf	___fldiv@rem^0,w,c
  6302   002798  503B               	movf	(___fldiv@a+1)^0,w,c
  6303   00279A  5843               	subwfb	(___fldiv@rem+1)^0,w,c
  6304   00279C  503C               	movf	(___fldiv@a+2)^0,w,c
  6305   00279E  5844               	subwfb	(___fldiv@rem+2)^0,w,c
  6306   0027A0  503D               	movf	(___fldiv@a+3)^0,w,c
  6307   0027A2  5845               	subwfb	(___fldiv@rem+3)^0,w,c
  6308   0027A4  A0D8               	btfss	status,0,c
  6309   0027A6  EFD7  F013         	goto	u2871
  6310   0027AA  EFD9  F013         	goto	u2870
  6311   0027AE                     u2871:
  6312   0027AE  EFE2  F013         	goto	l3253
  6313   0027B2                     u2870:
  6314   0027B2  8C4C               	bsf	(___fldiv@grs+3)^0,6,c
  6315   0027B4  503A               	movf	___fldiv@a^0,w,c
  6316   0027B6  5E42               	subwf	___fldiv@rem^0,f,c
  6317   0027B8  503B               	movf	(___fldiv@a+1)^0,w,c
  6318   0027BA  5A43               	subwfb	(___fldiv@rem+1)^0,f,c
  6319   0027BC  503C               	movf	(___fldiv@a+2)^0,w,c
  6320   0027BE  5A44               	subwfb	(___fldiv@rem+2)^0,f,c
  6321   0027C0  503D               	movf	(___fldiv@a+3)^0,w,c
  6322   0027C2  5A45               	subwfb	(___fldiv@rem+3)^0,f,c
  6323   0027C4                     l3253:
  6324   0027C4  2A4E               	incf	___fldiv@aexp^0,f,c
  6325   0027C6                     l912:
  6326   0027C6  0E19               	movlw	25
  6327   0027C8  644E               	cpfsgt	___fldiv@aexp^0,c
  6328   0027CA  EFE9  F013         	goto	u2881
  6329   0027CE  EFEB  F013         	goto	u2880
  6330   0027D2                     u2881:
  6331   0027D2  EFAB  F013         	goto	l3239
  6332   0027D6                     u2880:
  6333   0027D6  5042               	movf	___fldiv@rem^0,w,c
  6334   0027D8  1043               	iorwf	(___fldiv@rem+1)^0,w,c
  6335   0027DA  1044               	iorwf	(___fldiv@rem+2)^0,w,c
  6336   0027DC  1045               	iorwf	(___fldiv@rem+3)^0,w,c
  6337   0027DE  B4D8               	btfsc	status,2,c
  6338   0027E0  EFF4  F013         	goto	u2891
  6339   0027E4  EFF6  F013         	goto	u2890
  6340   0027E8                     u2891:
  6341   0027E8  EF0E  F014         	goto	l3265
  6342   0027EC                     u2890:
  6343   0027EC  8049               	bsf	___fldiv@grs^0,0,c
  6344   0027EE  EF0E  F014         	goto	l3265
  6345   0027F2                     l3259:
  6346   0027F2  90D8               	bcf	status,0,c
  6347   0027F4  3636               	rlcf	___fldiv@b^0,f,c
  6348   0027F6  3637               	rlcf	(___fldiv@b+1)^0,f,c
  6349   0027F8  3638               	rlcf	(___fldiv@b+2)^0,f,c
  6350   0027FA  3639               	rlcf	(___fldiv@b+3)^0,f,c
  6351   0027FC  AE4C               	btfss	(___fldiv@grs+3)^0,7,c
  6352   0027FE  EF03  F014         	goto	u2901
  6353   002802  EF05  F014         	goto	u2900
  6354   002806                     u2901:
  6355   002806  EF06  F014         	goto	l921
  6356   00280A                     u2900:
  6357   00280A  8036               	bsf	___fldiv@b^0,0,c
  6358   00280C                     l921:
  6359   00280C  90D8               	bcf	status,0,c
  6360   00280E  3649               	rlcf	___fldiv@grs^0,f,c
  6361   002810  364A               	rlcf	(___fldiv@grs+1)^0,f,c
  6362   002812  364B               	rlcf	(___fldiv@grs+2)^0,f,c
  6363   002814  364C               	rlcf	(___fldiv@grs+3)^0,f,c
  6364   002816  0647               	decf	___fldiv@new_exp^0,f,c
  6365   002818  A0D8               	btfss	status,0,c
  6366   00281A  0648               	decf	(___fldiv@new_exp+1)^0,f,c
  6367   00281C                     l3265:
  6368   00281C  AE38               	btfss	(___fldiv@b+2)^0,7,c
  6369   00281E  EF13  F014         	goto	u2911
  6370   002822  EF15  F014         	goto	u2910
  6371   002826                     u2911:
  6372   002826  EFF9  F013         	goto	l3259
  6373   00282A                     u2910:
  6374   00282A  0E00               	movlw	0
  6375   00282C  6E4E               	movwf	___fldiv@aexp^0,c
  6376   00282E  AE4C               	btfss	(___fldiv@grs+3)^0,7,c
  6377   002830  EF1C  F014         	goto	u2921
  6378   002834  EF1E  F014         	goto	u2920
  6379   002838                     u2921:
  6380   002838  EF42  F014         	goto	l923
  6381   00283C                     u2920:
  6382   00283C  0EFF               	movlw	255
  6383   00283E  1449               	andwf	___fldiv@grs^0,w,c
  6384   002840  6E3E               	movwf	??___fldiv^0,c
  6385   002842  0EFF               	movlw	255
  6386   002844  144A               	andwf	(___fldiv@grs+1)^0,w,c
  6387   002846  6E3F               	movwf	(??___fldiv+1)^0,c
  6388   002848  0EFF               	movlw	255
  6389   00284A  144B               	andwf	(___fldiv@grs+2)^0,w,c
  6390   00284C  6E40               	movwf	(??___fldiv+2)^0,c
  6391   00284E  0E7F               	movlw	127
  6392   002850  144C               	andwf	(___fldiv@grs+3)^0,w,c
  6393   002852  6E41               	movwf	(??___fldiv+3)^0,c
  6394   002854  503E               	movf	??___fldiv^0,w,c
  6395   002856  103F               	iorwf	(??___fldiv+1)^0,w,c
  6396   002858  1040               	iorwf	(??___fldiv+2)^0,w,c
  6397   00285A  1041               	iorwf	(??___fldiv+3)^0,w,c
  6398   00285C  B4D8               	btfsc	status,2,c
  6399   00285E  EF33  F014         	goto	u2931
  6400   002862  EF35  F014         	goto	u2930
  6401   002866                     u2931:
  6402   002866  EF39  F014         	goto	l924
  6403   00286A                     u2930:
  6404   00286A                     l3273:
  6405   00286A  0E01               	movlw	1
  6406   00286C  6E4E               	movwf	___fldiv@aexp^0,c
  6407   00286E  EF42  F014         	goto	l923
  6408   002872                     l924:
  6409   002872  A036               	btfss	___fldiv@b^0,0,c
  6410   002874  EF3E  F014         	goto	u2941
  6411   002878  EF40  F014         	goto	u2940
  6412   00287C                     u2941:
  6413   00287C  EF42  F014         	goto	l923
  6414   002880                     u2940:
  6415   002880  EF35  F014         	goto	l3273
  6416   002884                     l923:
  6417   002884  504E               	movf	___fldiv@aexp^0,w,c
  6418   002886  B4D8               	btfsc	status,2,c
  6419   002888  EF48  F014         	goto	u2951
  6420   00288C  EF4A  F014         	goto	u2950
  6421   002890                     u2951:
  6422   002890  EF6E  F014         	goto	l3285
  6423   002894                     u2950:
  6424   002894  0E01               	movlw	1
  6425   002896  2636               	addwf	___fldiv@b^0,f,c
  6426   002898  0E00               	movlw	0
  6427   00289A  2237               	addwfc	(___fldiv@b+1)^0,f,c
  6428   00289C  2238               	addwfc	(___fldiv@b+2)^0,f,c
  6429   00289E  2239               	addwfc	(___fldiv@b+3)^0,f,c
  6430   0028A0  A039               	btfss	(___fldiv@b+3)^0,0,c
  6431   0028A2  EF55  F014         	goto	u2961
  6432   0028A6  EF57  F014         	goto	u2960
  6433   0028AA                     u2961:
  6434   0028AA  EF6E  F014         	goto	l3285
  6435   0028AE                     u2960:
  6436   0028AE  C036  F03E         	movff	___fldiv@b,??___fldiv
  6437   0028B2  C037  F03F         	movff	___fldiv@b+1,??___fldiv+1
  6438   0028B6  C038  F040         	movff	___fldiv@b+2,??___fldiv+2
  6439   0028BA  C039  F041         	movff	___fldiv@b+3,??___fldiv+3
  6440   0028BE  3441               	rlcf	(??___fldiv+3)^0,w,c
  6441   0028C0  3241               	rrcf	(??___fldiv+3)^0,f,c
  6442   0028C2  3240               	rrcf	(??___fldiv+2)^0,f,c
  6443   0028C4  323F               	rrcf	(??___fldiv+1)^0,f,c
  6444   0028C6  323E               	rrcf	??___fldiv^0,f,c
  6445   0028C8  C03E  F036         	movff	??___fldiv,___fldiv@b
  6446   0028CC  C03F  F037         	movff	??___fldiv+1,___fldiv@b+1
  6447   0028D0  C040  F038         	movff	??___fldiv+2,___fldiv@b+2
  6448   0028D4  C041  F039         	movff	??___fldiv+3,___fldiv@b+3
  6449   0028D8  4A47               	infsnz	___fldiv@new_exp^0,f,c
  6450   0028DA  2A48               	incf	(___fldiv@new_exp+1)^0,f,c
  6451   0028DC                     l3285:
  6452   0028DC  BE48               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6453   0028DE  EF79  F014         	goto	u2971
  6454   0028E2  5048               	movf	(___fldiv@new_exp+1)^0,w,c
  6455   0028E4  E108               	bnz	u2970
  6456   0028E6  2847               	incf	___fldiv@new_exp^0,w,c
  6457   0028E8  A0D8               	btfss	status,0,c
  6458   0028EA  EF79  F014         	goto	u2971
  6459   0028EE  EF7B  F014         	goto	u2970
  6460   0028F2                     u2971:
  6461   0028F2  EF86  F014         	goto	l3289
  6462   0028F6                     u2970:
  6463   0028F6  0E00               	movlw	0
  6464   0028F8  6E48               	movwf	(___fldiv@new_exp+1)^0,c
  6465   0028FA  6847               	setf	___fldiv@new_exp^0,c
  6466   0028FC  0E00               	movlw	0
  6467   0028FE  6E36               	movwf	___fldiv@b^0,c
  6468   002900  0E00               	movlw	0
  6469   002902  6E37               	movwf	(___fldiv@b+1)^0,c
  6470   002904  0E00               	movlw	0
  6471   002906  6E38               	movwf	(___fldiv@b+2)^0,c
  6472   002908  0E00               	movlw	0
  6473   00290A  6E39               	movwf	(___fldiv@b+3)^0,c
  6474   00290C                     l3289:
  6475   00290C  BE48               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6476   00290E  EF93  F014         	goto	u2980
  6477   002912  5048               	movf	(___fldiv@new_exp+1)^0,w,c
  6478   002914  E106               	bnz	u2981
  6479   002916  0447               	decf	___fldiv@new_exp^0,w,c
  6480   002918  B0D8               	btfsc	status,0,c
  6481   00291A  EF91  F014         	goto	u2981
  6482   00291E  EF93  F014         	goto	u2980
  6483   002922                     u2981:
  6484   002922  EFA1  F014         	goto	l3293
  6485   002926                     u2980:
  6486   002926  0E00               	movlw	0
  6487   002928  6E48               	movwf	(___fldiv@new_exp+1)^0,c
  6488   00292A  0E00               	movlw	0
  6489   00292C  6E47               	movwf	___fldiv@new_exp^0,c
  6490   00292E  0E00               	movlw	0
  6491   002930  6E36               	movwf	___fldiv@b^0,c
  6492   002932  0E00               	movlw	0
  6493   002934  6E37               	movwf	(___fldiv@b+1)^0,c
  6494   002936  0E00               	movlw	0
  6495   002938  6E38               	movwf	(___fldiv@b+2)^0,c
  6496   00293A  0E00               	movlw	0
  6497   00293C  6E39               	movwf	(___fldiv@b+3)^0,c
  6498   00293E  0E00               	movlw	0
  6499   002940  6E46               	movwf	___fldiv@sign^0,c
  6500   002942                     l3293:
  6501   002942  C047  F04D         	movff	___fldiv@new_exp,___fldiv@bexp
  6502   002946  A04D               	btfss	___fldiv@bexp^0,0,c
  6503   002948  EFA8  F014         	goto	u2991
  6504   00294C  EFAA  F014         	goto	u2990
  6505   002950                     u2991:
  6506   002950  EFAD  F014         	goto	l3299
  6507   002954                     u2990:
  6508   002954  8E38               	bsf	(___fldiv@b+2)^0,7,c
  6509   002956  EFAE  F014         	goto	l3301
  6510   00295A                     l3299:
  6511   00295A  9E38               	bcf	(___fldiv@b+2)^0,7,c
  6512   00295C                     l3301:
  6513   00295C  90D8               	bcf	status,0,c
  6514   00295E  304D               	rrcf	___fldiv@bexp^0,w,c
  6515   002960  6E39               	movwf	(___fldiv@b+3)^0,c
  6516   002962  EF64  F013         	goto	l3215
  6517   002966                     l910:
  6518   002966  0012               	return		;funcret
  6519   002968                     __end_of___fldiv:
  6520                           	callstack 0
  6521                           
  6522 ;; *************** function _dtoa *****************
  6523 ;; Defined at:
  6524 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6525 ;; Parameters:    Size  Location     Type
  6526 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  6527 ;;		 -> sprintf@f(11), 
  6528 ;;  d               8   33[COMRAM] long long 
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;  n               8   55[COMRAM] long long 
  6531 ;;  i               2   63[COMRAM] int 
  6532 ;;  w               2   53[COMRAM] int 
  6533 ;;  p               2   51[COMRAM] int 
  6534 ;;  s               1   65[COMRAM] unsigned char 
  6535 ;; Return value:  Size  Location     Type
  6536 ;;                  1    wreg      void 
  6537 ;; Registers used:
  6538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6539 ;; Tracked objects:
  6540 ;;		On entry : 0/0
  6541 ;;		On exit  : 0/0
  6542 ;;		Unchanged: 0/0
  6543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6544 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6545 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6546 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6547 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6548 ;;Total ram usage:       35 bytes
  6549 ;; Hardware stack levels used: 1
  6550 ;; Hardware stack levels required when called: 6
  6551 ;; This function calls:
  6552 ;;		___aodiv
  6553 ;;		___aomod
  6554 ;;		_abs
  6555 ;;		_pad
  6556 ;; This function is called by:
  6557 ;;		_vfpfcnvrt
  6558 ;; This function uses a non-reentrant model
  6559 ;;
  6560                           
  6561                           	psect	text18
  6562   002C6E                     __ptext18:
  6563                           	callstack 0
  6564   002C6E                     _dtoa:
  6565                           	callstack 21
  6566   002C6E                     
  6567                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  6568   002C6E  C022  F038         	movff	dtoa@d,dtoa@n
  6569   002C72  C023  F039         	movff	dtoa@d+1,dtoa@n+1
  6570   002C76  C024  F03A         	movff	dtoa@d+2,dtoa@n+2
  6571   002C7A  C025  F03B         	movff	dtoa@d+3,dtoa@n+3
  6572   002C7E  C026  F03C         	movff	dtoa@d+4,dtoa@n+4
  6573   002C82  C027  F03D         	movff	dtoa@d+5,dtoa@n+5
  6574   002C86  C028  F03E         	movff	dtoa@d+6,dtoa@n+6
  6575   002C8A  C029  F03F         	movff	dtoa@d+7,dtoa@n+7
  6576   002C8E                     
  6577                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  6578   002C8E  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  6579   002C90  EF4C  F016         	goto	u3601
  6580   002C94  EF4F  F016         	goto	u3600
  6581   002C98                     u3601:
  6582   002C98  0E01               	movlw	1
  6583   002C9A  EF50  F016         	goto	u3610
  6584   002C9E                     u3600:
  6585   002C9E  0E00               	movlw	0
  6586   002CA0                     u3610:
  6587   002CA0  6E42               	movwf	dtoa@s^0,c
  6588   002CA2                     
  6589                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  6590   002CA2  5042               	movf	dtoa@s^0,w,c
  6591   002CA4  B4D8               	btfsc	status,2,c
  6592   002CA6  EF57  F016         	goto	u3621
  6593   002CAA  EF59  F016         	goto	u3620
  6594   002CAE                     u3621:
  6595   002CAE  EF69  F016         	goto	l3635
  6596   002CB2                     u3620:
  6597   002CB2                     
  6598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  6599   002CB2  1E3F               	comf	(dtoa@n+7)^0,f,c
  6600   002CB4  1E3E               	comf	(dtoa@n+6)^0,f,c
  6601   002CB6  1E3D               	comf	(dtoa@n+5)^0,f,c
  6602   002CB8  1E3C               	comf	(dtoa@n+4)^0,f,c
  6603   002CBA  1E3B               	comf	(dtoa@n+3)^0,f,c
  6604   002CBC  1E3A               	comf	(dtoa@n+2)^0,f,c
  6605   002CBE  1E39               	comf	(dtoa@n+1)^0,f,c
  6606   002CC0  6C38               	negf	dtoa@n^0,c
  6607   002CC2  0E00               	movlw	0
  6608   002CC4  2239               	addwfc	(dtoa@n+1)^0,f,c
  6609   002CC6  223A               	addwfc	(dtoa@n+2)^0,f,c
  6610   002CC8  223B               	addwfc	(dtoa@n+3)^0,f,c
  6611   002CCA  223C               	addwfc	(dtoa@n+4)^0,f,c
  6612   002CCC  223D               	addwfc	(dtoa@n+5)^0,f,c
  6613   002CCE  223E               	addwfc	(dtoa@n+6)^0,f,c
  6614   002CD0  223F               	addwfc	(dtoa@n+7)^0,f,c
  6615   002CD2                     l3635:
  6616                           
  6617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  6618   002CD2  0100               	movlb	0	; () banked
  6619   002CD4  BFF6               	btfsc	(_prec+1)& (0+255),7,b
  6620   002CD6  EF77  F016         	goto	u3630
  6621   002CDA  51F6               	movf	(_prec+1)& (0+255),w,b
  6622   002CDC  E106               	bnz	u3631
  6623   002CDE  05F5               	decf	_prec& (0+255),w,b
  6624   002CE0  B0D8               	btfsc	status,0,c
  6625   002CE2  EF75  F016         	goto	u3631
  6626   002CE6  EF77  F016         	goto	u3630
  6627   002CEA                     u3631:
  6628   002CEA  EF7D  F016         	goto	l1047
  6629   002CEE                     u3630:
  6630   002CEE                     
  6631                           ; BSR set to: 0
  6632   002CEE  0E00               	movlw	0
  6633   002CF0  6E35               	movwf	(dtoa@p+1)^0,c
  6634   002CF2  0E01               	movlw	1
  6635   002CF4  6E34               	movwf	dtoa@p^0,c
  6636   002CF6  EF81  F016         	goto	l1049
  6637   002CFA                     l1047:
  6638                           
  6639                           ; BSR set to: 0
  6640   002CFA  C0F5  F034         	movff	_prec,dtoa@p
  6641   002CFE  C0F6  F035         	movff	_prec+1,dtoa@p+1
  6642   002D02                     l1049:
  6643                           
  6644                           ; BSR set to: 0
  6645                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  6646   002D02  C0F3  F036         	movff	_width,dtoa@w
  6647   002D06  C0F4  F037         	movff	_width+1,dtoa@w+1
  6648   002D0A                     
  6649                           ; BSR set to: 0
  6650                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  6651   002D0A  5042               	movf	dtoa@s^0,w,c
  6652   002D0C  B4D8               	btfsc	status,2,c
  6653   002D0E  EF8B  F016         	goto	u3641
  6654   002D12  EF8D  F016         	goto	u3640
  6655   002D16                     u3641:
  6656   002D16  EFA4  F016         	goto	l1050
  6657   002D1A                     u3640:
  6658   002D1A                     
  6659                           ; BSR set to: 0
  6660                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  6661   002D1A  0636               	decf	dtoa@w^0,f,c
  6662   002D1C  A0D8               	btfss	status,0,c
  6663   002D1E  0637               	decf	(dtoa@w+1)^0,f,c
  6664   002D20                     
  6665                           ; BSR set to: 0
  6666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  6667   002D20  5042               	movf	dtoa@s^0,w,c
  6668   002D22  A4D8               	btfss	status,2,c
  6669   002D24  EF96  F016         	goto	u3651
  6670   002D28  EF98  F016         	goto	u3650
  6671   002D2C                     u3651:
  6672   002D2C  EF9E  F016         	goto	l3647
  6673   002D30                     u3650:
  6674   002D30                     
  6675                           ; BSR set to: 0
  6676   002D30  0E00               	movlw	0
  6677   002D32  6E33               	movwf	(_dtoa$2306+1)^0,c
  6678   002D34  0E2B               	movlw	43
  6679   002D36  6E32               	movwf	_dtoa$2306^0,c
  6680   002D38  EFA2  F016         	goto	l3649
  6681   002D3C                     l3647:
  6682                           
  6683                           ; BSR set to: 0
  6684   002D3C  0E00               	movlw	0
  6685   002D3E  6E33               	movwf	(_dtoa$2306+1)^0,c
  6686   002D40  0E2D               	movlw	45
  6687   002D42  6E32               	movwf	_dtoa$2306^0,c
  6688   002D44                     l3649:
  6689                           
  6690                           ; BSR set to: 0
  6691   002D44  C032  F042         	movff	_dtoa$2306,dtoa@s
  6692   002D48                     l1050:
  6693                           
  6694                           ; BSR set to: 0
  6695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  6696   002D48  0E00               	movlw	0
  6697   002D4A  6E41               	movwf	(dtoa@i+1)^0,c
  6698   002D4C  0E4F               	movlw	79
  6699   002D4E  6E40               	movwf	dtoa@i^0,c
  6700   002D50                     
  6701                           ; BSR set to: 0
  6702                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  6703   002D50  0E00               	movlw	0
  6704   002D52  0101               	movlb	1	; () banked
  6705   002D54  6FC5               	movwf	(_dbuf+79)& (0+255),b
  6706                           
  6707                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  6708   002D56  EF29  F017         	goto	l3663
  6709   002D5A                     l3653:
  6710                           
  6711                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  6712   002D5A  0640               	decf	dtoa@i^0,f,c
  6713   002D5C  A0D8               	btfss	status,0,c
  6714   002D5E  0641               	decf	(dtoa@i+1)^0,f,c
  6715   002D60                     
  6716                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6717   002D60  0E76               	movlw	low _dbuf
  6718   002D62  2440               	addwf	dtoa@i^0,w,c
  6719   002D64  6ED9               	movwf	fsr2l,c
  6720   002D66  0E01               	movlw	high _dbuf
  6721   002D68  2041               	addwfc	(dtoa@i+1)^0,w,c
  6722   002D6A  6EDA               	movwf	fsr2h,c
  6723   002D6C  C038  F005         	movff	dtoa@n,___aomod@dividend
  6724   002D70  C039  F006         	movff	dtoa@n+1,___aomod@dividend+1
  6725   002D74  C03A  F007         	movff	dtoa@n+2,___aomod@dividend+2
  6726   002D78  C03B  F008         	movff	dtoa@n+3,___aomod@dividend+3
  6727   002D7C  C03C  F009         	movff	dtoa@n+4,___aomod@dividend+4
  6728   002D80  C03D  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  6729   002D84  C03E  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  6730   002D88  C03F  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  6731   002D8C  0E0A               	movlw	10
  6732   002D8E  6E0D               	movwf	___aomod@divisor^0,c
  6733   002D90  0E00               	movlw	0
  6734   002D92  6E0E               	movwf	(___aomod@divisor+1)^0,c
  6735   002D94  0E00               	movlw	0
  6736   002D96  6E0F               	movwf	(___aomod@divisor+2)^0,c
  6737   002D98  0E00               	movlw	0
  6738   002D9A  6E10               	movwf	(___aomod@divisor+3)^0,c
  6739   002D9C  0E00               	movlw	0
  6740   002D9E  6E11               	movwf	(___aomod@divisor+4)^0,c
  6741   002DA0  0E00               	movlw	0
  6742   002DA2  6E12               	movwf	(___aomod@divisor+5)^0,c
  6743   002DA4  0E00               	movlw	0
  6744   002DA6  6E13               	movwf	(___aomod@divisor+6)^0,c
  6745   002DA8  0E00               	movlw	0
  6746   002DAA  6E14               	movwf	(___aomod@divisor+7)^0,c
  6747   002DAC  EC1F  F01A         	call	___aomod	;wreg free
  6748   002DB0  C005  F02A         	movff	?___aomod,??_dtoa
  6749   002DB4  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  6750   002DB8  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  6751   002DBC  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  6752   002DC0  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  6753   002DC4  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  6754   002DC8  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  6755   002DCC  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  6756   002DD0  C02A  F017         	movff	??_dtoa,abs@a
  6757   002DD4  C02B  F018         	movff	??_dtoa+1,abs@a+1
  6758   002DD8  ECC1  F01F         	call	_abs	;wreg free
  6759   002DDC  5017               	movf	?_abs^0,w,c
  6760   002DDE  0F30               	addlw	48
  6761   002DE0  6EDF               	movwf	indf2,c
  6762   002DE2                     
  6763                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  6764   002DE2  0634               	decf	dtoa@p^0,f,c
  6765   002DE4  A0D8               	btfss	status,0,c
  6766   002DE6  0635               	decf	(dtoa@p+1)^0,f,c
  6767   002DE8                     
  6768                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  6769   002DE8  0636               	decf	dtoa@w^0,f,c
  6770   002DEA  A0D8               	btfss	status,0,c
  6771   002DEC  0637               	decf	(dtoa@w+1)^0,f,c
  6772   002DEE                     
  6773                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  6774   002DEE  C038  F005         	movff	dtoa@n,___aodiv@dividend
  6775   002DF2  C039  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  6776   002DF6  C03A  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  6777   002DFA  C03B  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  6778   002DFE  C03C  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  6779   002E02  C03D  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  6780   002E06  C03E  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  6781   002E0A  C03F  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  6782   002E0E  0E0A               	movlw	10
  6783   002E10  6E0D               	movwf	___aodiv@divisor^0,c
  6784   002E12  0E00               	movlw	0
  6785   002E14  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  6786   002E16  0E00               	movlw	0
  6787   002E18  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  6788   002E1A  0E00               	movlw	0
  6789   002E1C  6E10               	movwf	(___aodiv@divisor+3)^0,c
  6790   002E1E  0E00               	movlw	0
  6791   002E20  6E11               	movwf	(___aodiv@divisor+4)^0,c
  6792   002E22  0E00               	movlw	0
  6793   002E24  6E12               	movwf	(___aodiv@divisor+5)^0,c
  6794   002E26  0E00               	movlw	0
  6795   002E28  6E13               	movwf	(___aodiv@divisor+6)^0,c
  6796   002E2A  0E00               	movlw	0
  6797   002E2C  6E14               	movwf	(___aodiv@divisor+7)^0,c
  6798   002E2E  EC5B  F019         	call	___aodiv	;wreg free
  6799   002E32  C005  F038         	movff	?___aodiv,dtoa@n
  6800   002E36  C006  F039         	movff	?___aodiv+1,dtoa@n+1
  6801   002E3A  C007  F03A         	movff	?___aodiv+2,dtoa@n+2
  6802   002E3E  C008  F03B         	movff	?___aodiv+3,dtoa@n+3
  6803   002E42  C009  F03C         	movff	?___aodiv+4,dtoa@n+4
  6804   002E46  C00A  F03D         	movff	?___aodiv+5,dtoa@n+5
  6805   002E4A  C00B  F03E         	movff	?___aodiv+6,dtoa@n+6
  6806   002E4E  C00C  F03F         	movff	?___aodiv+7,dtoa@n+7
  6807   002E52                     l3663:
  6808                           
  6809                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  6810   002E52  BE41               	btfsc	(dtoa@i+1)^0,7,c
  6811   002E54  EF34  F017         	goto	u3661
  6812   002E58  5041               	movf	(dtoa@i+1)^0,w,c
  6813   002E5A  E108               	bnz	u3660
  6814   002E5C  0440               	decf	dtoa@i^0,w,c
  6815   002E5E  A0D8               	btfss	status,0,c
  6816   002E60  EF34  F017         	goto	u3661
  6817   002E64  EF36  F017         	goto	u3660
  6818   002E68                     u3661:
  6819   002E68  EF52  F017         	goto	l3669
  6820   002E6C                     u3660:
  6821   002E6C  5038               	movf	dtoa@n^0,w,c
  6822   002E6E  1039               	iorwf	(dtoa@n+1)^0,w,c
  6823   002E70  103A               	iorwf	(dtoa@n+2)^0,w,c
  6824   002E72  103B               	iorwf	(dtoa@n+3)^0,w,c
  6825   002E74  103C               	iorwf	(dtoa@n+4)^0,w,c
  6826   002E76  103D               	iorwf	(dtoa@n+5)^0,w,c
  6827   002E78  103E               	iorwf	(dtoa@n+6)^0,w,c
  6828   002E7A  103F               	iorwf	(dtoa@n+7)^0,w,c
  6829   002E7C  A4D8               	btfss	status,2,c
  6830   002E7E  EF43  F017         	goto	u3671
  6831   002E82  EF45  F017         	goto	u3670
  6832   002E86                     u3671:
  6833   002E86  EFAD  F016         	goto	l3653
  6834   002E8A                     u3670:
  6835   002E8A  BE35               	btfsc	(dtoa@p+1)^0,7,c
  6836   002E8C  EF52  F017         	goto	u3680
  6837   002E90  5035               	movf	(dtoa@p+1)^0,w,c
  6838   002E92  E106               	bnz	u3681
  6839   002E94  0434               	decf	dtoa@p^0,w,c
  6840   002E96  B0D8               	btfsc	status,0,c
  6841   002E98  EF50  F017         	goto	u3681
  6842   002E9C  EF52  F017         	goto	u3680
  6843   002EA0                     u3681:
  6844   002EA0  EFAD  F016         	goto	l3653
  6845   002EA4                     u3680:
  6846   002EA4                     l3669:
  6847                           
  6848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  6849   002EA4  5042               	movf	dtoa@s^0,w,c
  6850   002EA6  B4D8               	btfsc	status,2,c
  6851   002EA8  EF58  F017         	goto	u3691
  6852   002EAC  EF5A  F017         	goto	u3690
  6853   002EB0                     u3691:
  6854   002EB0  EF65  F017         	goto	l3675
  6855   002EB4                     u3690:
  6856   002EB4                     
  6857                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  6858   002EB4  0640               	decf	dtoa@i^0,f,c
  6859   002EB6  A0D8               	btfss	status,0,c
  6860   002EB8  0641               	decf	(dtoa@i+1)^0,f,c
  6861   002EBA                     
  6862                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  6863   002EBA  0E76               	movlw	low _dbuf
  6864   002EBC  2440               	addwf	dtoa@i^0,w,c
  6865   002EBE  6ED9               	movwf	fsr2l,c
  6866   002EC0  0E01               	movlw	high _dbuf
  6867   002EC2  2041               	addwfc	(dtoa@i+1)^0,w,c
  6868   002EC4  6EDA               	movwf	fsr2h,c
  6869   002EC6  C042  FFDF         	movff	dtoa@s,indf2
  6870   002ECA                     l3675:
  6871                           
  6872                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  6873   002ECA  C020  F015         	movff	dtoa@fp,pad@fp
  6874   002ECE  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  6875   002ED2  0E76               	movlw	low _dbuf
  6876   002ED4  2440               	addwf	dtoa@i^0,w,c
  6877   002ED6  6E17               	movwf	pad@buf^0,c
  6878   002ED8  0E01               	movlw	high _dbuf
  6879   002EDA  2041               	addwfc	(dtoa@i+1)^0,w,c
  6880   002EDC  6E18               	movwf	(pad@buf+1)^0,c
  6881   002EDE  C036  F019         	movff	dtoa@w,pad@p
  6882   002EE2  C037  F01A         	movff	dtoa@w+1,pad@p+1
  6883   002EE6  EC59  F01D         	call	_pad	;wreg free
  6884   002EEA  0012               	return		;funcret
  6885   002EEC                     __end_of_dtoa:
  6886                           	callstack 0
  6887                           
  6888 ;; *************** function _pad *****************
  6889 ;; Defined at:
  6890 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6891 ;; Parameters:    Size  Location     Type
  6892 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  6893 ;;		 -> sprintf@f(11), 
  6894 ;;  buf             2   22[COMRAM] PTR unsigned char 
  6895 ;;		 -> dbuf(80), 
  6896 ;;  p               2   24[COMRAM] int 
  6897 ;; Auto vars:     Size  Location     Type
  6898 ;;  w               2   29[COMRAM] int 
  6899 ;;  i               2   27[COMRAM] int 
  6900 ;; Return value:  Size  Location     Type
  6901 ;;                  1    wreg      void 
  6902 ;; Registers used:
  6903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6904 ;; Tracked objects:
  6905 ;;		On entry : 0/0
  6906 ;;		On exit  : 0/0
  6907 ;;		Unchanged: 0/0
  6908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6909 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6910 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6911 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6912 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6913 ;;Total ram usage:       11 bytes
  6914 ;; Hardware stack levels used: 1
  6915 ;; Hardware stack levels required when called: 5
  6916 ;; This function calls:
  6917 ;;		_fputc
  6918 ;;		_fputs
  6919 ;; This function is called by:
  6920 ;;		_dtoa
  6921 ;;		_efgtoa
  6922 ;; This function uses a non-reentrant model
  6923 ;;
  6924                           
  6925                           	psect	text19
  6926   003AB2                     __ptext19:
  6927                           	callstack 0
  6928   003AB2                     _pad:
  6929                           	callstack 21
  6930   003AB2                     
  6931                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  6932   003AB2  BE1A               	btfsc	(pad@p+1)^0,7,c
  6933   003AB4  EF5E  F01D         	goto	u3351
  6934   003AB8  EF60  F01D         	goto	u3350
  6935   003ABC                     u3351:
  6936   003ABC  EF66  F01D         	goto	l3539
  6937   003AC0                     u3350:
  6938   003AC0  C019  F01E         	movff	pad@p,pad@w
  6939   003AC4  C01A  F01F         	movff	pad@p+1,pad@w+1
  6940   003AC8  EF6A  F01D         	goto	l1038
  6941   003ACC                     l3539:
  6942   003ACC  0E00               	movlw	0
  6943   003ACE  6E1F               	movwf	(pad@w+1)^0,c
  6944   003AD0  0E00               	movlw	0
  6945   003AD2  6E1E               	movwf	pad@w^0,c
  6946   003AD4                     l1038:
  6947                           
  6948                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  6949   003AD4  0E00               	movlw	0
  6950   003AD6  6E1D               	movwf	(pad@i+1)^0,c
  6951   003AD8  0E00               	movlw	0
  6952   003ADA  6E1C               	movwf	pad@i^0,c
  6953                           
  6954                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  6955   003ADC  EF7C  F01D         	goto	l3545
  6956   003AE0                     l3541:
  6957                           
  6958                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  6959   003AE0  0E00               	movlw	0
  6960   003AE2  6E06               	movwf	(fputc@c+1)^0,c
  6961   003AE4  0E20               	movlw	32
  6962   003AE6  6E05               	movwf	fputc@c^0,c
  6963   003AE8  C015  F007         	movff	pad@fp,fputc@fp
  6964   003AEC  C016  F008         	movff	pad@fp+1,fputc@fp+1
  6965   003AF0  EC55  F01C         	call	_fputc	;wreg free
  6966   003AF4                     
  6967                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  6968   003AF4  4A1C               	infsnz	pad@i^0,f,c
  6969   003AF6  2A1D               	incf	(pad@i+1)^0,f,c
  6970   003AF8                     l3545:
  6971                           
  6972                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  6973   003AF8  501E               	movf	pad@w^0,w,c
  6974   003AFA  5C1C               	subwf	pad@i^0,w,c
  6975   003AFC  501D               	movf	(pad@i+1)^0,w,c
  6976   003AFE  0A80               	xorlw	128
  6977   003B00  6E1B               	movwf	??_pad^0,c
  6978   003B02  501F               	movf	(pad@w+1)^0,w,c
  6979   003B04  0A80               	xorlw	128
  6980   003B06  581B               	subwfb	??_pad^0,w,c
  6981   003B08  A0D8               	btfss	status,0,c
  6982   003B0A  EF89  F01D         	goto	u3361
  6983   003B0E  EF8B  F01D         	goto	u3360
  6984   003B12                     u3361:
  6985   003B12  EF70  F01D         	goto	l3541
  6986   003B16                     u3360:
  6987   003B16                     
  6988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  6989   003B16  C017  F00E         	movff	pad@buf,fputs@s
  6990   003B1A  C018  F00F         	movff	pad@buf+1,fputs@s+1
  6991   003B1E  C015  F010         	movff	pad@fp,fputs@fp
  6992   003B22  C016  F011         	movff	pad@fp+1,fputs@fp+1
  6993   003B26  EC7E  F01F         	call	_fputs	;wreg free
  6994   003B2A  0012               	return		;funcret
  6995   003B2C                     __end_of_pad:
  6996                           	callstack 0
  6997                           
  6998 ;; *************** function _fputs *****************
  6999 ;; Defined at:
  7000 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  7001 ;; Parameters:    Size  Location     Type
  7002 ;;  s               2   13[COMRAM] PTR const unsigned char 
  7003 ;;		 -> dbuf(80), 
  7004 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  7005 ;;		 -> sprintf@f(11), 
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;  i               2   18[COMRAM] int 
  7008 ;;  c               1   17[COMRAM] unsigned char 
  7009 ;; Return value:  Size  Location     Type
  7010 ;;                  2   13[COMRAM] int 
  7011 ;; Registers used:
  7012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7013 ;; Tracked objects:
  7014 ;;		On entry : 0/0
  7015 ;;		On exit  : 0/0
  7016 ;;		Unchanged: 0/0
  7017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7018 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7019 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7021 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7022 ;;Total ram usage:        7 bytes
  7023 ;; Hardware stack levels used: 1
  7024 ;; Hardware stack levels required when called: 4
  7025 ;; This function calls:
  7026 ;;		_fputc
  7027 ;; This function is called by:
  7028 ;;		_pad
  7029 ;; This function uses a non-reentrant model
  7030 ;;
  7031                           
  7032                           	psect	text20
  7033   003EFC                     __ptext20:
  7034                           	callstack 0
  7035   003EFC                     _fputs:
  7036                           	callstack 21
  7037   003EFC  0E00               	movlw	0
  7038   003EFE  6E14               	movwf	(fputs@i+1)^0,c
  7039   003F00  0E00               	movlw	0
  7040   003F02  6E13               	movwf	fputs@i^0,c
  7041   003F04  EF8F  F01F         	goto	l3089
  7042   003F08                     l3085:
  7043   003F08  C012  F005         	movff	fputs@c,fputc@c
  7044   003F0C  6A06               	clrf	(fputc@c+1)^0,c
  7045   003F0E  C010  F007         	movff	fputs@fp,fputc@fp
  7046   003F12  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  7047   003F16  EC55  F01C         	call	_fputc	;wreg free
  7048   003F1A  4A13               	infsnz	fputs@i^0,f,c
  7049   003F1C  2A14               	incf	(fputs@i+1)^0,f,c
  7050   003F1E                     l3089:
  7051   003F1E  5013               	movf	fputs@i^0,w,c
  7052   003F20  240E               	addwf	fputs@s^0,w,c
  7053   003F22  6ED9               	movwf	fsr2l,c
  7054   003F24  5014               	movf	(fputs@i+1)^0,w,c
  7055   003F26  200F               	addwfc	(fputs@s+1)^0,w,c
  7056   003F28  6EDA               	movwf	fsr2h,c
  7057   003F2A  50DF               	movf	indf2,w,c
  7058   003F2C  6E12               	movwf	fputs@c^0,c
  7059   003F2E  5012               	movf	fputs@c^0,w,c
  7060   003F30  A4D8               	btfss	status,2,c
  7061   003F32  EF9D  F01F         	goto	u2631
  7062   003F36  EF9F  F01F         	goto	u2630
  7063   003F3A                     u2631:
  7064   003F3A  EF84  F01F         	goto	l3085
  7065   003F3E                     u2630:
  7066   003F3E  0012               	return		;funcret
  7067   003F40                     __end_of_fputs:
  7068                           	callstack 0
  7069                           
  7070 ;; *************** function _fputc *****************
  7071 ;; Defined at:
  7072 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  7073 ;; Parameters:    Size  Location     Type
  7074 ;;  c               2    4[COMRAM] int 
  7075 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  7076 ;;		 -> sprintf@f(11), 
  7077 ;; Auto vars:     Size  Location     Type
  7078 ;;		None
  7079 ;; Return value:  Size  Location     Type
  7080 ;;                  2    4[COMRAM] int 
  7081 ;; Registers used:
  7082 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7083 ;; Tracked objects:
  7084 ;;		On entry : 0/0
  7085 ;;		On exit  : 0/0
  7086 ;;		Unchanged: 0/0
  7087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7088 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7090 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7091 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7092 ;;Total ram usage:        9 bytes
  7093 ;; Hardware stack levels used: 1
  7094 ;; Hardware stack levels required when called: 3
  7095 ;; This function calls:
  7096 ;;		_putch
  7097 ;; This function is called by:
  7098 ;;		_pad
  7099 ;;		_vfpfcnvrt
  7100 ;;		_fputs
  7101 ;; This function uses a non-reentrant model
  7102 ;;
  7103                           
  7104                           	psect	text21
  7105   0038AA                     __ptext21:
  7106                           	callstack 0
  7107   0038AA                     _fputc:
  7108                           	callstack 24
  7109   0038AA  5007               	movf	fputc@fp^0,w,c
  7110   0038AC  1008               	iorwf	(fputc@fp+1)^0,w,c
  7111   0038AE  B4D8               	btfsc	status,2,c
  7112   0038B0  EF5C  F01C         	goto	u2201
  7113   0038B4  EF5E  F01C         	goto	u2200
  7114   0038B8                     u2201:
  7115   0038B8  EF67  F01C         	goto	l2871
  7116   0038BC                     u2200:
  7117   0038BC  5007               	movf	fputc@fp^0,w,c
  7118   0038BE  1008               	iorwf	(fputc@fp+1)^0,w,c
  7119   0038C0  A4D8               	btfss	status,2,c
  7120   0038C2  EF65  F01C         	goto	u2211
  7121   0038C6  EF67  F01C         	goto	u2210
  7122   0038CA                     u2211:
  7123   0038CA  EF6C  F01C         	goto	l2873
  7124   0038CE                     u2210:
  7125   0038CE                     l2871:
  7126   0038CE  5005               	movf	fputc@c^0,w,c
  7127   0038D0  EC14  F021         	call	_putch
  7128   0038D4  EFB9  F01C         	goto	l1198
  7129   0038D8                     l2873:
  7130   0038D8  EE20 F009          	lfsr	2,9
  7131   0038DC  5007               	movf	fputc@fp^0,w,c
  7132   0038DE  26D9               	addwf	fsr2l,f,c
  7133   0038E0  5008               	movf	(fputc@fp+1)^0,w,c
  7134   0038E2  22DA               	addwfc	fsr2h,f,c
  7135   0038E4  50DE               	movf	postinc2,w,c
  7136   0038E6  10DE               	iorwf	postinc2,w,c
  7137   0038E8  B4D8               	btfsc	status,2,c
  7138   0038EA  EF79  F01C         	goto	u2221
  7139   0038EE  EF7B  F01C         	goto	u2220
  7140   0038F2                     u2221:
  7141   0038F2  EF96  F01C         	goto	l2877
  7142   0038F6                     u2220:
  7143   0038F6  EE20 F009          	lfsr	2,9
  7144   0038FA  5007               	movf	fputc@fp^0,w,c
  7145   0038FC  26D9               	addwf	fsr2l,f,c
  7146   0038FE  5008               	movf	(fputc@fp+1)^0,w,c
  7147   003900  22DA               	addwfc	fsr2h,f,c
  7148   003902  EE10 F003          	lfsr	1,3
  7149   003906  5007               	movf	fputc@fp^0,w,c
  7150   003908  26E1               	addwf	fsr1l,f,c
  7151   00390A  5008               	movf	(fputc@fp+1)^0,w,c
  7152   00390C  22E2               	addwfc	fsr1h,f,c
  7153   00390E  50DE               	movf	postinc2,w,c
  7154   003910  5CE6               	subwf	postinc1,w,c
  7155   003912  50E6               	movf	postinc1,w,c
  7156   003914  0A80               	xorlw	128
  7157   003916  6E0D               	movwf	(??_fputc+4)^0,c
  7158   003918  50DE               	movf	postinc2,w,c
  7159   00391A  0A80               	xorlw	128
  7160   00391C  580D               	subwfb	(??_fputc+4)^0,w,c
  7161   00391E  B0D8               	btfsc	status,0,c
  7162   003920  EF94  F01C         	goto	u2231
  7163   003924  EF96  F01C         	goto	u2230
  7164   003928                     u2231:
  7165   003928  EFB9  F01C         	goto	l1198
  7166   00392C                     u2230:
  7167   00392C                     l2877:
  7168   00392C  EE20 F003          	lfsr	2,3
  7169   003930  5007               	movf	fputc@fp^0,w,c
  7170   003932  26D9               	addwf	fsr2l,f,c
  7171   003934  5008               	movf	(fputc@fp+1)^0,w,c
  7172   003936  22DA               	addwfc	fsr2h,f,c
  7173   003938  CFDE F009          	movff	postinc2,??_fputc
  7174   00393C  CFDD F00A          	movff	postdec2,??_fputc+1
  7175   003940  C007  FFD9         	movff	fputc@fp,fsr2l
  7176   003944  C008  FFDA         	movff	fputc@fp+1,fsr2h
  7177   003948  CFDE F00B          	movff	postinc2,??_fputc+2
  7178   00394C  CFDD F00C          	movff	postdec2,??_fputc+3
  7179   003950  5009               	movf	??_fputc^0,w,c
  7180   003952  240B               	addwf	(??_fputc+2)^0,w,c
  7181   003954  6ED9               	movwf	fsr2l,c
  7182   003956  500A               	movf	(??_fputc+1)^0,w,c
  7183   003958  200C               	addwfc	(??_fputc+3)^0,w,c
  7184   00395A  6EDA               	movwf	fsr2h,c
  7185   00395C  C005  FFDF         	movff	fputc@c,indf2
  7186   003960  EE20 F003          	lfsr	2,3
  7187   003964  5007               	movf	fputc@fp^0,w,c
  7188   003966  26D9               	addwf	fsr2l,f,c
  7189   003968  5008               	movf	(fputc@fp+1)^0,w,c
  7190   00396A  22DA               	addwfc	fsr2h,f,c
  7191   00396C  2ADE               	incf	postinc2,f,c
  7192   00396E  0E00               	movlw	0
  7193   003970  22DD               	addwfc	postdec2,f,c
  7194   003972                     l1198:
  7195   003972  0012               	return		;funcret
  7196   003974                     __end_of_fputc:
  7197                           	callstack 0
  7198                           
  7199 ;; *************** function _putch *****************
  7200 ;; Defined at:
  7201 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  7202 ;; Parameters:    Size  Location     Type
  7203 ;;  c               1    wreg     unsigned char 
  7204 ;; Auto vars:     Size  Location     Type
  7205 ;;  c               1    0[COMRAM] unsigned char 
  7206 ;; Return value:  Size  Location     Type
  7207 ;;                  1    wreg      void 
  7208 ;; Registers used:
  7209 ;;		wreg
  7210 ;; Tracked objects:
  7211 ;;		On entry : 0/0
  7212 ;;		On exit  : 0/0
  7213 ;;		Unchanged: 0/0
  7214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7219 ;;Total ram usage:        0 bytes
  7220 ;; Hardware stack levels used: 1
  7221 ;; Hardware stack levels required when called: 2
  7222 ;; This function calls:
  7223 ;;		Nothing
  7224 ;; This function is called by:
  7225 ;;		_fputc
  7226 ;; This function uses a non-reentrant model
  7227 ;;
  7228                           
  7229                           	psect	text22
  7230   004228                     __ptext22:
  7231                           	callstack 0
  7232   004228                     _putch:
  7233                           	callstack 24
  7234   004228  0012               	return		;funcret
  7235   00422A                     __end_of_putch:
  7236                           	callstack 0
  7237                           
  7238 ;; *************** function _abs *****************
  7239 ;; Defined at:
  7240 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  7241 ;; Parameters:    Size  Location     Type
  7242 ;;  a               2   22[COMRAM] int 
  7243 ;; Auto vars:     Size  Location     Type
  7244 ;;		None
  7245 ;; Return value:  Size  Location     Type
  7246 ;;                  2   22[COMRAM] int 
  7247 ;; Registers used:
  7248 ;;		wreg, status,2, status,0
  7249 ;; Tracked objects:
  7250 ;;		On entry : 0/0
  7251 ;;		On exit  : 0/0
  7252 ;;		Unchanged: 0/0
  7253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7254 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7256 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7257 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7258 ;;Total ram usage:        4 bytes
  7259 ;; Hardware stack levels used: 1
  7260 ;; Hardware stack levels required when called: 2
  7261 ;; This function calls:
  7262 ;;		Nothing
  7263 ;; This function is called by:
  7264 ;;		_dtoa
  7265 ;; This function uses a non-reentrant model
  7266 ;;
  7267                           
  7268                           	psect	text23
  7269   003F82                     __ptext23:
  7270                           	callstack 0
  7271   003F82                     _abs:
  7272                           	callstack 24
  7273   003F82  BE18               	btfsc	(abs@a+1)^0,7,c
  7274   003F84  EFCE  F01F         	goto	u3370
  7275   003F88  5018               	movf	(abs@a+1)^0,w,c
  7276   003F8A  E106               	bnz	u3371
  7277   003F8C  0417               	decf	abs@a^0,w,c
  7278   003F8E  B0D8               	btfsc	status,0,c
  7279   003F90  EFCC  F01F         	goto	u3371
  7280   003F94  EFCE  F01F         	goto	u3370
  7281   003F98                     u3371:
  7282   003F98  EFDC  F01F         	goto	l1157
  7283   003F9C                     u3370:
  7284   003F9C  C017  F019         	movff	abs@a,??_abs
  7285   003FA0  C018  F01A         	movff	abs@a+1,??_abs+1
  7286   003FA4  1E19               	comf	??_abs^0,f,c
  7287   003FA6  1E1A               	comf	(??_abs+1)^0,f,c
  7288   003FA8  4A19               	infsnz	??_abs^0,f,c
  7289   003FAA  2A1A               	incf	(??_abs+1)^0,f,c
  7290   003FAC  C019  F017         	movff	??_abs,?_abs
  7291   003FB0  C01A  F018         	movff	??_abs+1,?_abs+1
  7292   003FB4  EFE0  F01F         	goto	l1160
  7293   003FB8                     l1157:
  7294   003FB8  C017  F017         	movff	abs@a,?_abs
  7295   003FBC  C018  F018         	movff	abs@a+1,?_abs+1
  7296   003FC0                     l1160:
  7297   003FC0  0012               	return		;funcret
  7298   003FC2                     __end_of_abs:
  7299                           	callstack 0
  7300                           
  7301 ;; *************** function ___aomod *****************
  7302 ;; Defined at:
  7303 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  7304 ;; Parameters:    Size  Location     Type
  7305 ;;  dividend        8    4[COMRAM] long long 
  7306 ;;  divisor         8   12[COMRAM] long long 
  7307 ;; Auto vars:     Size  Location     Type
  7308 ;;  sign            1   21[COMRAM] unsigned char 
  7309 ;;  counter         1   20[COMRAM] unsigned char 
  7310 ;; Return value:  Size  Location     Type
  7311 ;;                  8    4[COMRAM] long long 
  7312 ;; Registers used:
  7313 ;;		wreg, status,2, status,0
  7314 ;; Tracked objects:
  7315 ;;		On entry : 0/0
  7316 ;;		On exit  : 0/0
  7317 ;;		Unchanged: 0/0
  7318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7319 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7320 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7322 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7323 ;;Total ram usage:       18 bytes
  7324 ;; Hardware stack levels used: 1
  7325 ;; Hardware stack levels required when called: 2
  7326 ;; This function calls:
  7327 ;;		Nothing
  7328 ;; This function is called by:
  7329 ;;		_dtoa
  7330 ;; This function uses a non-reentrant model
  7331 ;;
  7332                           
  7333                           	psect	text24
  7334   00343E                     __ptext24:
  7335                           	callstack 0
  7336   00343E                     ___aomod:
  7337                           	callstack 24
  7338   00343E  0E00               	movlw	0
  7339   003440  6E16               	movwf	___aomod@sign^0,c
  7340   003442  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  7341   003444  EF28  F01A         	goto	u2710
  7342   003448  EF26  F01A         	goto	u2711
  7343   00344C                     u2711:
  7344   00344C  EF3A  F01A         	goto	l3143
  7345   003450                     u2710:
  7346   003450  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  7347   003452  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  7348   003454  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  7349   003456  1E09               	comf	(___aomod@dividend+4)^0,f,c
  7350   003458  1E08               	comf	(___aomod@dividend+3)^0,f,c
  7351   00345A  1E07               	comf	(___aomod@dividend+2)^0,f,c
  7352   00345C  1E06               	comf	(___aomod@dividend+1)^0,f,c
  7353   00345E  6C05               	negf	___aomod@dividend^0,c
  7354   003460  0E00               	movlw	0
  7355   003462  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  7356   003464  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  7357   003466  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  7358   003468  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  7359   00346A  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  7360   00346C  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  7361   00346E  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  7362   003470  0E01               	movlw	1
  7363   003472  6E16               	movwf	___aomod@sign^0,c
  7364   003474                     l3143:
  7365   003474  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  7366   003476  EF41  F01A         	goto	u2720
  7367   00347A  EF3F  F01A         	goto	u2721
  7368   00347E                     u2721:
  7369   00347E  EF51  F01A         	goto	l3147
  7370   003482                     u2720:
  7371   003482  1E14               	comf	(___aomod@divisor+7)^0,f,c
  7372   003484  1E13               	comf	(___aomod@divisor+6)^0,f,c
  7373   003486  1E12               	comf	(___aomod@divisor+5)^0,f,c
  7374   003488  1E11               	comf	(___aomod@divisor+4)^0,f,c
  7375   00348A  1E10               	comf	(___aomod@divisor+3)^0,f,c
  7376   00348C  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  7377   00348E  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  7378   003490  6C0D               	negf	___aomod@divisor^0,c
  7379   003492  0E00               	movlw	0
  7380   003494  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  7381   003496  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  7382   003498  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  7383   00349A  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  7384   00349C  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  7385   00349E  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  7386   0034A0  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  7387   0034A2                     l3147:
  7388   0034A2  500D               	movf	___aomod@divisor^0,w,c
  7389   0034A4  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  7390   0034A6  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  7391   0034A8  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  7392   0034AA  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  7393   0034AC  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  7394   0034AE  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  7395   0034B0  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  7396   0034B2  B4D8               	btfsc	status,2,c
  7397   0034B4  EF5E  F01A         	goto	u2731
  7398   0034B8  EF60  F01A         	goto	u2730
  7399   0034BC                     u2731:
  7400   0034BC  EFA8  F01A         	goto	l3163
  7401   0034C0                     u2730:
  7402   0034C0  0E01               	movlw	1
  7403   0034C2  6E15               	movwf	___aomod@counter^0,c
  7404   0034C4  EF6E  F01A         	goto	l3153
  7405   0034C8                     l3151:
  7406   0034C8  90D8               	bcf	status,0,c
  7407   0034CA  360D               	rlcf	___aomod@divisor^0,f,c
  7408   0034CC  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  7409   0034CE  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  7410   0034D0  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  7411   0034D2  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  7412   0034D4  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  7413   0034D6  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  7414   0034D8  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  7415   0034DA  2A15               	incf	___aomod@counter^0,f,c
  7416   0034DC                     l3153:
  7417   0034DC  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  7418   0034DE  EF73  F01A         	goto	u2741
  7419   0034E2  EF75  F01A         	goto	u2740
  7420   0034E6                     u2741:
  7421   0034E6  EF64  F01A         	goto	l3151
  7422   0034EA                     u2740:
  7423   0034EA                     l3155:
  7424   0034EA  500D               	movf	___aomod@divisor^0,w,c
  7425   0034EC  5C05               	subwf	___aomod@dividend^0,w,c
  7426   0034EE  500E               	movf	(___aomod@divisor+1)^0,w,c
  7427   0034F0  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  7428   0034F2  500F               	movf	(___aomod@divisor+2)^0,w,c
  7429   0034F4  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  7430   0034F6  5010               	movf	(___aomod@divisor+3)^0,w,c
  7431   0034F8  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  7432   0034FA  5011               	movf	(___aomod@divisor+4)^0,w,c
  7433   0034FC  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  7434   0034FE  5012               	movf	(___aomod@divisor+5)^0,w,c
  7435   003500  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  7436   003502  5013               	movf	(___aomod@divisor+6)^0,w,c
  7437   003504  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  7438   003506  5014               	movf	(___aomod@divisor+7)^0,w,c
  7439   003508  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  7440   00350A  A0D8               	btfss	status,0,c
  7441   00350C  EF8A  F01A         	goto	u2751
  7442   003510  EF8C  F01A         	goto	u2750
  7443   003514                     u2751:
  7444   003514  EF9C  F01A         	goto	l3159
  7445   003518                     u2750:
  7446   003518  500D               	movf	___aomod@divisor^0,w,c
  7447   00351A  5E05               	subwf	___aomod@dividend^0,f,c
  7448   00351C  500E               	movf	(___aomod@divisor+1)^0,w,c
  7449   00351E  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  7450   003520  500F               	movf	(___aomod@divisor+2)^0,w,c
  7451   003522  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  7452   003524  5010               	movf	(___aomod@divisor+3)^0,w,c
  7453   003526  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  7454   003528  5011               	movf	(___aomod@divisor+4)^0,w,c
  7455   00352A  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  7456   00352C  5012               	movf	(___aomod@divisor+5)^0,w,c
  7457   00352E  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  7458   003530  5013               	movf	(___aomod@divisor+6)^0,w,c
  7459   003532  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  7460   003534  5014               	movf	(___aomod@divisor+7)^0,w,c
  7461   003536  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  7462   003538                     l3159:
  7463   003538  90D8               	bcf	status,0,c
  7464   00353A  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  7465   00353C  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  7466   00353E  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  7467   003540  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  7468   003542  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  7469   003544  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  7470   003546  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  7471   003548  320D               	rrcf	___aomod@divisor^0,f,c
  7472   00354A  2E15               	decfsz	___aomod@counter^0,f,c
  7473   00354C  EF75  F01A         	goto	l3155
  7474   003550                     l3163:
  7475   003550  5016               	movf	___aomod@sign^0,w,c
  7476   003552  B4D8               	btfsc	status,2,c
  7477   003554  EFAE  F01A         	goto	u2761
  7478   003558  EFB0  F01A         	goto	u2760
  7479   00355C                     u2761:
  7480   00355C  EFC0  F01A         	goto	l3167
  7481   003560                     u2760:
  7482   003560  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  7483   003562  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  7484   003564  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  7485   003566  1E09               	comf	(___aomod@dividend+4)^0,f,c
  7486   003568  1E08               	comf	(___aomod@dividend+3)^0,f,c
  7487   00356A  1E07               	comf	(___aomod@dividend+2)^0,f,c
  7488   00356C  1E06               	comf	(___aomod@dividend+1)^0,f,c
  7489   00356E  6C05               	negf	___aomod@dividend^0,c
  7490   003570  0E00               	movlw	0
  7491   003572  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  7492   003574  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  7493   003576  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  7494   003578  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  7495   00357A  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  7496   00357C  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  7497   00357E  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  7498   003580                     l3167:
  7499   003580  C005  F005         	movff	___aomod@dividend,?___aomod
  7500   003584  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  7501   003588  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  7502   00358C  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  7503   003590  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  7504   003594  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  7505   003598  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  7506   00359C  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  7507   0035A0  0012               	return		;funcret
  7508   0035A2                     __end_of___aomod:
  7509                           	callstack 0
  7510                           
  7511 ;; *************** function ___aodiv *****************
  7512 ;; Defined at:
  7513 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  7514 ;; Parameters:    Size  Location     Type
  7515 ;;  dividend        8    4[COMRAM] long long 
  7516 ;;  divisor         8   12[COMRAM] long long 
  7517 ;; Auto vars:     Size  Location     Type
  7518 ;;  quotient        8   22[COMRAM] long long 
  7519 ;;  sign            1   21[COMRAM] unsigned char 
  7520 ;;  counter         1   20[COMRAM] unsigned char 
  7521 ;; Return value:  Size  Location     Type
  7522 ;;                  8    4[COMRAM] long long 
  7523 ;; Registers used:
  7524 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7525 ;; Tracked objects:
  7526 ;;		On entry : 0/0
  7527 ;;		On exit  : 0/0
  7528 ;;		Unchanged: 0/0
  7529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7530 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7531 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7533 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7534 ;;Total ram usage:       26 bytes
  7535 ;; Hardware stack levels used: 1
  7536 ;; Hardware stack levels required when called: 2
  7537 ;; This function calls:
  7538 ;;		Nothing
  7539 ;; This function is called by:
  7540 ;;		_dtoa
  7541 ;; This function uses a non-reentrant model
  7542 ;;
  7543                           
  7544                           	psect	text25
  7545   0032B6                     __ptext25:
  7546                           	callstack 0
  7547   0032B6                     ___aodiv:
  7548                           	callstack 24
  7549   0032B6  0E00               	movlw	0
  7550   0032B8  6E16               	movwf	___aodiv@sign^0,c
  7551   0032BA  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  7552   0032BC  EF64  F019         	goto	u2640
  7553   0032C0  EF62  F019         	goto	u2641
  7554   0032C4                     u2641:
  7555   0032C4  EF76  F019         	goto	l3099
  7556   0032C8                     u2640:
  7557   0032C8  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  7558   0032CA  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  7559   0032CC  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  7560   0032CE  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  7561   0032D0  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  7562   0032D2  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  7563   0032D4  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  7564   0032D6  6C0D               	negf	___aodiv@divisor^0,c
  7565   0032D8  0E00               	movlw	0
  7566   0032DA  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  7567   0032DC  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  7568   0032DE  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  7569   0032E0  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  7570   0032E2  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  7571   0032E4  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  7572   0032E6  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  7573   0032E8  0E01               	movlw	1
  7574   0032EA  6E16               	movwf	___aodiv@sign^0,c
  7575   0032EC                     l3099:
  7576   0032EC  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  7577   0032EE  EF7D  F019         	goto	u2650
  7578   0032F2  EF7B  F019         	goto	u2651
  7579   0032F6                     u2651:
  7580   0032F6  EF8F  F019         	goto	l3105
  7581   0032FA                     u2650:
  7582   0032FA  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  7583   0032FC  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  7584   0032FE  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  7585   003300  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  7586   003302  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  7587   003304  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  7588   003306  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  7589   003308  6C05               	negf	___aodiv@dividend^0,c
  7590   00330A  0E00               	movlw	0
  7591   00330C  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  7592   00330E  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  7593   003310  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  7594   003312  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  7595   003314  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  7596   003316  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  7597   003318  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  7598   00331A  0E01               	movlw	1
  7599   00331C  1A16               	xorwf	___aodiv@sign^0,f,c
  7600   00331E                     l3105:
  7601   00331E  EE20  F017         	lfsr	2,___aodiv@quotient
  7602   003322  0E07               	movlw	7
  7603   003324                     u2661:
  7604   003324  6ADE               	clrf	postinc2,c
  7605   003326  06E8               	decf	wreg,f,c
  7606   003328  E2FD               	bc	u2661
  7607   00332A  500D               	movf	___aodiv@divisor^0,w,c
  7608   00332C  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  7609   00332E  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  7610   003330  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  7611   003332  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  7612   003334  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  7613   003336  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  7614   003338  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  7615   00333A  B4D8               	btfsc	status,2,c
  7616   00333C  EFA2  F019         	goto	u2671
  7617   003340  EFA4  F019         	goto	u2670
  7618   003344                     u2671:
  7619   003344  EFF6  F019         	goto	l3127
  7620   003348                     u2670:
  7621   003348  0E01               	movlw	1
  7622   00334A  6E15               	movwf	___aodiv@counter^0,c
  7623   00334C  EFB2  F019         	goto	l3113
  7624   003350                     l3111:
  7625   003350  90D8               	bcf	status,0,c
  7626   003352  360D               	rlcf	___aodiv@divisor^0,f,c
  7627   003354  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  7628   003356  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  7629   003358  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  7630   00335A  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  7631   00335C  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  7632   00335E  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  7633   003360  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  7634   003362  2A15               	incf	___aodiv@counter^0,f,c
  7635   003364                     l3113:
  7636   003364  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  7637   003366  EFB7  F019         	goto	u2681
  7638   00336A  EFB9  F019         	goto	u2680
  7639   00336E                     u2681:
  7640   00336E  EFA8  F019         	goto	l3111
  7641   003372                     u2680:
  7642   003372                     l3115:
  7643   003372  90D8               	bcf	status,0,c
  7644   003374  3617               	rlcf	___aodiv@quotient^0,f,c
  7645   003376  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  7646   003378  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  7647   00337A  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  7648   00337C  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  7649   00337E  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  7650   003380  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  7651   003382  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  7652   003384  500D               	movf	___aodiv@divisor^0,w,c
  7653   003386  5C05               	subwf	___aodiv@dividend^0,w,c
  7654   003388  500E               	movf	(___aodiv@divisor+1)^0,w,c
  7655   00338A  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  7656   00338C  500F               	movf	(___aodiv@divisor+2)^0,w,c
  7657   00338E  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  7658   003390  5010               	movf	(___aodiv@divisor+3)^0,w,c
  7659   003392  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  7660   003394  5011               	movf	(___aodiv@divisor+4)^0,w,c
  7661   003396  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  7662   003398  5012               	movf	(___aodiv@divisor+5)^0,w,c
  7663   00339A  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  7664   00339C  5013               	movf	(___aodiv@divisor+6)^0,w,c
  7665   00339E  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  7666   0033A0  5014               	movf	(___aodiv@divisor+7)^0,w,c
  7667   0033A2  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  7668   0033A4  A0D8               	btfss	status,0,c
  7669   0033A6  EFD7  F019         	goto	u2691
  7670   0033AA  EFD9  F019         	goto	u2690
  7671   0033AE                     u2691:
  7672   0033AE  EFEA  F019         	goto	l3123
  7673   0033B2                     u2690:
  7674   0033B2  500D               	movf	___aodiv@divisor^0,w,c
  7675   0033B4  5E05               	subwf	___aodiv@dividend^0,f,c
  7676   0033B6  500E               	movf	(___aodiv@divisor+1)^0,w,c
  7677   0033B8  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  7678   0033BA  500F               	movf	(___aodiv@divisor+2)^0,w,c
  7679   0033BC  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  7680   0033BE  5010               	movf	(___aodiv@divisor+3)^0,w,c
  7681   0033C0  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  7682   0033C2  5011               	movf	(___aodiv@divisor+4)^0,w,c
  7683   0033C4  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  7684   0033C6  5012               	movf	(___aodiv@divisor+5)^0,w,c
  7685   0033C8  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  7686   0033CA  5013               	movf	(___aodiv@divisor+6)^0,w,c
  7687   0033CC  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  7688   0033CE  5014               	movf	(___aodiv@divisor+7)^0,w,c
  7689   0033D0  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  7690   0033D2  8017               	bsf	___aodiv@quotient^0,0,c
  7691   0033D4                     l3123:
  7692   0033D4  90D8               	bcf	status,0,c
  7693   0033D6  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  7694   0033D8  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  7695   0033DA  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  7696   0033DC  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  7697   0033DE  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  7698   0033E0  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  7699   0033E2  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  7700   0033E4  320D               	rrcf	___aodiv@divisor^0,f,c
  7701   0033E6  2E15               	decfsz	___aodiv@counter^0,f,c
  7702   0033E8  EFB9  F019         	goto	l3115
  7703   0033EC                     l3127:
  7704   0033EC  5016               	movf	___aodiv@sign^0,w,c
  7705   0033EE  B4D8               	btfsc	status,2,c
  7706   0033F0  EFFC  F019         	goto	u2701
  7707   0033F4  EFFE  F019         	goto	u2700
  7708   0033F8                     u2701:
  7709   0033F8  EF0E  F01A         	goto	l3131
  7710   0033FC                     u2700:
  7711   0033FC  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  7712   0033FE  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  7713   003400  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  7714   003402  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  7715   003404  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  7716   003406  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  7717   003408  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  7718   00340A  6C17               	negf	___aodiv@quotient^0,c
  7719   00340C  0E00               	movlw	0
  7720   00340E  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  7721   003410  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  7722   003412  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  7723   003414  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  7724   003416  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  7725   003418  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  7726   00341A  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  7727   00341C                     l3131:
  7728   00341C  C017  F005         	movff	___aodiv@quotient,?___aodiv
  7729   003420  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  7730   003424  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  7731   003428  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  7732   00342C  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  7733   003430  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  7734   003434  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  7735   003438  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  7736   00343C  0012               	return		;funcret
  7737   00343E                     __end_of___aodiv:
  7738                           	callstack 0
  7739                           
  7740 ;; *************** function _sendTxBuf *****************
  7741 ;; Defined at:
  7742 ;;		line 126 in file "serialTest.c"
  7743 ;; Parameters:    Size  Location     Type
  7744 ;;		None
  7745 ;; Auto vars:     Size  Location     Type
  7746 ;;		None
  7747 ;; Return value:  Size  Location     Type
  7748 ;;                  1    wreg      void 
  7749 ;; Registers used:
  7750 ;;		wreg, status,2, status,0, cstack
  7751 ;; Tracked objects:
  7752 ;;		On entry : 0/0
  7753 ;;		On exit  : 0/0
  7754 ;;		Unchanged: 0/0
  7755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7760 ;;Total ram usage:        0 bytes
  7761 ;; Hardware stack levels used: 1
  7762 ;; Hardware stack levels required when called: 3
  7763 ;; This function calls:
  7764 ;;		_isDataInTxBuf
  7765 ;; This function is called by:
  7766 ;;		_main
  7767 ;; This function uses a non-reentrant model
  7768 ;;
  7769                           
  7770                           	psect	text26
  7771   0041B4                     __ptext26:
  7772                           	callstack 0
  7773   0041B4                     _sendTxBuf:
  7774                           	callstack 27
  7775   0041B4                     
  7776                           ;serialTest.c: 127:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;}
  7777   0041B4  ECE7  F020         	call	_isDataInTxBuf	;wreg free
  7778   0041B8  0900               	iorlw	0
  7779   0041BA  B4D8               	btfsc	status,2,c
  7780   0041BC  EFE2  F020         	goto	u4131
  7781   0041C0  EFE4  F020         	goto	u4130
  7782   0041C4                     u4131:
  7783   0041C4  EFE6  F020         	goto	l316
  7784   0041C8                     u4130:
  7785   0041C8  010E               	movlb	14	; () banked
  7786   0041CA  852D               	bsf	45,2,b	;volatile
  7787   0041CC                     l316:
  7788   0041CC  0012               	return		;funcret
  7789   0041CE                     __end_of_sendTxBuf:
  7790                           	callstack 0
  7791                           
  7792 ;; *************** function _isDataInTxBuf *****************
  7793 ;; Defined at:
  7794 ;;		line 113 in file "serialTest.c"
  7795 ;; Parameters:    Size  Location     Type
  7796 ;;		None
  7797 ;; Auto vars:     Size  Location     Type
  7798 ;;		None
  7799 ;; Return value:  Size  Location     Type
  7800 ;;                  1    wreg      unsigned char 
  7801 ;; Registers used:
  7802 ;;		wreg, status,2, status,0
  7803 ;; Tracked objects:
  7804 ;;		On entry : 0/0
  7805 ;;		On exit  : 0/0
  7806 ;;		Unchanged: 0/0
  7807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7812 ;;Total ram usage:        0 bytes
  7813 ;; Hardware stack levels used: 1
  7814 ;; Hardware stack levels required when called: 2
  7815 ;; This function calls:
  7816 ;;		Nothing
  7817 ;; This function is called by:
  7818 ;;		_sendTxBuf
  7819 ;; This function uses a non-reentrant model
  7820 ;;
  7821                           
  7822                           	psect	text27
  7823   0041CE                     __ptext27:
  7824                           	callstack 0
  7825   0041CE                     _isDataInTxBuf:
  7826                           	callstack 27
  7827   0041CE                     
  7828                           ;serialTest.c: 114:     return (TxBufWriteCnt!=TxBufReadCnt);
  7829   0041CE  5057               	movf	_TxBufReadCnt^0,w,c	;volatile
  7830   0041D0  1858               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  7831   0041D2  A4D8               	btfss	status,2,c
  7832   0041D4  EFEE  F020         	goto	u4091
  7833   0041D8  EFF1  F020         	goto	u4090
  7834   0041DC                     u4091:
  7835   0041DC  0E01               	movlw	1
  7836   0041DE  EFF2  F020         	goto	u4100
  7837   0041E2                     u4090:
  7838   0041E2  0E00               	movlw	0
  7839   0041E4                     u4100:
  7840   0041E4  0012               	return		;funcret
  7841   0041E6                     __end_of_isDataInTxBuf:
  7842                           	callstack 0
  7843                           
  7844 ;; *************** function _initUSART4 *****************
  7845 ;; Defined at:
  7846 ;;		line 5 in file "serialTest.c"
  7847 ;; Parameters:    Size  Location     Type
  7848 ;;		None
  7849 ;; Auto vars:     Size  Location     Type
  7850 ;;		None
  7851 ;; Return value:  Size  Location     Type
  7852 ;;                  1    wreg      void 
  7853 ;; Registers used:
  7854 ;;		wreg, status,2
  7855 ;; Tracked objects:
  7856 ;;		On entry : 0/0
  7857 ;;		On exit  : 0/0
  7858 ;;		Unchanged: 0/0
  7859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7864 ;;Total ram usage:        0 bytes
  7865 ;; Hardware stack levels used: 1
  7866 ;; Hardware stack levels required when called: 2
  7867 ;; This function calls:
  7868 ;;		Nothing
  7869 ;; This function is called by:
  7870 ;;		_main
  7871 ;; This function uses a non-reentrant model
  7872 ;;
  7873                           
  7874                           	psect	text28
  7875   004094                     __ptext28:
  7876                           	callstack 0
  7877   004094                     _initUSART4:
  7878                           	callstack 28
  7879   004094                     
  7880                           ;serialTest.c: 9:     BAUD4CONbits.BRG16 = 0;
  7881   004094  010E               	movlb	14	; () banked
  7882   004096  97E9               	bcf	233,3,b	;volatile
  7883                           
  7884                           ;serialTest.c: 10:     TX4STAbits.BRGH = 0;
  7885   004098  95E8               	bcf	232,2,b	;volatile
  7886   00409A                     
  7887                           ; BSR set to: 14
  7888                           ;serialTest.c: 19:     SP4BRGL = 51;
  7889   00409A  0E33               	movlw	51
  7890   00409C  6FE5               	movwf	229,b	;volatile
  7891                           
  7892                           ;serialTest.c: 20:     SP4BRGH = 0;
  7893   00409E  0E00               	movlw	0
  7894   0040A0  6FE6               	movwf	230,b	;volatile
  7895   0040A2                     
  7896                           ; BSR set to: 14
  7897                           ;serialTest.c: 22:     RC4STAbits.CREN = 1;
  7898   0040A2  89E7               	bsf	231,4,b	;volatile
  7899   0040A4                     
  7900                           ; BSR set to: 14
  7901                           ;serialTest.c: 23:     TX4STAbits.TXEN = 1;
  7902   0040A4  8BE8               	bsf	232,5,b	;volatile
  7903   0040A6                     
  7904                           ; BSR set to: 14
  7905                           ;serialTest.c: 24:     RC4STAbits.SPEN = 1;
  7906   0040A6  8FE7               	bsf	231,7,b	;volatile
  7907   0040A8                     
  7908                           ; BSR set to: 14
  7909                           ;serialTest.c: 26:     TRISCbits.TRISC1 = 1;
  7910   0040A8  8283               	bsf	131,1,c	;volatile
  7911                           
  7912                           ;serialTest.c: 28:     RC0PPS = 0x12;
  7913   0040AA  0E12               	movlw	18
  7914   0040AC  6F62               	movwf	98,b	;volatile
  7915                           
  7916                           ;serialTest.c: 29:     RX4PPS = 0x11;
  7917   0040AE  0E11               	movlw	17
  7918   0040B0  6F15               	movwf	21,b	;volatile
  7919   0040B2                     
  7920                           ; BSR set to: 14
  7921                           ;serialTest.c: 32:     INTCONbits.GIE = 1;
  7922   0040B2  8EF2               	bsf	242,7,c	;volatile
  7923   0040B4                     
  7924                           ; BSR set to: 14
  7925                           ;serialTest.c: 33:     INTCONbits.IPEN = 1;
  7926   0040B4  8AF2               	bsf	242,5,c	;volatile
  7927   0040B6                     
  7928                           ; BSR set to: 14
  7929                           ;serialTest.c: 34:     INTCONbits.PEIE = 1;
  7930   0040B6  8CF2               	bsf	242,6,c	;volatile
  7931   0040B8                     
  7932                           ; BSR set to: 14
  7933                           ;serialTest.c: 36:     PIE4bits.RC4IE=1;
  7934   0040B8  872D               	bsf	45,3,b	;volatile
  7935   0040BA                     
  7936                           ; BSR set to: 14
  7937                           ;serialTest.c: 37:     PIE4bits.TX4IE=0;
  7938   0040BA  952D               	bcf	45,2,b	;volatile
  7939   0040BC                     
  7940                           ; BSR set to: 14
  7941                           ;serialTest.c: 39:     IPR4bits.RC4IP = 1;
  7942   0040BC  8723               	bsf	35,3,b	;volatile
  7943   0040BE                     
  7944                           ; BSR set to: 14
  7945                           ;serialTest.c: 40:     IPR4bits.TX4IP = 1;
  7946   0040BE  8523               	bsf	35,2,b	;volatile
  7947   0040C0                     
  7948                           ; BSR set to: 14
  7949   0040C0  0012               	return		;funcret
  7950   0040C2                     __end_of_initUSART4:
  7951                           	callstack 0
  7952                           
  7953 ;; *************** function _initDCmotorsPWM *****************
  7954 ;; Defined at:
  7955 ;;		line 5 in file "dc_motor.c"
  7956 ;; Parameters:    Size  Location     Type
  7957 ;;  PWMperiod       2   22[COMRAM] int 
  7958 ;; Auto vars:     Size  Location     Type
  7959 ;;		None
  7960 ;; Return value:  Size  Location     Type
  7961 ;;                  1    wreg      void 
  7962 ;; Registers used:
  7963 ;;		wreg, status,2, status,0, cstack
  7964 ;; Tracked objects:
  7965 ;;		On entry : 0/0
  7966 ;;		On exit  : 0/0
  7967 ;;		Unchanged: 0/0
  7968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7969 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7972 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7973 ;;Total ram usage:        2 bytes
  7974 ;; Hardware stack levels used: 1
  7975 ;; Hardware stack levels required when called: 3
  7976 ;; This function calls:
  7977 ;;		_LRmotorsInit
  7978 ;; This function is called by:
  7979 ;;		_main
  7980 ;; This function uses a non-reentrant model
  7981 ;;
  7982                           
  7983                           	psect	text29
  7984   003A1E                     __ptext29:
  7985                           	callstack 0
  7986   003A1E                     _initDCmotorsPWM:
  7987                           	callstack 27
  7988   003A1E                     
  7989                           ;dc_motor.c: 9:     LATEbits.LATE2 = 0;
  7990   003A1E  947D               	bcf	125,2,c	;volatile
  7991                           
  7992                           ;dc_motor.c: 10:     LATEbits.LATE4 = 0;
  7993   003A20  987D               	bcf	125,4,c	;volatile
  7994                           
  7995                           ;dc_motor.c: 11:     LATCbits.LATC7 = 0;
  7996   003A22  9E7B               	bcf	123,7,c	;volatile
  7997                           
  7998                           ;dc_motor.c: 12:     LATGbits.LATG6 = 0;
  7999   003A24  9C7F               	bcf	127,6,c	;volatile
  8000                           
  8001                           ;dc_motor.c: 15:     TRISEbits.TRISE2 = 0 ;
  8002   003A26  9485               	bcf	133,2,c	;volatile
  8003                           
  8004                           ;dc_motor.c: 16:     TRISEbits.TRISE4 = 0 ;
  8005   003A28  9885               	bcf	133,4,c	;volatile
  8006                           
  8007                           ;dc_motor.c: 17:     TRISCbits.TRISC7 = 0 ;
  8008   003A2A  9E83               	bcf	131,7,c	;volatile
  8009                           
  8010                           ;dc_motor.c: 18:     TRISGbits.TRISG6 = 0 ;
  8011   003A2C  9C87               	bcf	135,6,c	;volatile
  8012   003A2E                     
  8013                           ;dc_motor.c: 21:     RE2PPS=0x05;
  8014   003A2E  0E05               	movlw	5
  8015   003A30  010E               	movlb	14	; () banked
  8016   003A32  6F74               	movwf	116,b	;volatile
  8017                           
  8018                           ;dc_motor.c: 22:     RE4PPS=0x06;
  8019   003A34  0E06               	movlw	6
  8020   003A36  6F76               	movwf	118,b	;volatile
  8021                           
  8022                           ;dc_motor.c: 23:     RC7PPS=0x07;
  8023   003A38  0E07               	movlw	7
  8024   003A3A  6F69               	movwf	105,b	;volatile
  8025                           
  8026                           ;dc_motor.c: 24:     RG6PPS=0x08;
  8027   003A3C  0E08               	movlw	8
  8028   003A3E  6F88               	movwf	136,b	;volatile
  8029                           
  8030                           ;dc_motor.c: 27:     T2CONbits.CKPS=0b011;
  8031   003A40  50BD               	movf	189,w,c	;volatile
  8032   003A42  0B8F               	andlw	-113
  8033   003A44  0930               	iorlw	48
  8034   003A46  6EBD               	movwf	189,c	;volatile
  8035                           
  8036                           ;dc_motor.c: 28:     T2HLTbits.MODE=0b00000;
  8037   003A48  0EE0               	movlw	-32
  8038   003A4A  16BE               	andwf	190,f,c	;volatile
  8039                           
  8040                           ;dc_motor.c: 29:     T2CLKCONbits.CS=0b0001;
  8041   003A4C  50BF               	movf	191,w,c	;volatile
  8042   003A4E  0BF0               	andlw	-16
  8043   003A50  0901               	iorlw	1
  8044   003A52  6EBF               	movwf	191,c	;volatile
  8045                           
  8046                           ;dc_motor.c: 33:     T2PR=199;
  8047   003A54  0EC7               	movlw	199
  8048   003A56  6EBC               	movwf	188,c	;volatile
  8049   003A58                     
  8050                           ; BSR set to: 14
  8051                           ;dc_motor.c: 34:     T2CONbits.ON=1;
  8052   003A58  8EBD               	bsf	189,7,c	;volatile
  8053                           
  8054                           ;dc_motor.c: 38:     CCPR1H=0;
  8055   003A5A  0E00               	movlw	0
  8056   003A5C  6EAA               	movwf	170,c	;volatile
  8057                           
  8058                           ;dc_motor.c: 39:     CCPR2H=0;
  8059   003A5E  0E00               	movlw	0
  8060   003A60  6EA6               	movwf	166,c	;volatile
  8061                           
  8062                           ;dc_motor.c: 40:     CCPR3H=0;
  8063   003A62  0E00               	movlw	0
  8064   003A64  010F               	movlb	15	; () banked
  8065   003A66  6F25               	movwf	37,b	;volatile
  8066                           
  8067                           ;dc_motor.c: 41:     CCPR4H=0;
  8068   003A68  0E00               	movlw	0
  8069   003A6A  6F21               	movwf	33,b	;volatile
  8070                           
  8071                           ;dc_motor.c: 44:     CCPTMRS0bits.C1TSEL=0;
  8072   003A6C  0EFC               	movlw	-4
  8073   003A6E  16AD               	andwf	173,f,c	;volatile
  8074                           
  8075                           ;dc_motor.c: 45:     CCPTMRS0bits.C2TSEL=0;
  8076   003A70  0EF3               	movlw	-13
  8077   003A72  16AD               	andwf	173,f,c	;volatile
  8078                           
  8079                           ;dc_motor.c: 46:     CCPTMRS0bits.C3TSEL=0;
  8080   003A74  0ECF               	movlw	-49
  8081   003A76  16AD               	andwf	173,f,c	;volatile
  8082                           
  8083                           ;dc_motor.c: 47:     CCPTMRS0bits.C4TSEL=0;
  8084   003A78  0E3F               	movlw	-193
  8085   003A7A  16AD               	andwf	173,f,c	;volatile
  8086   003A7C                     
  8087                           ; BSR set to: 15
  8088                           ;dc_motor.c: 50:     CCP1CONbits.FMT=1;
  8089   003A7C  88AB               	bsf	171,4,c	;volatile
  8090                           
  8091                           ;dc_motor.c: 51:     CCP1CONbits.CCP1MODE=0b1100;
  8092   003A7E  50AB               	movf	171,w,c	;volatile
  8093   003A80  0BF0               	andlw	-16
  8094   003A82  090C               	iorlw	12
  8095   003A84  6EAB               	movwf	171,c	;volatile
  8096   003A86                     
  8097                           ; BSR set to: 15
  8098                           ;dc_motor.c: 52:     CCP1CONbits.EN=1;
  8099   003A86  8EAB               	bsf	171,7,c	;volatile
  8100   003A88                     
  8101                           ; BSR set to: 15
  8102                           ;dc_motor.c: 54:     CCP2CONbits.FMT=1;
  8103   003A88  88A7               	bsf	167,4,c	;volatile
  8104                           
  8105                           ;dc_motor.c: 55:     CCP2CONbits.CCP2MODE=0b1100;
  8106   003A8A  50A7               	movf	167,w,c	;volatile
  8107   003A8C  0BF0               	andlw	-16
  8108   003A8E  090C               	iorlw	12
  8109   003A90  6EA7               	movwf	167,c	;volatile
  8110   003A92                     
  8111                           ; BSR set to: 15
  8112                           ;dc_motor.c: 56:     CCP2CONbits.EN=1;
  8113   003A92  8EA7               	bsf	167,7,c	;volatile
  8114   003A94                     
  8115                           ; BSR set to: 15
  8116                           ;dc_motor.c: 58:     CCP3CONbits.FMT=1;
  8117   003A94  8926               	bsf	38,4,b	;volatile
  8118                           
  8119                           ;dc_motor.c: 59:     CCP3CONbits.CCP3MODE=0b1100;
  8120   003A96  5126               	movf	38,w,b	;volatile
  8121   003A98  0BF0               	andlw	-16
  8122   003A9A  090C               	iorlw	12
  8123   003A9C  6F26               	movwf	38,b	;volatile
  8124   003A9E                     
  8125                           ; BSR set to: 15
  8126                           ;dc_motor.c: 60:     CCP3CONbits.EN=1;
  8127   003A9E  8F26               	bsf	38,7,b	;volatile
  8128   003AA0                     
  8129                           ; BSR set to: 15
  8130                           ;dc_motor.c: 62:     CCP4CONbits.FMT=1;
  8131   003AA0  8922               	bsf	34,4,b	;volatile
  8132                           
  8133                           ;dc_motor.c: 63:     CCP4CONbits.CCP4MODE=0b1100;
  8134   003AA2  5122               	movf	34,w,b	;volatile
  8135   003AA4  0BF0               	andlw	-16
  8136   003AA6  090C               	iorlw	12
  8137   003AA8  6F22               	movwf	34,b	;volatile
  8138   003AAA                     
  8139                           ; BSR set to: 15
  8140                           ;dc_motor.c: 64:     CCP4CONbits.EN=1;
  8141   003AAA  8F22               	bsf	34,7,b	;volatile
  8142   003AAC                     
  8143                           ; BSR set to: 15
  8144                           ;dc_motor.c: 66:     LRmotorsInit();
  8145   003AAC  EC14  F01F         	call	_LRmotorsInit	;wreg free
  8146   003AB0  0012               	return		;funcret
  8147   003AB2                     __end_of_initDCmotorsPWM:
  8148                           	callstack 0
  8149                           
  8150 ;; *************** function _LRmotorsInit *****************
  8151 ;; Defined at:
  8152 ;;		line 71 in file "dc_motor.c"
  8153 ;; Parameters:    Size  Location     Type
  8154 ;;		None
  8155 ;; Auto vars:     Size  Location     Type
  8156 ;;  motorRight      9   13[COMRAM] struct DC_motor
  8157 ;;  motorLeft       9    4[COMRAM] struct DC_motor
  8158 ;; Return value:  Size  Location     Type
  8159 ;;                  1    wreg      void 
  8160 ;; Registers used:
  8161 ;;		wreg, status,2, status,0
  8162 ;; Tracked objects:
  8163 ;;		On entry : 0/0
  8164 ;;		On exit  : 0/0
  8165 ;;		Unchanged: 0/0
  8166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8168 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8170 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8171 ;;Total ram usage:       18 bytes
  8172 ;; Hardware stack levels used: 1
  8173 ;; Hardware stack levels required when called: 2
  8174 ;; This function calls:
  8175 ;;		Nothing
  8176 ;; This function is called by:
  8177 ;;		_initDCmotorsPWM
  8178 ;; This function uses a non-reentrant model
  8179 ;;
  8180                           
  8181                           	psect	text30
  8182   003E28                     __ptext30:
  8183                           	callstack 0
  8184   003E28                     _LRmotorsInit:
  8185                           	callstack 27
  8186   003E28                     
  8187                           ;dc_motor.c: 72:     DC_motor motorLeft,motorRight;;dc_motor.c: 74:     motorLeft.power 
      +                          = 0;
  8188   003E28  0E00               	movlw	0
  8189   003E2A  6E05               	movwf	LRmotorsInit@motorLeft^0,c
  8190                           
  8191                           ;dc_motor.c: 75:     motorLeft.direction = 1;
  8192   003E2C  0E01               	movlw	1
  8193   003E2E  6E06               	movwf	(LRmotorsInit@motorLeft+1)^0,c
  8194                           
  8195                           ;dc_motor.c: 76:     motorLeft.brakemode = 1;
  8196   003E30  0E01               	movlw	1
  8197   003E32  6E07               	movwf	(LRmotorsInit@motorLeft+2)^0,c
  8198   003E34                     
  8199                           ;dc_motor.c: 77:     motorLeft.posDutyHighByte = (unsigned char *)(&CCPR1H);
  8200   003E34  0EAA               	movlw	170
  8201   003E36  6E0A               	movwf	(LRmotorsInit@motorLeft+5)^0,c
  8202   003E38  0E0F               	movlw	15
  8203   003E3A  6E0B               	movwf	(LRmotorsInit@motorLeft+6)^0,c
  8204   003E3C                     
  8205                           ;dc_motor.c: 78:     motorLeft.negDutyHighByte = (unsigned char *)(&CCPR2H);
  8206   003E3C  0EA6               	movlw	166
  8207   003E3E  6E0C               	movwf	(LRmotorsInit@motorLeft+7)^0,c
  8208   003E40  0E0F               	movlw	15
  8209   003E42  6E0D               	movwf	(LRmotorsInit@motorLeft+8)^0,c
  8210                           
  8211                           ;dc_motor.c: 79:     motorLeft.PWMperiod = 199 ;
  8212   003E44  0E00               	movlw	0
  8213   003E46  6E09               	movwf	(LRmotorsInit@motorLeft+4)^0,c
  8214   003E48  0EC7               	movlw	199
  8215   003E4A  6E08               	movwf	(LRmotorsInit@motorLeft+3)^0,c
  8216                           
  8217                           ;dc_motor.c: 81:     motorRight.power = 0;
  8218   003E4C  0E00               	movlw	0
  8219   003E4E  6E0E               	movwf	LRmotorsInit@motorRight^0,c
  8220                           
  8221                           ;dc_motor.c: 82:     motorRight.direction = 1;
  8222   003E50  0E01               	movlw	1
  8223   003E52  6E0F               	movwf	(LRmotorsInit@motorRight+1)^0,c
  8224                           
  8225                           ;dc_motor.c: 83:     motorRight.brakemode = 1;
  8226   003E54  0E01               	movlw	1
  8227   003E56  6E10               	movwf	(LRmotorsInit@motorRight+2)^0,c
  8228   003E58                     
  8229                           ;dc_motor.c: 84:     motorRight.posDutyHighByte = (unsigned char *)(&CCPR3H);
  8230   003E58  0E25               	movlw	37
  8231   003E5A  6E13               	movwf	(LRmotorsInit@motorRight+5)^0,c
  8232   003E5C  0E0F               	movlw	15
  8233   003E5E  6E14               	movwf	(LRmotorsInit@motorRight+6)^0,c
  8234   003E60                     
  8235                           ;dc_motor.c: 85:     motorRight.negDutyHighByte = (unsigned char *)(&CCPR4H);
  8236   003E60  0E21               	movlw	33
  8237   003E62  6E15               	movwf	(LRmotorsInit@motorRight+7)^0,c
  8238   003E64  0E0F               	movlw	15
  8239   003E66  6E16               	movwf	(LRmotorsInit@motorRight+8)^0,c
  8240                           
  8241                           ;dc_motor.c: 86:     motorRight.PWMperiod = 199 ;
  8242   003E68  0E00               	movlw	0
  8243   003E6A  6E12               	movwf	(LRmotorsInit@motorRight+4)^0,c
  8244   003E6C  0EC7               	movlw	199
  8245   003E6E  6E11               	movwf	(LRmotorsInit@motorRight+3)^0,c
  8246   003E70  0012               	return		;funcret
  8247   003E72                     __end_of_LRmotorsInit:
  8248                           	callstack 0
  8249                           
  8250 ;; *************** function _getColor *****************
  8251 ;; Defined at:
  8252 ;;		line 90 in file "color.c"
  8253 ;; Parameters:    Size  Location     Type
  8254 ;;  v               2   15[COMRAM] PTR struct RGB
  8255 ;;		 -> main@RGBVal(8), 
  8256 ;; Auto vars:     Size  Location     Type
  8257 ;;		None
  8258 ;; Return value:  Size  Location     Type
  8259 ;;                  1    wreg      void 
  8260 ;; Registers used:
  8261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8262 ;; Tracked objects:
  8263 ;;		On entry : 0/0
  8264 ;;		On exit  : 0/0
  8265 ;;		Unchanged: 0/0
  8266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8267 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8270 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8271 ;;Total ram usage:        2 bytes
  8272 ;; Hardware stack levels used: 1
  8273 ;; Hardware stack levels required when called: 5
  8274 ;; This function calls:
  8275 ;;		_color_read_Blue
  8276 ;;		_color_read_Clear
  8277 ;;		_color_read_Green
  8278 ;;		_color_read_Red
  8279 ;; This function is called by:
  8280 ;;		_main
  8281 ;; This function uses a non-reentrant model
  8282 ;;
  8283                           
  8284                           	psect	text31
  8285   003B92                     __ptext31:
  8286                           	callstack 0
  8287   003B92                     _getColor:
  8288                           	callstack 25
  8289   003B92                     
  8290                           ;color.c: 91:     v->R = color_read_Red();
  8291   003B92  EC74  F01E         	call	_color_read_Red	;wreg free
  8292   003B96  C010  FFD9         	movff	getColor@v,fsr2l
  8293   003B9A  C011  FFDA         	movff	getColor@v+1,fsr2h
  8294   003B9E  C009  FFDE         	movff	?_color_read_Red,postinc2
  8295   003BA2  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
  8296                           
  8297                           ;color.c: 92:     v->G = color_read_Green();
  8298   003BA6  EC9C  F01E         	call	_color_read_Green	;wreg free
  8299   003BAA  EE20 F002          	lfsr	2,2
  8300   003BAE  5010               	movf	getColor@v^0,w,c
  8301   003BB0  26D9               	addwf	fsr2l,f,c
  8302   003BB2  5011               	movf	(getColor@v+1)^0,w,c
  8303   003BB4  22DA               	addwfc	fsr2h,f,c
  8304   003BB6  C009  FFDE         	movff	?_color_read_Green,postinc2
  8305   003BBA  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
  8306                           
  8307                           ;color.c: 93:     v->B = color_read_Blue();
  8308   003BBE  ECEC  F01E         	call	_color_read_Blue	;wreg free
  8309   003BC2  EE20 F004          	lfsr	2,4
  8310   003BC6  5010               	movf	getColor@v^0,w,c
  8311   003BC8  26D9               	addwf	fsr2l,f,c
  8312   003BCA  5011               	movf	(getColor@v+1)^0,w,c
  8313   003BCC  22DA               	addwfc	fsr2h,f,c
  8314   003BCE  C009  FFDE         	movff	?_color_read_Blue,postinc2
  8315   003BD2  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
  8316                           
  8317                           ;color.c: 94:     v->C = color_read_Clear();
  8318   003BD6  ECC4  F01E         	call	_color_read_Clear	;wreg free
  8319   003BDA  EE20 F006          	lfsr	2,6
  8320   003BDE  5010               	movf	getColor@v^0,w,c
  8321   003BE0  26D9               	addwf	fsr2l,f,c
  8322   003BE2  5011               	movf	(getColor@v+1)^0,w,c
  8323   003BE4  22DA               	addwfc	fsr2h,f,c
  8324   003BE6  C009  FFDE         	movff	?_color_read_Clear,postinc2
  8325   003BEA  C00A  FFDD         	movff	?_color_read_Clear+1,postdec2
  8326   003BEE  0012               	return		;funcret
  8327   003BF0                     __end_of_getColor:
  8328                           	callstack 0
  8329                           
  8330 ;; *************** function _color_read_Red *****************
  8331 ;; Defined at:
  8332 ;;		line 32 in file "color.c"
  8333 ;; Parameters:    Size  Location     Type
  8334 ;;		None
  8335 ;; Auto vars:     Size  Location     Type
  8336 ;;  tmp             2   13[COMRAM] unsigned int 
  8337 ;; Return value:  Size  Location     Type
  8338 ;;                  2    8[COMRAM] unsigned int 
  8339 ;; Registers used:
  8340 ;;		wreg, status,2, status,0, cstack
  8341 ;; Tracked objects:
  8342 ;;		On entry : 0/0
  8343 ;;		On exit  : 0/0
  8344 ;;		Unchanged: 0/0
  8345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8346 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8347 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8348 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8349 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8350 ;;Total ram usage:        7 bytes
  8351 ;; Hardware stack levels used: 1
  8352 ;; Hardware stack levels required when called: 4
  8353 ;; This function calls:
  8354 ;;		_I2C_2_Master_Read
  8355 ;;		_I2C_2_Master_RepStart
  8356 ;;		_I2C_2_Master_Start
  8357 ;;		_I2C_2_Master_Stop
  8358 ;;		_I2C_2_Master_Write
  8359 ;; This function is called by:
  8360 ;;		_getColor
  8361 ;; This function uses a non-reentrant model
  8362 ;;
  8363                           
  8364                           	psect	text32
  8365   003CE8                     __ptext32:
  8366                           	callstack 0
  8367   003CE8                     _color_read_Red:
  8368                           	callstack 25
  8369   003CE8                     
  8370                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
  8371   003CE8  EC0F  F021         	call	_I2C_2_Master_Start	;wreg free
  8372                           
  8373                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  8374   003CEC  0E52               	movlw	82
  8375   003CEE  ECFF  F020         	call	_I2C_2_Master_Write
  8376                           
  8377                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  8378   003CF2  0EB6               	movlw	182
  8379   003CF4  ECFF  F020         	call	_I2C_2_Master_Write
  8380                           
  8381                           ;color.c: 38:  I2C_2_Master_RepStart();
  8382   003CF8  EC05  F021         	call	_I2C_2_Master_RepStart	;wreg free
  8383                           
  8384                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  8385   003CFC  0E53               	movlw	83
  8386   003CFE  ECFF  F020         	call	_I2C_2_Master_Write
  8387                           
  8388                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
  8389   003D02  0E01               	movlw	1
  8390   003D04  ECA0  F01F         	call	_I2C_2_Master_Read
  8391   003D08  6E0B               	movwf	??_color_read_Red^0,c
  8392   003D0A  500B               	movf	??_color_read_Red^0,w,c
  8393   003D0C  6E0E               	movwf	color_read_Red@tmp^0,c
  8394   003D0E  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  8395                           
  8396                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  8397   003D10  0E00               	movlw	0
  8398   003D12  ECA0  F01F         	call	_I2C_2_Master_Read
  8399   003D16  6E0B               	movwf	??_color_read_Red^0,c
  8400   003D18  500B               	movf	??_color_read_Red^0,w,c
  8401   003D1A  6E0D               	movwf	(??_color_read_Red+2)^0,c
  8402   003D1C  6A0C               	clrf	(??_color_read_Red+1)^0,c
  8403   003D1E  500E               	movf	color_read_Red@tmp^0,w,c
  8404   003D20  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  8405   003D22  6E0E               	movwf	color_read_Red@tmp^0,c
  8406   003D24  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  8407   003D26  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  8408   003D28  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  8409                           
  8410                           ;color.c: 42:  I2C_2_Master_Stop();
  8411   003D2A  EC0A  F021         	call	_I2C_2_Master_Stop	;wreg free
  8412   003D2E                     
  8413                           ;color.c: 43:  return tmp;
  8414   003D2E  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  8415   003D32  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  8416   003D36  0012               	return		;funcret
  8417   003D38                     __end_of_color_read_Red:
  8418                           	callstack 0
  8419                           
  8420 ;; *************** function _color_read_Green *****************
  8421 ;; Defined at:
  8422 ;;		line 46 in file "color.c"
  8423 ;; Parameters:    Size  Location     Type
  8424 ;;		None
  8425 ;; Auto vars:     Size  Location     Type
  8426 ;;  tmp             2   13[COMRAM] unsigned int 
  8427 ;; Return value:  Size  Location     Type
  8428 ;;                  2    8[COMRAM] unsigned int 
  8429 ;; Registers used:
  8430 ;;		wreg, status,2, status,0, cstack
  8431 ;; Tracked objects:
  8432 ;;		On entry : 0/0
  8433 ;;		On exit  : 0/0
  8434 ;;		Unchanged: 0/0
  8435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8436 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8437 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8438 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8439 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8440 ;;Total ram usage:        7 bytes
  8441 ;; Hardware stack levels used: 1
  8442 ;; Hardware stack levels required when called: 4
  8443 ;; This function calls:
  8444 ;;		_I2C_2_Master_Read
  8445 ;;		_I2C_2_Master_RepStart
  8446 ;;		_I2C_2_Master_Start
  8447 ;;		_I2C_2_Master_Stop
  8448 ;;		_I2C_2_Master_Write
  8449 ;; This function is called by:
  8450 ;;		_getColor
  8451 ;; This function uses a non-reentrant model
  8452 ;;
  8453                           
  8454                           	psect	text33
  8455   003D38                     __ptext33:
  8456                           	callstack 0
  8457   003D38                     _color_read_Green:
  8458                           	callstack 25
  8459   003D38                     
  8460                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  8461   003D38  EC0F  F021         	call	_I2C_2_Master_Start	;wreg free
  8462                           
  8463                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  8464   003D3C  0E52               	movlw	82
  8465   003D3E  ECFF  F020         	call	_I2C_2_Master_Write
  8466                           
  8467                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x18);
  8468   003D42  0EB8               	movlw	184
  8469   003D44  ECFF  F020         	call	_I2C_2_Master_Write
  8470                           
  8471                           ;color.c: 52:  I2C_2_Master_RepStart();
  8472   003D48  EC05  F021         	call	_I2C_2_Master_RepStart	;wreg free
  8473                           
  8474                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  8475   003D4C  0E53               	movlw	83
  8476   003D4E  ECFF  F020         	call	_I2C_2_Master_Write
  8477                           
  8478                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  8479   003D52  0E01               	movlw	1
  8480   003D54  ECA0  F01F         	call	_I2C_2_Master_Read
  8481   003D58  6E0B               	movwf	??_color_read_Green^0,c
  8482   003D5A  500B               	movf	??_color_read_Green^0,w,c
  8483   003D5C  6E0E               	movwf	color_read_Green@tmp^0,c
  8484   003D5E  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  8485                           
  8486                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  8487   003D60  0E00               	movlw	0
  8488   003D62  ECA0  F01F         	call	_I2C_2_Master_Read
  8489   003D66  6E0B               	movwf	??_color_read_Green^0,c
  8490   003D68  500B               	movf	??_color_read_Green^0,w,c
  8491   003D6A  6E0D               	movwf	(??_color_read_Green+2)^0,c
  8492   003D6C  6A0C               	clrf	(??_color_read_Green+1)^0,c
  8493   003D6E  500E               	movf	color_read_Green@tmp^0,w,c
  8494   003D70  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  8495   003D72  6E0E               	movwf	color_read_Green@tmp^0,c
  8496   003D74  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  8497   003D76  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  8498   003D78  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  8499                           
  8500                           ;color.c: 56:  I2C_2_Master_Stop();
  8501   003D7A  EC0A  F021         	call	_I2C_2_Master_Stop	;wreg free
  8502   003D7E                     
  8503                           ;color.c: 57:  return tmp;
  8504   003D7E  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  8505   003D82  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  8506   003D86  0012               	return		;funcret
  8507   003D88                     __end_of_color_read_Green:
  8508                           	callstack 0
  8509                           
  8510 ;; *************** function _color_read_Clear *****************
  8511 ;; Defined at:
  8512 ;;		line 75 in file "color.c"
  8513 ;; Parameters:    Size  Location     Type
  8514 ;;		None
  8515 ;; Auto vars:     Size  Location     Type
  8516 ;;  tmp             2   13[COMRAM] unsigned int 
  8517 ;; Return value:  Size  Location     Type
  8518 ;;                  2    8[COMRAM] unsigned int 
  8519 ;; Registers used:
  8520 ;;		wreg, status,2, status,0, cstack
  8521 ;; Tracked objects:
  8522 ;;		On entry : 0/0
  8523 ;;		On exit  : 0/0
  8524 ;;		Unchanged: 0/0
  8525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8527 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8528 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8529 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8530 ;;Total ram usage:        7 bytes
  8531 ;; Hardware stack levels used: 1
  8532 ;; Hardware stack levels required when called: 4
  8533 ;; This function calls:
  8534 ;;		_I2C_2_Master_Read
  8535 ;;		_I2C_2_Master_RepStart
  8536 ;;		_I2C_2_Master_Start
  8537 ;;		_I2C_2_Master_Stop
  8538 ;;		_I2C_2_Master_Write
  8539 ;; This function is called by:
  8540 ;;		_getColor
  8541 ;; This function uses a non-reentrant model
  8542 ;;
  8543                           
  8544                           	psect	text34
  8545   003D88                     __ptext34:
  8546                           	callstack 0
  8547   003D88                     _color_read_Clear:
  8548                           	callstack 25
  8549   003D88                     
  8550                           ;color.c: 77:  unsigned int tmp;;color.c: 78:  I2C_2_Master_Start();
  8551   003D88  EC0F  F021         	call	_I2C_2_Master_Start	;wreg free
  8552                           
  8553                           ;color.c: 79:  I2C_2_Master_Write(0x52 | 0x00);
  8554   003D8C  0E52               	movlw	82
  8555   003D8E  ECFF  F020         	call	_I2C_2_Master_Write
  8556                           
  8557                           ;color.c: 80:  I2C_2_Master_Write(0xA0 | 0x14);
  8558   003D92  0EB4               	movlw	180
  8559   003D94  ECFF  F020         	call	_I2C_2_Master_Write
  8560                           
  8561                           ;color.c: 81:  I2C_2_Master_RepStart();
  8562   003D98  EC05  F021         	call	_I2C_2_Master_RepStart	;wreg free
  8563                           
  8564                           ;color.c: 82:  I2C_2_Master_Write(0x52 | 0x01);
  8565   003D9C  0E53               	movlw	83
  8566   003D9E  ECFF  F020         	call	_I2C_2_Master_Write
  8567                           
  8568                           ;color.c: 83:  tmp=I2C_2_Master_Read(1);
  8569   003DA2  0E01               	movlw	1
  8570   003DA4  ECA0  F01F         	call	_I2C_2_Master_Read
  8571   003DA8  6E0B               	movwf	??_color_read_Clear^0,c
  8572   003DAA  500B               	movf	??_color_read_Clear^0,w,c
  8573   003DAC  6E0E               	movwf	color_read_Clear@tmp^0,c
  8574   003DAE  6A0F               	clrf	(color_read_Clear@tmp+1)^0,c
  8575                           
  8576                           ;color.c: 84:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  8577   003DB0  0E00               	movlw	0
  8578   003DB2  ECA0  F01F         	call	_I2C_2_Master_Read
  8579   003DB6  6E0B               	movwf	??_color_read_Clear^0,c
  8580   003DB8  500B               	movf	??_color_read_Clear^0,w,c
  8581   003DBA  6E0D               	movwf	(??_color_read_Clear+2)^0,c
  8582   003DBC  6A0C               	clrf	(??_color_read_Clear+1)^0,c
  8583   003DBE  500E               	movf	color_read_Clear@tmp^0,w,c
  8584   003DC0  100C               	iorwf	(??_color_read_Clear+1)^0,w,c
  8585   003DC2  6E0E               	movwf	color_read_Clear@tmp^0,c
  8586   003DC4  500F               	movf	(color_read_Clear@tmp+1)^0,w,c
  8587   003DC6  100D               	iorwf	(??_color_read_Clear+2)^0,w,c
  8588   003DC8  6E0F               	movwf	(color_read_Clear@tmp+1)^0,c
  8589                           
  8590                           ;color.c: 85:  I2C_2_Master_Stop();
  8591   003DCA  EC0A  F021         	call	_I2C_2_Master_Stop	;wreg free
  8592   003DCE                     
  8593                           ;color.c: 86:  return tmp;
  8594   003DCE  C00E  F009         	movff	color_read_Clear@tmp,?_color_read_Clear
  8595   003DD2  C00F  F00A         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  8596   003DD6  0012               	return		;funcret
  8597   003DD8                     __end_of_color_read_Clear:
  8598                           	callstack 0
  8599                           
  8600 ;; *************** function _color_read_Blue *****************
  8601 ;; Defined at:
  8602 ;;		line 61 in file "color.c"
  8603 ;; Parameters:    Size  Location     Type
  8604 ;;		None
  8605 ;; Auto vars:     Size  Location     Type
  8606 ;;  tmp             2   13[COMRAM] unsigned int 
  8607 ;; Return value:  Size  Location     Type
  8608 ;;                  2    8[COMRAM] unsigned int 
  8609 ;; Registers used:
  8610 ;;		wreg, status,2, status,0, cstack
  8611 ;; Tracked objects:
  8612 ;;		On entry : 0/0
  8613 ;;		On exit  : 0/0
  8614 ;;		Unchanged: 0/0
  8615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8616 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8617 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8618 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8619 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8620 ;;Total ram usage:        7 bytes
  8621 ;; Hardware stack levels used: 1
  8622 ;; Hardware stack levels required when called: 4
  8623 ;; This function calls:
  8624 ;;		_I2C_2_Master_Read
  8625 ;;		_I2C_2_Master_RepStart
  8626 ;;		_I2C_2_Master_Start
  8627 ;;		_I2C_2_Master_Stop
  8628 ;;		_I2C_2_Master_Write
  8629 ;; This function is called by:
  8630 ;;		_getColor
  8631 ;; This function uses a non-reentrant model
  8632 ;;
  8633                           
  8634                           	psect	text35
  8635   003DD8                     __ptext35:
  8636                           	callstack 0
  8637   003DD8                     _color_read_Blue:
  8638                           	callstack 25
  8639   003DD8                     
  8640                           ;color.c: 63:  unsigned int tmp;;color.c: 64:  I2C_2_Master_Start();
  8641   003DD8  EC0F  F021         	call	_I2C_2_Master_Start	;wreg free
  8642                           
  8643                           ;color.c: 65:  I2C_2_Master_Write(0x52 | 0x00);
  8644   003DDC  0E52               	movlw	82
  8645   003DDE  ECFF  F020         	call	_I2C_2_Master_Write
  8646                           
  8647                           ;color.c: 66:  I2C_2_Master_Write(0xA0 | 0x1A);
  8648   003DE2  0EBA               	movlw	186
  8649   003DE4  ECFF  F020         	call	_I2C_2_Master_Write
  8650                           
  8651                           ;color.c: 67:  I2C_2_Master_RepStart();
  8652   003DE8  EC05  F021         	call	_I2C_2_Master_RepStart	;wreg free
  8653                           
  8654                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x01);
  8655   003DEC  0E53               	movlw	83
  8656   003DEE  ECFF  F020         	call	_I2C_2_Master_Write
  8657                           
  8658                           ;color.c: 69:  tmp=I2C_2_Master_Read(1);
  8659   003DF2  0E01               	movlw	1
  8660   003DF4  ECA0  F01F         	call	_I2C_2_Master_Read
  8661   003DF8  6E0B               	movwf	??_color_read_Blue^0,c
  8662   003DFA  500B               	movf	??_color_read_Blue^0,w,c
  8663   003DFC  6E0E               	movwf	color_read_Blue@tmp^0,c
  8664   003DFE  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  8665                           
  8666                           ;color.c: 70:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  8667   003E00  0E00               	movlw	0
  8668   003E02  ECA0  F01F         	call	_I2C_2_Master_Read
  8669   003E06  6E0B               	movwf	??_color_read_Blue^0,c
  8670   003E08  500B               	movf	??_color_read_Blue^0,w,c
  8671   003E0A  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  8672   003E0C  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  8673   003E0E  500E               	movf	color_read_Blue@tmp^0,w,c
  8674   003E10  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  8675   003E12  6E0E               	movwf	color_read_Blue@tmp^0,c
  8676   003E14  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  8677   003E16  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  8678   003E18  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  8679                           
  8680                           ;color.c: 71:  I2C_2_Master_Stop();
  8681   003E1A  EC0A  F021         	call	_I2C_2_Master_Stop	;wreg free
  8682   003E1E                     
  8683                           ;color.c: 72:  return tmp;
  8684   003E1E  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  8685   003E22  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  8686   003E26  0012               	return		;funcret
  8687   003E28                     __end_of_color_read_Blue:
  8688                           	callstack 0
  8689                           
  8690 ;; *************** function _I2C_2_Master_RepStart *****************
  8691 ;; Defined at:
  8692 ;;		line 33 in file "i2c.c"
  8693 ;; Parameters:    Size  Location     Type
  8694 ;;		None
  8695 ;; Auto vars:     Size  Location     Type
  8696 ;;		None
  8697 ;; Return value:  Size  Location     Type
  8698 ;;                  1    wreg      void 
  8699 ;; Registers used:
  8700 ;;		wreg, status,2, status,0, cstack
  8701 ;; Tracked objects:
  8702 ;;		On entry : 0/0
  8703 ;;		On exit  : 0/0
  8704 ;;		Unchanged: 0/0
  8705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8710 ;;Total ram usage:        0 bytes
  8711 ;; Hardware stack levels used: 1
  8712 ;; Hardware stack levels required when called: 3
  8713 ;; This function calls:
  8714 ;;		_I2C_2_Master_Idle
  8715 ;; This function is called by:
  8716 ;;		_color_read_Red
  8717 ;;		_color_read_Green
  8718 ;;		_color_read_Blue
  8719 ;;		_color_read_Clear
  8720 ;; This function uses a non-reentrant model
  8721 ;;
  8722                           
  8723                           	psect	text36
  8724   00420A                     __ptext36:
  8725                           	callstack 0
  8726   00420A                     _I2C_2_Master_RepStart:
  8727                           	callstack 25
  8728   00420A                     
  8729                           ;i2c.c: 35:   I2C_2_Master_Idle();
  8730   00420A  ECB6  F020         	call	_I2C_2_Master_Idle	;wreg free
  8731   00420E                     
  8732                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  8733   00420E  010E               	movlb	14	; () banked
  8734   004210  83DA               	bsf	218,1,b	;volatile
  8735   004212                     
  8736                           ; BSR set to: 14
  8737   004212  0012               	return		;funcret
  8738   004214                     __end_of_I2C_2_Master_RepStart:
  8739                           	callstack 0
  8740                           
  8741 ;; *************** function _I2C_2_Master_Read *****************
  8742 ;; Defined at:
  8743 ;;		line 51 in file "i2c.c"
  8744 ;; Parameters:    Size  Location     Type
  8745 ;;  ack             1    wreg     unsigned char 
  8746 ;; Auto vars:     Size  Location     Type
  8747 ;;  ack             1    6[COMRAM] unsigned char 
  8748 ;;  tmp             1    7[COMRAM] unsigned char 
  8749 ;; Return value:  Size  Location     Type
  8750 ;;                  1    wreg      unsigned char 
  8751 ;; Registers used:
  8752 ;;		wreg, status,2, status,0, cstack
  8753 ;; Tracked objects:
  8754 ;;		On entry : 0/0
  8755 ;;		On exit  : 0/0
  8756 ;;		Unchanged: 0/0
  8757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8759 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8760 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8761 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8762 ;;Total ram usage:        3 bytes
  8763 ;; Hardware stack levels used: 1
  8764 ;; Hardware stack levels required when called: 3
  8765 ;; This function calls:
  8766 ;;		_I2C_2_Master_Idle
  8767 ;; This function is called by:
  8768 ;;		_color_read_Red
  8769 ;;		_color_read_Green
  8770 ;;		_color_read_Blue
  8771 ;;		_color_read_Clear
  8772 ;; This function uses a non-reentrant model
  8773 ;;
  8774                           
  8775                           	psect	text37
  8776   003F40                     __ptext37:
  8777                           	callstack 0
  8778   003F40                     _I2C_2_Master_Read:
  8779                           	callstack 25
  8780                           
  8781                           ; BSR set to: 14
  8782                           ;incstack = 0
  8783                           ;I2C_2_Master_Read@ack stored from wreg
  8784   003F40  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  8785   003F42                     
  8786                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  8787   003F42  ECB6  F020         	call	_I2C_2_Master_Idle	;wreg free
  8788   003F46                     
  8789                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  8790   003F46  010E               	movlb	14	; () banked
  8791   003F48  87DA               	bsf	218,3,b	;volatile
  8792                           
  8793                           ;i2c.c: 56:   I2C_2_Master_Idle();
  8794   003F4A  ECB6  F020         	call	_I2C_2_Master_Idle	;wreg free
  8795   003F4E                     
  8796                           ;i2c.c: 57:   tmp = SSP2BUF;
  8797   003F4E  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  8798                           
  8799                           ;i2c.c: 58:   I2C_2_Master_Idle();
  8800   003F52  ECB6  F020         	call	_I2C_2_Master_Idle	;wreg free
  8801   003F56                     
  8802                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  8803   003F56  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  8804   003F58  B4D8               	btfsc	status,2,c
  8805   003F5A  EFB1  F01F         	goto	u4021
  8806   003F5E  EFB5  F01F         	goto	u4020
  8807   003F62                     u4021:
  8808   003F62  6A06               	clrf	??_I2C_2_Master_Read^0,c
  8809   003F64  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  8810   003F66  EFB6  F01F         	goto	u4038
  8811   003F6A                     u4020:
  8812   003F6A  6A06               	clrf	??_I2C_2_Master_Read^0,c
  8813   003F6C                     u4038:
  8814   003F6C  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  8815   003F6E  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  8816   003F70  010E               	movlb	14	; () banked
  8817   003F72  51DA               	movf	218,w,b	;volatile
  8818   003F74  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  8819   003F76  0BDF               	andlw	-33
  8820   003F78  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  8821   003F7A  6FDA               	movwf	218,b	;volatile
  8822   003F7C                     
  8823                           ; BSR set to: 14
  8824                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  8825   003F7C  89DA               	bsf	218,4,b	;volatile
  8826   003F7E                     
  8827                           ; BSR set to: 14
  8828                           ;i2c.c: 61:   return tmp;
  8829   003F7E  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  8830   003F80                     
  8831                           ; BSR set to: 14
  8832   003F80  0012               	return		;funcret
  8833   003F82                     __end_of_I2C_2_Master_Read:
  8834                           	callstack 0
  8835                           
  8836 ;; *************** function _color_click_init *****************
  8837 ;; Defined at:
  8838 ;;		line 7 in file "color.c"
  8839 ;; Parameters:    Size  Location     Type
  8840 ;;		None
  8841 ;; Auto vars:     Size  Location     Type
  8842 ;;		None
  8843 ;; Return value:  Size  Location     Type
  8844 ;;                  1    wreg      void 
  8845 ;; Registers used:
  8846 ;;		wreg, status,2, status,0, cstack
  8847 ;; Tracked objects:
  8848 ;;		On entry : 0/0
  8849 ;;		On exit  : 0/0
  8850 ;;		Unchanged: 0/0
  8851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8854 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8855 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8856 ;;Total ram usage:        1 bytes
  8857 ;; Hardware stack levels used: 1
  8858 ;; Hardware stack levels required when called: 5
  8859 ;; This function calls:
  8860 ;;		_I2C_2_Master_Init
  8861 ;;		_color_writetoaddr
  8862 ;; This function is called by:
  8863 ;;		_main
  8864 ;; This function uses a non-reentrant model
  8865 ;;
  8866                           
  8867                           	psect	text38
  8868   004030                     __ptext38:
  8869                           	callstack 0
  8870   004030                     _color_click_init:
  8871                           	callstack 25
  8872   004030                     
  8873                           ;color.c: 10:     I2C_2_Master_Init();
  8874   004030  EC77  F020         	call	_I2C_2_Master_Init	;wreg free
  8875   004034                     
  8876                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
  8877   004034  0E01               	movlw	1
  8878   004036  6E07               	movwf	color_writetoaddr@value^0,c
  8879   004038  0E00               	movlw	0
  8880   00403A  ECCA  F020         	call	_color_writetoaddr
  8881   00403E                     
  8882                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8883   00403E  0E3F               	movlw	63
  8884   004040  6E09               	movwf	??_color_click_init^0,c
  8885   004042  0E55               	movlw	85
  8886   004044                     u4877:
  8887   004044  2EE8               	decfsz	wreg,f,c
  8888   004046  D7FE               	bra	u4877
  8889   004048  2E09               	decfsz	??_color_click_init^0,f,c
  8890   00404A  D7FC               	bra	u4877
  8891   00404C  F000               	nop	
  8892   00404E                     
  8893                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  8894   00404E  0E03               	movlw	3
  8895   004050  6E07               	movwf	color_writetoaddr@value^0,c
  8896   004052  0E00               	movlw	0
  8897   004054  ECCA  F020         	call	_color_writetoaddr
  8898   004058                     
  8899                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  8900   004058  0ED5               	movlw	213
  8901   00405A  6E07               	movwf	color_writetoaddr@value^0,c
  8902   00405C  0E01               	movlw	1
  8903   00405E  ECCA  F020         	call	_color_writetoaddr
  8904   004062  0012               	return		;funcret
  8905   004064                     __end_of_color_click_init:
  8906                           	callstack 0
  8907                           
  8908 ;; *************** function _color_writetoaddr *****************
  8909 ;; Defined at:
  8910 ;;		line 24 in file "color.c"
  8911 ;; Parameters:    Size  Location     Type
  8912 ;;  address         1    wreg     unsigned char 
  8913 ;;  value           1    6[COMRAM] unsigned char 
  8914 ;; Auto vars:     Size  Location     Type
  8915 ;;  address         1    7[COMRAM] unsigned char 
  8916 ;; Return value:  Size  Location     Type
  8917 ;;                  1    wreg      void 
  8918 ;; Registers used:
  8919 ;;		wreg, status,2, status,0, cstack
  8920 ;; Tracked objects:
  8921 ;;		On entry : 0/0
  8922 ;;		On exit  : 0/0
  8923 ;;		Unchanged: 0/0
  8924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8925 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8926 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8928 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8929 ;;Total ram usage:        2 bytes
  8930 ;; Hardware stack levels used: 1
  8931 ;; Hardware stack levels required when called: 4
  8932 ;; This function calls:
  8933 ;;		_I2C_2_Master_Start
  8934 ;;		_I2C_2_Master_Stop
  8935 ;;		_I2C_2_Master_Write
  8936 ;; This function is called by:
  8937 ;;		_color_click_init
  8938 ;; This function uses a non-reentrant model
  8939 ;;
  8940                           
  8941                           	psect	text39
  8942   004194                     __ptext39:
  8943                           	callstack 0
  8944   004194                     _color_writetoaddr:
  8945                           	callstack 25
  8946                           
  8947                           ;incstack = 0
  8948                           ;color_writetoaddr@address stored from wreg
  8949   004194  6E08               	movwf	color_writetoaddr@address^0,c
  8950   004196                     
  8951                           ;color.c: 25:     I2C_2_Master_Start();
  8952   004196  EC0F  F021         	call	_I2C_2_Master_Start	;wreg free
  8953                           
  8954                           ;color.c: 26:     I2C_2_Master_Write(0x52 | 0x00);
  8955   00419A  0E52               	movlw	82
  8956   00419C  ECFF  F020         	call	_I2C_2_Master_Write
  8957                           
  8958                           ;color.c: 27:     I2C_2_Master_Write(0x80 | address);
  8959   0041A0  5008               	movf	color_writetoaddr@address^0,w,c
  8960   0041A2  0980               	iorlw	128
  8961   0041A4  ECFF  F020         	call	_I2C_2_Master_Write
  8962                           
  8963                           ;color.c: 28:     I2C_2_Master_Write(value);
  8964   0041A8  5007               	movf	color_writetoaddr@value^0,w,c
  8965   0041AA  ECFF  F020         	call	_I2C_2_Master_Write
  8966                           
  8967                           ;color.c: 29:     I2C_2_Master_Stop();
  8968   0041AE  EC0A  F021         	call	_I2C_2_Master_Stop	;wreg free
  8969   0041B2  0012               	return		;funcret
  8970   0041B4                     __end_of_color_writetoaddr:
  8971                           	callstack 0
  8972                           
  8973 ;; *************** function _I2C_2_Master_Write *****************
  8974 ;; Defined at:
  8975 ;;		line 45 in file "i2c.c"
  8976 ;; Parameters:    Size  Location     Type
  8977 ;;  data_byte       1    wreg     unsigned char 
  8978 ;; Auto vars:     Size  Location     Type
  8979 ;;  data_byte       1    5[COMRAM] unsigned char 
  8980 ;; Return value:  Size  Location     Type
  8981 ;;                  1    wreg      void 
  8982 ;; Registers used:
  8983 ;;		wreg, status,2, status,0, cstack
  8984 ;; Tracked objects:
  8985 ;;		On entry : 0/0
  8986 ;;		On exit  : 0/0
  8987 ;;		Unchanged: 0/0
  8988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8990 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8992 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8993 ;;Total ram usage:        1 bytes
  8994 ;; Hardware stack levels used: 1
  8995 ;; Hardware stack levels required when called: 3
  8996 ;; This function calls:
  8997 ;;		_I2C_2_Master_Idle
  8998 ;; This function is called by:
  8999 ;;		_color_writetoaddr
  9000 ;;		_color_read_Red
  9001 ;;		_color_read_Green
  9002 ;;		_color_read_Blue
  9003 ;;		_color_read_Clear
  9004 ;; This function uses a non-reentrant model
  9005 ;;
  9006                           
  9007                           	psect	text40
  9008   0041FE                     __ptext40:
  9009                           	callstack 0
  9010   0041FE                     _I2C_2_Master_Write:
  9011                           	callstack 25
  9012                           
  9013                           ;incstack = 0
  9014                           ;I2C_2_Master_Write@data_byte stored from wreg
  9015   0041FE  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  9016   004200                     
  9017                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9018   004200  ECB6  F020         	call	_I2C_2_Master_Idle	;wreg free
  9019   004204                     
  9020                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9021   004204  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  9022   004208  0012               	return		;funcret
  9023   00420A                     __end_of_I2C_2_Master_Write:
  9024                           	callstack 0
  9025                           
  9026 ;; *************** function _I2C_2_Master_Stop *****************
  9027 ;; Defined at:
  9028 ;;		line 39 in file "i2c.c"
  9029 ;; Parameters:    Size  Location     Type
  9030 ;;		None
  9031 ;; Auto vars:     Size  Location     Type
  9032 ;;		None
  9033 ;; Return value:  Size  Location     Type
  9034 ;;                  1    wreg      void 
  9035 ;; Registers used:
  9036 ;;		wreg, status,2, status,0, cstack
  9037 ;; Tracked objects:
  9038 ;;		On entry : 0/0
  9039 ;;		On exit  : 0/0
  9040 ;;		Unchanged: 0/0
  9041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9046 ;;Total ram usage:        0 bytes
  9047 ;; Hardware stack levels used: 1
  9048 ;; Hardware stack levels required when called: 3
  9049 ;; This function calls:
  9050 ;;		_I2C_2_Master_Idle
  9051 ;; This function is called by:
  9052 ;;		_color_writetoaddr
  9053 ;;		_color_read_Red
  9054 ;;		_color_read_Green
  9055 ;;		_color_read_Blue
  9056 ;;		_color_read_Clear
  9057 ;; This function uses a non-reentrant model
  9058 ;;
  9059                           
  9060                           	psect	text41
  9061   004214                     __ptext41:
  9062                           	callstack 0
  9063   004214                     _I2C_2_Master_Stop:
  9064                           	callstack 25
  9065   004214                     
  9066                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9067   004214  ECB6  F020         	call	_I2C_2_Master_Idle	;wreg free
  9068   004218                     
  9069                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9070   004218  010E               	movlb	14	; () banked
  9071   00421A  85DA               	bsf	218,2,b	;volatile
  9072   00421C                     
  9073                           ; BSR set to: 14
  9074   00421C  0012               	return		;funcret
  9075   00421E                     __end_of_I2C_2_Master_Stop:
  9076                           	callstack 0
  9077                           
  9078 ;; *************** function _I2C_2_Master_Start *****************
  9079 ;; Defined at:
  9080 ;;		line 27 in file "i2c.c"
  9081 ;; Parameters:    Size  Location     Type
  9082 ;;		None
  9083 ;; Auto vars:     Size  Location     Type
  9084 ;;		None
  9085 ;; Return value:  Size  Location     Type
  9086 ;;                  1    wreg      void 
  9087 ;; Registers used:
  9088 ;;		wreg, status,2, status,0, cstack
  9089 ;; Tracked objects:
  9090 ;;		On entry : 0/0
  9091 ;;		On exit  : 0/0
  9092 ;;		Unchanged: 0/0
  9093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9098 ;;Total ram usage:        0 bytes
  9099 ;; Hardware stack levels used: 1
  9100 ;; Hardware stack levels required when called: 3
  9101 ;; This function calls:
  9102 ;;		_I2C_2_Master_Idle
  9103 ;; This function is called by:
  9104 ;;		_color_writetoaddr
  9105 ;;		_color_read_Red
  9106 ;;		_color_read_Green
  9107 ;;		_color_read_Blue
  9108 ;;		_color_read_Clear
  9109 ;; This function uses a non-reentrant model
  9110 ;;
  9111                           
  9112                           	psect	text42
  9113   00421E                     __ptext42:
  9114                           	callstack 0
  9115   00421E                     _I2C_2_Master_Start:
  9116                           	callstack 25
  9117   00421E                     
  9118                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9119   00421E  ECB6  F020         	call	_I2C_2_Master_Idle	;wreg free
  9120   004222                     
  9121                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9122   004222  010E               	movlb	14	; () banked
  9123   004224  81DA               	bsf	218,0,b	;volatile
  9124   004226                     
  9125                           ; BSR set to: 14
  9126   004226  0012               	return		;funcret
  9127   004228                     __end_of_I2C_2_Master_Start:
  9128                           	callstack 0
  9129                           
  9130 ;; *************** function _I2C_2_Master_Idle *****************
  9131 ;; Defined at:
  9132 ;;		line 22 in file "i2c.c"
  9133 ;; Parameters:    Size  Location     Type
  9134 ;;		None
  9135 ;; Auto vars:     Size  Location     Type
  9136 ;;		None
  9137 ;; Return value:  Size  Location     Type
  9138 ;;                  1    wreg      void 
  9139 ;; Registers used:
  9140 ;;		wreg, status,2, status,0
  9141 ;; Tracked objects:
  9142 ;;		On entry : 0/0
  9143 ;;		On exit  : 0/0
  9144 ;;		Unchanged: 0/0
  9145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9148 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9149 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9150 ;;Total ram usage:        1 bytes
  9151 ;; Hardware stack levels used: 1
  9152 ;; Hardware stack levels required when called: 2
  9153 ;; This function calls:
  9154 ;;		Nothing
  9155 ;; This function is called by:
  9156 ;;		_I2C_2_Master_Start
  9157 ;;		_I2C_2_Master_RepStart
  9158 ;;		_I2C_2_Master_Stop
  9159 ;;		_I2C_2_Master_Write
  9160 ;;		_I2C_2_Master_Read
  9161 ;; This function uses a non-reentrant model
  9162 ;;
  9163                           
  9164                           	psect	text43
  9165   00416C                     __ptext43:
  9166                           	callstack 0
  9167   00416C                     _I2C_2_Master_Idle:
  9168                           	callstack 25
  9169   00416C                     l67:
  9170   00416C  010E               	movlb	14	; () banked
  9171   00416E  B5D8               	btfsc	216,2,b	;volatile
  9172   004170  EFBC  F020         	goto	u3581
  9173   004174  EFBE  F020         	goto	u3580
  9174   004178                     u3581:
  9175   004178  EFB6  F020         	goto	l67
  9176   00417C                     u3580:
  9177   00417C                     
  9178                           ; BSR set to: 14
  9179   00417C  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  9180   004180  0E1F               	movlw	31
  9181   004182  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  9182   004184  A4D8               	btfss	status,2,c
  9183   004186  EFC7  F020         	goto	u3591
  9184   00418A  EFC9  F020         	goto	u3590
  9185   00418E                     u3591:
  9186   00418E  EFB6  F020         	goto	l67
  9187   004192                     u3590:
  9188   004192                     
  9189                           ; BSR set to: 14
  9190   004192  0012               	return		;funcret
  9191   004194                     __end_of_I2C_2_Master_Idle:
  9192                           	callstack 0
  9193                           
  9194 ;; *************** function _I2C_2_Master_Init *****************
  9195 ;; Defined at:
  9196 ;;		line 4 in file "i2c.c"
  9197 ;; Parameters:    Size  Location     Type
  9198 ;;		None
  9199 ;; Auto vars:     Size  Location     Type
  9200 ;;		None
  9201 ;; Return value:  Size  Location     Type
  9202 ;;                  1    wreg      void 
  9203 ;; Registers used:
  9204 ;;		wreg, status,2
  9205 ;; Tracked objects:
  9206 ;;		On entry : 0/0
  9207 ;;		On exit  : 0/0
  9208 ;;		Unchanged: 0/0
  9209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9214 ;;Total ram usage:        0 bytes
  9215 ;; Hardware stack levels used: 1
  9216 ;; Hardware stack levels required when called: 2
  9217 ;; This function calls:
  9218 ;;		Nothing
  9219 ;; This function is called by:
  9220 ;;		_color_click_init
  9221 ;; This function uses a non-reentrant model
  9222 ;;
  9223                           
  9224                           	psect	text44
  9225   0040EE                     __ptext44:
  9226                           	callstack 0
  9227   0040EE                     _I2C_2_Master_Init:
  9228                           	callstack 27
  9229   0040EE                     
  9230                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  9231   0040EE  010E               	movlb	14	; () banked
  9232   0040F0  51D9               	movf	217,w,b	;volatile
  9233   0040F2  0BF0               	andlw	-16
  9234   0040F4  0908               	iorlw	8
  9235   0040F6  6FD9               	movwf	217,b	;volatile
  9236   0040F8                     
  9237                           ; BSR set to: 14
  9238                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  9239   0040F8  8BD9               	bsf	217,5,b	;volatile
  9240                           
  9241                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  9242   0040FA  0E9F               	movlw	159
  9243   0040FC  6FD6               	movwf	214,b	;volatile
  9244   0040FE                     
  9245                           ; BSR set to: 14
  9246                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  9247   0040FE  8A84               	bsf	132,5,c	;volatile
  9248   004100                     
  9249                           ; BSR set to: 14
  9250                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  9251   004100  8C84               	bsf	132,6,c	;volatile
  9252   004102                     
  9253                           ; BSR set to: 14
  9254                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  9255   004102  9BA7               	bcf	167,5,b	;volatile
  9256   004104                     
  9257                           ; BSR set to: 14
  9258                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  9259   004104  9DA7               	bcf	167,6,b	;volatile
  9260                           
  9261                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  9262   004106  0E1D               	movlw	29
  9263   004108  6F1D               	movwf	29,b	;volatile
  9264                           
  9265                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  9266   00410A  0E1E               	movlw	30
  9267   00410C  6F1C               	movwf	28,b	;volatile
  9268                           
  9269                           ;i2c.c: 18:   RD5PPS=0x1C;
  9270   00410E  0E1C               	movlw	28
  9271   004110  6F6F               	movwf	111,b	;volatile
  9272                           
  9273                           ;i2c.c: 19:   RD6PPS=0x1B;
  9274   004112  0E1B               	movlw	27
  9275   004114  6F70               	movwf	112,b	;volatile
  9276   004116                     
  9277                           ; BSR set to: 14
  9278   004116  0012               	return		;funcret
  9279   004118                     __end_of_I2C_2_Master_Init:
  9280                           	callstack 0
  9281                           
  9282 ;; *************** function ___xxtofl *****************
  9283 ;; Defined at:
  9284 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  9285 ;; Parameters:    Size  Location     Type
  9286 ;;  sign            1    wreg     unsigned char 
  9287 ;;  val             4    4[COMRAM] long 
  9288 ;; Auto vars:     Size  Location     Type
  9289 ;;  sign            1   12[COMRAM] unsigned char 
  9290 ;;  arg             4   14[COMRAM] unsigned long 
  9291 ;;  exp             1   13[COMRAM] unsigned char 
  9292 ;; Return value:  Size  Location     Type
  9293 ;;                  4    4[COMRAM] unsigned char 
  9294 ;; Registers used:
  9295 ;;		wreg, status,2, status,0
  9296 ;; Tracked objects:
  9297 ;;		On entry : 0/0
  9298 ;;		On exit  : 0/0
  9299 ;;		Unchanged: 0/0
  9300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9301 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9302 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9303 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9304 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9305 ;;Total ram usage:       14 bytes
  9306 ;; Hardware stack levels used: 1
  9307 ;; Hardware stack levels required when called: 2
  9308 ;; This function calls:
  9309 ;;		Nothing
  9310 ;; This function is called by:
  9311 ;;		_main
  9312 ;; This function uses a non-reentrant model
  9313 ;;
  9314                           
  9315                           	psect	text45
  9316   003102                     __ptext45:
  9317                           	callstack 0
  9318   003102                     ___xxtofl:
  9319                           	callstack 28
  9320                           
  9321                           ; BSR set to: 14
  9322                           ;incstack = 0
  9323                           ;___xxtofl@sign stored from wreg
  9324   003102  6E0D               	movwf	___xxtofl@sign^0,c
  9325   003104  500D               	movf	___xxtofl@sign^0,w,c
  9326   003106  B4D8               	btfsc	status,2,c
  9327   003108  EF88  F018         	goto	u4161
  9328   00310C  EF8A  F018         	goto	u4160
  9329   003110                     u4161:
  9330   003110  EFAC  F018         	goto	l983
  9331   003114                     u4160:
  9332   003114  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  9333   003116  EF91  F018         	goto	u4170
  9334   00311A  EF8F  F018         	goto	u4171
  9335   00311E                     u4171:
  9336   00311E  EFAC  F018         	goto	l983
  9337   003122                     u4170:
  9338   003122  C005  F009         	movff	___xxtofl@val,??___xxtofl
  9339   003126  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  9340   00312A  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  9341   00312E  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  9342   003132  1E09               	comf	??___xxtofl^0,f,c
  9343   003134  1E0A               	comf	(??___xxtofl+1)^0,f,c
  9344   003136  1E0B               	comf	(??___xxtofl+2)^0,f,c
  9345   003138  1E0C               	comf	(??___xxtofl+3)^0,f,c
  9346   00313A  2A09               	incf	??___xxtofl^0,f,c
  9347   00313C  0E00               	movlw	0
  9348   00313E  220A               	addwfc	(??___xxtofl+1)^0,f,c
  9349   003140  220B               	addwfc	(??___xxtofl+2)^0,f,c
  9350   003142  220C               	addwfc	(??___xxtofl+3)^0,f,c
  9351   003144  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  9352   003148  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  9353   00314C  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  9354   003150  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  9355   003154  EFB4  F018         	goto	l4191
  9356   003158                     l983:
  9357   003158  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  9358   00315C  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9359   003160  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9360   003164  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9361   003168                     l4191:
  9362   003168  5005               	movf	___xxtofl@val^0,w,c
  9363   00316A  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  9364   00316C  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  9365   00316E  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  9366   003170  A4D8               	btfss	status,2,c
  9367   003172  EFBD  F018         	goto	u4181
  9368   003176  EFBF  F018         	goto	u4180
  9369   00317A                     u4181:
  9370   00317A  EFC9  F018         	goto	l4197
  9371   00317E                     u4180:
  9372   00317E  0E00               	movlw	0
  9373   003180  6E05               	movwf	?___xxtofl^0,c
  9374   003182  0E00               	movlw	0
  9375   003184  6E06               	movwf	(?___xxtofl+1)^0,c
  9376   003186  0E00               	movlw	0
  9377   003188  6E07               	movwf	(?___xxtofl+2)^0,c
  9378   00318A  0E00               	movlw	0
  9379   00318C  6E08               	movwf	(?___xxtofl+3)^0,c
  9380   00318E  EF5A  F019         	goto	l986
  9381   003192                     l4197:
  9382   003192  0E96               	movlw	150
  9383   003194  6E0E               	movwf	___xxtofl@exp^0,c
  9384   003196  EFD3  F018         	goto	l4201
  9385   00319A                     l4199:
  9386   00319A  2A0E               	incf	___xxtofl@exp^0,f,c
  9387   00319C  90D8               	bcf	status,0,c
  9388   00319E  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  9389   0031A0  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  9390   0031A2  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  9391   0031A4  320F               	rrcf	___xxtofl@arg^0,f,c
  9392   0031A6                     l4201:
  9393   0031A6  0E00               	movlw	0
  9394   0031A8  140F               	andwf	___xxtofl@arg^0,w,c
  9395   0031AA  6E09               	movwf	??___xxtofl^0,c
  9396   0031AC  0E00               	movlw	0
  9397   0031AE  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  9398   0031B0  6E0A               	movwf	(??___xxtofl+1)^0,c
  9399   0031B2  0E00               	movlw	0
  9400   0031B4  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  9401   0031B6  6E0B               	movwf	(??___xxtofl+2)^0,c
  9402   0031B8  0EFE               	movlw	254
  9403   0031BA  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  9404   0031BC  6E0C               	movwf	(??___xxtofl+3)^0,c
  9405   0031BE  5009               	movf	??___xxtofl^0,w,c
  9406   0031C0  100A               	iorwf	(??___xxtofl+1)^0,w,c
  9407   0031C2  100B               	iorwf	(??___xxtofl+2)^0,w,c
  9408   0031C4  100C               	iorwf	(??___xxtofl+3)^0,w,c
  9409   0031C6  A4D8               	btfss	status,2,c
  9410   0031C8  EFE8  F018         	goto	u4191
  9411   0031CC  EFEA  F018         	goto	u4190
  9412   0031D0                     u4191:
  9413   0031D0  EFCD  F018         	goto	l4199
  9414   0031D4                     u4190:
  9415   0031D4  EFF8  F018         	goto	l990
  9416   0031D8                     l4203:
  9417   0031D8  2A0E               	incf	___xxtofl@exp^0,f,c
  9418   0031DA  0E01               	movlw	1
  9419   0031DC  260F               	addwf	___xxtofl@arg^0,f,c
  9420   0031DE  0E00               	movlw	0
  9421   0031E0  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  9422   0031E2  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  9423   0031E4  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  9424   0031E6  90D8               	bcf	status,0,c
  9425   0031E8  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  9426   0031EA  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  9427   0031EC  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  9428   0031EE  320F               	rrcf	___xxtofl@arg^0,f,c
  9429   0031F0                     l990:
  9430   0031F0  0E00               	movlw	0
  9431   0031F2  140F               	andwf	___xxtofl@arg^0,w,c
  9432   0031F4  6E09               	movwf	??___xxtofl^0,c
  9433   0031F6  0E00               	movlw	0
  9434   0031F8  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  9435   0031FA  6E0A               	movwf	(??___xxtofl+1)^0,c
  9436   0031FC  0E00               	movlw	0
  9437   0031FE  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  9438   003200  6E0B               	movwf	(??___xxtofl+2)^0,c
  9439   003202  0EFF               	movlw	255
  9440   003204  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  9441   003206  6E0C               	movwf	(??___xxtofl+3)^0,c
  9442   003208  5009               	movf	??___xxtofl^0,w,c
  9443   00320A  100A               	iorwf	(??___xxtofl+1)^0,w,c
  9444   00320C  100B               	iorwf	(??___xxtofl+2)^0,w,c
  9445   00320E  100C               	iorwf	(??___xxtofl+3)^0,w,c
  9446   003210  A4D8               	btfss	status,2,c
  9447   003212  EF0D  F019         	goto	u4201
  9448   003216  EF0F  F019         	goto	u4200
  9449   00321A                     u4201:
  9450   00321A  EFEC  F018         	goto	l4203
  9451   00321E                     u4200:
  9452   00321E  EF17  F019         	goto	l4211
  9453   003222                     l4209:
  9454   003222  060E               	decf	___xxtofl@exp^0,f,c
  9455   003224  90D8               	bcf	status,0,c
  9456   003226  360F               	rlcf	___xxtofl@arg^0,f,c
  9457   003228  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  9458   00322A  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  9459   00322C  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  9460   00322E                     l4211:
  9461   00322E  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  9462   003230  EF1C  F019         	goto	u4211
  9463   003234  EF1E  F019         	goto	u4210
  9464   003238                     u4211:
  9465   003238  EF26  F019         	goto	l997
  9466   00323C                     u4210:
  9467   00323C  0E02               	movlw	2
  9468   00323E  600E               	cpfslt	___xxtofl@exp^0,c
  9469   003240  EF24  F019         	goto	u4221
  9470   003244  EF26  F019         	goto	u4220
  9471   003248                     u4221:
  9472   003248  EF11  F019         	goto	l4209
  9473   00324C                     u4220:
  9474   00324C                     l997:
  9475   00324C  B00E               	btfsc	___xxtofl@exp^0,0,c
  9476   00324E  EF2B  F019         	goto	u4231
  9477   003252  EF2D  F019         	goto	u4230
  9478   003256                     u4231:
  9479   003256  EF2E  F019         	goto	l4217
  9480   00325A                     u4230:
  9481   00325A  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  9482   00325C                     l4217:
  9483   00325C  90D8               	bcf	status,0,c
  9484   00325E  320E               	rrcf	___xxtofl@exp^0,f,c
  9485   003260  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  9486   003264  6A0A               	clrf	(??___xxtofl+1)^0,c
  9487   003266  6A0B               	clrf	(??___xxtofl+2)^0,c
  9488   003268  6A0C               	clrf	(??___xxtofl+3)^0,c
  9489   00326A  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  9490   00326E  6A0B               	clrf	(??___xxtofl+2)^0,c
  9491   003270  6A0A               	clrf	(??___xxtofl+1)^0,c
  9492   003272  6A09               	clrf	??___xxtofl^0,c
  9493   003274  5009               	movf	??___xxtofl^0,w,c
  9494   003276  120F               	iorwf	___xxtofl@arg^0,f,c
  9495   003278  500A               	movf	(??___xxtofl+1)^0,w,c
  9496   00327A  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  9497   00327C  500B               	movf	(??___xxtofl+2)^0,w,c
  9498   00327E  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  9499   003280  500C               	movf	(??___xxtofl+3)^0,w,c
  9500   003282  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  9501   003284  500D               	movf	___xxtofl@sign^0,w,c
  9502   003286  B4D8               	btfsc	status,2,c
  9503   003288  EF48  F019         	goto	u4241
  9504   00328C  EF4A  F019         	goto	u4240
  9505   003290                     u4241:
  9506   003290  EF52  F019         	goto	l4227
  9507   003294                     u4240:
  9508   003294  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  9509   003296  EF51  F019         	goto	u4250
  9510   00329A  EF4F  F019         	goto	u4251
  9511   00329E                     u4251:
  9512   00329E  EF52  F019         	goto	l4227
  9513   0032A2                     u4250:
  9514   0032A2  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  9515   0032A4                     l4227:
  9516   0032A4  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  9517   0032A8  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  9518   0032AC  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  9519   0032B0  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  9520   0032B4                     l986:
  9521   0032B4  0012               	return		;funcret
  9522   0032B6                     __end_of___xxtofl:
  9523                           	callstack 0
  9524                           
  9525 ;; *************** function _TxBufferedString *****************
  9526 ;; Defined at:
  9527 ;;		line 118 in file "serialTest.c"
  9528 ;; Parameters:    Size  Location     Type
  9529 ;;  string          2    5[COMRAM] PTR unsigned char 
  9530 ;;		 -> main@string3(20), main@string2(20), main@string1(20), main@string4(20), 
  9531 ;; Auto vars:     Size  Location     Type
  9532 ;;		None
  9533 ;; Return value:  Size  Location     Type
  9534 ;;                  1    wreg      void 
  9535 ;; Registers used:
  9536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9537 ;; Tracked objects:
  9538 ;;		On entry : 0/0
  9539 ;;		On exit  : 0/0
  9540 ;;		Unchanged: 0/0
  9541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9542 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9545 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9546 ;;Total ram usage:        2 bytes
  9547 ;; Hardware stack levels used: 1
  9548 ;; Hardware stack levels required when called: 3
  9549 ;; This function calls:
  9550 ;;		_putCharToTxBuf
  9551 ;; This function is called by:
  9552 ;;		_main
  9553 ;; This function uses a non-reentrant model
  9554 ;;
  9555                           
  9556                           	psect	text46
  9557   004064                     __ptext46:
  9558                           	callstack 0
  9559   004064                     _TxBufferedString:
  9560                           	callstack 27
  9561   004064                     
  9562                           ;serialTest.c: 121:     while(*string != 0) {putCharToTxBuf(*string++);}
  9563   004064  EF3D  F020         	goto	l4163
  9564   004068                     l4159:
  9565   004068  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  9566   00406C  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  9567   004070  50DF               	movf	indf2,w,c
  9568   004072  EC8C  F020         	call	_putCharToTxBuf
  9569   004076  4A06               	infsnz	TxBufferedString@string^0,f,c
  9570   004078  2A07               	incf	(TxBufferedString@string+1)^0,f,c
  9571   00407A                     l4163:
  9572   00407A  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  9573   00407E  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  9574   004082  50DF               	movf	indf2,w,c
  9575   004084  A4D8               	btfss	status,2,c
  9576   004086  EF47  F020         	goto	u4121
  9577   00408A  EF49  F020         	goto	u4120
  9578   00408E                     u4121:
  9579   00408E  EF34  F020         	goto	l4159
  9580   004092                     u4120:
  9581   004092  0012               	return		;funcret
  9582   004094                     __end_of_TxBufferedString:
  9583                           	callstack 0
  9584                           
  9585 ;; *************** function _putCharToTxBuf *****************
  9586 ;; Defined at:
  9587 ;;		line 105 in file "serialTest.c"
  9588 ;; Parameters:    Size  Location     Type
  9589 ;;  byte            1    wreg     unsigned char 
  9590 ;; Auto vars:     Size  Location     Type
  9591 ;;  byte            1    4[COMRAM] unsigned char 
  9592 ;; Return value:  Size  Location     Type
  9593 ;;                  1    wreg      void 
  9594 ;; Registers used:
  9595 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9596 ;; Tracked objects:
  9597 ;;		On entry : 0/0
  9598 ;;		On exit  : 0/0
  9599 ;;		Unchanged: 0/0
  9600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9602 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9604 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9605 ;;Total ram usage:        1 bytes
  9606 ;; Hardware stack levels used: 1
  9607 ;; Hardware stack levels required when called: 2
  9608 ;; This function calls:
  9609 ;;		Nothing
  9610 ;; This function is called by:
  9611 ;;		_TxBufferedString
  9612 ;; This function uses a non-reentrant model
  9613 ;;
  9614                           
  9615                           	psect	text47
  9616   004118                     __ptext47:
  9617                           	callstack 0
  9618   004118                     _putCharToTxBuf:
  9619                           	callstack 27
  9620                           
  9621                           ;incstack = 0
  9622                           ;putCharToTxBuf@byte stored from wreg
  9623   004118  6E05               	movwf	putCharToTxBuf@byte^0,c
  9624   00411A                     
  9625                           ;serialTest.c: 106:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  9626   00411A  0E3B               	movlw	59
  9627   00411C  6458               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  9628   00411E  EF93  F020         	goto	u4081
  9629   004122  EF95  F020         	goto	u4080
  9630   004126                     u4081:
  9631   004126  EF97  F020         	goto	l4065
  9632   00412A                     u4080:
  9633   00412A  0E00               	movlw	0
  9634   00412C  6E58               	movwf	_TxBufWriteCnt^0,c	;volatile
  9635   00412E                     l4065:
  9636                           
  9637                           ;serialTest.c: 107:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  9638   00412E  0E00               	movlw	low _EUSART4TXbuf
  9639   004130  2458               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  9640   004132  6ED9               	movwf	fsr2l,c
  9641   004134  6ADA               	clrf	fsr2h,c
  9642   004136  0E02               	movlw	high _EUSART4TXbuf
  9643   004138  22DA               	addwfc	fsr2h,f,c
  9644   00413A  C005  FFDF         	movff	putCharToTxBuf@byte,indf2
  9645   00413E  2A58               	incf	_TxBufWriteCnt^0,f,c	;volatile
  9646   004140  0012               	return		;funcret
  9647   004142                     __end_of_putCharToTxBuf:
  9648                           	callstack 0
  9649                           
  9650 ;; *************** function _HighISR *****************
  9651 ;; Defined at:
  9652 ;;		line 132 in file "serialTest.c"
  9653 ;; Parameters:    Size  Location     Type
  9654 ;;		None
  9655 ;; Auto vars:     Size  Location     Type
  9656 ;;		None
  9657 ;; Return value:  Size  Location     Type
  9658 ;;                  1    wreg      void 
  9659 ;; Registers used:
  9660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9661 ;; Tracked objects:
  9662 ;;		On entry : 0/0
  9663 ;;		On exit  : 0/0
  9664 ;;		Unchanged: 0/0
  9665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9668 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9669 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9670 ;;Total ram usage:        2 bytes
  9671 ;; Hardware stack levels used: 1
  9672 ;; Hardware stack levels required when called: 1
  9673 ;; This function calls:
  9674 ;;		_getCharFromTxBuf
  9675 ;;		_putCharToRxBuf
  9676 ;;		i2_isDataInTxBuf
  9677 ;; This function is called by:
  9678 ;;		Interrupt level 2
  9679 ;; This function uses a non-reentrant model
  9680 ;;
  9681                           
  9682                           	psect	intcode
  9683   000008                     __pintcode:
  9684                           	callstack 0
  9685   000008                     _HighISR:
  9686                           	callstack 21
  9687                           
  9688                           ;incstack = 0
  9689   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9690   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  9691   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  9692   000012                     
  9693                           ;serialTest.c: 134:     if (PIR4bits.RC4IF){
  9694   000012  010E               	movlb	14	; () banked
  9695   000014  A737               	btfss	55,3,b	;volatile
  9696   000016  EF0F  F000         	goto	i2u429_41
  9697   00001A  EF11  F000         	goto	i2u429_40
  9698   00001E                     i2u429_41:
  9699   00001E  EF14  F000         	goto	i2l4373
  9700   000022                     i2u429_40:
  9701   000022                     
  9702                           ; BSR set to: 14
  9703                           ;serialTest.c: 135:         putCharToRxBuf(RC4REG);
  9704   000022  51E3               	movf	227,w,b	;volatile
  9705   000024  ECA1  F020         	call	_putCharToRxBuf
  9706   000028                     i2l4373:
  9707                           
  9708                           ;serialTest.c: 138:     if (PIR4bits.TX4IF && PIE4bits.TX4IE == 1){
  9709   000028  010E               	movlb	14	; () banked
  9710   00002A  A537               	btfss	55,2,b	;volatile
  9711   00002C  EF1A  F000         	goto	i2u430_41
  9712   000030  EF1C  F000         	goto	i2u430_40
  9713   000034                     i2u430_41:
  9714   000034  EF35  F000         	goto	i2l325
  9715   000038                     i2u430_40:
  9716   000038                     
  9717                           ; BSR set to: 14
  9718   000038  A52D               	btfss	45,2,b	;volatile
  9719   00003A  EF21  F000         	goto	i2u431_41
  9720   00003E  EF23  F000         	goto	i2u431_40
  9721   000042                     i2u431_41:
  9722   000042  EF35  F000         	goto	i2l325
  9723   000046                     i2u431_40:
  9724   000046                     
  9725                           ; BSR set to: 14
  9726                           ;serialTest.c: 139:         if (isDataInTxBuf() == 1){
  9727   000046  ECF3  F020         	call	i2_isDataInTxBuf	;wreg free
  9728   00004A  06E8               	decf	wreg,f,c
  9729   00004C  A4D8               	btfss	status,2,c
  9730   00004E  EF2B  F000         	goto	i2u432_41
  9731   000052  EF2D  F000         	goto	i2u432_40
  9732   000056                     i2u432_41:
  9733   000056  EF33  F000         	goto	i2l323
  9734   00005A                     i2u432_40:
  9735   00005A                     
  9736                           ;serialTest.c: 140:            TX4REG = getCharFromTxBuf();
  9737   00005A  EC61  F020         	call	_getCharFromTxBuf	;wreg free
  9738   00005E  010E               	movlb	14	; () banked
  9739   000060  6FE4               	movwf	228,b	;volatile
  9740                           
  9741                           ;serialTest.c: 141:         }
  9742   000062  EF35  F000         	goto	i2l325
  9743   000066                     i2l323:
  9744                           
  9745                           ;serialTest.c: 143:            PIE4bits.TX4IE = 0;
  9746   000066  010E               	movlb	14	; () banked
  9747   000068  952D               	bcf	45,2,b	;volatile
  9748   00006A                     i2l325:
  9749                           
  9750                           ; BSR set to: 14
  9751   00006A  C004  FFDA         	movff	??_HighISR+1,fsr2h
  9752   00006E  C003  FFD9         	movff	??_HighISR,fsr2l
  9753   000072  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9754   000074  0011               	retfie		f
  9755   000076                     __end_of_HighISR:
  9756                           	callstack 0
  9757                           
  9758 ;; *************** function i2_isDataInTxBuf *****************
  9759 ;; Defined at:
  9760 ;;		line 113 in file "serialTest.c"
  9761 ;; Parameters:    Size  Location     Type
  9762 ;;		None
  9763 ;; Auto vars:     Size  Location     Type
  9764 ;;		None
  9765 ;; Return value:  Size  Location     Type
  9766 ;;                  1    wreg      unsigned char 
  9767 ;; Registers used:
  9768 ;;		wreg, status,2, status,0
  9769 ;; Tracked objects:
  9770 ;;		On entry : 0/0
  9771 ;;		On exit  : 0/0
  9772 ;;		Unchanged: 0/0
  9773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9778 ;;Total ram usage:        0 bytes
  9779 ;; Hardware stack levels used: 1
  9780 ;; This function calls:
  9781 ;;		Nothing
  9782 ;; This function is called by:
  9783 ;;		_HighISR
  9784 ;; This function uses a non-reentrant model
  9785 ;;
  9786                           
  9787                           	psect	text49
  9788   0041E6                     __ptext49:
  9789                           	callstack 0
  9790   0041E6                     i2_isDataInTxBuf:
  9791                           	callstack 21
  9792   0041E6                     
  9793                           ;serialTest.c: 114:     return (TxBufWriteCnt!=TxBufReadCnt);
  9794   0041E6  5057               	movf	_TxBufReadCnt^0,w,c	;volatile
  9795   0041E8  1858               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  9796   0041EA  A4D8               	btfss	status,2,c
  9797   0041EC  EFFA  F020         	goto	i2u210_41
  9798   0041F0  EFFD  F020         	goto	i2u210_40
  9799   0041F4                     i2u210_41:
  9800   0041F4  0E01               	movlw	1
  9801   0041F6  EFFE  F020         	goto	i2u211_40
  9802   0041FA                     i2u210_40:
  9803   0041FA  0E00               	movlw	0
  9804   0041FC                     i2u211_40:
  9805   0041FC  0012               	return		;funcret
  9806   0041FE                     __end_ofi2_isDataInTxBuf:
  9807                           	callstack 0
  9808                           
  9809 ;; *************** function _putCharToRxBuf *****************
  9810 ;; Defined at:
  9811 ;;		line 85 in file "serialTest.c"
  9812 ;; Parameters:    Size  Location     Type
  9813 ;;  byte            1    wreg     unsigned char 
  9814 ;; Auto vars:     Size  Location     Type
  9815 ;;  byte            1    0[COMRAM] unsigned char 
  9816 ;; Return value:  Size  Location     Type
  9817 ;;                  1    wreg      void 
  9818 ;; Registers used:
  9819 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9820 ;; Tracked objects:
  9821 ;;		On entry : 0/0
  9822 ;;		On exit  : 0/0
  9823 ;;		Unchanged: 0/0
  9824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9826 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9828 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9829 ;;Total ram usage:        1 bytes
  9830 ;; Hardware stack levels used: 1
  9831 ;; This function calls:
  9832 ;;		Nothing
  9833 ;; This function is called by:
  9834 ;;		_HighISR
  9835 ;; This function uses a non-reentrant model
  9836 ;;
  9837                           
  9838                           	psect	text50
  9839   004142                     __ptext50:
  9840                           	callstack 0
  9841   004142                     _putCharToRxBuf:
  9842                           	callstack 21
  9843                           
  9844                           ;incstack = 0
  9845                           ;putCharToRxBuf@byte stored from wreg
  9846   004142  6E01               	movwf	putCharToRxBuf@byte^0,c
  9847   004144                     
  9848                           ;serialTest.c: 86:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  9849   004144  0E13               	movlw	19
  9850   004146  645A               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  9851   004148  EFA8  F020         	goto	i2u414_41
  9852   00414C  EFAA  F020         	goto	i2u414_40
  9853   004150                     i2u414_41:
  9854   004150  EFAC  F020         	goto	i2l4173
  9855   004154                     i2u414_40:
  9856   004154  0E00               	movlw	0
  9857   004156  6E5A               	movwf	_RxBufWriteCnt^0,c	;volatile
  9858   004158                     i2l4173:
  9859                           
  9860                           ;serialTest.c: 87:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  9861   004158  0ED7               	movlw	low _EUSART4RXbuf
  9862   00415A  245A               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  9863   00415C  6ED9               	movwf	fsr2l,c
  9864   00415E  6ADA               	clrf	fsr2h,c
  9865   004160  0E00               	movlw	high _EUSART4RXbuf
  9866   004162  22DA               	addwfc	fsr2h,f,c
  9867   004164  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  9868   004168  2A5A               	incf	_RxBufWriteCnt^0,f,c	;volatile
  9869   00416A  0012               	return		;funcret
  9870   00416C                     __end_of_putCharToRxBuf:
  9871                           	callstack 0
  9872                           
  9873 ;; *************** function _getCharFromTxBuf *****************
  9874 ;; Defined at:
  9875 ;;		line 99 in file "serialTest.c"
  9876 ;; Parameters:    Size  Location     Type
  9877 ;;		None
  9878 ;; Auto vars:     Size  Location     Type
  9879 ;;		None
  9880 ;; Return value:  Size  Location     Type
  9881 ;;                  1    wreg      unsigned char 
  9882 ;; Registers used:
  9883 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9884 ;; Tracked objects:
  9885 ;;		On entry : 0/0
  9886 ;;		On exit  : 0/0
  9887 ;;		Unchanged: 0/0
  9888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9891 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9892 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9893 ;;Total ram usage:        2 bytes
  9894 ;; Hardware stack levels used: 1
  9895 ;; This function calls:
  9896 ;;		Nothing
  9897 ;; This function is called by:
  9898 ;;		_HighISR
  9899 ;; This function uses a non-reentrant model
  9900 ;;
  9901                           
  9902                           	psect	text51
  9903   0040C2                     __ptext51:
  9904                           	callstack 0
  9905   0040C2                     _getCharFromTxBuf:
  9906                           	callstack 21
  9907   0040C2                     
  9908                           ;serialTest.c: 100:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  9909   0040C2  0E3B               	movlw	59
  9910   0040C4  6457               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  9911   0040C6  EF67  F020         	goto	i2u415_41
  9912   0040CA  EF69  F020         	goto	i2u415_40
  9913   0040CE                     i2u415_41:
  9914   0040CE  EF6B  F020         	goto	i2l4181
  9915   0040D2                     i2u415_40:
  9916   0040D2  0E00               	movlw	0
  9917   0040D4  6E57               	movwf	_TxBufReadCnt^0,c	;volatile
  9918   0040D6                     i2l4181:
  9919                           
  9920                           ;serialTest.c: 101:     return EUSART4TXbuf[TxBufReadCnt++];
  9921   0040D6  2A57               	incf	_TxBufReadCnt^0,f,c	;volatile
  9922   0040D8  0457               	decf	_TxBufReadCnt^0,w,c	;volatile
  9923   0040DA  6E01               	movwf	??_getCharFromTxBuf^0,c
  9924   0040DC  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  9925   0040DE  0E00               	movlw	low _EUSART4TXbuf
  9926   0040E0  2401               	addwf	??_getCharFromTxBuf^0,w,c
  9927   0040E2  6ED9               	movwf	fsr2l,c
  9928   0040E4  0E02               	movlw	high _EUSART4TXbuf
  9929   0040E6  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  9930   0040E8  6EDA               	movwf	fsr2h,c
  9931   0040EA  50DF               	movf	indf2,w,c
  9932   0040EC  0012               	return		;funcret
  9933   0040EE                     __end_of_getCharFromTxBuf:
  9934                           	callstack 0
  9935                           
  9936                           	psect	rparam
  9937   000000                     
  9938                           	psect	temp
  9939   00005B                     btemp:
  9940                           	callstack 0
  9941   00005B                     	ds	1
  9942   000000                     int$flags	set	btemp
  9943   000000                     wtemp8	set	btemp+1
  9944   000000                     ttemp5	set	btemp+1
  9945   000000                     ttemp6	set	btemp+4
  9946   000000                     ttemp7	set	btemp+8
  9947                           
  9948                           	psect	idloc
  9949                           
  9950                           ;Config register IDLOC0 @ 0x200000
  9951                           ;	unspecified, using default values
  9952   200000                     	org	2097152
  9953   200000  0FFF               	dw	4095
  9954                           
  9955                           ;Config register IDLOC1 @ 0x200002
  9956                           ;	unspecified, using default values
  9957   200002                     	org	2097154
  9958   200002  0FFF               	dw	4095
  9959                           
  9960                           ;Config register IDLOC2 @ 0x200004
  9961                           ;	unspecified, using default values
  9962   200004                     	org	2097156
  9963   200004  0FFF               	dw	4095
  9964                           
  9965                           ;Config register IDLOC3 @ 0x200006
  9966                           ;	unspecified, using default values
  9967   200006                     	org	2097158
  9968   200006  0FFF               	dw	4095
  9969                           
  9970                           ;Config register IDLOC4 @ 0x200008
  9971                           ;	unspecified, using default values
  9972   200008                     	org	2097160
  9973   200008  0FFF               	dw	4095
  9974                           
  9975                           ;Config register IDLOC5 @ 0x20000A
  9976                           ;	unspecified, using default values
  9977   20000A                     	org	2097162
  9978   20000A  0FFF               	dw	4095
  9979                           
  9980                           ;Config register IDLOC6 @ 0x20000C
  9981                           ;	unspecified, using default values
  9982   20000C                     	org	2097164
  9983   20000C  0FFF               	dw	4095
  9984                           
  9985                           ;Config register IDLOC7 @ 0x20000E
  9986                           ;	unspecified, using default values
  9987   20000E                     	org	2097166
  9988   20000E  0FFF               	dw	4095
  9989                           
  9990                           	psect	config
  9991                           
  9992                           ;Config register CONFIG1L @ 0x300000
  9993                           ;	External Oscillator mode Selection bits
  9994                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9995                           ;	Power-up default value for COSC bits
  9996                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9997   300000                     	org	3145728
  9998   300000  AA                 	db	170
  9999                           
 10000                           ;Config register CONFIG1H @ 0x300001
 10001                           ;	unspecified, using default values
 10002                           ;	Clock Out Enable bit
 10003                           ;	CLKOUTEN = 0x1, unprogrammed default
 10004                           ;	Clock Switch Enable bit
 10005                           ;	CSWEN = 0x1, unprogrammed default
 10006                           ;	Fail-Safe Clock Monitor Enable bit
 10007                           ;	FCMEN = 0x1, unprogrammed default
 10008   300001                     	org	3145729
 10009   300001  FF                 	db	255
 10010                           
 10011                           ;Config register CONFIG2L @ 0x300002
 10012                           ;	unspecified, using default values
 10013                           ;	Master Clear Enable bit
 10014                           ;	MCLRE = 0x1, unprogrammed default
 10015                           ;	Power-up Timer Enable bit
 10016                           ;	PWRTE = 0x1, unprogrammed default
 10017                           ;	Low-power BOR enable bit
 10018                           ;	LPBOREN = 0x1, unprogrammed default
 10019                           ;	Brown-out Reset Enable bits
 10020                           ;	BOREN = 0x3, unprogrammed default
 10021   300002                     	org	3145730
 10022   300002  FF                 	db	255
 10023                           
 10024                           ;Config register CONFIG2H @ 0x300003
 10025                           ;	unspecified, using default values
 10026                           ;	Brown Out Reset Voltage selection bits
 10027                           ;	BORV = 0x3, unprogrammed default
 10028                           ;	ZCD Disable bit
 10029                           ;	ZCD = 0x1, unprogrammed default
 10030                           ;	PPSLOCK bit One-Way Set Enable bit
 10031                           ;	PPS1WAY = 0x1, unprogrammed default
 10032                           ;	Stack Full/Underflow Reset Enable bit
 10033                           ;	STVREN = 0x1, unprogrammed default
 10034                           ;	Debugger Enable bit
 10035                           ;	DEBUG = 0x1, unprogrammed default
 10036                           ;	Extended Instruction Set Enable bit
 10037                           ;	XINST = 0x1, unprogrammed default
 10038   300003                     	org	3145731
 10039   300003  FF                 	db	255
 10040                           
 10041                           ;Config register CONFIG3L @ 0x300004
 10042                           ;	WDT Period Select bits
 10043                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10044                           ;	WDT operating mode
 10045                           ;	WDTE = OFF, WDT Disabled
 10046   300004                     	org	3145732
 10047   300004  9F                 	db	159
 10048                           
 10049                           ;Config register CONFIG3H @ 0x300005
 10050                           ;	unspecified, using default values
 10051                           ;	WDT Window Select bits
 10052                           ;	WDTCWS = 0x7, unprogrammed default
 10053                           ;	WDT input clock selector
 10054                           ;	WDTCCS = 0x7, unprogrammed default
 10055   300005                     	org	3145733
 10056   300005  FF                 	db	255
 10057                           
 10058                           ;Config register CONFIG4L @ 0x300006
 10059                           ;	unspecified, using default values
 10060                           ;	Write Protection Block 0
 10061                           ;	WRT0 = 0x1, unprogrammed default
 10062                           ;	Write Protection Block 1
 10063                           ;	WRT1 = 0x1, unprogrammed default
 10064                           ;	Write Protection Block 2
 10065                           ;	WRT2 = 0x1, unprogrammed default
 10066                           ;	Write Protection Block 3
 10067                           ;	WRT3 = 0x1, unprogrammed default
 10068                           ;	Write Protection Block 3
 10069                           ;	WRT4 = 0x1, unprogrammed default
 10070                           ;	Write Protection Block 3
 10071                           ;	WRT5 = 0x1, unprogrammed default
 10072                           ;	Write Protection Block 3
 10073                           ;	WRT6 = 0x1, unprogrammed default
 10074                           ;	Write Protection Block 3
 10075                           ;	WRT7 = 0x1, unprogrammed default
 10076   300006                     	org	3145734
 10077   300006  FF                 	db	255
 10078                           
 10079                           ;Config register CONFIG4H @ 0x300007
 10080                           ;	unspecified, using default values
 10081                           ;	Configuration Register Write Protection bit
 10082                           ;	WRTC = 0x1, unprogrammed default
 10083                           ;	Boot Block Write Protection bit
 10084                           ;	WRTB = 0x1, unprogrammed default
 10085                           ;	Data EEPROM Write Protection bit
 10086                           ;	WRTD = 0x1, unprogrammed default
 10087                           ;	Scanner Enable bit
 10088                           ;	SCANE = 0x1, unprogrammed default
 10089                           ;	Low Voltage Programming Enable bit
 10090                           ;	LVP = 0x1, unprogrammed default
 10091   300007                     	org	3145735
 10092   300007  FF                 	db	255
 10093                           
 10094                           ;Config register CONFIG5L @ 0x300008
 10095                           ;	unspecified, using default values
 10096                           ;	UserNVM Program Memory Code Protection bit
 10097                           ;	CP = 0x1, unprogrammed default
 10098                           ;	DataNVM Memory Code Protection bit
 10099                           ;	CPD = 0x1, unprogrammed default
 10100   300008                     	org	3145736
 10101   300008  FF                 	db	255
 10102                           
 10103                           ;Config register CONFIG5H @ 0x300009
 10104                           ;	unspecified, using default values
 10105   300009                     	org	3145737
 10106   300009  FF                 	db	255
 10107                           
 10108                           ;Config register CONFIG6L @ 0x30000A
 10109                           ;	unspecified, using default values
 10110                           ;	Table Read Protection Block 0
 10111                           ;	EBTR0 = 0x1, unprogrammed default
 10112                           ;	Table Read Protection Block 1
 10113                           ;	EBTR1 = 0x1, unprogrammed default
 10114                           ;	Table Read Protection Block 2
 10115                           ;	EBTR2 = 0x1, unprogrammed default
 10116                           ;	Table Read Protection Block 3
 10117                           ;	EBTR3 = 0x1, unprogrammed default
 10118                           ;	Table Read Protection Block 4
 10119                           ;	EBTR4 = 0x1, unprogrammed default
 10120                           ;	Table Read Protection Block 5
 10121                           ;	EBTR5 = 0x1, unprogrammed default
 10122                           ;	Table Read Protection Block 6
 10123                           ;	EBTR6 = 0x1, unprogrammed default
 10124                           ;	Table Read Protection Block 7
 10125                           ;	EBTR7 = 0x1, unprogrammed default
 10126   30000A                     	org	3145738
 10127   30000A  FF                 	db	255
 10128                           
 10129                           ;Config register CONFIG6H @ 0x30000B
 10130                           ;	unspecified, using default values
 10131                           ;	Boot Block Table Read Protection bit
 10132                           ;	EBTRB = 0x1, unprogrammed default
 10133   30000B                     	org	3145739
 10134   30000B  FF                 	db	255
 10135                           tosu	equ	0xFFF
 10136                           tosh	equ	0xFFE
 10137                           tosl	equ	0xFFD
 10138                           stkptr	equ	0xFFC
 10139                           pclatu	equ	0xFFB
 10140                           pclath	equ	0xFFA
 10141                           pcl	equ	0xFF9
 10142                           tblptru	equ	0xFF8
 10143                           tblptrh	equ	0xFF7
 10144                           tblptrl	equ	0xFF6
 10145                           tablat	equ	0xFF5
 10146                           prodh	equ	0xFF4
 10147                           prodl	equ	0xFF3
 10148                           indf0	equ	0xFEF
 10149                           postinc0	equ	0xFEE
 10150                           postdec0	equ	0xFED
 10151                           preinc0	equ	0xFEC
 10152                           plusw0	equ	0xFEB
 10153                           fsr0h	equ	0xFEA
 10154                           fsr0l	equ	0xFE9
 10155                           wreg	equ	0xFE8
 10156                           indf1	equ	0xFE7
 10157                           postinc1	equ	0xFE6
 10158                           postdec1	equ	0xFE5
 10159                           preinc1	equ	0xFE4
 10160                           plusw1	equ	0xFE3
 10161                           fsr1h	equ	0xFE2
 10162                           fsr1l	equ	0xFE1
 10163                           bsr	equ	0xFE0
 10164                           indf2	equ	0xFDF
 10165                           postinc2	equ	0xFDE
 10166                           postdec2	equ	0xFDD
 10167                           preinc2	equ	0xFDC
 10168                           plusw2	equ	0xFDB
 10169                           fsr2h	equ	0xFDA
 10170                           fsr2l	equ	0xFD9
 10171                           status	equ	0xFD8

Data Sizes:
    Strings     66
    Constant    0
    Data        0
    BSS         177
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160    119     152
    BANK1           256    118     198
    BANK2           256      0      60
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_9(CODE[4]), STR_6(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_9(CODE[4]), STR_6(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_5(CODE[15]), STR_4(CODE[12]), STR_3(CODE[11]), STR_2(CODE[12]), 
		 -> STR_1(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_5(CODE[15]), STR_4(CODE[12]), STR_3(CODE[11]), STR_2(CODE[12]), 
		 -> STR_1(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 15
		 -> STR_5(CODE[15]), STR_4(CODE[12]), STR_3(CODE[11]), STR_2(CODE[12]), 
		 -> STR_1(CODE[8]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2278$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_5(CODE[15]), STR_4(CODE[12]), STR_3(CODE[11]), STR_2(CODE[12]), 
		 -> STR_1(CODE[8]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> ADC2String@buf(COMRAM[40]), main@string3(BANK1[20]), main@string2(BANK1[20]), main@string1(BANK1[20]), 
		 -> main@string4(BANK1[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2194$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2194$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 20
		 -> main@string3(BANK1[20]), main@string2(BANK1[20]), main@string1(BANK1[20]), main@string4(BANK1[20]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    motorRight.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorRight.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    S1323DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorLeft.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    S1323DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    motorLeft.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    getColor@v	PTR struct RGB size(2) Largest target is 8
		 -> main@RGBVal(BANK1[8]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___fladd
    ___flmul->___flsub
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _initDCmotorsPWM->_LRmotorsInit
    _getColor->_color_read_Blue
    _getColor->_color_read_Clear
    _getColor->_color_read_Green
    _getColor->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               144   144      0   42036
                                            117 BANK0      2     2      0
                                              0 BANK1    118   118      0
                   _TxBufferedString
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                   _color_click_init
                           _getColor
                    _initDCmotorsPWM
                         _initUSART4
                          _sendTxBuf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12   29413
                                             92 BANK0     25    13     12
                           ___xxtofl (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   28195
                                             84 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   27725
                                             84 COMRAM     2     2      0
                                             67 BANK0     17    11      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   21576
                                             82 COMRAM     2     2      0
                                             16 BANK0     51    44      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             78 COMRAM     4     0      4
                                              0 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3345
                                             20 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2960
                                             28 COMRAM    25    17      8
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             53 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2615
                                             53 COMRAM    25    17      8
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             31 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2     318
                                             22 COMRAM     2     0      2
                       _LRmotorsInit
 ---------------------------------------------------------------------------------
 (2) _LRmotorsInit                                        18    18      0     242
                                              4 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 (1) _getColor                                             2     0      2     616
                                             15 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     854
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     371
                                              5 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
                    i2_isDataInTxBuf
 ---------------------------------------------------------------------------------
 (10) i2_isDataInTxBuf                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TxBufferedString
     _putCharToTxBuf
   ___fldiv
     ___flmul (ARG)
       ___flsub (ARG)
         ___fladd
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flsub (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___flsub
   ___xxtofl
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _getColor
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
     _LRmotorsInit
   _initUSART4
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     ___xxtofl (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf
   i2_isDataInTxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      3C       9       23.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     76      C6       7       77.3%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     77      98       5       95.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBIGSFRhlllh      52      0       0      40        0.0%
BITBIGSFRhlllll     37      0       0      42        0.0%
BITBIGSFRhhhhl      32      0       0      33        0.0%
BITBIGSFRllh        2D      0       0      45        0.0%
BITBIGSFRlllhll     2A      0       0      52        0.0%
BITBIGSFRlllll      26      0       0      57        0.0%
BITBIGSFRlllhhh     1E      0       0      46        0.0%
BITBIGSFRhhhlll     1D      0       0      37        0.0%
BITBIGSFRlllhhh     11      0       0      47        0.0%
BITBIGSFRhhhlhh      E      0       0      34        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhll      9      0       0      54        0.0%
BITBIGSFRlllhll      9      0       0      53        0.0%
BITBIGSFRhlllll      8      0       0      43        0.0%
BITBIGSFRllllh       6      0       0      56        0.0%
BITBIGSFRlllhll      6      0       0      51        0.0%
BITBIGSFRlllhlh      5      0       0      50        0.0%
BITBIGSFRlllhll      5      0       0      55        0.0%
BITBIGSFRlllhhl      3      0       0      49        0.0%
BITBIGSFRhllllh      2      0       0      41        0.0%
BITBIGSFRhhhllh      2      0       0      36        0.0%
BITBIGSFRhhhlhl      1      0       0      35        0.0%
BITBIGSFRlllhhh      1      0       0      48        0.0%
BITBIGSFRhllh        1      0       0      39        0.0%
BITBIGSFRhlhh        1      0       0      38        0.0%
BITBIGSFRlh          1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F4      58        0.0%
DATA                 0      0     1F4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Dec 06 03:07:17 2022

               _color_read_Red 3CE8                   ___fldiv@aexp 004E                   ___fldiv@bexp 004D  
                 ___fldiv@sign 0046                _color_read_Blue 3DD8                             l22 41B2  
                           l31 3E26                             l25 3D36                             l34 3DD6  
                           l19 4062                             l28 3D86                             l37 3BEE  
                           l70 4192                             l64 4116                             l73 4226  
                           l82 4208                             l67 416C                             l76 4212  
                           l85 3F80                             l79 421C               _color_read_Clear 3D88  
             _color_read_Green 3D38                            l303 4140                            l312 4092  
                          l306 41E4                            l316 41CC                            l263 40C0  
                          l442 343C                            l602 3FF8                            l196 3AB0  
                          l199 3E70                            l455 35A0                            l625 36A6  
                          l910 2966                            l912 27C6                            l921 280C  
                          l593 3764                            l923 2884                            l915 278A  
                          l587 3A1C                            l924 2872                            l598 37AA  
                          l942 2268                            l951 24D6                            l952 24C4  
                          l856 1A2C                            l873 1B46                            l865 1CFC  
                          l857 1A1A                            l946 25CC                            l882 1C16  
                          l858 19E0                            l883 1C04                            l949 245E  
                          l990 31F0                            l983 3158                            l959 258E  
                          l986 32B4                            l898 3EB6                            l997 324C  
                          _abs 3F82                            _pad 3AB2           __end_of_LRmotorsInit 3E72  
                          wreg 000FE8                   ___flmul@aexp 002E                   ___flmul@bexp 002F  
                 ___flmul@sign 0029                   ___flmul@temp 0034                   ___flmul@prod 0030  
                 ___fltol@exp1 000E                           l1006 3C96                           l1120 2C6C  
                         l1105 161E                           l1042 3B2A                           l1050 2D48  
                         ?_abs 0017                           l1061 2EEA                           l1206 3F3E  
                         l1038 3AD4                           l1142 3C44                           l1047 2CFA  
                         l1215 3EFA                           l1160 3FC0                           l1152 38A8  
                         l1072 183C                           l1209 4228                           l1049 2D02  
                         l3001 1AAA                           l3011 1B16                           l3003 1AB4  
                         l1075 11D6                           l1180 3B90                           l3101 32FA  
                         l1157 3FB8                           l3013 1B26                           l3005 1ABA  
                         l1077 101C                           l1166 3100                           l3111 3350  
                         l3103 331A                           l3031 1BA8                           l3023 1B80  
                         l3007 1AE0                           l3015 1B36                           l3121 33D2  
                         l3113 3364                           l3105 331E                           l3201 2670  
                         l3033 1BB0                           l3025 1B8A                           l3017 1B5C  
                         l3009 1B14                           l3041 1BD4                           l1169 3044  
                         l1177 3B80                           l1186 3CE6                           l3131 341C  
                         l3123 33D4                           l3115 3372                           l3107 332A  
                         l3211 26B0                           l3203 2680                           l3051 1C26  
                         l3043 1BD8                           l3035 1BB4                           l3027 1B98  
                         l3019 1B6C                           l4021 4102                           l4013 40EE  
                         l4101 40A4                           l3125 33E6                           l3117 3384  
                         l3109 3348                           l3141 3470                           l3301 295C  
                         l3213 26C0                           l3221 26E0                           l3205 2682  
                         l3061 1C8C                           l3053 1C32                           l3045 1BE6  
                         l3037 1BC4                           l3029 1B9A                           l1198 3972  
                         l4023 4104                           l4015 40F8                           l4111 40B6  
                         l4103 40A6                           l3119 33B2                           l3127 33EC  
                         l3151 34C8                           l3143 3474                           l3135 343E  
                         l3231 271E                           l3223 26F0                           l3215 26C8  
                         l3207 268A                           l3311 21B0                           l3071 1CD4  
                         l3063 1C9C                           l3055 1C40                           l3047 1BFC  
                         l3039 1BC6                           l4201 31A6                           l4017 40FE  
                         l4025 4196                           l4041 3E1E                           l4033 3D38  
                         l4121 3A1E                           l4113 40B8                           l4105 40A8  
                         l3129 33FC                           l3161 354A                           l3153 34DC  
                         l3145 3482                           l3137 3442                           l3241 2766  
                         l3233 272E                           l3225 26F0                           l3217 26CC  
                         l3209 269A                           l3401 2480                           l3321 21F0  
                         l3313 21BE                           l3073 1CD6                           l3065 1CBC  
                         l3057 1C7A                           l4211 322E                           l4203 31D8  
                         l4019 4100                           l4035 3D7E                           l4027 3CE8  
                         l4051 3E28                           l4131 3A88                           l4123 3A2E  
                         l4115 40BA                           l4107 40B2                           l3091 32B6  
                         l3155 34EA                           l3163 3550                           l3147 34A2  
                         l3139 3450                           l3083 3EFC                           l3251 27B4  
                         l3243 277A                           l3235 273E                           l3171 25CE  
                         l3411 24F2                           l3403 248E                           l3331 2220  
                         l3323 21F6                           l3315 21C0                           l3075 1CDC  
                         l3067 1CC0                           l3059 1C7C                           l4061 411A  
                         l4221 3284                           l4213 323C                           l4205 31DA  
                         l4045 3D88                           l4029 3D2E                           l4053 3E34  
                         l4141 3AAA                           l4133 3A92                           l4125 3A58  
                         l4117 40BC                           l4109 40B4                           l3093 32BA  
                         l3165 3560                           l3157 3518                           l3149 34C0  
                         l3085 3F08                           l3261 27FC                           l3253 27C4  
                         l3245 2788                           l3237 274E                           l3229 2704  
                         l3181 260A                           l3173 25DA                           l3421 255C  
                         l3413 2500                           l3405 24BC                           l3341 2258  
                         l3333 2222                           l3325 2206                           l3317 21D0  
                         l3309 21A4                           l3077 1CEA                           l3069 1CCE  
                         l3501 35F8                           l4063 412A                           l4223 3294  
                         l4215 325A                           l4207 31E6                           l4039 3DD8  
                         l4047 3DCE                           l4055 3E3C                           l4143 3AAC  
                         l4135 3A94                           l4127 3A7C                           l4119 40BE  
                         l3095 32C8                           l3167 3580                           l3159 3538  
                         l3087 3F1A                           l3271 283C                           l3263 280A  
                         l3255 27D6                           l3247 2794                           l3239 2756  
                         l3191 263A                           l3183 261A                           l3175 25E8  
                         l3431 25B2                           l3423 2576                           l3415 252A  
                         l3351 22A8                           l3343 2278                           l3335 2232  
                         l3327 220C                           l3319 21E0                           l3079 1CEC  
                         l3503 3608                           l4065 412E                           l4161 4076  
                         l4225 32A2                           l4217 325C                           l4209 3222  
                         l4057 3E58                           l4137 3A9E                           l4129 3A86  
                         l3097 32E8                           l3089 3F1E                           l3281 28AE  
                         l3273 286A                           l3257 27EC                           l3265 281C  
                         l3249 27B2                           l3193 2640                           l3185 261C  
                         l3177 25EA                           l3425 2592                           l3433 25B8  
                         l3409 24E6                           l3417 252E                           l3361 22F8  
                         l3353 22B2                           l3345 2288                           l3337 2242  
                         l3329 2212                           l3441 3E82                           l3513 3632  
                         l3505 360C                           l4067 413E                           l4163 407A  
                         l4227 32A4                           l4219 3260                           l4091 4058  
                         l4083 4030                           l4059 3E60                           l4139 3AA0  
                         l3099 32EC                           l3291 2926                           l3283 28D8  
                         l3267 282A                           l3259 27F2                           l3195 264E  
                         l3179 25FA                           l3187 2624                           l3451 39E0  
                         l3435 25BC                           l3427 25A2                           l3419 2548  
                         l3371 233A                           l3363 2304                           l3355 22C8  
                         l3339 2252                           l3531 3696                           l3523 365A  
                         l3515 363C                           l3507 361A                           l3611 3C98  
                         l5043 2AD8                           l4157 4064                           l4085 4034  
                         l4093 3B92                           l4069 41CE                           l4165 41B4  
                         l3541 3AE0                           l3293 2942                           l3277 2894  
                         l3285 28DC                           l3269 282E                           l3197 2650  
                         l3189 2634                           l3453 39F0                           l3445 3974  
                         l3461 36A8                           l3429 25B0                           l3381 239C  
                         l3373 234A                           l3365 2312                           l3357 22D4  
                         l3349 229C                           l2901 18AA                           l3525 3666  
                         l3517 3646                           l3613 3CAC                           l3621 3CCC  
                         l4501 0E4A                           l5045 2B96                           l4159 4068  
                         l4191 3168                           l3623 416C                           l4087 403E  
                         l4095 4094                           l4167 41C8                           l3551 3F9C  
                         l3543 3AF4                           l3535 3AB2                           l3631 2CA2  
                         l3295 2946                           l3287 28F6                           l3279 28A0  
                         l3199 2660                           l3455 3A14                           l3447 39A2  
                         l3471 3732                           l3463 36D6                           l3391 2444  
                         l3383 23B8                           l3375 2364                           l3367 231E  
                         l3359 22EC                           l2911 18D4                           l2903 18BC  
                         l3439 3E72                           l3527 3676                           l3615 3CB8  
                         l4511 0E9A                           l4503 0E5A                           l5047 2C20  
                         l4193 317E                           l4185 3104                           l3625 417C  
                         l4089 404E                           l4097 409A                           l3545 3AF8  
                         l3537 3AC0                           l3641 2D1A                           l3633 2CB2  
                         l3297 2954                           l3289 290C                           l3457 3A1A  
                         l3449 39B2                           l3473 3744                           l3465 36E6  
                         l3393 244E                           l3385 23E2                           l3377 2374  
                         l3369 232E                           l2913 18E4                           l2921 190E  
                         l2905 18BE                           l3529 3686                           l3561 383E  
                         l3553 37AC                           l3617 3CBC                           l4601 122E  
                         l4521 0ED6                           l4513 0EA2                           l4505 0E68  
                         l4187 3114                           l4099 40A2                           l3547 3B16  
                         l3539 3ACC                           l3651 2D50                           l3643 2D20  
                         l3635 2CD2                           l3627 2C6E                           l3299 295A  
                         l3475 3752                           l3467 3714                           l3395 245C  
                         l3387 2418                           l3379 2390                           l3483 3FC2  
                         l2931 1946                           l2923 191E                           l2915 18F4  
                         l2907 18C4                           l3491 35A2                           l3571 38A0  
                         l3555 37CC                           l3619 3CC8                           l4611 1278  
                         l4603 1246                           l4531 0F1C                           l4515 0EB2  
                         l4523 0EDA                           l4507 0E6C                           l4197 3192  
                         l4189 3122                           l3901 421E                           l3549 3F82  
                         l3661 2DEE                           l3653 2D5A                           l3645 2D30  
                         l3637 2CEE                           l3629 2C8E                           l3477 37A2  
                         l3469 3724                           l3397 246E                           l3389 2426  
                         l3485 3FD8                           l2941 195A                           l2933 194A  
                         l2925 1930                           l2917 1904                           l2909 18D2  
                         l3493 35B8                           l3557 380A                           l3565 384A  
                         l3581 3B4A                           l4701 1780                           l4613 128C  
                         l4621 1382                           l4605 1258                           l4533 0F24  
                         l4525 0F00                           l4541 0F66                           l4517 0EC2  
                         l4509 0E90                           ?_pad 0015                           l4199 319A  
                         l3903 4222                           l3911 4218                           l2871 38CE  
                         l3671 2EB4                           l3655 2D60                           l3663 2E52  
                         l3647 2D3C                           l3639 2D0A                           l3479 37A8  
                         l3399 247C                           l3487 3FE8                           l2951 196E  
                         l2943 195E                           l2935 194E                           l2927 193E  
                         l2919 1906                           l3567 385C                           l3559 3832  
                         l4471 2EEC                           l3575 3EB8                           l4711 17EE  
                         l4703 1788                           l4631 144E                           l4623 13A0  
                         l4615 12F0                           l4607 1260                           l4551 0FB0  
                         l4543 0F8C                           l4535 0F3C                           l4527 0F12  
                         l4519 0ECE                           l3905 4200                           l3921 3F4E  
                         l3913 420A                           l2873 38D8                           l3673 2EBA  
                         l3665 2E6C                           l3657 2DE2                           l3649 2D44  
                         l2961 1982                           l2953 1972                           l2945 1962  
                         l2937 1952                           l2929 1942                           l2881 183E  
                         l3497 35CC                           l4473 2F0C                           l3577 3EC8  
                         l4713 17FE                           l4705 1798                           l4641 14FE  
                         l4633 145E                           l4625 13D4                           l4617 1348  
                         l4609 1268                           l4561 0FE6                           l4545 0F9E  
                         l4537 0F46                           l4529 0F16                           l4721 2968  
                         l3907 4204                           l3923 3F56                           l3915 420E  
                         l2875 38F6                           l2867 38AA                           l3675 2ECA  
                         l3667 2E8A                           l3659 2DE8                           l2971 19FA  
                         l2963 19AC                           l2955 1976                           l2947 1966  
                         l2939 1956                           l2891 187A                           l2883 184A  
                         l3499 35F6                           l4491 30B8                           l4483 2FF8  
                         l4475 2F64                           l3579 3B2C                           l4715 1814  
                         l4707 17C8                           l4651 1562                           l4643 1532  
                         l4635 146E                           l4627 1406                           l4619 137C  
                         l4571 10A4                           l4547 0FA2                           l4731 29C0  
                         l4723 2990                           l4803 3BF0                           l3909 4214  
                         l3925 3F7C                           l3917 3F42                           l2877 392C  
                         l2869 38BC                           l3669 2EA4                           l2981 1A3A  
                         l2973 19FE                           l2965 19C8                           l2957 197A  
                         l2949 196A                           l2893 188A                           l2885 1858  
                         l4493 30E0                           l4485 3034                           l4477 2F78  
                         l4717 181C                           l4709 17D6                           l4661 1614  
                         l4653 1568                           l4645 1546                           l4637 14A2  
                         l4629 141C                           l4581 1164                           l4573 10D6  
                         l4565 102C                           l4549 0FA8                           l4741 2A86  
                         l4733 29E0                           l4725 299E                           l4805 3BFC  
                         l4821 3C84                           l4813 3C46                           l4901 1DAA  
                         l3927 3F7E                           l3919 3F46                           l2991 1A7C  
                         l2983 1A4A                           l2975 1A0C                           l2967 19D8  
                         l2959 197E                           l2895 188C                           l2887 185A  
                         l4495 30F0                           l4479 2F86                           l4487 3068  
                         l4671 1658                           l4663 1630                           l4655 1570  
                         l4639 14F8                           l4647 154A                           l4591 11FA  
                         l4575 1114                           l4567 1032                           l4559 0FCC  
                         l4743 2A96                           l4735 2A00                           l4727 29AC  
                         l4807 3C1A                           l4815 3C58                           l4911 1E58  
                         l4903 1DBA                           l4831 1D12                           l2993 1A8A  
                         l2977 1A0E                           l2969 19EE                           l2889 186A  
                         l2897 1894                           l4489 30A4                           l4673 1660  
                         l4665 163E                           l4681 1680                           l4657 157C  
                         l4649 155A                           l4593 1202                           l4577 1128  
                         l4585 11A4                           l4569 1066                           l4745 2AAC  
                         l4753 2AC4                           l4737 2A56                           l4729 29B0  
                         l4809 3C3A                           l4817 3C60                           l4921 1F68  
                         l4913 1E64                           l4905 1DC6                           l4841 1D1C  
                         l4833 1D14                           l4825 1CFE                           l2995 1A96  
                         l2987 1A5E                           l2979 1A18                           l2899 18A4  
                         l4691 1706                           l4683 1692                           l4675 1670  
                         l4667 164E                           l4659 15F4                           l4595 120A  
                         l4587 11DE                           l4579 115C                           l4499 0E44  
                         l4763 2B82                           l4747 2AB4                           l4755 2AF6  
                         l4819 3C68                           l4931 2064                           l4923 1F74  
                         l4915 1E68                           l4907 1DEC                           l4851 1D26  
                         l4843 1D1E                           l4835 1D16                           l4827 1D02  
                         l2997 1A9A                           l2989 1A6E                           l4693 173A  
                         l4685 16A4                           l4677 1674                           l4669 1652  
                         l4597 120E                           l4589 11EE                           l4773 2BFE  
                         l4765 2BAC                           l4757 2B1A                           l4749 2ABC  
                         l4941 2160                           l4933 2070                           l4925 1F78  
                         l4917 1E7A                           l4909 1E32                           l4861 1D30  
                         l4853 1D28                           l4845 1D20                           l4837 1D18  
                         l4829 1D06                           l2999 1AA8                           l4695 1742  
                         l4687 16A8                           l4679 167A                           l4599 1220  
                         l4767 2BCC                           l4759 2B4E                           l4775 2C2E  
                         l4943 216C                           l4935 2074                           l4927 1F8A  
                         l4919 1F2E                           l4871 1D3A                           l4863 1D32  
                         l4855 1D2A                           l4847 1D22                           l4839 1D1A  
                         l4689 16AE                           l4697 1746                           l4945 2170  
                         l4937 2086                           l4929 203E                           l4881 1D52  
                         l4873 1D3C                           l4865 1D34                           l4857 1D2C  
                         l4849 1D24                           l4699 1764                           l4779 2C40  
                         l4947 2182                           l4939 213A                           l4891 1D72  
                         l4883 1D5A                           l4875 1D3E                           l4867 1D36  
                         l4859 1D2E                           l4893 1D7A                           l4885 1D62  
                         l4877 1D40                           l4869 1D38                           l4895 1D7A  
                         l4887 1D62                           l4879 1D4A                           l4897 1D8A  
                         l4889 1D6A                           l4899 1D9A                           STR_1 0E33  
                         STR_2 0E1C                           STR_3 0E28                           STR_4 0E10  
                         STR_5 0E01                           STR_6 0E3B                           STR_9 0E3F  
                         u2200 38BC                           u3000 21BE                           u2201 38B8  
                         u3001 21BA                           u2210 38CE                           u3010 21D0  
                         u2211 38CA                           u3011 21CC                           u2220 38F6  
                         u3100 247C                           u3020 21E0                           u2300 18F4  
                         u2221 38F2                           u3101 2478                           u3021 21DC  
                         u2301 18F0                           u2230 392C                           u3110 248E  
                         u3030 2220                           u2310 1930                           u2231 3928  
                         u3111 248A                           u3031 221C                           u2311 192C  
                         u3200 39E0                           u3120 24BC                           u3040 2232  
                         u2400 1A4A                           u2320 193E                           u2240 1858  
                 _BAUD4CONbits 000EE9                           u3201 39DC                           u3121 24B8  
                         u3041 222E                           u2401 1A46                           u2321 193A  
                         u2241 1854                           u3210 3A14                           u3130 24D2  
                         u3050 2242                           u2410 1A7C                           u2330 19AC  
                         u2250 186A                           u3211 3A10                           u3131 24CE  
                         u3051 223E                           u2411 1A78                           u2331 19A8  
                         u2251 1866                           u4020 3F6A                           u4100 41E4  
                         u3220 36D6                           u3140 24E6                           u3060 2278  
                         u2500 1BC4                           u2420 1A8A                           u2340 19C4  
                         u2260 187A                           u3300 361A                           u4021 3F62  
                         u3221 36D2                           u3141 24E2                           u3061 2274  
                         u2501 1BC0                           u2421 1A86                           u2341 19BE  
                         u2261 1876                           u3301 3616                           u3230 3714  
                         u3150 2500                           u3070 2288                           u2510 1BD4  
                         u2430 1AA8                           u2350 19C6                           u2270 18BC  
                         u3310 362E                           u3231 3710                           u3151 24FC  
                         u3071 2284                           u2511 1BD0                           u2431 1AA4  
                         u2271 18B8                           u3311 362A                           u4120 4092  
                         u4200 321E                           u3240 3732                           u3160 2548  
                         u3080 2402                           u2600 1CBC                           u2520 1BE6  
                         u2440 1AE0                           u2360 19EE                           u2280 18D2  
                         u3320 3656                           u3400 3832                           u4121 408E  
                         u4201 321A                           u3241 372E                           u3161 2544  
                         u2601 1CB8                           u2521 1BE2                           u2441 1ADC  
                         u2361 19EA                           u2281 18CE                           u3321 3652  
                         u3401 382E                           u4210 323C                           u4130 41C8  
                         u3250 3752                           u3170 2576                           u3090 245C  
                         u2610 1CCE                           u2530 1BFC                           u2450 1B26  
                         u2370 1A0C                           u2290 18E4                           u3330 3676  
                         u3410 385C                           _T2PR 000FBC                           u4211 3238  
                         u4131 41C4                           u3251 374E                           u3171 2572  
                         u3091 2458                           u2611 1CCA                           u2531 1BF8  
                         u2451 1B22                           u2371 1A08                           u2291 18E0  
                         u3331 3672                           u3411 3858                           u4220 324C  
                         u2700 33FC                           u3260 37A2                           u3180 25B0  
                         u2620 1CEA                           u2540 1C12                           u2460 1B5C  
                         u2380 1A2C                           u3340 3686                           u4221 3248  
                         u2701 33F8                           u3261 379E                           u3181 25AC  
                         u3085 23F8                           u2621 1CE6                           u2541 1C0E  
                         u2461 1B58                           u2381 1A28                           u3341 3682  
                         u4230 325A                           u4038 3F6C                           u2710 3450  
                         u2630 3F3E                           u3350 3AC0                           u3190 39A2  
                         u3270 3FD8                           u2550 1C26                           u2470 1B6C  
                         u2390 1A3A                           u3430 3896                           u4231 3256  
                         u2711 344C                           u2631 3F3A                           u3351 3ABC  
                         u3191 399E                           u3271 3FD4                           u2551 1C22  
                         u2471 1B68                           u2391 1A36                           u3431 3890  
                         u4080 412A                           u4240 3294                           u4160 3114  
                         u2640 32C8                           u2720 3482                           u3360 3B16  
                         u3600 2C9E                           u2800 264E                           u2560 1C40  
                         u2480 1B98                           u3280 35B8                           u3440 3898  
                         u4400 3088                           u4081 4126                           u4241 3290  
                         u4161 3110                           u2641 32C4                           u2721 347E  
                         u3361 3B12                           u3601 2C98                           u2801 264A  
                         u2561 1C3C                           u2481 1B94                           u3281 35B4  
                         u3425 386E                           u4250 32A2                           u4170 3122  
                         u4090 41E2                           u2650 32FA                           u2730 34C0  
                         u3370 3F9C                           u3610 2CA0                           u2810 2660  
                         u2570 1C7A                           u2490 1BA8                           u3290 35EC  
                         u4410 30A4                           u4330 2F36                           u3450 3EFA  
                         u4251 329E                           u4171 311E                           u4091 41DC  
                         u2651 32F6                           u2731 34BC                           u3371 3F98  
                         u2811 265C                           u2571 1C76                           u2491 1BA4  
                         u4411 30A0                           u3451 3EF6                           u4180 317E  
                         u2740 34EA                           u3620 2CB2                           u2900 280A  
                         u2820 2670                           u2580 1C8C                           u3380 37EC  
                         u4420 30E0                           u4340 2F64                           u3460 3B4A  
                         u4500 1018                           u4181 317A                           u2661 3324  
                         u2741 34E6                           u3621 2CAE                           u2901 2806  
                         u2821 266C                           u2581 1C88                           u4421 30DC  
                         u4405 307E                           u4341 2F60                           u3461 3B46  
                         u4501 1014                           u4190 31D4                           u2670 3348  
                         u2750 3518                           u3630 2CEE                           u2910 282A  
                         u2830 26B0                           u2590 1C9C                           u3390 380A  
                         u4350 2F86                           u4510 10A4                           u4430 0E68  
                         u4191 31D0                           u2671 3344                           u2751 3514  
                         u3631 2CEA                           u2911 2826                           u2831 26AC  
                         u2591 1C98                           u3295 35E2                           u3391 3806  
                         u4351 2F82                           u4335 2F2C                           u4511 10A0  
                         u4431 0E64                           u2680 3372                           u2760 3560  
                         u3640 2D1A                           u2920 283C                           u2840 26F0  
                         u4600 13A0                           u4520 10D6                           u4440 0EB2  
                         u2681 336E                           u2761 355C                           u3641 2D16  
                         u2921 2838                           u2841 26EC                           u3385 37E2  
                         u4601 139C                           u4521 10D2                           u4441 0EAE  
                         u2690 33B2                           u3650 2D30                           u2930 286A  
                         u2850 2766                           u2770 25E8                           u4370 2FF4  
                         u3570 3CE6                           u4610 1406                           u4530 1114  
                         u4450 0EC2                           u2691 33AE                           u3651 2D2C  
                         u2931 2866                           u2851 2762                           u2771 25E4  
                         u4371 2FF0                           u3571 3CE2                           u4611 1402  
                         u4531 1110                           u4451 0EBE                           u3580 417C  
                         u3660 2E6C                           u2940 2880                           u2860 2788  
                         u2780 25FA                           u4380 3018                           u4700 1764  
                         u4620 144E                           u4540 11A0                           u4460 0F00  
                         u3581 4178                           u3661 2E68                           u2941 287C  
                         u2861 2784                           u2781 25F6                           u4365 2F9A  
                         u4701 1760                           u4621 144A                           u4541 119C  
                         u4461 0EFC                           u3590 4192                           u3670 2E8A  
                         u2950 2894                           u2870 27B2                           u2790 260A  
                         u4390 3034                           u4366 2FA4                           u4710 1780  
                         u4630 145E                           u4550 11D6                           u4470 0F12  
                         u3591 418E                           u3671 2E86                           u2951 2890  
                         u2871 27AE                           u2791 2606                           u4391 3030  
                         u4367 2FB4                           u4711 177C                           u4631 145A  
                         u4551 11D2                           u4471 0F0E                           u3680 2EA4  
                         u2960 28AE                           u2880 27D6                           u4720 17E8  
                         u4640 14F8                           u4560 11EE                           u4480 0F8C  
                         u4800 1DDA                           u3681 2EA0                           u2961 28AA  
                         u2881 27D2                           u4385 300E                           u4721 17E2  
                         u4641 14F4                           u4561 11EA                           u4481 0F88  
                         u4801 1DD0                           u3690 2EB4                           u2970 28F6  
                         u2890 27EC                           u4730 17EA                           u4650 1546  
                         u4570 1220                           u4490 0F9E                           u3691 2EB0  
                         u2971 28F2                           u2891 27E8                           u4651 1542  
                         u4571 121C                           u4491 0F9A                           u2980 2926  
                         u4740 17FE                           u4660 15F4                           u4580 122E  
                         u2981 2922                           u4741 17FA                           u4661 15F0  
                         u4581 122A                           u2990 2954                           u4670 1630  
                         u4590 1258                           u4750 2990                           u2991 2950  
                         u4671 162C                           u4591 1254                           u4751 298C  
                         u4680 163E                           u4760 29E0                           u4681 163A  
                         u4761 29DC                           u4690 1692                           u4770 2A00  
                         u4818 1DDE                           u4691 168E                           u4771 29FC  
                         u4827 1E70                           u4780 2B16                           u4781 2B12  
                         u4837 1F80                           u4790 3C3A                           u4791 3C36  
                         u4847 207C                           u4857 2178                           u4867 218E  
                         u4877 4044                           abs@a 0017                           _dbuf 0176  
                         _labs 3B2C                           _main 1CFE                           _dtoa 2C6E  
                         _prec 00F5                           pad@i 001C                           pad@p 0019  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001E                           fsr2l 000FD9  
                         btemp 005B                  ___fpclassifyf 37AC                           prodh 000FF4  
                         prodl 000FF3                           start 0076                ___fldiv@new_exp 0047  
                  main@string1 0100                    main@string2 0114                    main@string3 0128  
                  main@string4 013C         __end_of_color_read_Red 3D38                __end_of_HighISR 0076  
                 ___param_bank 000000                   main@ambientB 0162                   main@ambientG 0160  
                 main@ambientR 0164                   main@clearRef 016A                          ??_abs 0019  
                        ??_pad 001B                  ___fltol@sign1 000D                __end_of___aodiv 343E  
                        ?_labs 0005                __end_of___fladd 1CFE                          ?_main 0001  
                        ?_dtoa 0020                __end_of___aomod 35A2                __end_of___fldiv 2968  
              __end_of___flneg 3FFA                __end_of___flmul 25CE                __end_of___flsub 3EB8  
              __end_of___fltol 36A8                          i2l306 41FC                          i2l323 0066  
                        i2l325 006A                          i2l292 416A                          i2l299 40EC  
                 vfpfcnvrt@fmt 00A5     __end_of_I2C_2_Master_Start 4228     __end_of_I2C_2_Master_Write 420A  
                        _flags 00F7                          _fputc 38AA                          _fputs 3EFC  
                        labs@a 0005                          pad@fp 0015                          _width 00F3  
                        _putch 4228                          dtoa@d 0022                          dtoa@i 0040  
                        dtoa@n 0038                          dtoa@p 0034                          dtoa@s 0042  
                        dtoa@w 0036                          tablat 000FF5                          ttemp5 005C  
                        ttemp6 005F                          ttemp7 0063                          status 000FD8  
                        wtemp8 005C                __end_of_sprintf 3C98                 ?___fpclassifyf 0005  
      __end_of_color_read_Blue 3E28          _I2C_2_Master_RepStart 420A             putCharToRxBuf@byte 0001  
              ?_color_read_Red 0009                __initialization 3FFA                   __end_of_labs 3B92  
                 __end_of_main 21A4                   __end_of_dtoa 2EEC                i2_isDataInTxBuf 41E6  
           putCharToTxBuf@byte 0005                         ??_labs 0009                         ??_main 00D5  
                       ??_dtoa 002A                  __activetblptr 000003                         ?_fputc 0005  
                       ?_fputs 000E                         _CCPR1H 000FAA                         _CCPR2H 000FA6  
                       _CCPR3H 000F25                         _CCPR4H 000F21                         ?_putch 0001  
                       _RC0PPS 000E62                         _RC4REG 000EE3                         _RE2PPS 000E74  
                       _RD5PPS 000E6F                         _RC7PPS 000E69                         _RE4PPS 000E76  
                       _RD6PPS 000E70                         i2l2607 41E6                         i2l4171 4154  
                       i2l4181 40D6                         i2l4173 4158                         i2l4175 4168  
                       i2l4177 40C2                         i2l4169 4144                         i2l4179 40D2  
                       i2l4371 0022                         i2l4373 0028                         i2l4375 0038  
                       i2l4377 0046                         i2l4369 0012                         i2l4379 005A  
                       _RG6PPS 000E88                      ??_HighISR 0003       __end_of_color_click_init 4064  
                       _RX4PPS 000E15                         _TX4REG 000EE4               __end_of___xxtofl 32B6  
             __end_of_getColor 3BF0                   _CCPTMRS0bits 000FAD                   vfprintf@cfmt 00BA  
                       ___flge 36A8               _getCharFromTxBuf 40C2                         ___fleq 3974  
                    ??___aodiv 0015                      ??___fladd 000D                      ??___aomod 0015  
                    ??___fldiv 003E                      ??___flneg 0009                      ??___flmul 0025  
                    ??___flsub 001D                      ??___fltol 0009                         _efgtoa 0E44  
                       _floorf 2EEC                         _memcpy 3C98                         clear_0 4000  
                       clear_1 400C                         clear_2 4018                         isa$std 000001  
                       pad@buf 0017                         dtoa@fp 0020                         _strcpy 3EB8  
                       fputc@c 0005              ?_TxBufferedString 0006                         fputs@c 0012  
                       fputs@i 0013                         fputs@s 000E                ___fpclassifyf@e 000D  
              ___fpclassifyf@u 000F                ___fpclassifyf@x 0005                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
           ??_TxBufferedString 0008                         putch@c 0001               __end_of_vfprintf 3C46  
            ??_initDCmotorsPWM 0019                      ??_sprintf 0057                     ___flge@ff1 0036  
                   ___flge@ff2 003A                ??___fpclassifyf 0009                   ___xxtofl@arg 000F  
                 ___xxtofl@exp 000E                   ___xxtofl@val 0005                     ___fleq@ff1 0005  
                   ___fleq@ff2 0009          __end_of_isDataInTxBuf 41E6                     __accesstop 0060  
      __end_of__initialization 4026       __end_of_color_read_Clear 3DD8                     ___flneg@f1 0005  
     __end_of_color_read_Green 3D88         ?_I2C_2_Master_RepStart 0001        __end_ofi2_isDataInTxBuf 41FE  
                ___rparam_used 000001                     ___fltol@f1 0005               ?_color_read_Blue 0009  
                 _LRmotorsInit 3E28                 __pcstackCOMRAM 0001                  __end_of_fputc 3974  
                __end_of_fputs 3F40                  __end_of_putch 422A         LRmotorsInit@motorRight 000E  
                      ??_fputc 0009                        ??_fputs 0012                        ??_putch 0005  
                   __pbssBANK0 00D7                     __pbssBANK1 0176                     __pbssBANK2 0200  
            _color_writetoaddr 4194                   _T2CLKCONbits 000FBF                        ?___flge 0036  
                      ?___fleq 0005             ?_color_writetoaddr 0007                        ?_efgtoa 0070  
                      ?_floorf 004F                        ?_memcpy 0005            ??_color_writetoaddr 0008  
                      ?_strcpy 0005                      ?___xxtofl 0005                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5                      ?_getColor 0010                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5         color_writetoaddr@value 0007               ??_color_read_Red 000B  
                      _HighISR 0008      __end_of_color_writetoaddr 41B4               ?i2_isDataInTxBuf 0001  
           _I2C_2_Master_Start 421E                     _initUSART4 4094             _I2C_2_Master_Write 41FE  
                      __Hparam 0000                        __Lparam 0000              color_read_Red@tmp 000E  
                      ___aodiv 32B6                        ___fladd 183E                        ___aomod 343E  
                      ___fldiv 25CE                        ___flneg 3FC2                        ___flmul 21A4  
                      ___flsub 3E72                        ___fltol 35A2            ?_I2C_2_Master_Start 0001  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 00B4                   __psmallconst 0E00  
                      __pcinit 3FFA                        __ramtop 0E00                        __ptext0 1CFE  
                      __ptext1 3C46                        __ptext2 3BF0                        __ptext3 2968  
                      __ptext4 0E44                        __ptext5 3EB8                        __ptext6 3C98  
                      __ptext7 3B2C                        __ptext8 2EEC                        __ptext9 37AC  
                    _T2CONbits 000FBD                     ??___xxtofl 0009                      _T2HLTbits 000FBE  
                      efgtoa@c 0076                        efgtoa@d 0082                        efgtoa@e 0086  
                      efgtoa@f 0072                        efgtoa@g 0099                        efgtoa@h 0090  
                      efgtoa@i 008E                        efgtoa@l 0094                        efgtoa@m 0084  
                      efgtoa@n 009D                        efgtoa@p 0079                        efgtoa@t 007B  
                      efgtoa@u 009F                        efgtoa@w 0088                     ??_getColor 0012  
                _RxBufWriteCnt 005A       __end_of_getCharFromTxBuf 40EE                        _sprintf 3C46  
         ??_I2C_2_Master_Start 0006           ??_I2C_2_Master_Write 0006           end_of_initialization 4026  
            __end_of_sendTxBuf 41CE                        floorf@e 006A                        floorf@m 0066  
                      floorf@u 006C                        floorf@x 004F                        memcpy@d 000B  
                      memcpy@n 0009                        memcpy@s 000D                        fputc@fp 0007  
                      fputs@fp 0010              ?_color_click_init 0001             ??_color_click_init 0009  
            __end_of_vfpfcnvrt 2C6E                     efgtoa@mode 0080                     efgtoa@sign 0098  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 00A9                     ??_vfprintf 0057  
                      strcpy@d 000B                        strcpy@s 0009                _initDCmotorsPWM 3A1E  
                  ___fladd@grs 0014                     main@RGBVal 016E                  ___xxtofl@sign 000D  
                    _TRISAbits 000F81                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
                    _TRISHbits 000F88                    ___fldiv@grs 0049                    ___fldiv@rem 0042  
     color_writetoaddr@address 0008        ??_I2C_2_Master_RepStart 0006                    ___flmul@grs 002A  
                  _CCP1CONbits 000FAB              ?_color_read_Clear 0009                   _EUSART4RXbuf 00D7  
                 _EUSART4TXbuf 0200                    _CCP2CONbits 000FA7              ?_color_read_Green 0009  
                  _CCP3CONbits 000F26                    ?_initUSART4 0001                    _CCP4CONbits 000F22  
                   main@whiteB 0158                     main@whiteC 015C                     main@whiteG 0154  
                   main@whiteR 0150             ??_color_read_Clear 000B             ??_color_read_Green 000B  
               __end_of___flge 37AC                 __end_of___fleq 3A1E                    vfpfcnvrt@ap 00A7  
                  vfpfcnvrt@cp 00B2                    vfpfcnvrt@fp 00A3                 __end_of_efgtoa 183E  
               __end_of_floorf 3102                 __end_of_memcpy 3CE8                     floorf@F526 00EB  
               __end_of_strcpy 3EFC            color_read_Clear@tmp 000E            start_initialization 3FFA  
                  __end_of_abs 3FC2                    __end_of_pad 3B2C                  _TxBufWriteCnt 0058  
        __end_of___fpclassifyf 38AA            color_read_Green@tmp 000E        __end_of_initDCmotorsPWM 3AB2  
                  vfprintf@fmt 00B6                       ??___flge 003E                       ??___fleq 000D  
                     ??_efgtoa 0053                 _putCharToRxBuf 4142                 _putCharToTxBuf 4118  
                     ??_floorf 0060                       ??_memcpy 000B                       ??_strcpy 0009  
                    ___fladd@a 0009                      ___fladd@b 0005                      ___fldiv@a 003A  
                    ___fldiv@b 0036                      ___flmul@a 0021                      ___flmul@b 001D  
                  __pbssCOMRAM 0057                      ___flsub@a 0019                      ___flsub@b 0015  
                __pcstackBANK0 0060                  __pcstackBANK1 0100               ___aodiv@dividend 0005  
        LRmotorsInit@motorLeft 0005                       ?_HighISR 0001                    _efgtoa$2337 007D  
                    _main$2682 0166                      _dtoa$2306 0032         __end_of_putCharToRxBuf 416C  
       __end_of_putCharToTxBuf 4142                      __pintcode 0008                       ?___aodiv 0005  
                     ?___fladd 0005                       ?___aomod 0005                       ?___fldiv 0036  
             ___aodiv@quotient 0017                       ?___flneg 0005                       ?___flmul 001D  
                     ?___flsub 0015                       ?___fltol 0005         TxBufferedString@string 0006  
         I2C_2_Master_Read@ack 0007           I2C_2_Master_Read@tmp 0008                    __smallconst 0E00  
            _I2C_2_Master_Idle 416C              _I2C_2_Master_Init 40EE              _I2C_2_Master_Read 3F40  
            _I2C_2_Master_Stop 4214                   _RxBufReadCnt 0059             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
     initDCmotorsPWM@PWMperiod 0017                       ?_sprintf 00BC              ?_getCharFromTxBuf 0001  
           ??_getCharFromTxBuf 0001            ??_I2C_2_Master_Idle 0005            ??_I2C_2_Master_Init 0005  
          ??_I2C_2_Master_Read 0006                       _LATAbits 000F79            ??_I2C_2_Master_Stop 0006  
                     _LATCbits 000F7B                  _isDataInTxBuf 41CE                       _LATDbits 000F7C  
                     _LATEbits 000F7D                       _LATFbits 000F7E               _TxBufferedString 4064  
                     _LATGbits 000F7F                       _LATHbits 000F80                      _sendTxBuf 41B4  
                     _IPR4bits 000E23                       _PIE4bits 000E2D                       i2u210_40 41FA  
                     i2u210_41 41F4                       i2u211_40 41FC                      getColor@v 0010  
                     i2u414_40 4154                       i2u430_40 0038                       i2u414_41 4150  
                     i2u430_41 0034                       i2u415_40 40D2                       i2u431_40 0046  
                     i2u415_41 40CE                       i2u431_41 0042                       i2u432_40 005A  
                     i2u432_41 0056                       i2u429_40 0022                       i2u429_41 001E  
                     _PIR4bits 000E37                ?_putCharToRxBuf 0001               ?_initDCmotorsPWM 0017  
              ?_putCharToTxBuf 0001                       _SSP2CON2 000EDA                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 2968      __end_of_I2C_2_Master_Idle 4194      __end_of_I2C_2_Master_Init 4118  
    __end_of_I2C_2_Master_Read 3F82      __end_of_I2C_2_Master_Stop 421E    I2C_2_Master_Write@data_byte 0006  
            ??_color_read_Blue 000B                   _TxBufReadCnt 0057                     vfpfcnvrt@c 00B1  
               ?_isDataInTxBuf 0001  __end_of_I2C_2_Master_RepStart 4214             color_read_Blue@tmp 000E  
                   ?_sendTxBuf 0001                   ??_initUSART4 0005                  ?_LRmotorsInit 0001  
                     __Hrparam 0000                      memcpy@tmp 000F                     vfprintf@ap 00B8  
                     __Lrparam 0000                     vfprintf@fp 00B4                     ?_vfpfcnvrt 00A3  
              ___aodiv@divisor 000D                ___aodiv@counter 0015                     _ANSELDbits 000EA7  
           ___fpclassifyf@F465 00EF                     sprintf@fmt 00BE                       ___xxtofl 3102  
           __end_of_initUSART4 40C2                       _getColor 3B92                       __ptext10 35A2  
                     __ptext11 3E72                       __ptext20 3EFC                       __ptext12 183E  
                     __ptext21 38AA                       __ptext13 3FC2                       __ptext30 3E28  
                     __ptext22 4228                       __ptext14 21A4                       __ptext31 3B92  
                     __ptext23 3F82                       __ptext15 36A8                       __ptext40 41FE  
                     __ptext32 3CE8                       __ptext24 343E                       __ptext16 3974  
                     __ptext41 4214                       __ptext33 3D38                       __ptext25 32B6  
                     __ptext17 25CE                       __ptext50 4142                       __ptext42 421E  
                     __ptext34 3D88                       __ptext26 41B4                       __ptext18 2C6E  
                     __ptext51 40C2                       __ptext43 416C                       __ptext35 3DD8  
                     __ptext27 41CE                       __ptext19 3AB2                       __ptext44 40EE  
                     __ptext36 420A                       __ptext28 4094                       __ptext45 3102  
                     __ptext37 3F40                       __ptext29 3A1E                       __ptext46 4064  
                     __ptext38 4030                       __ptext47 4118                       __ptext39 4194  
                     __ptext49 41E6                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                   strcpy@dest 0005                 ??_LRmotorsInit 0005                       efgtoa@fp 0070  
                     efgtoa@ne 0077                       efgtoa@pp 007F                       efgtoa@ou 008A  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       int$flags 005B  
                     _vfprintf 3BF0               ___aomod@dividend 0005                     _INTCONbits 000FF2  
            ??i2_isDataInTxBuf 0001                       memcpy@d1 0005                       memcpy@s1 0007  
              ??_isDataInTxBuf 0005                       intlevel2 0000                      sprintf@ap 00C8  
                  ??_sendTxBuf 0005                      strcpy@src 0007                    efgtoa@nmode 0081  
              ___aomod@divisor 000D                    ??_vfpfcnvrt 0055                ___aomod@counter 0015  
             _color_click_init 4030       __end_of_TxBufferedString 4094                       sprintf@f 00CA  
                     sprintf@s 00BC                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
                ___fladd@signs 0011                     _TX4STAbits 000EE8                   ___aodiv@sign 0016  
                 ___fladd@aexp 0012                   ___fladd@bexp 0013               ??_putCharToRxBuf 0001  
             ??_putCharToTxBuf 0005                   ___aomod@sign 0016  

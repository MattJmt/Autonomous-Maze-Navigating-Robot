

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 15 09:33:08 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    81                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    82   000000                     
    83                           ; Version 2.35
    84                           ; Generated 05/05/2021 GMT
    85                           ; 
    86                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution. Publication is not required when
   100                           ;        this file is used in an embedded application.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18F67K40 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118   000000                     
   119                           	psect	idataBANK0
   120   004C80                     __pidataBANK0:
   121                           	callstack 0
   122                           
   123                           ;initializer for _reverse_time
   124   004C80  028A               	dw	650
   125                           
   126                           ;initializer for _turning_time90
   127   004C82  00A5               	dw	165
   128   000000                     _TX4REG	set	3812
   129   000000                     _RC4STAbits	set	3815
   130   000000                     _SP4BRGH	set	3814
   131   000000                     _TRISFbits	set	3974
   132   000000                     _LATFbits	set	3966
   133   000000                     _TRISDbits	set	3972
   134   000000                     _TRISGbits	set	3975
   135   000000                     _LATGbits	set	3967
   136   000000                     _LATEbits	set	3965
   137   000000                     _SSP2CON2bits	set	3802
   138   000000                     _RX4PPS	set	3605
   139   000000                     _SSP2CLKPPS	set	3612
   140   000000                     _SSP2DATPPS	set	3613
   141   000000                     _RC7PPS	set	3689
   142   000000                     _RE2PPS	set	3700
   143   000000                     _LATCbits	set	3963
   144   000000                     _LATDbits	set	3964
   145   000000                     _TRISAbits	set	3969
   146   000000                     _LATHbits	set	3968
   147   000000                     _TRISCbits	set	3971
   148   000000                     _TRISEbits	set	3973
   149   000000                     _PORTFbits	set	3982
   150   000000                     _TRISHbits	set	3976
   151   000000                     _T2PR	set	4028
   152   000000                     _T2CONbits	set	4029
   153   000000                     _CCPR2H	set	4006
   154   000000                     _CCPR1H	set	4010
   155   000000                     _RE4PPS	set	3702
   156   000000                     _RG6PPS	set	3720
   157   000000                     _RD5PPS	set	3695
   158   000000                     _ANSELDbits	set	3751
   159   000000                     _SSP2ADD	set	3798
   160   000000                     _SSP2CON1bits	set	3801
   161   000000                     _CCPR4H	set	3873
   162   000000                     _CCPR3H	set	3877
   163   000000                     _TMR0L	set	4051
   164   000000                     _TMR0H	set	4052
   165   000000                     _T0CON0bits	set	4053
   166   000000                     _T0CON1bits	set	4054
   167   000000                     _INTCONbits	set	4082
   168   000000                     _T2CLKCONbits	set	4031
   169   000000                     _T2HLTbits	set	4030
   170   000000                     _CCP1CONbits	set	4011
   171   000000                     _CCPTMRS0bits	set	4013
   172   000000                     _CCP2CONbits	set	4007
   173   000000                     _LATAbits	set	3961
   174   000000                     _CCP3CONbits	set	3878
   175   000000                     _CCP4CONbits	set	3874
   176   000000                     _RC4REG	set	3811
   177   000000                     _SP4BRGL	set	3813
   178   000000                     _TX4STAbits	set	3816
   179   000000                     _BAUD4CONbits	set	3817
   180   000000                     _SSP2CON2	set	3802
   181   000000                     _SSP2STAT	set	3800
   182   000000                     _ANSELFbits	set	3764
   183   000000                     _SSP2BUF	set	3797
   184   000000                     _IPR4bits	set	3619
   185   000000                     _PIE4bits	set	3629
   186   000000                     _PIR4bits	set	3639
   187   000000                     _RC0PPS	set	3682
   188   000000                     _RD6PPS	set	3696
   189                           
   190                           	psect	smallconst
   191   000E00                     __psmallconst:
   192                           	callstack 0
   193   000E00  00                 	db	0
   194   000E01                     STR_1:
   195   000E01  4B                 	db	75	;'K'
   196   000E02  3A                 	db	58	;':'
   197   000E03  25                 	db	37
   198   000E04  64                 	db	100	;'d'
   199   000E05  20                 	db	32
   200   000E06  49                 	db	73	;'I'
   201   000E07  3A                 	db	58	;':'
   202   000E08  25                 	db	37
   203   000E09  64                 	db	100	;'d'
   204   000E0A  20                 	db	32
   205   000E0B  43                 	db	67	;'C'
   206   000E0C  3A                 	db	58	;':'
   207   000E0D  25                 	db	37
   208   000E0E  64                 	db	100	;'d'
   209   000E0F  20                 	db	32
   210   000E10  54                 	db	84	;'T'
   211   000E11  3A                 	db	58	;':'
   212   000E12  25                 	db	37
   213   000E13  64                 	db	100	;'d'
   214   000E14  20                 	db	32
   215   000E15  0D                 	db	13
   216   000E16  00                 	db	0
   217   000E17  00                 	db	0	; dummy byte at the end
   218   000000                     
   219                           ; #config settings
   220                           
   221                           	psect	cinit
   222   00491A                     __pcinit:
   223                           	callstack 0
   224   00491A                     start_initialization:
   225                           	callstack 0
   226   00491A                     __initialization:
   227                           	callstack 0
   228                           
   229                           ; Initialize objects allocated to BANK0 (4 bytes)
   230                           ; load TBLPTR registers with __pidataBANK0
   231   00491A  0E80               	movlw	low __pidataBANK0
   232   00491C  6EF6               	movwf	tblptrl,c
   233   00491E  0E4C               	movlw	high __pidataBANK0
   234   004920  6EF7               	movwf	tblptrh,c
   235   004922  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   236   004924  6EF8               	movwf	tblptru,c
   237   004926  EE00  F0ED         	lfsr	0,__pdataBANK0
   238   00492A  EE10 F004          	lfsr	1,4
   239   00492E                     copy_data0:
   240   00492E  0009               	tblrd		*+
   241   004930  CFF5 FFEE          	movff	tablat,postinc0
   242   004934  50E5               	movf	postdec1,w,c
   243   004936  50E1               	movf	fsr1l,w,c
   244   004938  E1FA               	bnz	copy_data0
   245                           
   246                           ; Clear objects allocated to BANK1 (92 bytes)
   247   00493A  EE01  F09A         	lfsr	0,__pbssBANK1
   248   00493E  0E5C               	movlw	92
   249   004940                     clear_0:
   250   004940  6AEE               	clrf	postinc0,c
   251   004942  06E8               	decf	wreg,f,c
   252   004944  E1FD               	bnz	clear_0
   253                           
   254                           ; Clear objects allocated to BANK0 (29 bytes)
   255   004946  EE00  F0D0         	lfsr	0,__pbssBANK0
   256   00494A  0E1D               	movlw	29
   257   00494C                     clear_1:
   258   00494C  6AEE               	clrf	postinc0,c
   259   00494E  06E8               	decf	wreg,f,c
   260   004950  E1FD               	bnz	clear_1
   261                           
   262                           ; Clear objects allocated to COMRAM (4 bytes)
   263   004952  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   264   004954  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   265   004956  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   266   004958  6A57               	clrf	__pbssCOMRAM& (0+255),c
   267   00495A                     end_of_initialization:
   268                           	callstack 0
   269   00495A                     __end_of__initialization:
   270                           	callstack 0
   271   00495A  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   272   00495C  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   273   00495E  0100               	movlb	0
   274   004960  EF56  F00F         	goto	_main	;jump to C main() function
   275                           
   276                           	psect	bssCOMRAM
   277   000057                     __pbssCOMRAM:
   278                           	callstack 0
   279   000057                     _TxBufReadCnt:
   280                           	callstack 0
   281   000057                     	ds	1
   282   000058                     _TxBufWriteCnt:
   283                           	callstack 0
   284   000058                     	ds	1
   285   000059                     _RxBufReadCnt:
   286                           	callstack 0
   287   000059                     	ds	1
   288   00005A                     _RxBufWriteCnt:
   289                           	callstack 0
   290   00005A                     	ds	1
   291                           
   292                           	psect	bssBANK0
   293   0000D0                     __pbssBANK0:
   294                           	callstack 0
   295   0000D0                     _EUSART4RXbuf:
   296                           	callstack 0
   297   0000D0                     	ds	20
   298   0000E4                     _width:
   299                           	callstack 0
   300   0000E4                     	ds	2
   301   0000E6                     _prec:
   302                           	callstack 0
   303   0000E6                     	ds	2
   304   0000E8                     _off_period:
   305                           	callstack 0
   306   0000E8                     	ds	2
   307   0000EA                     _on_period:
   308                           	callstack 0
   309   0000EA                     	ds	2
   310   0000EC                     _flags:
   311                           	callstack 0
   312   0000EC                     	ds	1
   313                           
   314                           	psect	dataBANK0
   315   0000ED                     __pdataBANK0:
   316                           	callstack 0
   317   0000ED                     _reverse_time:
   318                           	callstack 0
   319   0000ED                     	ds	2
   320   0000EF                     _turning_time90:
   321                           	callstack 0
   322   0000EF                     	ds	2
   323                           
   324                           	psect	bssBANK1
   325   00019A                     __pbssBANK1:
   326                           	callstack 0
   327   00019A                     _EUSART4TXbuf:
   328                           	callstack 0
   329   00019A                     	ds	60
   330   0001D6                     _dbuf:
   331                           	callstack 0
   332   0001D6                     	ds	32
   333                           
   334                           	psect	cstackBANK3
   335   000300                     __pcstackBANK3:
   336                           	callstack 0
   337   000300                     main@counter_history:
   338                           	callstack 0
   339                           
   340                           ; 200 bytes @ 0x0
   341   000300                     	ds	200
   342                           
   343                           	psect	cstackBANK2
   344   000200                     __pcstackBANK2:
   345                           	callstack 0
   346   000200                     main@turn_history:
   347                           	callstack 0
   348                           
   349                           ; 200 bytes @ 0x0
   350   000200                     	ds	200
   351                           
   352                           	psect	cstackBANK1
   353   000100                     __pcstackBANK1:
   354                           	callstack 0
   355   000100                     return_home_turns@string1:
   356                           	callstack 0
   357                           
   358                           ; 150 bytes @ 0x0
   359   000100                     	ds	150
   360   000196                     return_home_turns@i:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x96
   364   000196                     	ds	2
   365   000198                     return_home_turns@k:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x98
   369   000198                     	ds	2
   370                           
   371                           	psect	cstackBANK0
   372   000060                     __pcstackBANK0:
   373                           	callstack 0
   374   000060                     ?_vfprintf:
   375                           	callstack 0
   376   000060                     ?_colorDetect:
   377                           	callstack 0
   378   000060                     vfprintf@fp:
   379                           	callstack 0
   380   000060                     colorDetect@clearRef:
   381                           	callstack 0
   382                           
   383                           ; 4 bytes @ 0x0
   384   000060                     	ds	2
   385   000062                     vfprintf@fmt:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x2
   389   000062                     	ds	2
   390   000064                     colorDetect@ambientRGBVal:
   391                           	callstack 0
   392   000064                     vfprintf@ap:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x4
   396   000064                     	ds	2
   397   000066                     ?_sprintf:
   398                           	callstack 0
   399   000066                     colorDetect@whiteRGBVal:
   400                           	callstack 0
   401   000066                     sprintf@s:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x6
   405   000066                     	ds	2
   406   000068                     colorDetect@mL:
   407                           	callstack 0
   408   000068                     sprintf@fmt:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x8
   412   000068                     	ds	2
   413   00006A                     colorDetect@mR:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0xA
   417   00006A                     	ds	2
   418   00006C                     colorDetect@whiteR:
   419                           	callstack 0
   420                           
   421                           ; 4 bytes @ 0xC
   422   00006C                     	ds	4
   423   000070                     colorDetect@whiteG:
   424                           	callstack 0
   425                           
   426                           ; 4 bytes @ 0x10
   427   000070                     	ds	2
   428   000072                     sprintf@ap:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x12
   432   000072                     	ds	2
   433   000074                     colorDetect@whiteB:
   434                           	callstack 0
   435   000074                     sprintf@f:
   436                           	callstack 0
   437                           
   438                           ; 11 bytes @ 0x14
   439   000074                     	ds	4
   440   000078                     colorDetect@ambientR:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x18
   444   000078                     	ds	2
   445   00007A                     colorDetect@ambientG:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x1A
   449   00007A                     	ds	2
   450   00007C                     colorDetect@ambientB:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x1C
   454   00007C                     	ds	2
   455   00007E                     colorDetect@colour_ref:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x1E
   459   00007E                     	ds	1
   460   00007F                     return_home_turns@turn_history:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x1F
   464   00007F                     	ds	1
   465   000080                     colorDetect@RGBVal:
   466                           	callstack 0
   467                           
   468                           ; 8 bytes @ 0x20
   469   000080                     	ds	1
   470   000081                     return_home_turns@counter_history:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x21
   474   000081                     	ds	2
   475   000083                     return_home_turns@index:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x23
   479   000083                     	ds	2
   480   000085                     return_home_turns@mL:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x25
   484   000085                     	ds	2
   485   000087                     return_home_turns@mR:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x27
   489   000087                     	ds	1
   490   000088                     colorDetect@redPrint:
   491                           	callstack 0
   492                           
   493                           ; 4 bytes @ 0x28
   494   000088                     	ds	1
   495   000089                     ??_return_home_turns:
   496                           
   497                           ; 1 bytes @ 0x29
   498   000089                     	ds	3
   499   00008C                     colorDetect@greenPrint:
   500                           	callstack 0
   501                           
   502                           ; 4 bytes @ 0x2C
   503   00008C                     	ds	4
   504   000090                     colorDetect@bluePrint:
   505                           	callstack 0
   506                           
   507                           ; 4 bytes @ 0x30
   508   000090                     	ds	4
   509   000094                     ??_main:
   510                           
   511                           ; 1 bytes @ 0x34
   512   000094                     	ds	3
   513   000097                     main@whiteC:
   514                           	callstack 0
   515                           
   516                           ; 4 bytes @ 0x37
   517   000097                     	ds	4
   518   00009B                     main@clearRef:
   519                           	callstack 0
   520                           
   521                           ; 4 bytes @ 0x3B
   522   00009B                     	ds	4
   523   00009F                     main@forwardCount:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x3F
   527   00009F                     	ds	2
   528   0000A1                     main@colorNum:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x41
   532   0000A1                     	ds	2
   533   0000A3                     main@RGBVal:
   534                           	callstack 0
   535                           
   536                           ; 8 bytes @ 0x43
   537   0000A3                     	ds	8
   538   0000AB                     main@carGo:
   539                           	callstack 0
   540                           
   541                           ; 1 bytes @ 0x4B
   542   0000AB                     	ds	1
   543   0000AC                     main@ambientRGBVal:
   544                           	callstack 0
   545                           
   546                           ; 8 bytes @ 0x4C
   547   0000AC                     	ds	8
   548   0000B4                     main@whiteRGBVal:
   549                           	callstack 0
   550                           
   551                           ; 8 bytes @ 0x54
   552   0000B4                     	ds	8
   553   0000BC                     main@index:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x5C
   557   0000BC                     	ds	2
   558   0000BE                     main@motorRight:
   559                           	callstack 0
   560                           
   561                           ; 9 bytes @ 0x5E
   562   0000BE                     	ds	9
   563   0000C7                     main@motorLeft:
   564                           	callstack 0
   565                           
   566                           ; 9 bytes @ 0x67
   567   0000C7                     	ds	9
   568                           
   569                           	psect	cstackCOMRAM
   570   000001                     __pcstackCOMRAM:
   571                           	callstack 0
   572   000001                     ??_getCharFromTxBuf:
   573   000001                     putCharToRxBuf@byte:
   574                           	callstack 0
   575   000001                     
   576                           ; 1 bytes @ 0x0
   577   000001                     	ds	2
   578   000003                     ??_HighISR:
   579                           
   580                           ; 1 bytes @ 0x2
   581   000003                     	ds	2
   582   000005                     ??_I2C_2_Master_Idle:
   583   000005                     ?___wmul:
   584                           	callstack 0
   585   000005                     ?___fladd:
   586                           	callstack 0
   587   000005                     ?___xxtofl:
   588                           	callstack 0
   589   000005                     ?___aodiv:
   590                           	callstack 0
   591   000005                     ?___aomod:
   592                           	callstack 0
   593   000005                     putCharToTxBuf@byte:
   594                           	callstack 0
   595   000005                     initDCmotorsPWM@PWMperiod:
   596                           	callstack 0
   597   000005                     DCmotorsInit@mL:
   598                           	callstack 0
   599   000005                     ___wmul@multiplier:
   600                           	callstack 0
   601   000005                     fputc@c:
   602                           	callstack 0
   603   000005                     ___fladd@b:
   604                           	callstack 0
   605   000005                     ___xxtofl@val:
   606                           	callstack 0
   607   000005                     ___aodiv@dividend:
   608                           	callstack 0
   609   000005                     ___aomod@dividend:
   610                           	callstack 0
   611                           
   612                           ; 8 bytes @ 0x4
   613   000005                     	ds	1
   614   000006                     ??_I2C_2_Master_Read:
   615   000006                     I2C_2_Master_Write@data_byte:
   616                           	callstack 0
   617   000006                     TxBufferedString@string:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x5
   621   000006                     	ds	1
   622   000007                     color_writetoaddr@value:
   623                           	callstack 0
   624   000007                     I2C_2_Master_Read@ack:
   625                           	callstack 0
   626   000007                     DCmotorsInit@mR:
   627                           	callstack 0
   628   000007                     ___wmul@multiplicand:
   629                           	callstack 0
   630   000007                     fputc@fp:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x6
   634   000007                     	ds	1
   635   000008                     color_writetoaddr@address:
   636                           	callstack 0
   637   000008                     I2C_2_Master_Read@tmp:
   638                           	callstack 0
   639                           
   640                           ; 1 bytes @ 0x7
   641   000008                     	ds	1
   642   000009                     ??_fputc:
   643   000009                     ??_color_click_init:
   644   000009                     ??___xxtofl:
   645   000009                     ?_color_read_Red:
   646                           	callstack 0
   647   000009                     ?_color_read_Green:
   648                           	callstack 0
   649   000009                     ?_color_read_Blue:
   650                           	callstack 0
   651   000009                     ?_color_read_Clear:
   652                           	callstack 0
   653   000009                     ___wmul@product:
   654                           	callstack 0
   655   000009                     ___fladd@a:
   656                           	callstack 0
   657                           
   658                           ; 4 bytes @ 0x8
   659   000009                     	ds	2
   660   00000B                     ??_color_read_Red:
   661   00000B                     ??_color_read_Green:
   662   00000B                     ??_color_read_Blue:
   663   00000B                     ??_color_read_Clear:
   664   00000B                     ?___lwdiv:
   665                           	callstack 0
   666   00000B                     ___lwdiv@dividend:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0xA
   670   00000B                     	ds	2
   671   00000D                     ??___fladd:
   672   00000D                     ___xxtofl@sign:
   673                           	callstack 0
   674   00000D                     ___lwdiv@divisor:
   675                           	callstack 0
   676   00000D                     ___aodiv@divisor:
   677                           	callstack 0
   678   00000D                     ___aomod@divisor:
   679                           	callstack 0
   680                           
   681                           ; 8 bytes @ 0xC
   682   00000D                     	ds	1
   683   00000E                     ___xxtofl@exp:
   684                           	callstack 0
   685   00000E                     color_read_Red@tmp:
   686                           	callstack 0
   687   00000E                     color_read_Green@tmp:
   688                           	callstack 0
   689   00000E                     color_read_Blue@tmp:
   690                           	callstack 0
   691   00000E                     color_read_Clear@tmp:
   692                           	callstack 0
   693   00000E                     fputs@s:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0xD
   697   00000E                     	ds	1
   698   00000F                     ___lwdiv@quotient:
   699                           	callstack 0
   700   00000F                     ___xxtofl@arg:
   701                           	callstack 0
   702                           
   703                           ; 4 bytes @ 0xE
   704   00000F                     	ds	1
   705   000010                     getColor@v:
   706                           	callstack 0
   707   000010                     fputs@fp:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0xF
   711   000010                     	ds	1
   712   000011                     ___lwdiv@counter:
   713                           	callstack 0
   714   000011                     ___fladd@signs:
   715                           	callstack 0
   716                           
   717                           ; 1 bytes @ 0x10
   718   000011                     	ds	1
   719   000012                     ___fladd@aexp:
   720                           	callstack 0
   721   000012                     fputs@c:
   722                           	callstack 0
   723   000012                     ambientCal@v:
   724                           	callstack 0
   725   000012                     whiteCal@v:
   726                           	callstack 0
   727   000012                     setMotorPWM@m:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x11
   731   000012                     	ds	1
   732   000013                     ___fladd@bexp:
   733                           	callstack 0
   734   000013                     fputs@i:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x12
   738   000013                     	ds	1
   739   000014                     ??_ambientCal:
   740   000014                     ??_whiteCal:
   741   000014                     ??_setMotorPWM:
   742   000014                     ___fladd@grs:
   743                           	callstack 0
   744                           
   745                           ; 1 bytes @ 0x13
   746   000014                     	ds	1
   747   000015                     ?___flsub:
   748                           	callstack 0
   749   000015                     ___aodiv@counter:
   750                           	callstack 0
   751   000015                     ___aomod@counter:
   752                           	callstack 0
   753   000015                     pad@fp:
   754                           	callstack 0
   755   000015                     ___flsub@b:
   756                           	callstack 0
   757                           
   758                           ; 4 bytes @ 0x14
   759   000015                     	ds	1
   760   000016                     setMotorPWM@posDuty:
   761                           	callstack 0
   762   000016                     ___aodiv@sign:
   763                           	callstack 0
   764   000016                     ___aomod@sign:
   765                           	callstack 0
   766   000016                     ambientCal@i:
   767                           	callstack 0
   768   000016                     whiteCal@i:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x15
   772   000016                     	ds	1
   773   000017                     ?_abs:
   774                           	callstack 0
   775   000017                     setMotorPWM@negDuty:
   776                           	callstack 0
   777   000017                     pad@buf:
   778                           	callstack 0
   779   000017                     abs@a:
   780                           	callstack 0
   781   000017                     ___aodiv@quotient:
   782                           	callstack 0
   783                           
   784                           ; 8 bytes @ 0x16
   785   000017                     	ds	1
   786   000018                     stop@mL:
   787                           	callstack 0
   788   000018                     forward@mL:
   789                           	callstack 0
   790   000018                     reverse@mL:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x17
   794   000018                     	ds	1
   795   000019                     ??_abs:
   796   000019                     pad@p:
   797                           	callstack 0
   798   000019                     ___flsub@a:
   799                           	callstack 0
   800                           
   801                           ; 4 bytes @ 0x18
   802   000019                     	ds	1
   803   00001A                     stop@mR:
   804                           	callstack 0
   805   00001A                     forward@mR:
   806                           	callstack 0
   807   00001A                     reverse@mR:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x19
   811   00001A                     	ds	1
   812   00001B                     ??_pad:
   813                           
   814                           ; 1 bytes @ 0x1A
   815   00001B                     	ds	1
   816   00001C                     ??_stop:
   817   00001C                     pad@i:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x1B
   821   00001C                     	ds	1
   822   00001D                     ?___flmul:
   823                           	callstack 0
   824   00001D                     ___flge@ff1:
   825                           	callstack 0
   826   00001D                     ___flmul@b:
   827                           	callstack 0
   828                           
   829                           ; 4 bytes @ 0x1C
   830   00001D                     	ds	1
   831   00001E                     turnLeft_90@mL:
   832                           	callstack 0
   833   00001E                     turnRight_90@mL:
   834                           	callstack 0
   835   00001E                     turn_180@mL:
   836                           	callstack 0
   837   00001E                     turnRight_135@mL:
   838                           	callstack 0
   839   00001E                     turnLeft_135@mL:
   840                           	callstack 0
   841   00001E                     pad@w:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x1D
   845   00001E                     	ds	2
   846   000020                     turnLeft_90@mR:
   847                           	callstack 0
   848   000020                     turnRight_90@mR:
   849                           	callstack 0
   850   000020                     turn_180@mR:
   851                           	callstack 0
   852   000020                     turnRight_135@mR:
   853                           	callstack 0
   854   000020                     turnLeft_135@mR:
   855                           	callstack 0
   856   000020                     dtoa@fp:
   857                           	callstack 0
   858                           
   859                           ; 2 bytes @ 0x1F
   860   000020                     	ds	1
   861   000021                     ___flge@ff2:
   862                           	callstack 0
   863   000021                     ___flmul@a:
   864                           	callstack 0
   865                           
   866                           ; 4 bytes @ 0x20
   867   000021                     	ds	1
   868   000022                     ??_turnRight_90:
   869   000022                     ??_turnLeft_90:
   870   000022                     ??_turn_180:
   871   000022                     ??_turnRight_135:
   872   000022                     ??_turnLeft_135:
   873   000022                     dtoa@d:
   874                           	callstack 0
   875                           
   876                           ; 8 bytes @ 0x21
   877   000022                     	ds	2
   878   000024                     reverseSquareRight@mL:
   879                           	callstack 0
   880   000024                     reverseSquareLeft@mL:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x23
   884   000024                     	ds	1
   885   000025                     ??___flmul:
   886   000025                     ??___flge:
   887                           
   888                           ; 1 bytes @ 0x24
   889   000025                     	ds	1
   890   000026                     reverseSquareRight@mR:
   891                           	callstack 0
   892   000026                     reverseSquareLeft@mR:
   893                           	callstack 0
   894                           
   895                           ; 2 bytes @ 0x25
   896   000026                     	ds	2
   897   000028                     ??_reverseSquareRight:
   898   000028                     ??_reverseSquareLeft:
   899                           
   900                           ; 1 bytes @ 0x27
   901   000028                     	ds	1
   902   000029                     ___flmul@sign:
   903                           	callstack 0
   904                           
   905                           ; 1 bytes @ 0x28
   906   000029                     	ds	1
   907   00002A                     ??_dtoa:
   908   00002A                     ___flmul@grs:
   909                           	callstack 0
   910                           
   911                           ; 4 bytes @ 0x29
   912   00002A                     	ds	4
   913   00002E                     ___flmul@aexp:
   914                           	callstack 0
   915                           
   916                           ; 1 bytes @ 0x2D
   917   00002E                     	ds	1
   918   00002F                     ___flmul@bexp:
   919                           	callstack 0
   920                           
   921                           ; 1 bytes @ 0x2E
   922   00002F                     	ds	1
   923   000030                     ___flmul@prod:
   924                           	callstack 0
   925                           
   926                           ; 4 bytes @ 0x2F
   927   000030                     	ds	2
   928   000032                     _dtoa$2664:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0x31
   932   000032                     	ds	2
   933   000034                     ___flmul@temp:
   934                           	callstack 0
   935   000034                     dtoa@p:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0x33
   939   000034                     	ds	2
   940   000036                     ?___fldiv:
   941                           	callstack 0
   942   000036                     dtoa@w:
   943                           	callstack 0
   944   000036                     ___fldiv@b:
   945                           	callstack 0
   946                           
   947                           ; 4 bytes @ 0x35
   948   000036                     	ds	2
   949   000038                     dtoa@n:
   950                           	callstack 0
   951                           
   952                           ; 8 bytes @ 0x37
   953   000038                     	ds	2
   954   00003A                     ___fldiv@a:
   955                           	callstack 0
   956                           
   957                           ; 4 bytes @ 0x39
   958   00003A                     	ds	4
   959   00003E                     ??___fldiv:
   960                           
   961                           ; 1 bytes @ 0x3D
   962   00003E                     	ds	2
   963   000040                     dtoa@s:
   964                           	callstack 0
   965                           
   966                           ; 1 bytes @ 0x3F
   967   000040                     	ds	1
   968   000041                     dtoa@i:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0x40
   972   000041                     	ds	1
   973   000042                     ___fldiv@rem:
   974                           	callstack 0
   975                           
   976                           ; 4 bytes @ 0x41
   977   000042                     	ds	1
   978   000043                     vfpfcnvrt@fp:
   979                           	callstack 0
   980                           
   981                           ; 2 bytes @ 0x42
   982   000043                     	ds	2
   983   000045                     vfpfcnvrt@fmt:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x44
   987   000045                     	ds	1
   988   000046                     ___fldiv@sign:
   989                           	callstack 0
   990                           
   991                           ; 1 bytes @ 0x45
   992   000046                     	ds	1
   993   000047                     ___fldiv@new_exp:
   994                           	callstack 0
   995   000047                     vfpfcnvrt@ap:
   996                           	callstack 0
   997                           
   998                           ; 2 bytes @ 0x46
   999   000047                     	ds	2
  1000   000049                     ??_vfpfcnvrt:
  1001   000049                     ___fldiv@grs:
  1002                           	callstack 0
  1003                           
  1004                           ; 4 bytes @ 0x48
  1005   000049                     	ds	2
  1006   00004B                     vfpfcnvrt@convarg:
  1007                           	callstack 0
  1008                           
  1009                           ; 8 bytes @ 0x4A
  1010   00004B                     	ds	2
  1011   00004D                     ___fldiv@bexp:
  1012                           	callstack 0
  1013                           
  1014                           ; 1 bytes @ 0x4C
  1015   00004D                     	ds	1
  1016   00004E                     ___fldiv@aexp:
  1017                           	callstack 0
  1018                           
  1019                           ; 1 bytes @ 0x4D
  1020   00004E                     	ds	1
  1021   00004F                     ??_colorDetect:
  1022                           
  1023                           ; 1 bytes @ 0x4E
  1024   00004F                     	ds	4
  1025   000053                     vfpfcnvrt@cp:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x52
  1029   000053                     	ds	2
  1030   000055                     vfprintf@cfmt:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x54
  1034   000055                     	ds	2
  1035   000057                     
  1036                           ; 1 bytes @ 0x56
  1037 ;;
  1038 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1039 ;;
  1040 ;; *************** function _main *****************
  1041 ;; Defined at:
  1042 ;;		line 23 in file "main.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;		None
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;  turn_history  200    0[BANK2 ] unsigned int [100]
  1047 ;;  counter_hist  200    0[BANK3 ] unsigned int [100]
  1048 ;;  motorLeft       9  103[BANK0 ] struct DC_motor
  1049 ;;  motorRight      9   94[BANK0 ] struct DC_motor
  1050 ;;  whiteRGBVal     8   84[BANK0 ] struct RGB
  1051 ;;  ambientRGBVa    8   76[BANK0 ] struct RGB
  1052 ;;  RGBVal          8   67[BANK0 ] struct RGB
  1053 ;;  clearRef        4   59[BANK0 ] struct RGB
  1054 ;;  whiteC          4   55[BANK0 ] struct RGB
  1055 ;;  index           2   92[BANK0 ] unsigned int 
  1056 ;;  colorNum        2   65[BANK0 ] unsigned int 
  1057 ;;  forwardCount    2   63[BANK0 ] unsigned int 
  1058 ;;  carGo           1   75[BANK0 ] unsigned char 
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  1    wreg      void 
  1061 ;; Registers used:
  1062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1069 ;;      Locals:         0      57       0     200     200       0       0       0       0       0       0       0       
      +0       0       0
  1070 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1071 ;;      Totals:         0      60       0     200     200       0       0       0       0       0       0       0       
      +0       0       0
  1072 ;;Total ram usage:      460 bytes
  1073 ;; Hardware stack levels required when called: 11
  1074 ;; This function calls:
  1075 ;;		_DCmotorsInit
  1076 ;;		___fldiv
  1077 ;;		___flge
  1078 ;;		___xxtofl
  1079 ;;		_ambientCal
  1080 ;;		_colorDetect
  1081 ;;		_color_click_init
  1082 ;;		_forward
  1083 ;;		_getColor
  1084 ;;		_initDCmotorsPWM
  1085 ;;		_initUSART4
  1086 ;;		_return_home_turns
  1087 ;;		_stop
  1088 ;;		_turn_180
  1089 ;;		_whiteCal
  1090 ;; This function is called by:
  1091 ;;		Startup code after reset
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           	psect	text0
  1096   001EAC                     __ptext0:
  1097                           	callstack 0
  1098   001EAC                     _main:
  1099                           	callstack 20
  1100   001EAC                     
  1101                           ;main.c: 25:     color_click_init();
  1102   001EAC  EC38  F025         	call	_color_click_init	;wreg free
  1103   001EB0                     
  1104                           ;main.c: 26:     initUSART4();
  1105   001EB0  ECE6  F025         	call	_initUSART4	;wreg free
  1106   001EB4                     
  1107                           ;main.c: 27:     initDCmotorsPWM(199);
  1108   001EB4  0E00               	movlw	0
  1109   001EB6  6E06               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1110   001EB8  0EC7               	movlw	199
  1111   001EBA  6E05               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1112   001EBC  ECAC  F022         	call	_initDCmotorsPWM	;wreg free
  1113   001EC0                     
  1114                           ;main.c: 32:     LATDbits.LATD7=0;
  1115   001EC0  9E7C               	bcf	124,7,c	;volatile
  1116   001EC2                     
  1117                           ;main.c: 33:     TRISDbits.TRISD7=0;
  1118   001EC2  9E84               	bcf	132,7,c	;volatile
  1119   001EC4                     
  1120                           ;main.c: 35:     LATHbits.LATH3=0;
  1121   001EC4  9680               	bcf	128,3,c	;volatile
  1122   001EC6                     
  1123                           ;main.c: 36:     TRISHbits.TRISH3=0;
  1124   001EC6  9688               	bcf	136,3,c	;volatile
  1125   001EC8                     
  1126                           ;main.c: 38:     LATDbits.LATD4 = 0;
  1127   001EC8  987C               	bcf	124,4,c	;volatile
  1128   001ECA                     
  1129                           ;main.c: 39:     TRISDbits.TRISD4 = 0;
  1130   001ECA  9884               	bcf	132,4,c	;volatile
  1131   001ECC                     
  1132                           ;main.c: 41:     LATHbits.LATH0 = 0;
  1133   001ECC  9080               	bcf	128,0,c	;volatile
  1134   001ECE                     
  1135                           ;main.c: 42:     TRISHbits.TRISH0 = 0;
  1136   001ECE  9088               	bcf	136,0,c	;volatile
  1137   001ED0                     
  1138                           ;main.c: 44:     LATFbits.LATF0 = 0;
  1139   001ED0  907E               	bcf	126,0,c	;volatile
  1140   001ED2                     
  1141                           ;main.c: 45:     TRISFbits.TRISF0 = 0;
  1142   001ED2  9086               	bcf	134,0,c	;volatile
  1143   001ED4                     
  1144                           ;main.c: 47:     LATHbits.LATH1 = 0;
  1145   001ED4  9280               	bcf	128,1,c	;volatile
  1146   001ED6                     
  1147                           ;main.c: 48:     TRISHbits.TRISH1 = 0;
  1148   001ED6  9288               	bcf	136,1,c	;volatile
  1149   001ED8                     
  1150                           ;main.c: 50:     LATDbits.LATD3 = 0;
  1151   001ED8  967C               	bcf	124,3,c	;volatile
  1152   001EDA                     
  1153                           ;main.c: 51:     TRISDbits.TRISD3 = 0;
  1154   001EDA  9684               	bcf	132,3,c	;volatile
  1155   001EDC                     
  1156                           ;main.c: 53:     LATDbits.LATD4 = 1;
  1157   001EDC  887C               	bsf	124,4,c	;volatile
  1158   001EDE                     
  1159                           ;main.c: 54:     LATFbits.LATF0 = 1;
  1160   001EDE  807E               	bsf	126,0,c	;volatile
  1161   001EE0                     
  1162                           ;main.c: 55:     LATHbits.LATH0 = 1;
  1163   001EE0  8080               	bsf	128,0,c	;volatile
  1164   001EE2                     
  1165                           ;main.c: 56:     LATFbits.LATF0 = 1;
  1166   001EE2  807E               	bsf	126,0,c	;volatile
  1167   001EE4                     
  1168                           ;main.c: 57:     LATDbits.LATD3 = 1;
  1169   001EE4  867C               	bsf	124,3,c	;volatile
  1170   001EE6                     
  1171                           ;main.c: 59:     LATGbits.LATG0=1;
  1172   001EE6  807F               	bsf	127,0,c	;volatile
  1173   001EE8                     
  1174                           ;main.c: 60:     LATEbits.LATE7=1;
  1175   001EE8  8E7D               	bsf	125,7,c	;volatile
  1176   001EEA                     
  1177                           ;main.c: 61:     LATAbits.LATA3=1;
  1178   001EEA  8679               	bsf	121,3,c	;volatile
  1179   001EEC                     
  1180                           ;main.c: 63:     TRISGbits.TRISG0=0;
  1181   001EEC  9087               	bcf	135,0,c	;volatile
  1182   001EEE                     
  1183                           ;main.c: 64:     TRISEbits.TRISE7=0;
  1184   001EEE  9E85               	bcf	133,7,c	;volatile
  1185   001EF0                     
  1186                           ;main.c: 65:     TRISAbits.TRISA3=0;
  1187   001EF0  9681               	bcf	129,3,c	;volatile
  1188   001EF2                     
  1189                           ;main.c: 68:     TRISFbits.TRISF2=1;
  1190   001EF2  8486               	bsf	134,2,c	;volatile
  1191   001EF4                     
  1192                           ;main.c: 69:     ANSELFbits.ANSELF2=0;
  1193   001EF4  010E               	movlb	14	; () banked
  1194   001EF6  95B4               	bcf	180,2,b	;volatile
  1195   001EF8                     
  1196                           ; BSR set to: 14
  1197                           ;main.c: 71:     TRISFbits.TRISF3=1;
  1198   001EF8  8686               	bsf	134,3,c	;volatile
  1199   001EFA                     
  1200                           ; BSR set to: 14
  1201                           ;main.c: 72:     ANSELFbits.ANSELF3=0;
  1202   001EFA  97B4               	bcf	180,3,b	;volatile
  1203   001EFC                     
  1204                           ; BSR set to: 14
  1205                           ;main.c: 79:     unsigned char carGo = 0;
  1206   001EFC  0E00               	movlw	0
  1207   001EFE  0100               	movlb	0	; () banked
  1208   001F00  6FAB               	movwf	main@carGo& (0+255),b
  1209   001F02                     
  1210                           ; BSR set to: 0
  1211                           ;main.c: 81:     DC_motor motorLeft,motorRight;;main.c: 82:     DCmotorsInit(&motorLeft,
      +                          &motorRight);
  1212   001F02  0EC7               	movlw	low main@motorLeft
  1213   001F04  6E05               	movwf	DCmotorsInit@mL^0,c
  1214   001F06  0E00               	movlw	high main@motorLeft
  1215   001F08  6E06               	movwf	(DCmotorsInit@mL+1)^0,c
  1216   001F0A  0EBE               	movlw	low main@motorRight
  1217   001F0C  6E07               	movwf	DCmotorsInit@mR^0,c
  1218   001F0E  0E00               	movlw	high main@motorRight
  1219   001F10  6E08               	movwf	(DCmotorsInit@mR+1)^0,c
  1220   001F12  ECF1  F020         	call	_DCmotorsInit	;wreg free
  1221   001F16                     
  1222                           ;main.c: 84:     unsigned int turn_history[100];;main.c: 85:     unsigned int counter_hi
      +                          story[100];;main.c: 86:     unsigned int index = 0;
  1223   001F16  0E00               	movlw	0
  1224   001F18  0100               	movlb	0	; () banked
  1225   001F1A  6FBD               	movwf	(main@index+1)& (0+255),b
  1226   001F1C  0E00               	movlw	0
  1227   001F1E  6FBC               	movwf	main@index& (0+255),b
  1228   001F20                     
  1229                           ; BSR set to: 0
  1230                           ;main.c: 87:     unsigned int forwardCount = 0;
  1231   001F20  0E00               	movlw	0
  1232   001F22  6FA0               	movwf	(main@forwardCount+1)& (0+255),b
  1233   001F24  0E00               	movlw	0
  1234   001F26  6F9F               	movwf	main@forwardCount& (0+255),b
  1235   001F28                     
  1236                           ; BSR set to: 0
  1237                           ;main.c: 90:     ambientCal(&ambientRGBVal);
  1238   001F28  0EAC               	movlw	low main@ambientRGBVal
  1239   001F2A  6E12               	movwf	ambientCal@v^0,c
  1240   001F2C  0E00               	movlw	high main@ambientRGBVal
  1241   001F2E  6E13               	movwf	(ambientCal@v+1)^0,c
  1242   001F30  ECA9  F01F         	call	_ambientCal	;wreg free
  1243   001F34                     l5265:
  1244                           
  1245                           ;main.c: 93:         getColor(&RGBVal);
  1246   001F34  0EA3               	movlw	low main@RGBVal
  1247   001F36  6E10               	movwf	getColor@v^0,c
  1248   001F38  0E00               	movlw	high main@RGBVal
  1249   001F3A  6E11               	movwf	(getColor@v+1)^0,c
  1250   001F3C  EC6B  F023         	call	_getColor	;wreg free
  1251   001F40                     
  1252                           ;main.c: 95:         if(!PORTFbits.RF2 && !PORTFbits.RF3){
  1253   001F40  B48E               	btfsc	142,2,c	;volatile
  1254   001F42  EFA5  F00F         	goto	u5781
  1255   001F46  EFA7  F00F         	goto	u5780
  1256   001F4A                     u5781:
  1257   001F4A  EFCA  F00F         	goto	l5281
  1258   001F4E                     u5780:
  1259   001F4E  B68E               	btfsc	142,3,c	;volatile
  1260   001F50  EFAC  F00F         	goto	u5791
  1261   001F54  EFAE  F00F         	goto	u5790
  1262   001F58                     u5791:
  1263   001F58  EFCA  F00F         	goto	l5281
  1264   001F5C                     u5790:
  1265   001F5C                     
  1266                           ;main.c: 96:             LATDbits.LATD7 = 1 , LATHbits.LATH3 = 1;
  1267   001F5C  8E7C               	bsf	124,7,c	;volatile
  1268   001F5E  8680               	bsf	128,3,c	;volatile
  1269   001F60                     
  1270                           ;main.c: 97:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1271   001F60  0E29               	movlw	41
  1272   001F62  0100               	movlb	0	; () banked
  1273   001F64  6F95               	movwf	(??_main+1)& (0+255),b
  1274   001F66  0E96               	movlw	150
  1275   001F68  6F94               	movwf	??_main& (0+255),b
  1276   001F6A  0E7F               	movlw	127
  1277   001F6C                     u6007:
  1278   001F6C  2EE8               	decfsz	wreg,f,c
  1279   001F6E  D7FE               	bra	u6007
  1280   001F70  2F94               	decfsz	??_main& (0+255),f,b
  1281   001F72  D7FC               	bra	u6007
  1282   001F74  2F95               	decfsz	(??_main+1)& (0+255),f,b
  1283   001F76  D7FA               	bra	u6007
  1284   001F78                     
  1285                           ;main.c: 98:             LATDbits.LATD7 = 0 , LATHbits.LATH3 = 0;
  1286   001F78  9E7C               	bcf	124,7,c	;volatile
  1287   001F7A  9680               	bcf	128,3,c	;volatile
  1288   001F7C                     
  1289                           ;main.c: 99:             carGo = !carGo;
  1290   001F7C  0100               	movlb	0	; () banked
  1291   001F7E  51AB               	movf	main@carGo& (0+255),w,b
  1292   001F80  B4D8               	btfsc	status,2,c
  1293   001F82  EFC5  F00F         	goto	u5801
  1294   001F86  EFC8  F00F         	goto	u5800
  1295   001F8A                     u5801:
  1296   001F8A  0E01               	movlw	1
  1297   001F8C  EFC9  F00F         	goto	u5810
  1298   001F90                     u5800:
  1299   001F90  0E00               	movlw	0
  1300   001F92                     u5810:
  1301   001F92  6FAB               	movwf	main@carGo& (0+255),b
  1302   001F94                     l5281:
  1303                           
  1304                           ;main.c: 103:         if (!PORTFbits.RF2 & PORTFbits.RF3){
  1305   001F94  A48E               	btfss	142,2,c	;volatile
  1306   001F96  EFCF  F00F         	goto	u5821
  1307   001F9A  EFD2  F00F         	goto	u5820
  1308   001F9E                     u5821:
  1309   001F9E  0E01               	movlw	1
  1310   001FA0  EFD3  F00F         	goto	u5830
  1311   001FA4                     u5820:
  1312   001FA4  0E00               	movlw	0
  1313   001FA6                     u5830:
  1314   001FA6  0100               	movlb	0	; () banked
  1315   001FA8  6F94               	movwf	??_main& (0+255),b
  1316   001FAA  6B95               	clrf	(??_main+1)& (0+255),b
  1317   001FAC  B68E               	btfsc	142,3,c	;volatile
  1318   001FAE  EFDB  F00F         	goto	u5841
  1319   001FB2  EFDF  F00F         	goto	u5840
  1320   001FB6                     u5841:
  1321   001FB6  6B96               	clrf	(??_main+2)& (0+255),b
  1322   001FB8  2B96               	incf	(??_main+2)& (0+255),f,b
  1323   001FBA  EFE1  F00F         	goto	u5848
  1324   001FBE                     u5840:
  1325   001FBE  0100               	movlb	0	; () banked
  1326   001FC0  6B96               	clrf	(??_main+2)& (0+255),b
  1327   001FC2                     u5848:
  1328   001FC2  5196               	movf	(??_main+2)& (0+255),w,b
  1329   001FC4  1794               	andwf	??_main& (0+255),f,b
  1330   001FC6  0E00               	movlw	0
  1331   001FC8  1795               	andwf	(??_main+1)& (0+255),f,b
  1332   001FCA  5194               	movf	??_main& (0+255),w,b
  1333   001FCC  1195               	iorwf	(??_main+1)& (0+255),w,b
  1334   001FCE  B4D8               	btfsc	status,2,c
  1335   001FD0  EFEC  F00F         	goto	u5851
  1336   001FD4  EFEE  F00F         	goto	u5850
  1337   001FD8                     u5851:
  1338   001FD8  EFF4  F00F         	goto	l5285
  1339   001FDC                     u5850:
  1340   001FDC                     
  1341                           ; BSR set to: 0
  1342                           ;main.c: 104:             ambientCal (&ambientRGBVal);
  1343   001FDC  0EAC               	movlw	low main@ambientRGBVal
  1344   001FDE  6E12               	movwf	ambientCal@v^0,c
  1345   001FE0  0E00               	movlw	high main@ambientRGBVal
  1346   001FE2  6E13               	movwf	(ambientCal@v+1)^0,c
  1347   001FE4  ECA9  F01F         	call	_ambientCal	;wreg free
  1348   001FE8                     l5285:
  1349                           
  1350                           ;main.c: 107:         if (!PORTFbits.RF3 & PORTFbits.RF2){
  1351   001FE8  A68E               	btfss	142,3,c	;volatile
  1352   001FEA  EFF9  F00F         	goto	u5861
  1353   001FEE  EFFC  F00F         	goto	u5860
  1354   001FF2                     u5861:
  1355   001FF2  0E01               	movlw	1
  1356   001FF4  EFFD  F00F         	goto	u5870
  1357   001FF8                     u5860:
  1358   001FF8  0E00               	movlw	0
  1359   001FFA                     u5870:
  1360   001FFA  0100               	movlb	0	; () banked
  1361   001FFC  6F94               	movwf	??_main& (0+255),b
  1362   001FFE  6B95               	clrf	(??_main+1)& (0+255),b
  1363   002000  B48E               	btfsc	142,2,c	;volatile
  1364   002002  EF05  F010         	goto	u5881
  1365   002006  EF09  F010         	goto	u5880
  1366   00200A                     u5881:
  1367   00200A  6B96               	clrf	(??_main+2)& (0+255),b
  1368   00200C  2B96               	incf	(??_main+2)& (0+255),f,b
  1369   00200E  EF0B  F010         	goto	u5888
  1370   002012                     u5880:
  1371   002012  0100               	movlb	0	; () banked
  1372   002014  6B96               	clrf	(??_main+2)& (0+255),b
  1373   002016                     u5888:
  1374   002016  5196               	movf	(??_main+2)& (0+255),w,b
  1375   002018  1794               	andwf	??_main& (0+255),f,b
  1376   00201A  0E00               	movlw	0
  1377   00201C  1795               	andwf	(??_main+1)& (0+255),f,b
  1378   00201E  5194               	movf	??_main& (0+255),w,b
  1379   002020  1195               	iorwf	(??_main+1)& (0+255),w,b
  1380   002022  B4D8               	btfsc	status,2,c
  1381   002024  EF16  F010         	goto	u5891
  1382   002028  EF18  F010         	goto	u5890
  1383   00202C                     u5891:
  1384   00202C  EF1E  F010         	goto	l5289
  1385   002030                     u5890:
  1386   002030                     
  1387                           ; BSR set to: 0
  1388                           ;main.c: 108:             whiteCal (&whiteRGBVal);
  1389   002030  0EB4               	movlw	low main@whiteRGBVal
  1390   002032  6E12               	movwf	whiteCal@v^0,c
  1391   002034  0E00               	movlw	high main@whiteRGBVal
  1392   002036  6E13               	movwf	(whiteCal@v+1)^0,c
  1393   002038  EC37  F01F         	call	_whiteCal	;wreg free
  1394   00203C                     l5289:
  1395                           
  1396                           ;main.c: 111:         LATHbits.LATH3=!LATHbits.LATH3;
  1397   00203C  A680               	btfss	128,3,c	;volatile
  1398   00203E  EF23  F010         	goto	u5901
  1399   002042  EF28  F010         	goto	u5900
  1400   002046                     u5901:
  1401   002046  0100               	movlb	0	; () banked
  1402   002048  6B94               	clrf	??_main& (0+255),b
  1403   00204A  2B94               	incf	??_main& (0+255),f,b
  1404   00204C  EF2A  F010         	goto	u5918
  1405   002050                     u5900:
  1406   002050  0100               	movlb	0	; () banked
  1407   002052  6B94               	clrf	??_main& (0+255),b
  1408   002054                     u5918:
  1409   002054  4794               	rlncf	??_main& (0+255),f,b
  1410   002056  4794               	rlncf	??_main& (0+255),f,b
  1411   002058  4794               	rlncf	??_main& (0+255),f,b
  1412   00205A  5080               	movf	128,w,c	;volatile
  1413   00205C  1994               	xorwf	??_main& (0+255),w,b
  1414   00205E  0BF7               	andlw	-9
  1415   002060  1994               	xorwf	??_main& (0+255),w,b
  1416   002062  6E80               	movwf	128,c	;volatile
  1417   002064                     
  1418                           ; BSR set to: 0
  1419                           ;main.c: 113:         whiteC = whiteRGBVal.C;
  1420   002064  C0BA  F005         	movff	main@whiteRGBVal+6,___xxtofl@val
  1421   002068  C0BB  F006         	movff	main@whiteRGBVal+7,___xxtofl@val+1
  1422   00206C  6A07               	clrf	(___xxtofl@val+2)^0,c
  1423   00206E  6A08               	clrf	(___xxtofl@val+3)^0,c
  1424   002070  0E00               	movlw	0
  1425   002072  ECE7  F017         	call	___xxtofl
  1426   002076  C005  F097         	movff	?___xxtofl,main@whiteC
  1427   00207A  C006  F098         	movff	?___xxtofl+1,main@whiteC+1
  1428   00207E  C007  F099         	movff	?___xxtofl+2,main@whiteC+2
  1429   002082  C008  F09A         	movff	?___xxtofl+3,main@whiteC+3
  1430   002086                     
  1431                           ;main.c: 114:         clearRef = RGBVal.C/whiteC;
  1432   002086  C0A9  F005         	movff	main@RGBVal+6,___xxtofl@val
  1433   00208A  C0AA  F006         	movff	main@RGBVal+7,___xxtofl@val+1
  1434   00208E  6A07               	clrf	(___xxtofl@val+2)^0,c
  1435   002090  6A08               	clrf	(___xxtofl@val+3)^0,c
  1436   002092  0E00               	movlw	0
  1437   002094  ECE7  F017         	call	___xxtofl
  1438   002098  C005  F036         	movff	?___xxtofl,___fldiv@b
  1439   00209C  C006  F037         	movff	?___xxtofl+1,___fldiv@b+1
  1440   0020A0  C007  F038         	movff	?___xxtofl+2,___fldiv@b+2
  1441   0020A4  C008  F039         	movff	?___xxtofl+3,___fldiv@b+3
  1442   0020A8  C097  F03A         	movff	main@whiteC,___fldiv@a
  1443   0020AC  C098  F03B         	movff	main@whiteC+1,___fldiv@a+1
  1444   0020B0  C099  F03C         	movff	main@whiteC+2,___fldiv@a+2
  1445   0020B4  C09A  F03D         	movff	main@whiteC+3,___fldiv@a+3
  1446   0020B8  ECA4  F013         	call	___fldiv	;wreg free
  1447   0020BC  C036  F09B         	movff	?___fldiv,main@clearRef
  1448   0020C0  C037  F09C         	movff	?___fldiv+1,main@clearRef+1
  1449   0020C4  C038  F09D         	movff	?___fldiv+2,main@clearRef+2
  1450   0020C8  C039  F09E         	movff	?___fldiv+3,main@clearRef+3
  1451   0020CC                     
  1452                           ;main.c: 116:         if ((clearRef > 0.12) && carGo){
  1453   0020CC  0E8F               	movlw	143
  1454   0020CE  6E1D               	movwf	___flge@ff1^0,c
  1455   0020D0  0EC2               	movlw	194
  1456   0020D2  6E1E               	movwf	(___flge@ff1+1)^0,c
  1457   0020D4  0EF5               	movlw	245
  1458   0020D6  6E1F               	movwf	(___flge@ff1+2)^0,c
  1459   0020D8  0E3D               	movlw	61
  1460   0020DA  6E20               	movwf	(___flge@ff1+3)^0,c
  1461   0020DC  C09B  F021         	movff	main@clearRef,___flge@ff2
  1462   0020E0  C09C  F022         	movff	main@clearRef+1,___flge@ff2+1
  1463   0020E4  C09D  F023         	movff	main@clearRef+2,___flge@ff2+2
  1464   0020E8  C09E  F024         	movff	main@clearRef+3,___flge@ff2+3
  1465   0020EC  ECB5  F01E         	call	___flge	;wreg free
  1466   0020F0  B0D8               	btfsc	status,0,c
  1467   0020F2  EF7D  F010         	goto	u5921
  1468   0020F6  EF7F  F010         	goto	u5920
  1469   0020FA                     u5921:
  1470   0020FA  EF2A  F011         	goto	l5329
  1471   0020FE                     u5920:
  1472   0020FE  0100               	movlb	0	; () banked
  1473   002100  51AB               	movf	main@carGo& (0+255),w,b
  1474   002102  B4D8               	btfsc	status,2,c
  1475   002104  EF86  F010         	goto	u5931
  1476   002108  EF88  F010         	goto	u5930
  1477   00210C                     u5931:
  1478   00210C  EF2A  F011         	goto	l5329
  1479   002110                     u5930:
  1480   002110                     
  1481                           ; BSR set to: 0
  1482                           ;main.c: 118:             colorNum = colorDetect(clearRef,&ambientRGBVal,&whiteRGBVal,&m
      +                          otorLeft,&motorRight);
  1483   002110  C09B  F060         	movff	main@clearRef,colorDetect@clearRef
  1484   002114  C09C  F061         	movff	main@clearRef+1,colorDetect@clearRef+1
  1485   002118  C09D  F062         	movff	main@clearRef+2,colorDetect@clearRef+2
  1486   00211C  C09E  F063         	movff	main@clearRef+3,colorDetect@clearRef+3
  1487   002120  0EAC               	movlw	low main@ambientRGBVal
  1488   002122  6F64               	movwf	colorDetect@ambientRGBVal& (0+255),b
  1489   002124  0E00               	movlw	high main@ambientRGBVal
  1490   002126  6F65               	movwf	(colorDetect@ambientRGBVal+1)& (0+255),b
  1491   002128  0EB4               	movlw	low main@whiteRGBVal
  1492   00212A  6F66               	movwf	colorDetect@whiteRGBVal& (0+255),b
  1493   00212C  0E00               	movlw	high main@whiteRGBVal
  1494   00212E  6F67               	movwf	(colorDetect@whiteRGBVal+1)& (0+255),b
  1495   002130  0EC7               	movlw	low main@motorLeft
  1496   002132  6F68               	movwf	colorDetect@mL& (0+255),b
  1497   002134  0E00               	movlw	high main@motorLeft
  1498   002136  6F69               	movwf	(colorDetect@mL+1)& (0+255),b
  1499   002138  0EBE               	movlw	low main@motorRight
  1500   00213A  6F6A               	movwf	colorDetect@mR& (0+255),b
  1501   00213C  0E00               	movlw	high main@motorRight
  1502   00213E  6F6B               	movwf	(colorDetect@mR+1)& (0+255),b
  1503   002140  EC0C  F007         	call	_colorDetect	;wreg free
  1504   002144  C060  F0A1         	movff	?_colorDetect,main@colorNum
  1505   002148  C061  F0A2         	movff	?_colorDetect+1,main@colorNum+1
  1506   00214C                     
  1507                           ;main.c: 120:             if (colorNum < 9){
  1508   00214C  0100               	movlb	0	; () banked
  1509   00214E  51A2               	movf	(main@colorNum+1)& (0+255),w,b
  1510   002150  E107               	bnz	u5941
  1511   002152  0E09               	movlw	9
  1512   002154  5DA1               	subwf	main@colorNum& (0+255),w,b
  1513   002156  B0D8               	btfsc	status,0,c
  1514   002158  EFB0  F010         	goto	u5941
  1515   00215C  EFB2  F010         	goto	u5940
  1516   002160                     u5941:
  1517   002160  EF2A  F011         	goto	l5329
  1518   002164                     u5940:
  1519   002164                     
  1520                           ; BSR set to: 0
  1521                           ;main.c: 122:             turn_history[index] = 0;
  1522   002164  90D8               	bcf	status,0,c
  1523   002166  35BC               	rlcf	main@index& (0+255),w,b
  1524   002168  6ED9               	movwf	fsr2l,c
  1525   00216A  35BD               	rlcf	(main@index+1)& (0+255),w,b
  1526   00216C  6EDA               	movwf	fsr2h,c
  1527   00216E  0E00               	movlw	low main@turn_history
  1528   002170  26D9               	addwf	fsr2l,f,c
  1529   002172  0E02               	movlw	high main@turn_history
  1530   002174  22DA               	addwfc	fsr2h,f,c
  1531   002176  0E00               	movlw	0
  1532   002178  6EDE               	movwf	postinc2,c
  1533   00217A  0E00               	movlw	0
  1534   00217C  6EDD               	movwf	postdec2,c
  1535                           
  1536                           ;main.c: 123:             counter_history[index] = forwardCount;
  1537   00217E  90D8               	bcf	status,0,c
  1538   002180  35BC               	rlcf	main@index& (0+255),w,b
  1539   002182  6ED9               	movwf	fsr2l,c
  1540   002184  35BD               	rlcf	(main@index+1)& (0+255),w,b
  1541   002186  6EDA               	movwf	fsr2h,c
  1542   002188  0E00               	movlw	low main@counter_history
  1543   00218A  26D9               	addwf	fsr2l,f,c
  1544   00218C  0E03               	movlw	high main@counter_history
  1545   00218E  22DA               	addwfc	fsr2h,f,c
  1546   002190  C09F  FFDE         	movff	main@forwardCount,postinc2
  1547   002194  C0A0  FFDD         	movff	main@forwardCount+1,postdec2
  1548   002198                     
  1549                           ; BSR set to: 0
  1550                           ;main.c: 125:             index +=1;
  1551   002198  4BBC               	infsnz	main@index& (0+255),f,b
  1552   00219A  2BBD               	incf	(main@index+1)& (0+255),f,b
  1553   00219C                     
  1554                           ; BSR set to: 0
  1555                           ;main.c: 126:             forwardCount = 0;
  1556   00219C  0E00               	movlw	0
  1557   00219E  6FA0               	movwf	(main@forwardCount+1)& (0+255),b
  1558   0021A0  0E00               	movlw	0
  1559   0021A2  6F9F               	movwf	main@forwardCount& (0+255),b
  1560   0021A4                     
  1561                           ; BSR set to: 0
  1562                           ;main.c: 128:             if (colorNum == 8){
  1563   0021A4  0E08               	movlw	8
  1564   0021A6  19A1               	xorwf	main@colorNum& (0+255),w,b
  1565   0021A8  11A2               	iorwf	(main@colorNum+1)& (0+255),w,b
  1566   0021AA  A4D8               	btfss	status,2,c
  1567   0021AC  EFDA  F010         	goto	u5951
  1568   0021B0  EFDC  F010         	goto	u5950
  1569   0021B4                     u5951:
  1570   0021B4  EF02  F011         	goto	l5321
  1571   0021B8                     u5950:
  1572   0021B8                     
  1573                           ; BSR set to: 0
  1574                           ;main.c: 129:                 turn_180(&motorLeft,&motorRight);
  1575   0021B8  0EC7               	movlw	low main@motorLeft
  1576   0021BA  6E1E               	movwf	turn_180@mL^0,c
  1577   0021BC  0E00               	movlw	high main@motorLeft
  1578   0021BE  6E1F               	movwf	(turn_180@mL+1)^0,c
  1579   0021C0  0EBE               	movlw	low main@motorRight
  1580   0021C2  6E20               	movwf	turn_180@mR^0,c
  1581   0021C4  0E00               	movlw	high main@motorRight
  1582   0021C6  6E21               	movwf	(turn_180@mR+1)^0,c
  1583   0021C8  EC9C  F01B         	call	_turn_180	;wreg free
  1584   0021CC                     
  1585                           ;main.c: 130:                 LATDbits.LATD7 = 1 , LATHbits.LATH3 = 1;
  1586   0021CC  8E7C               	bsf	124,7,c	;volatile
  1587   0021CE  8680               	bsf	128,3,c	;volatile
  1588   0021D0                     
  1589                           ;main.c: 131:                 return_home_turns(&turn_history,&counter_history, (index),
      +                           &motorLeft, &motorRight);
  1590   0021D0  0E00               	movlw	low main@turn_history
  1591   0021D2  0100               	movlb	0	; () banked
  1592   0021D4  6F7F               	movwf	return_home_turns@turn_history& (0+255),b
  1593   0021D6  0E02               	movlw	high main@turn_history
  1594   0021D8  6F80               	movwf	(return_home_turns@turn_history+1)& (0+255),b
  1595   0021DA  0E00               	movlw	low main@counter_history
  1596   0021DC  6F81               	movwf	return_home_turns@counter_history& (0+255),b
  1597   0021DE  0E03               	movlw	high main@counter_history
  1598   0021E0  6F82               	movwf	(return_home_turns@counter_history+1)& (0+255),b
  1599   0021E2  C0BC  F083         	movff	main@index,return_home_turns@index
  1600   0021E6  C0BD  F084         	movff	main@index+1,return_home_turns@index+1
  1601   0021EA  0EC7               	movlw	low main@motorLeft
  1602   0021EC  6F85               	movwf	return_home_turns@mL& (0+255),b
  1603   0021EE  0E00               	movlw	high main@motorLeft
  1604   0021F0  6F86               	movwf	(return_home_turns@mL+1)& (0+255),b
  1605   0021F2  0EBE               	movlw	low main@motorRight
  1606   0021F4  6F87               	movwf	return_home_turns@mR& (0+255),b
  1607   0021F6  0E00               	movlw	high main@motorRight
  1608   0021F8  6F88               	movwf	(return_home_turns@mR+1)& (0+255),b
  1609   0021FA  ECB0  F016         	call	_return_home_turns	;wreg free
  1610   0021FE                     
  1611                           ;main.c: 132:                 carGo = 0;
  1612   0021FE  0E00               	movlw	0
  1613   002200  0100               	movlb	0	; () banked
  1614   002202  6FAB               	movwf	main@carGo& (0+255),b
  1615   002204                     l5321:
  1616                           
  1617                           ; BSR set to: 0
  1618                           ;main.c: 134:             turn_history[index] = colorNum;
  1619   002204  90D8               	bcf	status,0,c
  1620   002206  35BC               	rlcf	main@index& (0+255),w,b
  1621   002208  6ED9               	movwf	fsr2l,c
  1622   00220A  35BD               	rlcf	(main@index+1)& (0+255),w,b
  1623   00220C  6EDA               	movwf	fsr2h,c
  1624   00220E  0E00               	movlw	low main@turn_history
  1625   002210  26D9               	addwf	fsr2l,f,c
  1626   002212  0E02               	movlw	high main@turn_history
  1627   002214  22DA               	addwfc	fsr2h,f,c
  1628   002216  C0A1  FFDE         	movff	main@colorNum,postinc2
  1629   00221A  C0A2  FFDD         	movff	main@colorNum+1,postdec2
  1630   00221E                     
  1631                           ; BSR set to: 0
  1632                           ;main.c: 135:             counter_history[index] = 1;
  1633   00221E  90D8               	bcf	status,0,c
  1634   002220  35BC               	rlcf	main@index& (0+255),w,b
  1635   002222  6ED9               	movwf	fsr2l,c
  1636   002224  35BD               	rlcf	(main@index+1)& (0+255),w,b
  1637   002226  6EDA               	movwf	fsr2h,c
  1638   002228  0E00               	movlw	low main@counter_history
  1639   00222A  26D9               	addwf	fsr2l,f,c
  1640   00222C  0E03               	movlw	high main@counter_history
  1641   00222E  22DA               	addwfc	fsr2h,f,c
  1642   002230  0E01               	movlw	1
  1643   002232  6EDE               	movwf	postinc2,c
  1644   002234  0E00               	movlw	0
  1645   002236  6EDD               	movwf	postdec2,c
  1646   002238                     
  1647                           ; BSR set to: 0
  1648                           ;main.c: 136:             index += 1;
  1649   002238  4BBC               	infsnz	main@index& (0+255),f,b
  1650   00223A  2BBD               	incf	(main@index+1)& (0+255),f,b
  1651   00223C                     
  1652                           ; BSR set to: 0
  1653                           ;main.c: 137:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1654   00223C  0E29               	movlw	41
  1655   00223E  0100               	movlb	0	; () banked
  1656   002240  6F95               	movwf	(??_main+1)& (0+255),b
  1657   002242  0E96               	movlw	150
  1658   002244  6F94               	movwf	??_main& (0+255),b
  1659   002246  0E7F               	movlw	127
  1660   002248                     u6017:
  1661   002248  2EE8               	decfsz	wreg,f,c
  1662   00224A  D7FE               	bra	u6017
  1663   00224C  2F94               	decfsz	??_main& (0+255),f,b
  1664   00224E  D7FC               	bra	u6017
  1665   002250  2F95               	decfsz	(??_main+1)& (0+255),f,b
  1666   002252  D7FA               	bra	u6017
  1667   002254                     l5329:
  1668                           
  1669                           ;main.c: 141:         if (carGo){
  1670   002254  0100               	movlb	0	; () banked
  1671   002256  51AB               	movf	main@carGo& (0+255),w,b
  1672   002258  B4D8               	btfsc	status,2,c
  1673   00225A  EF31  F011         	goto	u5961
  1674   00225E  EF33  F011         	goto	u5960
  1675   002262                     u5961:
  1676   002262  EF53  F011         	goto	l5337
  1677   002266                     u5960:
  1678   002266                     
  1679                           ; BSR set to: 0
  1680                           ;main.c: 142:             forward(&motorLeft,&motorRight);
  1681   002266  0EC7               	movlw	low main@motorLeft
  1682   002268  6E18               	movwf	forward@mL^0,c
  1683   00226A  0E00               	movlw	high main@motorLeft
  1684   00226C  6E19               	movwf	(forward@mL+1)^0,c
  1685   00226E  0EBE               	movlw	low main@motorRight
  1686   002270  6E1A               	movwf	forward@mR^0,c
  1687   002272  0E00               	movlw	high main@motorRight
  1688   002274  6E1B               	movwf	(forward@mR+1)^0,c
  1689   002276  EC1B  F020         	call	_forward	;wreg free
  1690   00227A                     
  1691                           ;main.c: 143:             LATDbits.LATD4 = !LATDbits.LATD4;
  1692   00227A  A87C               	btfss	124,4,c	;volatile
  1693   00227C  EF42  F011         	goto	u5971
  1694   002280  EF47  F011         	goto	u5970
  1695   002284                     u5971:
  1696   002284  0100               	movlb	0	; () banked
  1697   002286  6B94               	clrf	??_main& (0+255),b
  1698   002288  2B94               	incf	??_main& (0+255),f,b
  1699   00228A  EF49  F011         	goto	u5988
  1700   00228E                     u5970:
  1701   00228E  0100               	movlb	0	; () banked
  1702   002290  6B94               	clrf	??_main& (0+255),b
  1703   002292                     u5988:
  1704   002292  3B94               	swapf	??_main& (0+255),f,b
  1705   002294  507C               	movf	124,w,c	;volatile
  1706   002296  1994               	xorwf	??_main& (0+255),w,b
  1707   002298  0BEF               	andlw	-17
  1708   00229A  1994               	xorwf	??_main& (0+255),w,b
  1709   00229C  6E7C               	movwf	124,c	;volatile
  1710   00229E                     
  1711                           ; BSR set to: 0
  1712                           ;main.c: 144:             forwardCount +=1;
  1713   00229E  4B9F               	infsnz	main@forwardCount& (0+255),f,b
  1714   0022A0  2BA0               	incf	(main@forwardCount+1)& (0+255),f,b
  1715                           
  1716                           ;main.c: 145:         }
  1717   0022A2  EF5D  F011         	goto	l5339
  1718   0022A6                     l5337:
  1719                           
  1720                           ; BSR set to: 0
  1721   0022A6  0EC7               	movlw	low main@motorLeft
  1722   0022A8  6E18               	movwf	stop@mL^0,c
  1723   0022AA  0E00               	movlw	high main@motorLeft
  1724   0022AC  6E19               	movwf	(stop@mL+1)^0,c
  1725   0022AE  0EBE               	movlw	low main@motorRight
  1726   0022B0  6E1A               	movwf	stop@mR^0,c
  1727   0022B2  0E00               	movlw	high main@motorRight
  1728   0022B4  6E1B               	movwf	(stop@mR+1)^0,c
  1729   0022B6  ECBF  F021         	call	_stop	;wreg free
  1730   0022BA                     l5339:
  1731                           
  1732                           ;main.c: 149:         _delay((unsigned long)((50)*(64000000/4000.0)));
  1733   0022BA  0E05               	movlw	5
  1734   0022BC  0100               	movlb	0	; () banked
  1735   0022BE  6F95               	movwf	(??_main+1)& (0+255),b
  1736   0022C0  0E0F               	movlw	15
  1737   0022C2  6F94               	movwf	??_main& (0+255),b
  1738   0022C4  0EF1               	movlw	241
  1739   0022C6                     u6027:
  1740   0022C6  2EE8               	decfsz	wreg,f,c
  1741   0022C8  D7FE               	bra	u6027
  1742   0022CA  2F94               	decfsz	??_main& (0+255),f,b
  1743   0022CC  D7FC               	bra	u6027
  1744   0022CE  2F95               	decfsz	(??_main+1)& (0+255),f,b
  1745   0022D0  D7FA               	bra	u6027
  1746   0022D2                     
  1747                           ;main.c: 151:         if (forwardCount > 2000){return_home_turns(&turn_history,&counter_
      +                          history, (index), &motorLeft, &motorRight);}
  1748   0022D2  0ED1               	movlw	209
  1749   0022D4  0100               	movlb	0	; () banked
  1750   0022D6  5D9F               	subwf	main@forwardCount& (0+255),w,b
  1751   0022D8  0E07               	movlw	7
  1752   0022DA  59A0               	subwfb	(main@forwardCount+1)& (0+255),w,b
  1753   0022DC  A0D8               	btfss	status,0,c
  1754   0022DE  EF73  F011         	goto	u5991
  1755   0022E2  EF75  F011         	goto	u5990
  1756   0022E6                     u5991:
  1757   0022E6  EF9A  F00F         	goto	l5265
  1758   0022EA                     u5990:
  1759   0022EA                     
  1760                           ; BSR set to: 0
  1761   0022EA  0E00               	movlw	low main@turn_history
  1762   0022EC  6F7F               	movwf	return_home_turns@turn_history& (0+255),b
  1763   0022EE  0E02               	movlw	high main@turn_history
  1764   0022F0  6F80               	movwf	(return_home_turns@turn_history+1)& (0+255),b
  1765   0022F2  0E00               	movlw	low main@counter_history
  1766   0022F4  6F81               	movwf	return_home_turns@counter_history& (0+255),b
  1767   0022F6  0E03               	movlw	high main@counter_history
  1768   0022F8  6F82               	movwf	(return_home_turns@counter_history+1)& (0+255),b
  1769   0022FA  C0BC  F083         	movff	main@index,return_home_turns@index
  1770   0022FE  C0BD  F084         	movff	main@index+1,return_home_turns@index+1
  1771   002302  0EC7               	movlw	low main@motorLeft
  1772   002304  6F85               	movwf	return_home_turns@mL& (0+255),b
  1773   002306  0E00               	movlw	high main@motorLeft
  1774   002308  6F86               	movwf	(return_home_turns@mL+1)& (0+255),b
  1775   00230A  0EBE               	movlw	low main@motorRight
  1776   00230C  6F87               	movwf	return_home_turns@mR& (0+255),b
  1777   00230E  0E00               	movlw	high main@motorRight
  1778   002310  6F88               	movwf	(return_home_turns@mR+1)& (0+255),b
  1779   002312  ECB0  F016         	call	_return_home_turns	;wreg free
  1780   002316  EF9A  F00F         	goto	l5265
  1781   00231A  EF34  F000         	goto	start
  1782   00231E                     __end_of_main:
  1783                           	callstack 0
  1784                           
  1785 ;; *************** function _whiteCal *****************
  1786 ;; Defined at:
  1787 ;;		line 115 in file "color.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  v               2   17[COMRAM] PTR struct RGB
  1790 ;;		 -> main@whiteRGBVal(8), 
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;  i               2   21[COMRAM] int 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  1    wreg      void 
  1795 ;; Registers used:
  1796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1802 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1803 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1804 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1805 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1806 ;;Total ram usage:        6 bytes
  1807 ;; Hardware stack levels used: 1
  1808 ;; Hardware stack levels required when called: 6
  1809 ;; This function calls:
  1810 ;;		_getColor
  1811 ;; This function is called by:
  1812 ;;		_main
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text1
  1817   003E6E                     __ptext1:
  1818                           	callstack 0
  1819   003E6E                     _whiteCal:
  1820                           	callstack 24
  1821   003E6E                     
  1822                           ;color.c: 117:     for(int i = 0;i<20;i++){
  1823   003E6E  0E00               	movlw	0
  1824   003E70  6E17               	movwf	(whiteCal@i+1)^0,c
  1825   003E72  0E00               	movlw	0
  1826   003E74  6E16               	movwf	whiteCal@i^0,c
  1827   003E76                     l4219:
  1828                           
  1829                           ;color.c: 118:             LATDbits.LATD7 = !LATDbits.LATD7;
  1830   003E76  AE7C               	btfss	124,7,c	;volatile
  1831   003E78  EF40  F01F         	goto	u4311
  1832   003E7C  EF44  F01F         	goto	u4310
  1833   003E80                     u4311:
  1834   003E80  6A14               	clrf	??_whiteCal^0,c
  1835   003E82  2A14               	incf	??_whiteCal^0,f,c
  1836   003E84  EF45  F01F         	goto	u4328
  1837   003E88                     u4310:
  1838   003E88  6A14               	clrf	??_whiteCal^0,c
  1839   003E8A                     u4328:
  1840   003E8A  3214               	rrcf	??_whiteCal^0,f,c
  1841   003E8C  3214               	rrcf	??_whiteCal^0,f,c
  1842   003E8E  507C               	movf	124,w,c	;volatile
  1843   003E90  1814               	xorwf	??_whiteCal^0,w,c
  1844   003E92  0B7F               	andlw	-129
  1845   003E94  1814               	xorwf	??_whiteCal^0,w,c
  1846   003E96  6E7C               	movwf	124,c	;volatile
  1847   003E98                     
  1848                           ;color.c: 119:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1849   003E98  0E09               	movlw	9
  1850   003E9A  6E15               	movwf	(??_whiteCal+1)^0,c
  1851   003E9C  0E1E               	movlw	30
  1852   003E9E  6E14               	movwf	??_whiteCal^0,c
  1853   003EA0  0EE4               	movlw	228
  1854   003EA2                     u6037:
  1855   003EA2  2EE8               	decfsz	wreg,f,c
  1856   003EA4  D7FE               	bra	u6037
  1857   003EA6  2E14               	decfsz	??_whiteCal^0,f,c
  1858   003EA8  D7FC               	bra	u6037
  1859   003EAA  2E15               	decfsz	(??_whiteCal+1)^0,f,c
  1860   003EAC  D7FA               	bra	u6037
  1861   003EAE  D000               	nop2	
  1862                           
  1863                           ;color.c: 120:             }
  1864   003EB0  4A16               	infsnz	whiteCal@i^0,f,c
  1865   003EB2  2A17               	incf	(whiteCal@i+1)^0,f,c
  1866   003EB4  BE17               	btfsc	(whiteCal@i+1)^0,7,c
  1867   003EB6  EF66  F01F         	goto	u4331
  1868   003EBA  5017               	movf	(whiteCal@i+1)^0,w,c
  1869   003EBC  E109               	bnz	u4330
  1870   003EBE  0E14               	movlw	20
  1871   003EC0  5C16               	subwf	whiteCal@i^0,w,c
  1872   003EC2  A0D8               	btfss	status,0,c
  1873   003EC4  EF66  F01F         	goto	u4331
  1874   003EC8  EF68  F01F         	goto	u4330
  1875   003ECC                     u4331:
  1876   003ECC  EF3B  F01F         	goto	l4219
  1877   003ED0                     u4330:
  1878   003ED0                     
  1879                           ;color.c: 121:             LATDbits.LATD7 = !LATDbits.LATD7;
  1880   003ED0  AE7C               	btfss	124,7,c	;volatile
  1881   003ED2  EF6D  F01F         	goto	u4341
  1882   003ED6  EF71  F01F         	goto	u4340
  1883   003EDA                     u4341:
  1884   003EDA  6A14               	clrf	??_whiteCal^0,c
  1885   003EDC  2A14               	incf	??_whiteCal^0,f,c
  1886   003EDE  EF72  F01F         	goto	u4358
  1887   003EE2                     u4340:
  1888   003EE2  6A14               	clrf	??_whiteCal^0,c
  1889   003EE4                     u4358:
  1890   003EE4  3214               	rrcf	??_whiteCal^0,f,c
  1891   003EE6  3214               	rrcf	??_whiteCal^0,f,c
  1892   003EE8  507C               	movf	124,w,c	;volatile
  1893   003EEA  1814               	xorwf	??_whiteCal^0,w,c
  1894   003EEC  0B7F               	andlw	-129
  1895   003EEE  1814               	xorwf	??_whiteCal^0,w,c
  1896   003EF0  6E7C               	movwf	124,c	;volatile
  1897   003EF2                     
  1898                           ;color.c: 122:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1899   003EF2  0E29               	movlw	41
  1900   003EF4  6E15               	movwf	(??_whiteCal+1)^0,c
  1901   003EF6  0E96               	movlw	150
  1902   003EF8  6E14               	movwf	??_whiteCal^0,c
  1903   003EFA  0E7F               	movlw	127
  1904   003EFC                     u6047:
  1905   003EFC  2EE8               	decfsz	wreg,f,c
  1906   003EFE  D7FE               	bra	u6047
  1907   003F00  2E14               	decfsz	??_whiteCal^0,f,c
  1908   003F02  D7FC               	bra	u6047
  1909   003F04  2E15               	decfsz	(??_whiteCal+1)^0,f,c
  1910   003F06  D7FA               	bra	u6047
  1911   003F08  F000               	nop	
  1912   003F0A                     
  1913                           ;color.c: 123:             getColor(v);
  1914   003F0A  C012  F010         	movff	whiteCal@v,getColor@v
  1915   003F0E  C013  F011         	movff	whiteCal@v+1,getColor@v+1
  1916   003F12  EC6B  F023         	call	_getColor	;wreg free
  1917   003F16                     
  1918                           ;color.c: 124:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1919   003F16  0E29               	movlw	41
  1920   003F18  6E15               	movwf	(??_whiteCal+1)^0,c
  1921   003F1A  0E96               	movlw	150
  1922   003F1C  6E14               	movwf	??_whiteCal^0,c
  1923   003F1E  0E7F               	movlw	127
  1924   003F20                     u6057:
  1925   003F20  2EE8               	decfsz	wreg,f,c
  1926   003F22  D7FE               	bra	u6057
  1927   003F24  2E14               	decfsz	??_whiteCal^0,f,c
  1928   003F26  D7FC               	bra	u6057
  1929   003F28  2E15               	decfsz	(??_whiteCal+1)^0,f,c
  1930   003F2A  D7FA               	bra	u6057
  1931   003F2C  F000               	nop	
  1932   003F2E                     
  1933                           ;color.c: 125:             LATDbits.LATD7 = !LATDbits.LATD7;
  1934   003F2E  AE7C               	btfss	124,7,c	;volatile
  1935   003F30  EF9C  F01F         	goto	u4361
  1936   003F34  EFA0  F01F         	goto	u4360
  1937   003F38                     u4361:
  1938   003F38  6A14               	clrf	??_whiteCal^0,c
  1939   003F3A  2A14               	incf	??_whiteCal^0,f,c
  1940   003F3C  EFA1  F01F         	goto	u4378
  1941   003F40                     u4360:
  1942   003F40  6A14               	clrf	??_whiteCal^0,c
  1943   003F42                     u4378:
  1944   003F42  3214               	rrcf	??_whiteCal^0,f,c
  1945   003F44  3214               	rrcf	??_whiteCal^0,f,c
  1946   003F46  507C               	movf	124,w,c	;volatile
  1947   003F48  1814               	xorwf	??_whiteCal^0,w,c
  1948   003F4A  0B7F               	andlw	-129
  1949   003F4C  1814               	xorwf	??_whiteCal^0,w,c
  1950   003F4E  6E7C               	movwf	124,c	;volatile
  1951   003F50  0012               	return		;funcret
  1952   003F52                     __end_of_whiteCal:
  1953                           	callstack 0
  1954                           
  1955 ;; *************** function _return_home_turns *****************
  1956 ;; Defined at:
  1957 ;;		line 223 in file "color.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  turn_history    2   31[BANK0 ] PTR unsigned int 
  1960 ;;		 -> main@turn_history(200), 
  1961 ;;  counter_hist    2   33[BANK0 ] PTR unsigned int 
  1962 ;;		 -> main@counter_history(200), 
  1963 ;;  index           2   35[BANK0 ] unsigned int 
  1964 ;;  mL              2   37[BANK0 ] PTR struct DC_motor
  1965 ;;		 -> main@motorLeft(9), 
  1966 ;;  mR              2   39[BANK0 ] PTR struct DC_motor
  1967 ;;		 -> main@motorRight(9), 
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;  i               2  150[BANK1 ] int 
  1970 ;;  string1       150    0[BANK1 ] unsigned char [150]
  1971 ;;  k               2  152[BANK1 ] int 
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      void 
  1974 ;; Registers used:
  1975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1981 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1982 ;;      Locals:         0       0     154       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1983 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1984 ;;      Totals:         0      12     154       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1985 ;;Total ram usage:      166 bytes
  1986 ;; Hardware stack levels used: 1
  1987 ;; Hardware stack levels required when called: 10
  1988 ;; This function calls:
  1989 ;;		_TxBufferedString
  1990 ;;		_forward
  1991 ;;		_sendTxBuf
  1992 ;;		_sprintf
  1993 ;;		_stop
  1994 ;;		_turnLeft_135
  1995 ;;		_turnLeft_90
  1996 ;;		_turnRight_135
  1997 ;;		_turnRight_90
  1998 ;;		_turn_180
  1999 ;; This function is called by:
  2000 ;;		_main
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           	psect	text2
  2005   002D60                     __ptext2:
  2006                           	callstack 0
  2007   002D60                     _return_home_turns:
  2008                           	callstack 20
  2009   002D60                     
  2010                           ;color.c: 223: void return_home_turns(unsigned int *turn_history, unsigned int *counter_
      +                          history, unsigned int index, DC_motor *mL, DC_motor *mR);color.c: 224: {;color.c: 227:  
      +                             for (int k = (index); k >= 0; k--){
  2011   002D60  C083  F198         	movff	return_home_turns@index,return_home_turns@k
  2012   002D64  C084  F199         	movff	return_home_turns@index+1,return_home_turns@k+1
  2013   002D68  0101               	movlb	1	; () banked
  2014   002D6A  BF99               	btfsc	(return_home_turns@k+1)& (0+255),7,b
  2015   002D6C  EFBC  F016         	goto	u5750
  2016   002D70  EFBA  F016         	goto	u5751
  2017   002D74                     u5751:
  2018   002D74  EFBE  F016         	goto	l5139
  2019   002D78                     u5750:
  2020   002D78  EFE6  F017         	goto	l135
  2021   002D7C                     l5139:
  2022                           
  2023                           ; BSR set to: 1
  2024                           ;color.c: 228:             char string1[150];;color.c: 229:             _delay((unsigned
      +                           long)((2)*(64000000/4000.0)));
  2025   002D7C  0E2A               	movlw	42
  2026   002D7E  0100               	movlb	0	; () banked
  2027   002D80  6F89               	movwf	??_return_home_turns& (0+255),b
  2028   002D82  0E8D               	movlw	141
  2029   002D84                     u6067:
  2030   002D84  2EE8               	decfsz	wreg,f,c
  2031   002D86  D7FE               	bra	u6067
  2032   002D88  2F89               	decfsz	??_return_home_turns& (0+255),f,b
  2033   002D8A  D7FC               	bra	u6067
  2034   002D8C  D000               	nop2	
  2035   002D8E                     
  2036                           ;color.c: 230:             sprintf(string1,"K:%d I:%d C:%d T:%d \r",k,index,counter_hist
      +                          ory[k],turn_history[k]);
  2037   002D8E  0E00               	movlw	low return_home_turns@string1
  2038   002D90  0100               	movlb	0	; () banked
  2039   002D92  6F66               	movwf	sprintf@s& (0+255),b
  2040   002D94  0E01               	movlw	high return_home_turns@string1
  2041   002D96  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2042   002D98  0E01               	movlw	low STR_1
  2043   002D9A  6F68               	movwf	sprintf@fmt& (0+255),b
  2044   002D9C  0E0E               	movlw	high STR_1
  2045   002D9E  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2046   002DA0  C198  F06A         	movff	return_home_turns@k,?_sprintf+4
  2047   002DA4  C199  F06B         	movff	return_home_turns@k+1,?_sprintf+5
  2048   002DA8  C083  F06C         	movff	return_home_turns@index,?_sprintf+6
  2049   002DAC  C084  F06D         	movff	return_home_turns@index+1,?_sprintf+7
  2050   002DB0  90D8               	bcf	status,0,c
  2051   002DB2  0101               	movlb	1	; () banked
  2052   002DB4  3598               	rlcf	return_home_turns@k& (0+255),w,b
  2053   002DB6  6ED9               	movwf	fsr2l,c
  2054   002DB8  3599               	rlcf	(return_home_turns@k+1)& (0+255),w,b
  2055   002DBA  6EDA               	movwf	fsr2h,c
  2056   002DBC  0100               	movlb	0	; () banked
  2057   002DBE  5181               	movf	return_home_turns@counter_history& (0+255),w,b
  2058   002DC0  26D9               	addwf	fsr2l,f,c
  2059   002DC2  5182               	movf	(return_home_turns@counter_history+1)& (0+255),w,b
  2060   002DC4  22DA               	addwfc	fsr2h,f,c
  2061   002DC6  CFDE F06E          	movff	postinc2,?_sprintf+8
  2062   002DCA  CFDD F06F          	movff	postdec2,?_sprintf+9
  2063   002DCE  90D8               	bcf	status,0,c
  2064   002DD0  0101               	movlb	1	; () banked
  2065   002DD2  3598               	rlcf	return_home_turns@k& (0+255),w,b
  2066   002DD4  6ED9               	movwf	fsr2l,c
  2067   002DD6  3599               	rlcf	(return_home_turns@k+1)& (0+255),w,b
  2068   002DD8  6EDA               	movwf	fsr2h,c
  2069   002DDA  0100               	movlb	0	; () banked
  2070   002DDC  517F               	movf	return_home_turns@turn_history& (0+255),w,b
  2071   002DDE  26D9               	addwf	fsr2l,f,c
  2072   002DE0  5180               	movf	(return_home_turns@turn_history+1)& (0+255),w,b
  2073   002DE2  22DA               	addwfc	fsr2h,f,c
  2074   002DE4  CFDE F070          	movff	postinc2,?_sprintf+10
  2075   002DE8  CFDD F071          	movff	postdec2,?_sprintf+11
  2076   002DEC  ECC4  F023         	call	_sprintf	;wreg free
  2077   002DF0                     
  2078                           ;color.c: 231:             TxBufferedString(string1);
  2079   002DF0  0E00               	movlw	low return_home_turns@string1
  2080   002DF2  6E06               	movwf	TxBufferedString@string^0,c
  2081   002DF4  0E01               	movlw	high return_home_turns@string1
  2082   002DF6  6E07               	movwf	(TxBufferedString@string+1)^0,c
  2083   002DF8  EC52  F025         	call	_TxBufferedString	;wreg free
  2084   002DFC                     
  2085                           ;color.c: 232:             sendTxBuf();
  2086   002DFC  EC06  F026         	call	_sendTxBuf	;wreg free
  2087   002E00                     
  2088                           ;color.c: 233:             _delay((unsigned long)((2)*(64000000/4000.0)));
  2089   002E00  0E2A               	movlw	42
  2090   002E02  0100               	movlb	0	; () banked
  2091   002E04  6F89               	movwf	??_return_home_turns& (0+255),b
  2092   002E06  0E8D               	movlw	141
  2093   002E08                     u6077:
  2094   002E08  2EE8               	decfsz	wreg,f,c
  2095   002E0A  D7FE               	bra	u6077
  2096   002E0C  2F89               	decfsz	??_return_home_turns& (0+255),f,b
  2097   002E0E  D7FC               	bra	u6077
  2098   002E10  D000               	nop2	
  2099                           
  2100                           ;color.c: 235:             switch (turn_history[k]){
  2101   002E12  EF96  F017         	goto	l5175
  2102   002E16                     l5149:
  2103                           
  2104                           ; BSR set to: 0
  2105                           ;color.c: 237:                     turnLeft_90(mL,mR);
  2106   002E16  C085  F01E         	movff	return_home_turns@mL,turnLeft_90@mL
  2107   002E1A  C086  F01F         	movff	return_home_turns@mL+1,turnLeft_90@mL+1
  2108   002E1E  C087  F020         	movff	return_home_turns@mR,turnLeft_90@mR
  2109   002E22  C088  F021         	movff	return_home_turns@mR+1,turnLeft_90@mR+1
  2110   002E26  ECDA  F01C         	call	_turnLeft_90	;wreg free
  2111                           
  2112                           ;color.c: 238:                     break;
  2113   002E2A  EFCF  F017         	goto	l5177
  2114   002E2E                     l5151:
  2115                           
  2116                           ; BSR set to: 0
  2117                           ;color.c: 240:                     turnRight_90(mL,mR);
  2118   002E2E  C085  F01E         	movff	return_home_turns@mL,turnRight_90@mL
  2119   002E32  C086  F01F         	movff	return_home_turns@mL+1,turnRight_90@mL+1
  2120   002E36  C087  F020         	movff	return_home_turns@mR,turnRight_90@mR
  2121   002E3A  C088  F021         	movff	return_home_turns@mR+1,turnRight_90@mR+1
  2122   002E3E  EC3B  F01C         	call	_turnRight_90	;wreg free
  2123                           
  2124                           ;color.c: 241:                     break;
  2125   002E42  EFCF  F017         	goto	l5177
  2126   002E46                     l5153:
  2127                           
  2128                           ; BSR set to: 0
  2129                           ;color.c: 243:                     turn_180(mL,mR);
  2130   002E46  C085  F01E         	movff	return_home_turns@mL,turn_180@mL
  2131   002E4A  C086  F01F         	movff	return_home_turns@mL+1,turn_180@mL+1
  2132   002E4E  C087  F020         	movff	return_home_turns@mR,turn_180@mR
  2133   002E52  C088  F021         	movff	return_home_turns@mR+1,turn_180@mR+1
  2134   002E56  EC9C  F01B         	call	_turn_180	;wreg free
  2135                           
  2136                           ;color.c: 244:                     break;
  2137   002E5A  EFCF  F017         	goto	l5177
  2138   002E5E                     l5159:
  2139                           
  2140                           ; BSR set to: 0
  2141                           ;color.c: 252:                     turnLeft_135(mL,mR);
  2142   002E5E  C085  F01E         	movff	return_home_turns@mL,turnLeft_135@mL
  2143   002E62  C086  F01F         	movff	return_home_turns@mL+1,turnLeft_135@mL+1
  2144   002E66  C087  F020         	movff	return_home_turns@mR,turnLeft_135@mR
  2145   002E6A  C088  F021         	movff	return_home_turns@mR+1,turnLeft_135@mR+1
  2146   002E6E  EC17  F01E         	call	_turnLeft_135	;wreg free
  2147                           
  2148                           ;color.c: 253:                     break;
  2149   002E72  EFCF  F017         	goto	l5177
  2150   002E76                     l5161:
  2151                           
  2152                           ; BSR set to: 0
  2153                           ;color.c: 255:                     turnRight_135(mL,mR);
  2154   002E76  C085  F01E         	movff	return_home_turns@mL,turnRight_135@mL
  2155   002E7A  C086  F01F         	movff	return_home_turns@mL+1,turnRight_135@mL+1
  2156   002E7E  C087  F020         	movff	return_home_turns@mR,turnRight_135@mR
  2157   002E82  C088  F021         	movff	return_home_turns@mR+1,turnRight_135@mR+1
  2158   002E86  EC79  F01D         	call	_turnRight_135	;wreg free
  2159                           
  2160                           ;color.c: 256:                     break;
  2161   002E8A  EFCF  F017         	goto	l5177
  2162   002E8E                     l5163:
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;color.c: 258:                     forward(mL,mR);
  2166   002E8E  C085  F018         	movff	return_home_turns@mL,forward@mL
  2167   002E92  C086  F019         	movff	return_home_turns@mL+1,forward@mL+1
  2168   002E96  C087  F01A         	movff	return_home_turns@mR,forward@mR
  2169   002E9A  C088  F01B         	movff	return_home_turns@mR+1,forward@mR+1
  2170   002E9E  EC1B  F020         	call	_forward	;wreg free
  2171   002EA2                     
  2172                           ;color.c: 259:                     int i = (counter_history[k]-2);
  2173   002EA2  90D8               	bcf	status,0,c
  2174   002EA4  0101               	movlb	1	; () banked
  2175   002EA6  3598               	rlcf	return_home_turns@k& (0+255),w,b
  2176   002EA8  6ED9               	movwf	fsr2l,c
  2177   002EAA  3599               	rlcf	(return_home_turns@k+1)& (0+255),w,b
  2178   002EAC  6EDA               	movwf	fsr2h,c
  2179   002EAE  0100               	movlb	0	; () banked
  2180   002EB0  5181               	movf	return_home_turns@counter_history& (0+255),w,b
  2181   002EB2  26D9               	addwf	fsr2l,f,c
  2182   002EB4  5182               	movf	(return_home_turns@counter_history+1)& (0+255),w,b
  2183   002EB6  22DA               	addwfc	fsr2h,f,c
  2184   002EB8  CFDE F089          	movff	postinc2,??_return_home_turns
  2185   002EBC  CFDD F08A          	movff	postdec2,??_return_home_turns+1
  2186   002EC0  0EFE               	movlw	254
  2187   002EC2  2589               	addwf	??_return_home_turns& (0+255),w,b
  2188   002EC4  0101               	movlb	1	; () banked
  2189   002EC6  6F96               	movwf	return_home_turns@i& (0+255),b
  2190   002EC8  0EFF               	movlw	255
  2191   002ECA  0100               	movlb	0	; () banked
  2192   002ECC  218A               	addwfc	(??_return_home_turns+1)& (0+255),w,b
  2193   002ECE  0101               	movlb	1	; () banked
  2194   002ED0  6F97               	movwf	(return_home_turns@i+1)& (0+255),b
  2195                           
  2196                           ;color.c: 260:                     while(i>0){
  2197   002ED2  EF7A  F017         	goto	l131
  2198   002ED6                     l5167:
  2199                           
  2200                           ; BSR set to: 1
  2201                           ;color.c: 261:                     i--;
  2202   002ED6  0796               	decf	return_home_turns@i& (0+255),f,b
  2203   002ED8  A0D8               	btfss	status,0,c
  2204   002EDA  0797               	decf	(return_home_turns@i+1)& (0+255),f,b
  2205   002EDC                     
  2206                           ; BSR set to: 1
  2207                           ;color.c: 262:                     _delay((unsigned long)((50)*(64000000/4000.0)));
  2208   002EDC  0E05               	movlw	5
  2209   002EDE  0100               	movlb	0	; () banked
  2210   002EE0  6F8A               	movwf	(??_return_home_turns+1)& (0+255),b
  2211   002EE2  0E0F               	movlw	15
  2212   002EE4  6F89               	movwf	??_return_home_turns& (0+255),b
  2213   002EE6  0EF1               	movlw	241
  2214   002EE8                     u6087:
  2215   002EE8  2EE8               	decfsz	wreg,f,c
  2216   002EEA  D7FE               	bra	u6087
  2217   002EEC  2F89               	decfsz	??_return_home_turns& (0+255),f,b
  2218   002EEE  D7FC               	bra	u6087
  2219   002EF0  2F8A               	decfsz	(??_return_home_turns+1)& (0+255),f,b
  2220   002EF2  D7FA               	bra	u6087
  2221   002EF4                     l131:
  2222                           
  2223                           ;color.c: 260:                     while(i>0){
  2224   002EF4  0101               	movlb	1	; () banked
  2225   002EF6  BF97               	btfsc	(return_home_turns@i+1)& (0+255),7,b
  2226   002EF8  EF88  F017         	goto	u5760
  2227   002EFC  5197               	movf	(return_home_turns@i+1)& (0+255),w,b
  2228   002EFE  E106               	bnz	u5761
  2229   002F00  0596               	decf	return_home_turns@i& (0+255),w,b
  2230   002F02  B0D8               	btfsc	status,0,c
  2231   002F04  EF86  F017         	goto	u5761
  2232   002F08  EF88  F017         	goto	u5760
  2233   002F0C                     u5761:
  2234   002F0C  EF6B  F017         	goto	l5167
  2235   002F10                     u5760:
  2236   002F10  EFCF  F017         	goto	l5177
  2237   002F14                     l5171:
  2238                           
  2239                           ; BSR set to: 0
  2240                           ;color.c: 266:                     stop(mL,mR);
  2241   002F14  C085  F018         	movff	return_home_turns@mL,stop@mL
  2242   002F18  C086  F019         	movff	return_home_turns@mL+1,stop@mL+1
  2243   002F1C  C087  F01A         	movff	return_home_turns@mR,stop@mR
  2244   002F20  C088  F01B         	movff	return_home_turns@mR+1,stop@mR+1
  2245   002F24  ECBF  F021         	call	_stop	;wreg free
  2246                           
  2247                           ;color.c: 267:                     break;
  2248   002F28  EFCF  F017         	goto	l5177
  2249   002F2C                     l5175:
  2250   002F2C  90D8               	bcf	status,0,c
  2251   002F2E  0101               	movlb	1	; () banked
  2252   002F30  3598               	rlcf	return_home_turns@k& (0+255),w,b
  2253   002F32  6ED9               	movwf	fsr2l,c
  2254   002F34  3599               	rlcf	(return_home_turns@k+1)& (0+255),w,b
  2255   002F36  6EDA               	movwf	fsr2h,c
  2256   002F38  0100               	movlb	0	; () banked
  2257   002F3A  517F               	movf	return_home_turns@turn_history& (0+255),w,b
  2258   002F3C  26D9               	addwf	fsr2l,f,c
  2259   002F3E  5180               	movf	(return_home_turns@turn_history+1)& (0+255),w,b
  2260   002F40  22DA               	addwfc	fsr2h,f,c
  2261   002F42  CFDE F089          	movff	postinc2,??_return_home_turns
  2262   002F46  CFDD F08A          	movff	postdec2,??_return_home_turns+1
  2263                           
  2264                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2265                           ; Switch size 1, requested type "simple"
  2266                           ; Number of cases is 1, Range of values is 0 to 0
  2267                           ; switch strategies available:
  2268                           ; Name         Instructions Cycles
  2269                           ; simple_byte            4     3 (average)
  2270                           ;	Chosen strategy is simple_byte
  2271   002F4A  518A               	movf	(??_return_home_turns+1)& (0+255),w,b
  2272   002F4C  0A00               	xorlw	0	; case 0
  2273   002F4E  B4D8               	btfsc	status,2,c
  2274   002F50  EFAC  F017         	goto	l5365
  2275   002F54  EF8A  F017         	goto	l5171
  2276   002F58                     l5365:
  2277                           
  2278                           ; BSR set to: 0
  2279                           ; Switch size 1, requested type "simple"
  2280                           ; Number of cases is 8, Range of values is 0 to 7
  2281                           ; switch strategies available:
  2282                           ; Name         Instructions Cycles
  2283                           ; simple_byte           25    13 (average)
  2284                           ;	Chosen strategy is simple_byte
  2285   002F58  5189               	movf	??_return_home_turns& (0+255),w,b
  2286   002F5A  0A00               	xorlw	0	; case 0
  2287   002F5C  B4D8               	btfsc	status,2,c
  2288   002F5E  EF47  F017         	goto	l5163
  2289   002F62  0A01               	xorlw	1	; case 1
  2290   002F64  B4D8               	btfsc	status,2,c
  2291   002F66  EF0B  F017         	goto	l5149
  2292   002F6A  0A03               	xorlw	3	; case 2
  2293   002F6C  B4D8               	btfsc	status,2,c
  2294   002F6E  EF17  F017         	goto	l5151
  2295   002F72  0A01               	xorlw	1	; case 3
  2296   002F74  B4D8               	btfsc	status,2,c
  2297   002F76  EF23  F017         	goto	l5153
  2298   002F7A  0A07               	xorlw	7	; case 4
  2299   002F7C  B4D8               	btfsc	status,2,c
  2300   002F7E  EF0B  F017         	goto	l5149
  2301   002F82  0A01               	xorlw	1	; case 5
  2302   002F84  B4D8               	btfsc	status,2,c
  2303   002F86  EF17  F017         	goto	l5151
  2304   002F8A  0A03               	xorlw	3	; case 6
  2305   002F8C  B4D8               	btfsc	status,2,c
  2306   002F8E  EF2F  F017         	goto	l5159
  2307   002F92  0A01               	xorlw	1	; case 7
  2308   002F94  B4D8               	btfsc	status,2,c
  2309   002F96  EF3B  F017         	goto	l5161
  2310   002F9A  EF8A  F017         	goto	l5171
  2311   002F9E                     l5177:
  2312                           
  2313                           ;color.c: 270:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2314   002F9E  0E05               	movlw	5
  2315   002FA0  0100               	movlb	0	; () banked
  2316   002FA2  6F8A               	movwf	(??_return_home_turns+1)& (0+255),b
  2317   002FA4  0E0F               	movlw	15
  2318   002FA6  6F89               	movwf	??_return_home_turns& (0+255),b
  2319   002FA8  0EF1               	movlw	241
  2320   002FAA                     u6097:
  2321   002FAA  2EE8               	decfsz	wreg,f,c
  2322   002FAC  D7FE               	bra	u6097
  2323   002FAE  2F89               	decfsz	??_return_home_turns& (0+255),f,b
  2324   002FB0  D7FC               	bra	u6097
  2325   002FB2  2F8A               	decfsz	(??_return_home_turns+1)& (0+255),f,b
  2326   002FB4  D7FA               	bra	u6097
  2327   002FB6                     
  2328                           ;color.c: 271:         }
  2329   002FB6  0101               	movlb	1	; () banked
  2330   002FB8  0798               	decf	return_home_turns@k& (0+255),f,b
  2331   002FBA  A0D8               	btfss	status,0,c
  2332   002FBC  0799               	decf	(return_home_turns@k+1)& (0+255),f,b
  2333   002FBE  BF99               	btfsc	(return_home_turns@k+1)& (0+255),7,b
  2334   002FC0  EFE6  F017         	goto	u5770
  2335   002FC4  EFE4  F017         	goto	u5771
  2336   002FC8                     u5771:
  2337   002FC8  EFBE  F016         	goto	l5139
  2338   002FCC                     u5770:
  2339   002FCC                     l135:
  2340                           
  2341                           ; BSR set to: 1
  2342   002FCC  0012               	return		;funcret
  2343   002FCE                     __end_of_return_home_turns:
  2344                           	callstack 0
  2345                           
  2346 ;; *************** function _sprintf *****************
  2347 ;; Defined at:
  2348 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;  s               2    6[BANK0 ] PTR unsigned char 
  2351 ;;		 -> return_home_turns@string1(150), 
  2352 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  2353 ;;		 -> STR_1(22), 
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;  f              11   20[BANK0 ] struct _IO_FILE
  2356 ;;  ap              2   18[BANK0 ] PTR void [1]
  2357 ;;		 -> ?_sprintf(2), 
  2358 ;;  ret             2    0        int 
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  2    6[BANK0 ] int 
  2361 ;; Registers used:
  2362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2368 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2369 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2371 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2372 ;;Total ram usage:       25 bytes
  2373 ;; Hardware stack levels used: 1
  2374 ;; Hardware stack levels required when called: 9
  2375 ;; This function calls:
  2376 ;;		_vfprintf
  2377 ;; This function is called by:
  2378 ;;		_return_home_turns
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           	psect	text3
  2383   004788                     __ptext3:
  2384                           	callstack 0
  2385   004788                     _sprintf:
  2386                           	callstack 20
  2387   004788  0E6A               	movlw	low (?_sprintf+4)
  2388   00478A  0100               	movlb	0	; () banked
  2389   00478C  6F72               	movwf	sprintf@ap& (0+255),b
  2390   00478E  0E00               	movlw	high (?_sprintf+4)
  2391   004790  6F73               	movwf	(sprintf@ap+1)& (0+255),b
  2392   004792  C066  F074         	movff	sprintf@s,sprintf@f
  2393   004796  C067  F075         	movff	sprintf@s+1,sprintf@f+1
  2394   00479A                     
  2395                           ; BSR set to: 0
  2396   00479A  0E00               	movlw	0
  2397   00479C  6F78               	movwf	(sprintf@f+4)& (0+255),b
  2398   00479E  0E00               	movlw	0
  2399   0047A0  6F77               	movwf	(sprintf@f+3)& (0+255),b
  2400   0047A2                     
  2401                           ; BSR set to: 0
  2402   0047A2  0E00               	movlw	0
  2403   0047A4  6F7E               	movwf	(sprintf@f+10)& (0+255),b
  2404   0047A6  0E00               	movlw	0
  2405   0047A8  6F7D               	movwf	(sprintf@f+9)& (0+255),b
  2406   0047AA                     
  2407                           ; BSR set to: 0
  2408   0047AA  0E74               	movlw	low sprintf@f
  2409   0047AC  6F60               	movwf	vfprintf@fp& (0+255),b
  2410   0047AE  0E00               	movlw	high sprintf@f
  2411   0047B0  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  2412   0047B2  C068  F062         	movff	sprintf@fmt,vfprintf@fmt
  2413   0047B6  C069  F063         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2414   0047BA  0E72               	movlw	low sprintf@ap
  2415   0047BC  6F64               	movwf	vfprintf@ap& (0+255),b
  2416   0047BE  0E00               	movlw	high sprintf@ap
  2417   0047C0  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
  2418   0047C2  EC9A  F023         	call	_vfprintf	;wreg free
  2419   0047C6  0100               	movlb	0	; () banked
  2420   0047C8  5177               	movf	(sprintf@f+3)& (0+255),w,b
  2421   0047CA  2566               	addwf	sprintf@s& (0+255),w,b
  2422   0047CC  6ED9               	movwf	fsr2l,c
  2423   0047CE  5178               	movf	(sprintf@f+4)& (0+255),w,b
  2424   0047D0  2167               	addwfc	(sprintf@s+1)& (0+255),w,b
  2425   0047D2  6EDA               	movwf	fsr2h,c
  2426   0047D4  0E00               	movlw	0
  2427   0047D6  6EDF               	movwf	indf2,c
  2428   0047D8                     
  2429                           ; BSR set to: 0
  2430   0047D8  0012               	return		;funcret
  2431   0047DA                     __end_of_sprintf:
  2432                           	callstack 0
  2433                           
  2434 ;; *************** function _vfprintf *****************
  2435 ;; Defined at:
  2436 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2439 ;;		 -> sprintf@f(11), 
  2440 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2441 ;;		 -> STR_1(22), 
  2442 ;;  ap              2    4[BANK0 ] PTR PTR void 
  2443 ;;		 -> sprintf@ap(2), 
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;  cfmt            2   84[COMRAM] PTR unsigned char 
  2446 ;;		 -> STR_1(22), 
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  2    0[BANK0 ] int 
  2449 ;; Registers used:
  2450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2456 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2457 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2459 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2460 ;;Total ram usage:        8 bytes
  2461 ;; Hardware stack levels used: 1
  2462 ;; Hardware stack levels required when called: 8
  2463 ;; This function calls:
  2464 ;;		_vfpfcnvrt
  2465 ;; This function is called by:
  2466 ;;		_sprintf
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           	psect	text4
  2471   004734                     __ptext4:
  2472                           	callstack 0
  2473   004734                     _vfprintf:
  2474                           	callstack 20
  2475   004734                     
  2476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2477   004734  C062  F055         	movff	vfprintf@fmt,vfprintf@cfmt
  2478   004738  C063  F056         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2479                           
  2480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2481   00473C  EFAE  F023         	goto	l4959
  2482   004740                     l4957:
  2483                           
  2484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2485   004740  C060  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  2486   004744  C061  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2487   004748  0E55               	movlw	low vfprintf@cfmt
  2488   00474A  6E45               	movwf	vfpfcnvrt@fmt^0,c
  2489   00474C  0E00               	movlw	high vfprintf@cfmt
  2490   00474E  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2491   004750  C064  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  2492   004754  C065  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2493   004758  ECED  F01A         	call	_vfpfcnvrt	;wreg free
  2494   00475C                     l4959:
  2495                           
  2496                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2497   00475C  C055  FFF6         	movff	vfprintf@cfmt,tblptrl
  2498   004760  C056  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2499   004764                     	if	0	;tblptru may be non-zero
  2500   004764                     	endif
  2501   004764                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2502   004764  0E00               	movlw	low (__mediumconst shr (0+16))
  2503   004766  6EF8               	movwf	tblptru,c
  2504   004768                     	endif
  2505   004768  0008               	tblrd		*
  2506   00476A  50F5               	movf	tablat,w,c
  2507   00476C  0900               	iorlw	0
  2508   00476E  A4D8               	btfss	status,2,c
  2509   004770  EFBC  F023         	goto	u5421
  2510   004774  EFBE  F023         	goto	u5420
  2511   004778                     u5421:
  2512   004778  EFA0  F023         	goto	l4957
  2513   00477C                     u5420:
  2514   00477C                     
  2515                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2516   00477C  0E00               	movlw	0
  2517   00477E  0100               	movlb	0	; () banked
  2518   004780  6F61               	movwf	(?_vfprintf+1)& (0+255),b
  2519   004782  0E00               	movlw	0
  2520   004784  6F60               	movwf	?_vfprintf& (0+255),b
  2521   004786                     
  2522                           ; BSR set to: 0
  2523   004786  0012               	return		;funcret
  2524   004788                     __end_of_vfprintf:
  2525                           	callstack 0
  2526                           
  2527 ;; *************** function _vfpfcnvrt *****************
  2528 ;; Defined at:
  2529 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  2532 ;;		 -> sprintf@f(11), 
  2533 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  2534 ;;		 -> vfprintf@cfmt(2), 
  2535 ;;  ap              2   70[COMRAM] PTR PTR void 
  2536 ;;		 -> sprintf@ap(2), 
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;  convarg         8   74[COMRAM] struct .
  2539 ;;  cp              2   82[COMRAM] PTR unsigned char 
  2540 ;;		 -> STR_1(22), 
  2541 ;;  i               2    0        int 
  2542 ;;  done            2    0        int 
  2543 ;;  c               1    0        unsigned char 
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1    wreg      void 
  2546 ;; Registers used:
  2547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2553 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2554 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2555 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2556 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2557 ;;Total ram usage:       18 bytes
  2558 ;; Hardware stack levels used: 1
  2559 ;; Hardware stack levels required when called: 7
  2560 ;; This function calls:
  2561 ;;		_dtoa
  2562 ;;		_fputc
  2563 ;; This function is called by:
  2564 ;;		_vfprintf
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           	psect	text5
  2569   0035DA                     __ptext5:
  2570                           	callstack 0
  2571   0035DA                     _vfpfcnvrt:
  2572                           	callstack 20
  2573   0035DA                     
  2574                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2575   0035DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2576   0035DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2577   0035E2  CFDE FFF6          	movff	postinc2,tblptrl
  2578   0035E6  CFDD FFF7          	movff	postdec2,tblptrh
  2579   0035EA                     	if	0	;tblptru may be non-zero
  2580   0035EA                     	endif
  2581   0035EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2582   0035EA  0E00               	movlw	low (__mediumconst shr (0+16))
  2583   0035EC  6EF8               	movwf	tblptru,c
  2584   0035EE                     	endif
  2585   0035EE  0008               	tblrd		*
  2586   0035F0  50F5               	movf	tablat,w,c
  2587   0035F2  0A25               	xorlw	37
  2588   0035F4  A4D8               	btfss	status,2,c
  2589   0035F6  EFFF  F01A         	goto	u5391
  2590   0035FA  EF01  F01B         	goto	u5390
  2591   0035FE                     u5391:
  2592   0035FE  EF85  F01B         	goto	l4949
  2593   003602                     u5390:
  2594   003602                     
  2595                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2596   003602  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2597   003606  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2598   00360A  2ADE               	incf	postinc2,f,c
  2599   00360C  0E00               	movlw	0
  2600   00360E  22DD               	addwfc	postdec2,f,c
  2601   003610                     
  2602                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2603   003610  0E00               	movlw	0
  2604   003612  0100               	movlb	0	; () banked
  2605   003614  6FE5               	movwf	(_width+1)& (0+255),b
  2606   003616  0E00               	movlw	0
  2607   003618  6FE4               	movwf	_width& (0+255),b
  2608   00361A  C0E4  F0EC         	movff	_width,_flags
  2609   00361E                     
  2610                           ; BSR set to: 0
  2611                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2612   00361E  69E6               	setf	_prec& (0+255),b
  2613   003620  69E7               	setf	(_prec+1)& (0+255),b
  2614   003622                     
  2615                           ; BSR set to: 0
  2616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2617   003622  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2618   003626  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2619   00362A  CFDE F053          	movff	postinc2,vfpfcnvrt@cp
  2620   00362E  CFDD F054          	movff	postdec2,vfpfcnvrt@cp+1
  2621   003632                     
  2622                           ; BSR set to: 0
  2623                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2624   003632  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2625   003636  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2626   00363A                     	if	0	;tblptru may be non-zero
  2627   00363A                     	endif
  2628   00363A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2629   00363A  0E00               	movlw	low (__mediumconst shr (0+16))
  2630   00363C  6EF8               	movwf	tblptru,c
  2631   00363E                     	endif
  2632   00363E  0008               	tblrd		*
  2633   003640  50F5               	movf	tablat,w,c
  2634   003642  0A64               	xorlw	100
  2635   003644  B4D8               	btfsc	status,2,c
  2636   003646  EF27  F01B         	goto	u5401
  2637   00364A  EF29  F01B         	goto	u5400
  2638   00364E                     u5401:
  2639   00364E  EF39  F01B         	goto	l4939
  2640   003652                     u5400:
  2641   003652                     
  2642                           ; BSR set to: 0
  2643   003652  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2644   003656  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2645   00365A                     	if	0	;tblptru may be non-zero
  2646   00365A                     	endif
  2647   00365A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2648   00365A  0E00               	movlw	low (__mediumconst shr (0+16))
  2649   00365C  6EF8               	movwf	tblptru,c
  2650   00365E                     	endif
  2651   00365E  0008               	tblrd		*
  2652   003660  50F5               	movf	tablat,w,c
  2653   003662  0A69               	xorlw	105
  2654   003664  A4D8               	btfss	status,2,c
  2655   003666  EF37  F01B         	goto	u5411
  2656   00366A  EF39  F01B         	goto	u5410
  2657   00366E                     u5411:
  2658   00366E  EF7C  F01B         	goto	l4945
  2659   003672                     u5410:
  2660   003672                     l4939:
  2661                           
  2662                           ; BSR set to: 0
  2663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2664   003672  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2665   003676  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2666   00367A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2667   00367E  0E02               	movlw	2
  2668   003680  26DE               	addwf	postinc2,f,c
  2669   003682  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2670   003686  0E00               	movlw	0
  2671   003688  22DD               	addwfc	postdec2,f,c
  2672   00368A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2673   00368E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2674   003692  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg
  2675   003696  CFDD F04C          	movff	postdec2,vfpfcnvrt@convarg+1
  2676   00369A  0E00               	movlw	0
  2677   00369C  BE4C               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2678   00369E  0EFF               	movlw	-1
  2679   0036A0  6E4D               	movwf	(vfpfcnvrt@convarg+2)^0,c
  2680   0036A2  6E4E               	movwf	(vfpfcnvrt@convarg+3)^0,c
  2681   0036A4  6E4F               	movwf	(vfpfcnvrt@convarg+4)^0,c
  2682   0036A6  6E50               	movwf	(vfpfcnvrt@convarg+5)^0,c
  2683   0036A8  6E51               	movwf	(vfpfcnvrt@convarg+6)^0,c
  2684   0036AA  6E52               	movwf	(vfpfcnvrt@convarg+7)^0,c
  2685                           
  2686                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2687   0036AC  0E01               	movlw	1
  2688   0036AE  2453               	addwf	vfpfcnvrt@cp^0,w,c
  2689   0036B0  6E49               	movwf	??_vfpfcnvrt^0,c
  2690   0036B2  0E00               	movlw	0
  2691   0036B4  2054               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2692   0036B6  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  2693   0036B8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2694   0036BC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2695   0036C0  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  2696   0036C4  C04A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2697   0036C8                     
  2698                           ; BSR set to: 0
  2699                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2700   0036C8  C043  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  2701   0036CC  C044  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2702   0036D0  C04B  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  2703   0036D4  C04C  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2704   0036D8  C04D  F024         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2705   0036DC  C04E  F025         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2706   0036E0  C04F  F026         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2707   0036E4  C050  F027         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2708   0036E8  C051  F028         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2709   0036EC  C052  F029         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2710   0036F0  EC71  F015         	call	_dtoa	;wreg free
  2711   0036F4  EF9B  F01B         	goto	l1269
  2712   0036F8                     l4945:
  2713                           
  2714                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2715   0036F8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2716   0036FC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2717   003700  2ADE               	incf	postinc2,f,c
  2718   003702  0E00               	movlw	0
  2719   003704  22DD               	addwfc	postdec2,f,c
  2720   003706  EF9B  F01B         	goto	l1269
  2721   00370A                     l4949:
  2722                           
  2723                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2724   00370A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2725   00370E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2726   003712  CFDE FFF6          	movff	postinc2,tblptrl
  2727   003716  CFDD FFF7          	movff	postdec2,tblptrh
  2728   00371A                     	if	0	;tblptru may be non-zero
  2729   00371A                     	endif
  2730   00371A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2731   00371A  0E00               	movlw	low (__mediumconst shr (0+16))
  2732   00371C  6EF8               	movwf	tblptru,c
  2733   00371E                     	endif
  2734   00371E  0008               	tblrd		*
  2735   003720  50F5               	movf	tablat,w,c
  2736   003722  6E05               	movwf	fputc@c^0,c
  2737   003724  6A06               	clrf	(fputc@c+1)^0,c
  2738   003726  C043  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2739   00372A  C044  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2740   00372E  EC5A  F021         	call	_fputc	;wreg free
  2741   003732  EF7C  F01B         	goto	l4945
  2742   003736                     l1269:
  2743   003736  0012               	return		;funcret
  2744   003738                     __end_of_vfpfcnvrt:
  2745                           	callstack 0
  2746                           
  2747 ;; *************** function _dtoa *****************
  2748 ;; Defined at:
  2749 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  2752 ;;		 -> sprintf@f(11), 
  2753 ;;  d               8   33[COMRAM] long long 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;  n               8   55[COMRAM] long long 
  2756 ;;  i               2   64[COMRAM] int 
  2757 ;;  w               2   53[COMRAM] int 
  2758 ;;  p               2   51[COMRAM] int 
  2759 ;;  s               1   63[COMRAM] unsigned char 
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      void 
  2762 ;; Registers used:
  2763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2769 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2770 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2771 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2772 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2773 ;;Total ram usage:       35 bytes
  2774 ;; Hardware stack levels used: 1
  2775 ;; Hardware stack levels required when called: 6
  2776 ;; This function calls:
  2777 ;;		___aodiv
  2778 ;;		___aomod
  2779 ;;		_abs
  2780 ;;		_pad
  2781 ;; This function is called by:
  2782 ;;		_vfpfcnvrt
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           	psect	text6
  2787   002AE2                     __ptext6:
  2788                           	callstack 0
  2789   002AE2                     _dtoa:
  2790                           	callstack 20
  2791   002AE2                     
  2792                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2793   002AE2  C022  F038         	movff	dtoa@d,dtoa@n
  2794   002AE6  C023  F039         	movff	dtoa@d+1,dtoa@n+1
  2795   002AEA  C024  F03A         	movff	dtoa@d+2,dtoa@n+2
  2796   002AEE  C025  F03B         	movff	dtoa@d+3,dtoa@n+3
  2797   002AF2  C026  F03C         	movff	dtoa@d+4,dtoa@n+4
  2798   002AF6  C027  F03D         	movff	dtoa@d+5,dtoa@n+5
  2799   002AFA  C028  F03E         	movff	dtoa@d+6,dtoa@n+6
  2800   002AFE  C029  F03F         	movff	dtoa@d+7,dtoa@n+7
  2801   002B02                     
  2802                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2803   002B02  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  2804   002B04  EF86  F015         	goto	u5291
  2805   002B08  EF89  F015         	goto	u5290
  2806   002B0C                     u5291:
  2807   002B0C  0E01               	movlw	1
  2808   002B0E  EF8A  F015         	goto	u5300
  2809   002B12                     u5290:
  2810   002B12  0E00               	movlw	0
  2811   002B14                     u5300:
  2812   002B14  6E40               	movwf	dtoa@s^0,c
  2813   002B16                     
  2814                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2815   002B16  5040               	movf	dtoa@s^0,w,c
  2816   002B18  B4D8               	btfsc	status,2,c
  2817   002B1A  EF91  F015         	goto	u5311
  2818   002B1E  EF93  F015         	goto	u5310
  2819   002B22                     u5311:
  2820   002B22  EFA3  F015         	goto	l4881
  2821   002B26                     u5310:
  2822   002B26                     
  2823                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2824   002B26  1E3F               	comf	(dtoa@n+7)^0,f,c
  2825   002B28  1E3E               	comf	(dtoa@n+6)^0,f,c
  2826   002B2A  1E3D               	comf	(dtoa@n+5)^0,f,c
  2827   002B2C  1E3C               	comf	(dtoa@n+4)^0,f,c
  2828   002B2E  1E3B               	comf	(dtoa@n+3)^0,f,c
  2829   002B30  1E3A               	comf	(dtoa@n+2)^0,f,c
  2830   002B32  1E39               	comf	(dtoa@n+1)^0,f,c
  2831   002B34  6C38               	negf	dtoa@n^0,c
  2832   002B36  0E00               	movlw	0
  2833   002B38  2239               	addwfc	(dtoa@n+1)^0,f,c
  2834   002B3A  223A               	addwfc	(dtoa@n+2)^0,f,c
  2835   002B3C  223B               	addwfc	(dtoa@n+3)^0,f,c
  2836   002B3E  223C               	addwfc	(dtoa@n+4)^0,f,c
  2837   002B40  223D               	addwfc	(dtoa@n+5)^0,f,c
  2838   002B42  223E               	addwfc	(dtoa@n+6)^0,f,c
  2839   002B44  223F               	addwfc	(dtoa@n+7)^0,f,c
  2840   002B46                     l4881:
  2841                           
  2842                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2843   002B46  0100               	movlb	0	; () banked
  2844   002B48  BFE7               	btfsc	(_prec+1)& (0+255),7,b
  2845   002B4A  EFB1  F015         	goto	u5320
  2846   002B4E  51E7               	movf	(_prec+1)& (0+255),w,b
  2847   002B50  E106               	bnz	u5321
  2848   002B52  05E6               	decf	_prec& (0+255),w,b
  2849   002B54  B0D8               	btfsc	status,0,c
  2850   002B56  EFAF  F015         	goto	u5321
  2851   002B5A  EFB1  F015         	goto	u5320
  2852   002B5E                     u5321:
  2853   002B5E  EFB7  F015         	goto	l1248
  2854   002B62                     u5320:
  2855   002B62                     
  2856                           ; BSR set to: 0
  2857   002B62  0E00               	movlw	0
  2858   002B64  6E35               	movwf	(dtoa@p+1)^0,c
  2859   002B66  0E01               	movlw	1
  2860   002B68  6E34               	movwf	dtoa@p^0,c
  2861   002B6A  EFBB  F015         	goto	l1250
  2862   002B6E                     l1248:
  2863                           
  2864                           ; BSR set to: 0
  2865   002B6E  C0E6  F034         	movff	_prec,dtoa@p
  2866   002B72  C0E7  F035         	movff	_prec+1,dtoa@p+1
  2867   002B76                     l1250:
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2871   002B76  C0E4  F036         	movff	_width,dtoa@w
  2872   002B7A  C0E5  F037         	movff	_width+1,dtoa@w+1
  2873   002B7E                     
  2874                           ; BSR set to: 0
  2875                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2876   002B7E  5040               	movf	dtoa@s^0,w,c
  2877   002B80  B4D8               	btfsc	status,2,c
  2878   002B82  EFC5  F015         	goto	u5331
  2879   002B86  EFC7  F015         	goto	u5330
  2880   002B8A                     u5331:
  2881   002B8A  EFDE  F015         	goto	l1251
  2882   002B8E                     u5330:
  2883   002B8E                     
  2884                           ; BSR set to: 0
  2885                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2886   002B8E  0636               	decf	dtoa@w^0,f,c
  2887   002B90  A0D8               	btfss	status,0,c
  2888   002B92  0637               	decf	(dtoa@w+1)^0,f,c
  2889   002B94                     
  2890                           ; BSR set to: 0
  2891                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2892   002B94  5040               	movf	dtoa@s^0,w,c
  2893   002B96  A4D8               	btfss	status,2,c
  2894   002B98  EFD0  F015         	goto	u5341
  2895   002B9C  EFD2  F015         	goto	u5340
  2896   002BA0                     u5341:
  2897   002BA0  EFD8  F015         	goto	l4893
  2898   002BA4                     u5340:
  2899   002BA4                     
  2900                           ; BSR set to: 0
  2901   002BA4  0E00               	movlw	0
  2902   002BA6  6E33               	movwf	(_dtoa$2664+1)^0,c
  2903   002BA8  0E2B               	movlw	43
  2904   002BAA  6E32               	movwf	_dtoa$2664^0,c
  2905   002BAC  EFDC  F015         	goto	l4895
  2906   002BB0                     l4893:
  2907                           
  2908                           ; BSR set to: 0
  2909   002BB0  0E00               	movlw	0
  2910   002BB2  6E33               	movwf	(_dtoa$2664+1)^0,c
  2911   002BB4  0E2D               	movlw	45
  2912   002BB6  6E32               	movwf	_dtoa$2664^0,c
  2913   002BB8                     l4895:
  2914                           
  2915                           ; BSR set to: 0
  2916   002BB8  C032  F040         	movff	_dtoa$2664,dtoa@s
  2917   002BBC                     l1251:
  2918                           
  2919                           ; BSR set to: 0
  2920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  2921   002BBC  0E00               	movlw	0
  2922   002BBE  6E42               	movwf	(dtoa@i+1)^0,c
  2923   002BC0  0E1F               	movlw	31
  2924   002BC2  6E41               	movwf	dtoa@i^0,c
  2925   002BC4                     
  2926                           ; BSR set to: 0
  2927                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  2928   002BC4  0E00               	movlw	0
  2929   002BC6  0101               	movlb	1	; () banked
  2930   002BC8  6FF5               	movwf	(_dbuf+31)& (0+255),b
  2931                           
  2932                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2933   002BCA  EF63  F016         	goto	l4909
  2934   002BCE                     l4899:
  2935                           
  2936                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2937   002BCE  0641               	decf	dtoa@i^0,f,c
  2938   002BD0  A0D8               	btfss	status,0,c
  2939   002BD2  0642               	decf	(dtoa@i+1)^0,f,c
  2940   002BD4                     
  2941                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2942   002BD4  0ED6               	movlw	low _dbuf
  2943   002BD6  2441               	addwf	dtoa@i^0,w,c
  2944   002BD8  6ED9               	movwf	fsr2l,c
  2945   002BDA  0E01               	movlw	high _dbuf
  2946   002BDC  2042               	addwfc	(dtoa@i+1)^0,w,c
  2947   002BDE  6EDA               	movwf	fsr2h,c
  2948   002BE0  C038  F005         	movff	dtoa@n,___aomod@dividend
  2949   002BE4  C039  F006         	movff	dtoa@n+1,___aomod@dividend+1
  2950   002BE8  C03A  F007         	movff	dtoa@n+2,___aomod@dividend+2
  2951   002BEC  C03B  F008         	movff	dtoa@n+3,___aomod@dividend+3
  2952   002BF0  C03C  F009         	movff	dtoa@n+4,___aomod@dividend+4
  2953   002BF4  C03D  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  2954   002BF8  C03E  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  2955   002BFC  C03F  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  2956   002C00  0E0A               	movlw	10
  2957   002C02  6E0D               	movwf	___aomod@divisor^0,c
  2958   002C04  0E00               	movlw	0
  2959   002C06  6E0E               	movwf	(___aomod@divisor+1)^0,c
  2960   002C08  0E00               	movlw	0
  2961   002C0A  6E0F               	movwf	(___aomod@divisor+2)^0,c
  2962   002C0C  0E00               	movlw	0
  2963   002C0E  6E10               	movwf	(___aomod@divisor+3)^0,c
  2964   002C10  0E00               	movlw	0
  2965   002C12  6E11               	movwf	(___aomod@divisor+4)^0,c
  2966   002C14  0E00               	movlw	0
  2967   002C16  6E12               	movwf	(___aomod@divisor+5)^0,c
  2968   002C18  0E00               	movlw	0
  2969   002C1A  6E13               	movwf	(___aomod@divisor+6)^0,c
  2970   002C1C  0E00               	movlw	0
  2971   002C1E  6E14               	movwf	(___aomod@divisor+7)^0,c
  2972   002C20  EC3B  F01A         	call	___aomod	;wreg free
  2973   002C24  C005  F02A         	movff	?___aomod,??_dtoa
  2974   002C28  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  2975   002C2C  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  2976   002C30  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  2977   002C34  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  2978   002C38  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  2979   002C3C  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  2980   002C40  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  2981   002C44  C02A  F017         	movff	??_dtoa,abs@a
  2982   002C48  C02B  F018         	movff	??_dtoa+1,abs@a+1
  2983   002C4C  EC18  F025         	call	_abs	;wreg free
  2984   002C50  5017               	movf	?_abs^0,w,c
  2985   002C52  0F30               	addlw	48
  2986   002C54  6EDF               	movwf	indf2,c
  2987   002C56                     
  2988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2989   002C56  0634               	decf	dtoa@p^0,f,c
  2990   002C58  A0D8               	btfss	status,0,c
  2991   002C5A  0635               	decf	(dtoa@p+1)^0,f,c
  2992   002C5C                     
  2993                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2994   002C5C  0636               	decf	dtoa@w^0,f,c
  2995   002C5E  A0D8               	btfss	status,0,c
  2996   002C60  0637               	decf	(dtoa@w+1)^0,f,c
  2997   002C62                     
  2998                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2999   002C62  C038  F005         	movff	dtoa@n,___aodiv@dividend
  3000   002C66  C039  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  3001   002C6A  C03A  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  3002   002C6E  C03B  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  3003   002C72  C03C  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  3004   002C76  C03D  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  3005   002C7A  C03E  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  3006   002C7E  C03F  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  3007   002C82  0E0A               	movlw	10
  3008   002C84  6E0D               	movwf	___aodiv@divisor^0,c
  3009   002C86  0E00               	movlw	0
  3010   002C88  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  3011   002C8A  0E00               	movlw	0
  3012   002C8C  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  3013   002C8E  0E00               	movlw	0
  3014   002C90  6E10               	movwf	(___aodiv@divisor+3)^0,c
  3015   002C92  0E00               	movlw	0
  3016   002C94  6E11               	movwf	(___aodiv@divisor+4)^0,c
  3017   002C96  0E00               	movlw	0
  3018   002C98  6E12               	movwf	(___aodiv@divisor+5)^0,c
  3019   002C9A  0E00               	movlw	0
  3020   002C9C  6E13               	movwf	(___aodiv@divisor+6)^0,c
  3021   002C9E  0E00               	movlw	0
  3022   002CA0  6E14               	movwf	(___aodiv@divisor+7)^0,c
  3023   002CA2  ECC1  F018         	call	___aodiv	;wreg free
  3024   002CA6  C005  F038         	movff	?___aodiv,dtoa@n
  3025   002CAA  C006  F039         	movff	?___aodiv+1,dtoa@n+1
  3026   002CAE  C007  F03A         	movff	?___aodiv+2,dtoa@n+2
  3027   002CB2  C008  F03B         	movff	?___aodiv+3,dtoa@n+3
  3028   002CB6  C009  F03C         	movff	?___aodiv+4,dtoa@n+4
  3029   002CBA  C00A  F03D         	movff	?___aodiv+5,dtoa@n+5
  3030   002CBE  C00B  F03E         	movff	?___aodiv+6,dtoa@n+6
  3031   002CC2  C00C  F03F         	movff	?___aodiv+7,dtoa@n+7
  3032   002CC6                     l4909:
  3033                           
  3034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3035   002CC6  BE42               	btfsc	(dtoa@i+1)^0,7,c
  3036   002CC8  EF6E  F016         	goto	u5351
  3037   002CCC  5042               	movf	(dtoa@i+1)^0,w,c
  3038   002CCE  E108               	bnz	u5350
  3039   002CD0  0441               	decf	dtoa@i^0,w,c
  3040   002CD2  A0D8               	btfss	status,0,c
  3041   002CD4  EF6E  F016         	goto	u5351
  3042   002CD8  EF70  F016         	goto	u5350
  3043   002CDC                     u5351:
  3044   002CDC  EF8C  F016         	goto	l4915
  3045   002CE0                     u5350:
  3046   002CE0  5038               	movf	dtoa@n^0,w,c
  3047   002CE2  1039               	iorwf	(dtoa@n+1)^0,w,c
  3048   002CE4  103A               	iorwf	(dtoa@n+2)^0,w,c
  3049   002CE6  103B               	iorwf	(dtoa@n+3)^0,w,c
  3050   002CE8  103C               	iorwf	(dtoa@n+4)^0,w,c
  3051   002CEA  103D               	iorwf	(dtoa@n+5)^0,w,c
  3052   002CEC  103E               	iorwf	(dtoa@n+6)^0,w,c
  3053   002CEE  103F               	iorwf	(dtoa@n+7)^0,w,c
  3054   002CF0  A4D8               	btfss	status,2,c
  3055   002CF2  EF7D  F016         	goto	u5361
  3056   002CF6  EF7F  F016         	goto	u5360
  3057   002CFA                     u5361:
  3058   002CFA  EFE7  F015         	goto	l4899
  3059   002CFE                     u5360:
  3060   002CFE  BE35               	btfsc	(dtoa@p+1)^0,7,c
  3061   002D00  EF8C  F016         	goto	u5370
  3062   002D04  5035               	movf	(dtoa@p+1)^0,w,c
  3063   002D06  E106               	bnz	u5371
  3064   002D08  0434               	decf	dtoa@p^0,w,c
  3065   002D0A  B0D8               	btfsc	status,0,c
  3066   002D0C  EF8A  F016         	goto	u5371
  3067   002D10  EF8C  F016         	goto	u5370
  3068   002D14                     u5371:
  3069   002D14  EFE7  F015         	goto	l4899
  3070   002D18                     u5370:
  3071   002D18                     l4915:
  3072                           
  3073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  3074   002D18  5040               	movf	dtoa@s^0,w,c
  3075   002D1A  B4D8               	btfsc	status,2,c
  3076   002D1C  EF92  F016         	goto	u5381
  3077   002D20  EF94  F016         	goto	u5380
  3078   002D24                     u5381:
  3079   002D24  EF9F  F016         	goto	l4921
  3080   002D28                     u5380:
  3081   002D28                     
  3082                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  3083   002D28  0641               	decf	dtoa@i^0,f,c
  3084   002D2A  A0D8               	btfss	status,0,c
  3085   002D2C  0642               	decf	(dtoa@i+1)^0,f,c
  3086   002D2E                     
  3087                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  3088   002D2E  0ED6               	movlw	low _dbuf
  3089   002D30  2441               	addwf	dtoa@i^0,w,c
  3090   002D32  6ED9               	movwf	fsr2l,c
  3091   002D34  0E01               	movlw	high _dbuf
  3092   002D36  2042               	addwfc	(dtoa@i+1)^0,w,c
  3093   002D38  6EDA               	movwf	fsr2h,c
  3094   002D3A  C040  FFDF         	movff	dtoa@s,indf2
  3095   002D3E                     l4921:
  3096                           
  3097                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3098   002D3E  C020  F015         	movff	dtoa@fp,pad@fp
  3099   002D42  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  3100   002D46  0ED6               	movlw	low _dbuf
  3101   002D48  2441               	addwf	dtoa@i^0,w,c
  3102   002D4A  6E17               	movwf	pad@buf^0,c
  3103   002D4C  0E01               	movlw	high _dbuf
  3104   002D4E  2042               	addwfc	(dtoa@i+1)^0,w,c
  3105   002D50  6E18               	movwf	(pad@buf+1)^0,c
  3106   002D52  C036  F019         	movff	dtoa@w,pad@p
  3107   002D56  C037  F01A         	movff	dtoa@w+1,pad@p+1
  3108   002D5A  ECF4  F022         	call	_pad	;wreg free
  3109   002D5E  0012               	return		;funcret
  3110   002D60                     __end_of_dtoa:
  3111                           	callstack 0
  3112                           
  3113 ;; *************** function _pad *****************
  3114 ;; Defined at:
  3115 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  3118 ;;		 -> sprintf@f(11), 
  3119 ;;  buf             2   22[COMRAM] PTR unsigned char 
  3120 ;;		 -> dbuf(32), 
  3121 ;;  p               2   24[COMRAM] int 
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;  w               2   29[COMRAM] int 
  3124 ;;  i               2   27[COMRAM] int 
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  1    wreg      void 
  3127 ;; Registers used:
  3128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3134 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3135 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3136 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3137 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3138 ;;Total ram usage:       11 bytes
  3139 ;; Hardware stack levels used: 1
  3140 ;; Hardware stack levels required when called: 5
  3141 ;; This function calls:
  3142 ;;		_fputc
  3143 ;;		_fputs
  3144 ;; This function is called by:
  3145 ;;		_dtoa
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           	psect	text7
  3150   0045E8                     __ptext7:
  3151                           	callstack 0
  3152   0045E8                     _pad:
  3153                           	callstack 20
  3154   0045E8                     
  3155                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  3156   0045E8  BE1A               	btfsc	(pad@p+1)^0,7,c
  3157   0045EA  EFF9  F022         	goto	u5261
  3158   0045EE  EFFB  F022         	goto	u5260
  3159   0045F2                     u5261:
  3160   0045F2  EF01  F023         	goto	l4859
  3161   0045F6                     u5260:
  3162   0045F6  C019  F01E         	movff	pad@p,pad@w
  3163   0045FA  C01A  F01F         	movff	pad@p+1,pad@w+1
  3164   0045FE  EF05  F023         	goto	l1239
  3165   004602                     l4859:
  3166   004602  0E00               	movlw	0
  3167   004604  6E1F               	movwf	(pad@w+1)^0,c
  3168   004606  0E00               	movlw	0
  3169   004608  6E1E               	movwf	pad@w^0,c
  3170   00460A                     l1239:
  3171                           
  3172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3173   00460A  0E00               	movlw	0
  3174   00460C  6E1D               	movwf	(pad@i+1)^0,c
  3175   00460E  0E00               	movlw	0
  3176   004610  6E1C               	movwf	pad@i^0,c
  3177                           
  3178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3179   004612  EF17  F023         	goto	l4865
  3180   004616                     l4861:
  3181                           
  3182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3183   004616  0E00               	movlw	0
  3184   004618  6E06               	movwf	(fputc@c+1)^0,c
  3185   00461A  0E20               	movlw	32
  3186   00461C  6E05               	movwf	fputc@c^0,c
  3187   00461E  C015  F007         	movff	pad@fp,fputc@fp
  3188   004622  C016  F008         	movff	pad@fp+1,fputc@fp+1
  3189   004626  EC5A  F021         	call	_fputc	;wreg free
  3190   00462A                     
  3191                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3192   00462A  4A1C               	infsnz	pad@i^0,f,c
  3193   00462C  2A1D               	incf	(pad@i+1)^0,f,c
  3194   00462E                     l4865:
  3195                           
  3196                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3197   00462E  501E               	movf	pad@w^0,w,c
  3198   004630  5C1C               	subwf	pad@i^0,w,c
  3199   004632  501D               	movf	(pad@i+1)^0,w,c
  3200   004634  0A80               	xorlw	128
  3201   004636  6E1B               	movwf	??_pad^0,c
  3202   004638  501F               	movf	(pad@w+1)^0,w,c
  3203   00463A  0A80               	xorlw	128
  3204   00463C  581B               	subwfb	??_pad^0,w,c
  3205   00463E  A0D8               	btfss	status,0,c
  3206   004640  EF24  F023         	goto	u5271
  3207   004644  EF26  F023         	goto	u5270
  3208   004648                     u5271:
  3209   004648  EF0B  F023         	goto	l4861
  3210   00464C                     u5270:
  3211   00464C                     
  3212                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3213   00464C  C017  F00E         	movff	pad@buf,fputs@s
  3214   004650  C018  F00F         	movff	pad@buf+1,fputs@s+1
  3215   004654  C015  F010         	movff	pad@fp,fputs@fp
  3216   004658  C016  F011         	movff	pad@fp+1,fputs@fp+1
  3217   00465C  ECD5  F024         	call	_fputs	;wreg free
  3218   004660  0012               	return		;funcret
  3219   004662                     __end_of_pad:
  3220                           	callstack 0
  3221                           
  3222 ;; *************** function _fputs *****************
  3223 ;; Defined at:
  3224 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;  s               2   13[COMRAM] PTR const unsigned char 
  3227 ;;		 -> dbuf(32), 
  3228 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  3229 ;;		 -> sprintf@f(11), 
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;  i               2   18[COMRAM] int 
  3232 ;;  c               1   17[COMRAM] unsigned char 
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  2   13[COMRAM] int 
  3235 ;; Registers used:
  3236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3242 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3243 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3245 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3246 ;;Total ram usage:        7 bytes
  3247 ;; Hardware stack levels used: 1
  3248 ;; Hardware stack levels required when called: 4
  3249 ;; This function calls:
  3250 ;;		_fputc
  3251 ;; This function is called by:
  3252 ;;		_pad
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           	psect	text8
  3257   0049AA                     __ptext8:
  3258                           	callstack 0
  3259   0049AA                     _fputs:
  3260                           	callstack 20
  3261   0049AA  0E00               	movlw	0
  3262   0049AC  6E14               	movwf	(fputs@i+1)^0,c
  3263   0049AE  0E00               	movlw	0
  3264   0049B0  6E13               	movwf	fputs@i^0,c
  3265   0049B2  EFE6  F024         	goto	l4773
  3266   0049B6                     l4769:
  3267   0049B6  C012  F005         	movff	fputs@c,fputc@c
  3268   0049BA  6A06               	clrf	(fputc@c+1)^0,c
  3269   0049BC  C010  F007         	movff	fputs@fp,fputc@fp
  3270   0049C0  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  3271   0049C4  EC5A  F021         	call	_fputc	;wreg free
  3272   0049C8  4A13               	infsnz	fputs@i^0,f,c
  3273   0049CA  2A14               	incf	(fputs@i+1)^0,f,c
  3274   0049CC                     l4773:
  3275   0049CC  5013               	movf	fputs@i^0,w,c
  3276   0049CE  240E               	addwf	fputs@s^0,w,c
  3277   0049D0  6ED9               	movwf	fsr2l,c
  3278   0049D2  5014               	movf	(fputs@i+1)^0,w,c
  3279   0049D4  200F               	addwfc	(fputs@s+1)^0,w,c
  3280   0049D6  6EDA               	movwf	fsr2h,c
  3281   0049D8  50DF               	movf	indf2,w,c
  3282   0049DA  6E12               	movwf	fputs@c^0,c
  3283   0049DC  5012               	movf	fputs@c^0,w,c
  3284   0049DE  A4D8               	btfss	status,2,c
  3285   0049E0  EFF4  F024         	goto	u5121
  3286   0049E4  EFF6  F024         	goto	u5120
  3287   0049E8                     u5121:
  3288   0049E8  EFDB  F024         	goto	l4769
  3289   0049EC                     u5120:
  3290   0049EC  0012               	return		;funcret
  3291   0049EE                     __end_of_fputs:
  3292                           	callstack 0
  3293                           
  3294 ;; *************** function _fputc *****************
  3295 ;; Defined at:
  3296 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;  c               2    4[COMRAM] int 
  3299 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  3300 ;;		 -> sprintf@f(11), 
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;		None
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  2    4[COMRAM] int 
  3305 ;; Registers used:
  3306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3312 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3314 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3315 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3316 ;;Total ram usage:        9 bytes
  3317 ;; Hardware stack levels used: 1
  3318 ;; Hardware stack levels required when called: 3
  3319 ;; This function calls:
  3320 ;;		_putch
  3321 ;; This function is called by:
  3322 ;;		_pad
  3323 ;;		_vfpfcnvrt
  3324 ;;		_fputs
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           	psect	text9
  3329   0042B4                     __ptext9:
  3330                           	callstack 0
  3331   0042B4                     _fputc:
  3332                           	callstack 23
  3333   0042B4  5007               	movf	fputc@fp^0,w,c
  3334   0042B6  1008               	iorwf	(fputc@fp+1)^0,w,c
  3335   0042B8  B4D8               	btfsc	status,2,c
  3336   0042BA  EF61  F021         	goto	u5081
  3337   0042BE  EF63  F021         	goto	u5080
  3338   0042C2                     u5081:
  3339   0042C2  EF6C  F021         	goto	l4757
  3340   0042C6                     u5080:
  3341   0042C6  5007               	movf	fputc@fp^0,w,c
  3342   0042C8  1008               	iorwf	(fputc@fp+1)^0,w,c
  3343   0042CA  A4D8               	btfss	status,2,c
  3344   0042CC  EF6A  F021         	goto	u5091
  3345   0042D0  EF6C  F021         	goto	u5090
  3346   0042D4                     u5091:
  3347   0042D4  EF71  F021         	goto	l4759
  3348   0042D8                     u5090:
  3349   0042D8                     l4757:
  3350   0042D8  5005               	movf	fputc@c^0,w,c
  3351   0042DA  EC42  F026         	call	_putch
  3352   0042DE  EFBE  F021         	goto	l1294
  3353   0042E2                     l4759:
  3354   0042E2  EE20 F009          	lfsr	2,9
  3355   0042E6  5007               	movf	fputc@fp^0,w,c
  3356   0042E8  26D9               	addwf	fsr2l,f,c
  3357   0042EA  5008               	movf	(fputc@fp+1)^0,w,c
  3358   0042EC  22DA               	addwfc	fsr2h,f,c
  3359   0042EE  50DE               	movf	postinc2,w,c
  3360   0042F0  10DE               	iorwf	postinc2,w,c
  3361   0042F2  B4D8               	btfsc	status,2,c
  3362   0042F4  EF7E  F021         	goto	u5101
  3363   0042F8  EF80  F021         	goto	u5100
  3364   0042FC                     u5101:
  3365   0042FC  EF9B  F021         	goto	l4763
  3366   004300                     u5100:
  3367   004300  EE20 F009          	lfsr	2,9
  3368   004304  5007               	movf	fputc@fp^0,w,c
  3369   004306  26D9               	addwf	fsr2l,f,c
  3370   004308  5008               	movf	(fputc@fp+1)^0,w,c
  3371   00430A  22DA               	addwfc	fsr2h,f,c
  3372   00430C  EE10 F003          	lfsr	1,3
  3373   004310  5007               	movf	fputc@fp^0,w,c
  3374   004312  26E1               	addwf	fsr1l,f,c
  3375   004314  5008               	movf	(fputc@fp+1)^0,w,c
  3376   004316  22E2               	addwfc	fsr1h,f,c
  3377   004318  50DE               	movf	postinc2,w,c
  3378   00431A  5CE6               	subwf	postinc1,w,c
  3379   00431C  50E6               	movf	postinc1,w,c
  3380   00431E  0A80               	xorlw	128
  3381   004320  6E0D               	movwf	(??_fputc+4)^0,c
  3382   004322  50DE               	movf	postinc2,w,c
  3383   004324  0A80               	xorlw	128
  3384   004326  580D               	subwfb	(??_fputc+4)^0,w,c
  3385   004328  B0D8               	btfsc	status,0,c
  3386   00432A  EF99  F021         	goto	u5111
  3387   00432E  EF9B  F021         	goto	u5110
  3388   004332                     u5111:
  3389   004332  EFBE  F021         	goto	l1294
  3390   004336                     u5110:
  3391   004336                     l4763:
  3392   004336  EE20 F003          	lfsr	2,3
  3393   00433A  5007               	movf	fputc@fp^0,w,c
  3394   00433C  26D9               	addwf	fsr2l,f,c
  3395   00433E  5008               	movf	(fputc@fp+1)^0,w,c
  3396   004340  22DA               	addwfc	fsr2h,f,c
  3397   004342  CFDE F009          	movff	postinc2,??_fputc
  3398   004346  CFDD F00A          	movff	postdec2,??_fputc+1
  3399   00434A  C007  FFD9         	movff	fputc@fp,fsr2l
  3400   00434E  C008  FFDA         	movff	fputc@fp+1,fsr2h
  3401   004352  CFDE F00B          	movff	postinc2,??_fputc+2
  3402   004356  CFDD F00C          	movff	postdec2,??_fputc+3
  3403   00435A  5009               	movf	??_fputc^0,w,c
  3404   00435C  240B               	addwf	(??_fputc+2)^0,w,c
  3405   00435E  6ED9               	movwf	fsr2l,c
  3406   004360  500A               	movf	(??_fputc+1)^0,w,c
  3407   004362  200C               	addwfc	(??_fputc+3)^0,w,c
  3408   004364  6EDA               	movwf	fsr2h,c
  3409   004366  C005  FFDF         	movff	fputc@c,indf2
  3410   00436A  EE20 F003          	lfsr	2,3
  3411   00436E  5007               	movf	fputc@fp^0,w,c
  3412   004370  26D9               	addwf	fsr2l,f,c
  3413   004372  5008               	movf	(fputc@fp+1)^0,w,c
  3414   004374  22DA               	addwfc	fsr2h,f,c
  3415   004376  2ADE               	incf	postinc2,f,c
  3416   004378  0E00               	movlw	0
  3417   00437A  22DD               	addwfc	postdec2,f,c
  3418   00437C                     l1294:
  3419   00437C  0012               	return		;funcret
  3420   00437E                     __end_of_fputc:
  3421                           	callstack 0
  3422                           
  3423 ;; *************** function _putch *****************
  3424 ;; Defined at:
  3425 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;  c               1    wreg     unsigned char 
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;  c               1    0[COMRAM] unsigned char 
  3430 ;; Return value:  Size  Location     Type
  3431 ;;                  1    wreg      void 
  3432 ;; Registers used:
  3433 ;;		wreg
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3443 ;;Total ram usage:        0 bytes
  3444 ;; Hardware stack levels used: 1
  3445 ;; Hardware stack levels required when called: 2
  3446 ;; This function calls:
  3447 ;;		Nothing
  3448 ;; This function is called by:
  3449 ;;		_fputc
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453                           	psect	text10
  3454   004C84                     __ptext10:
  3455                           	callstack 0
  3456   004C84                     _putch:
  3457                           	callstack 23
  3458   004C84  0012               	return		;funcret
  3459   004C86                     __end_of_putch:
  3460                           	callstack 0
  3461                           
  3462 ;; *************** function _abs *****************
  3463 ;; Defined at:
  3464 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;  a               2   22[COMRAM] int 
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;		None
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  2   22[COMRAM] int 
  3471 ;; Registers used:
  3472 ;;		wreg, status,2, status,0
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3480 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3481 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3482 ;;Total ram usage:        4 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; Hardware stack levels required when called: 2
  3485 ;; This function calls:
  3486 ;;		Nothing
  3487 ;; This function is called by:
  3488 ;;		_dtoa
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           	psect	text11
  3493   004A30                     __ptext11:
  3494                           	callstack 0
  3495   004A30                     _abs:
  3496                           	callstack 23
  3497   004A30  BE18               	btfsc	(abs@a+1)^0,7,c
  3498   004A32  EF25  F025         	goto	u5280
  3499   004A36  5018               	movf	(abs@a+1)^0,w,c
  3500   004A38  E106               	bnz	u5281
  3501   004A3A  0417               	decf	abs@a^0,w,c
  3502   004A3C  B0D8               	btfsc	status,0,c
  3503   004A3E  EF23  F025         	goto	u5281
  3504   004A42  EF25  F025         	goto	u5280
  3505   004A46                     u5281:
  3506   004A46  EF33  F025         	goto	l1279
  3507   004A4A                     u5280:
  3508   004A4A  C017  F019         	movff	abs@a,??_abs
  3509   004A4E  C018  F01A         	movff	abs@a+1,??_abs+1
  3510   004A52  1E19               	comf	??_abs^0,f,c
  3511   004A54  1E1A               	comf	(??_abs+1)^0,f,c
  3512   004A56  4A19               	infsnz	??_abs^0,f,c
  3513   004A58  2A1A               	incf	(??_abs+1)^0,f,c
  3514   004A5A  C019  F017         	movff	??_abs,?_abs
  3515   004A5E  C01A  F018         	movff	??_abs+1,?_abs+1
  3516   004A62  EF37  F025         	goto	l1282
  3517   004A66                     l1279:
  3518   004A66  C017  F017         	movff	abs@a,?_abs
  3519   004A6A  C018  F018         	movff	abs@a+1,?_abs+1
  3520   004A6E                     l1282:
  3521   004A6E  0012               	return		;funcret
  3522   004A70                     __end_of_abs:
  3523                           	callstack 0
  3524                           
  3525 ;; *************** function ___aomod *****************
  3526 ;; Defined at:
  3527 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  3528 ;; Parameters:    Size  Location     Type
  3529 ;;  dividend        8    4[COMRAM] long long 
  3530 ;;  divisor         8   12[COMRAM] long long 
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;  sign            1   21[COMRAM] unsigned char 
  3533 ;;  counter         1   20[COMRAM] unsigned char 
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  8    4[COMRAM] long long 
  3536 ;; Registers used:
  3537 ;;		wreg, status,2, status,0
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3543 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3544 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3546 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3547 ;;Total ram usage:       18 bytes
  3548 ;; Hardware stack levels used: 1
  3549 ;; Hardware stack levels required when called: 2
  3550 ;; This function calls:
  3551 ;;		Nothing
  3552 ;; This function is called by:
  3553 ;;		_dtoa
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           
  3557                           	psect	text12
  3558   003476                     __ptext12:
  3559                           	callstack 0
  3560   003476                     ___aomod:
  3561                           	callstack 23
  3562   003476  0E00               	movlw	0
  3563   003478  6E16               	movwf	___aomod@sign^0,c
  3564   00347A  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  3565   00347C  EF44  F01A         	goto	u5200
  3566   003480  EF42  F01A         	goto	u5201
  3567   003484                     u5201:
  3568   003484  EF56  F01A         	goto	l4827
  3569   003488                     u5200:
  3570   003488  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  3571   00348A  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  3572   00348C  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  3573   00348E  1E09               	comf	(___aomod@dividend+4)^0,f,c
  3574   003490  1E08               	comf	(___aomod@dividend+3)^0,f,c
  3575   003492  1E07               	comf	(___aomod@dividend+2)^0,f,c
  3576   003494  1E06               	comf	(___aomod@dividend+1)^0,f,c
  3577   003496  6C05               	negf	___aomod@dividend^0,c
  3578   003498  0E00               	movlw	0
  3579   00349A  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  3580   00349C  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  3581   00349E  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  3582   0034A0  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  3583   0034A2  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  3584   0034A4  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  3585   0034A6  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  3586   0034A8  0E01               	movlw	1
  3587   0034AA  6E16               	movwf	___aomod@sign^0,c
  3588   0034AC                     l4827:
  3589   0034AC  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  3590   0034AE  EF5D  F01A         	goto	u5210
  3591   0034B2  EF5B  F01A         	goto	u5211
  3592   0034B6                     u5211:
  3593   0034B6  EF6D  F01A         	goto	l4831
  3594   0034BA                     u5210:
  3595   0034BA  1E14               	comf	(___aomod@divisor+7)^0,f,c
  3596   0034BC  1E13               	comf	(___aomod@divisor+6)^0,f,c
  3597   0034BE  1E12               	comf	(___aomod@divisor+5)^0,f,c
  3598   0034C0  1E11               	comf	(___aomod@divisor+4)^0,f,c
  3599   0034C2  1E10               	comf	(___aomod@divisor+3)^0,f,c
  3600   0034C4  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  3601   0034C6  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  3602   0034C8  6C0D               	negf	___aomod@divisor^0,c
  3603   0034CA  0E00               	movlw	0
  3604   0034CC  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  3605   0034CE  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  3606   0034D0  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  3607   0034D2  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  3608   0034D4  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  3609   0034D6  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  3610   0034D8  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  3611   0034DA                     l4831:
  3612   0034DA  500D               	movf	___aomod@divisor^0,w,c
  3613   0034DC  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  3614   0034DE  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  3615   0034E0  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  3616   0034E2  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  3617   0034E4  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  3618   0034E6  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  3619   0034E8  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  3620   0034EA  B4D8               	btfsc	status,2,c
  3621   0034EC  EF7A  F01A         	goto	u5221
  3622   0034F0  EF7C  F01A         	goto	u5220
  3623   0034F4                     u5221:
  3624   0034F4  EFC4  F01A         	goto	l4847
  3625   0034F8                     u5220:
  3626   0034F8  0E01               	movlw	1
  3627   0034FA  6E15               	movwf	___aomod@counter^0,c
  3628   0034FC  EF8A  F01A         	goto	l4837
  3629   003500                     l4835:
  3630   003500  90D8               	bcf	status,0,c
  3631   003502  360D               	rlcf	___aomod@divisor^0,f,c
  3632   003504  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  3633   003506  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  3634   003508  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  3635   00350A  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  3636   00350C  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  3637   00350E  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  3638   003510  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  3639   003512  2A15               	incf	___aomod@counter^0,f,c
  3640   003514                     l4837:
  3641   003514  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  3642   003516  EF8F  F01A         	goto	u5231
  3643   00351A  EF91  F01A         	goto	u5230
  3644   00351E                     u5231:
  3645   00351E  EF80  F01A         	goto	l4835
  3646   003522                     u5230:
  3647   003522                     l4839:
  3648   003522  500D               	movf	___aomod@divisor^0,w,c
  3649   003524  5C05               	subwf	___aomod@dividend^0,w,c
  3650   003526  500E               	movf	(___aomod@divisor+1)^0,w,c
  3651   003528  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  3652   00352A  500F               	movf	(___aomod@divisor+2)^0,w,c
  3653   00352C  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  3654   00352E  5010               	movf	(___aomod@divisor+3)^0,w,c
  3655   003530  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  3656   003532  5011               	movf	(___aomod@divisor+4)^0,w,c
  3657   003534  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  3658   003536  5012               	movf	(___aomod@divisor+5)^0,w,c
  3659   003538  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  3660   00353A  5013               	movf	(___aomod@divisor+6)^0,w,c
  3661   00353C  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  3662   00353E  5014               	movf	(___aomod@divisor+7)^0,w,c
  3663   003540  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  3664   003542  A0D8               	btfss	status,0,c
  3665   003544  EFA6  F01A         	goto	u5241
  3666   003548  EFA8  F01A         	goto	u5240
  3667   00354C                     u5241:
  3668   00354C  EFB8  F01A         	goto	l4843
  3669   003550                     u5240:
  3670   003550  500D               	movf	___aomod@divisor^0,w,c
  3671   003552  5E05               	subwf	___aomod@dividend^0,f,c
  3672   003554  500E               	movf	(___aomod@divisor+1)^0,w,c
  3673   003556  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  3674   003558  500F               	movf	(___aomod@divisor+2)^0,w,c
  3675   00355A  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  3676   00355C  5010               	movf	(___aomod@divisor+3)^0,w,c
  3677   00355E  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  3678   003560  5011               	movf	(___aomod@divisor+4)^0,w,c
  3679   003562  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  3680   003564  5012               	movf	(___aomod@divisor+5)^0,w,c
  3681   003566  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  3682   003568  5013               	movf	(___aomod@divisor+6)^0,w,c
  3683   00356A  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  3684   00356C  5014               	movf	(___aomod@divisor+7)^0,w,c
  3685   00356E  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  3686   003570                     l4843:
  3687   003570  90D8               	bcf	status,0,c
  3688   003572  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  3689   003574  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  3690   003576  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  3691   003578  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  3692   00357A  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  3693   00357C  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  3694   00357E  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  3695   003580  320D               	rrcf	___aomod@divisor^0,f,c
  3696   003582  2E15               	decfsz	___aomod@counter^0,f,c
  3697   003584  EF91  F01A         	goto	l4839
  3698   003588                     l4847:
  3699   003588  5016               	movf	___aomod@sign^0,w,c
  3700   00358A  B4D8               	btfsc	status,2,c
  3701   00358C  EFCA  F01A         	goto	u5251
  3702   003590  EFCC  F01A         	goto	u5250
  3703   003594                     u5251:
  3704   003594  EFDC  F01A         	goto	l4851
  3705   003598                     u5250:
  3706   003598  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  3707   00359A  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  3708   00359C  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  3709   00359E  1E09               	comf	(___aomod@dividend+4)^0,f,c
  3710   0035A0  1E08               	comf	(___aomod@dividend+3)^0,f,c
  3711   0035A2  1E07               	comf	(___aomod@dividend+2)^0,f,c
  3712   0035A4  1E06               	comf	(___aomod@dividend+1)^0,f,c
  3713   0035A6  6C05               	negf	___aomod@dividend^0,c
  3714   0035A8  0E00               	movlw	0
  3715   0035AA  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  3716   0035AC  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  3717   0035AE  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  3718   0035B0  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  3719   0035B2  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  3720   0035B4  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  3721   0035B6  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  3722   0035B8                     l4851:
  3723   0035B8  C005  F005         	movff	___aomod@dividend,?___aomod
  3724   0035BC  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  3725   0035C0  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  3726   0035C4  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  3727   0035C8  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  3728   0035CC  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  3729   0035D0  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  3730   0035D4  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  3731   0035D8  0012               	return		;funcret
  3732   0035DA                     __end_of___aomod:
  3733                           	callstack 0
  3734                           
  3735 ;; *************** function ___aodiv *****************
  3736 ;; Defined at:
  3737 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;  dividend        8    4[COMRAM] long long 
  3740 ;;  divisor         8   12[COMRAM] long long 
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;  quotient        8   22[COMRAM] long long 
  3743 ;;  sign            1   21[COMRAM] unsigned char 
  3744 ;;  counter         1   20[COMRAM] unsigned char 
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  8    4[COMRAM] long long 
  3747 ;; Registers used:
  3748 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3754 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3755 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3757 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3758 ;;Total ram usage:       26 bytes
  3759 ;; Hardware stack levels used: 1
  3760 ;; Hardware stack levels required when called: 2
  3761 ;; This function calls:
  3762 ;;		Nothing
  3763 ;; This function is called by:
  3764 ;;		_dtoa
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767                           
  3768                           	psect	text13
  3769   003182                     __ptext13:
  3770                           	callstack 0
  3771   003182                     ___aodiv:
  3772                           	callstack 23
  3773   003182  0E00               	movlw	0
  3774   003184  6E16               	movwf	___aodiv@sign^0,c
  3775   003186  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  3776   003188  EFCA  F018         	goto	u5130
  3777   00318C  EFC8  F018         	goto	u5131
  3778   003190                     u5131:
  3779   003190  EFDC  F018         	goto	l4783
  3780   003194                     u5130:
  3781   003194  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  3782   003196  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  3783   003198  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  3784   00319A  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  3785   00319C  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  3786   00319E  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  3787   0031A0  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  3788   0031A2  6C0D               	negf	___aodiv@divisor^0,c
  3789   0031A4  0E00               	movlw	0
  3790   0031A6  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  3791   0031A8  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  3792   0031AA  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  3793   0031AC  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  3794   0031AE  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  3795   0031B0  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  3796   0031B2  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  3797   0031B4  0E01               	movlw	1
  3798   0031B6  6E16               	movwf	___aodiv@sign^0,c
  3799   0031B8                     l4783:
  3800   0031B8  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  3801   0031BA  EFE3  F018         	goto	u5140
  3802   0031BE  EFE1  F018         	goto	u5141
  3803   0031C2                     u5141:
  3804   0031C2  EFF5  F018         	goto	l4789
  3805   0031C6                     u5140:
  3806   0031C6  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  3807   0031C8  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  3808   0031CA  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  3809   0031CC  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  3810   0031CE  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  3811   0031D0  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  3812   0031D2  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  3813   0031D4  6C05               	negf	___aodiv@dividend^0,c
  3814   0031D6  0E00               	movlw	0
  3815   0031D8  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  3816   0031DA  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  3817   0031DC  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  3818   0031DE  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  3819   0031E0  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  3820   0031E2  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  3821   0031E4  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  3822   0031E6  0E01               	movlw	1
  3823   0031E8  1A16               	xorwf	___aodiv@sign^0,f,c
  3824   0031EA                     l4789:
  3825   0031EA  EE20  F017         	lfsr	2,___aodiv@quotient
  3826   0031EE  0E07               	movlw	7
  3827   0031F0                     u5151:
  3828   0031F0  6ADE               	clrf	postinc2,c
  3829   0031F2  06E8               	decf	wreg,f,c
  3830   0031F4  E2FD               	bc	u5151
  3831   0031F6  500D               	movf	___aodiv@divisor^0,w,c
  3832   0031F8  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  3833   0031FA  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  3834   0031FC  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  3835   0031FE  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  3836   003200  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  3837   003202  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  3838   003204  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  3839   003206  B4D8               	btfsc	status,2,c
  3840   003208  EF08  F019         	goto	u5161
  3841   00320C  EF0A  F019         	goto	u5160
  3842   003210                     u5161:
  3843   003210  EF5C  F019         	goto	l4811
  3844   003214                     u5160:
  3845   003214  0E01               	movlw	1
  3846   003216  6E15               	movwf	___aodiv@counter^0,c
  3847   003218  EF18  F019         	goto	l4797
  3848   00321C                     l4795:
  3849   00321C  90D8               	bcf	status,0,c
  3850   00321E  360D               	rlcf	___aodiv@divisor^0,f,c
  3851   003220  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  3852   003222  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  3853   003224  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  3854   003226  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  3855   003228  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  3856   00322A  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  3857   00322C  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  3858   00322E  2A15               	incf	___aodiv@counter^0,f,c
  3859   003230                     l4797:
  3860   003230  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  3861   003232  EF1D  F019         	goto	u5171
  3862   003236  EF1F  F019         	goto	u5170
  3863   00323A                     u5171:
  3864   00323A  EF0E  F019         	goto	l4795
  3865   00323E                     u5170:
  3866   00323E                     l4799:
  3867   00323E  90D8               	bcf	status,0,c
  3868   003240  3617               	rlcf	___aodiv@quotient^0,f,c
  3869   003242  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  3870   003244  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  3871   003246  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  3872   003248  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  3873   00324A  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  3874   00324C  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  3875   00324E  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  3876   003250  500D               	movf	___aodiv@divisor^0,w,c
  3877   003252  5C05               	subwf	___aodiv@dividend^0,w,c
  3878   003254  500E               	movf	(___aodiv@divisor+1)^0,w,c
  3879   003256  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  3880   003258  500F               	movf	(___aodiv@divisor+2)^0,w,c
  3881   00325A  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  3882   00325C  5010               	movf	(___aodiv@divisor+3)^0,w,c
  3883   00325E  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  3884   003260  5011               	movf	(___aodiv@divisor+4)^0,w,c
  3885   003262  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  3886   003264  5012               	movf	(___aodiv@divisor+5)^0,w,c
  3887   003266  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  3888   003268  5013               	movf	(___aodiv@divisor+6)^0,w,c
  3889   00326A  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  3890   00326C  5014               	movf	(___aodiv@divisor+7)^0,w,c
  3891   00326E  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  3892   003270  A0D8               	btfss	status,0,c
  3893   003272  EF3D  F019         	goto	u5181
  3894   003276  EF3F  F019         	goto	u5180
  3895   00327A                     u5181:
  3896   00327A  EF50  F019         	goto	l4807
  3897   00327E                     u5180:
  3898   00327E  500D               	movf	___aodiv@divisor^0,w,c
  3899   003280  5E05               	subwf	___aodiv@dividend^0,f,c
  3900   003282  500E               	movf	(___aodiv@divisor+1)^0,w,c
  3901   003284  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  3902   003286  500F               	movf	(___aodiv@divisor+2)^0,w,c
  3903   003288  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  3904   00328A  5010               	movf	(___aodiv@divisor+3)^0,w,c
  3905   00328C  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  3906   00328E  5011               	movf	(___aodiv@divisor+4)^0,w,c
  3907   003290  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  3908   003292  5012               	movf	(___aodiv@divisor+5)^0,w,c
  3909   003294  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  3910   003296  5013               	movf	(___aodiv@divisor+6)^0,w,c
  3911   003298  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  3912   00329A  5014               	movf	(___aodiv@divisor+7)^0,w,c
  3913   00329C  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  3914   00329E  8017               	bsf	___aodiv@quotient^0,0,c
  3915   0032A0                     l4807:
  3916   0032A0  90D8               	bcf	status,0,c
  3917   0032A2  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  3918   0032A4  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  3919   0032A6  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  3920   0032A8  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  3921   0032AA  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  3922   0032AC  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  3923   0032AE  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  3924   0032B0  320D               	rrcf	___aodiv@divisor^0,f,c
  3925   0032B2  2E15               	decfsz	___aodiv@counter^0,f,c
  3926   0032B4  EF1F  F019         	goto	l4799
  3927   0032B8                     l4811:
  3928   0032B8  5016               	movf	___aodiv@sign^0,w,c
  3929   0032BA  B4D8               	btfsc	status,2,c
  3930   0032BC  EF62  F019         	goto	u5191
  3931   0032C0  EF64  F019         	goto	u5190
  3932   0032C4                     u5191:
  3933   0032C4  EF74  F019         	goto	l4815
  3934   0032C8                     u5190:
  3935   0032C8  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  3936   0032CA  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  3937   0032CC  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  3938   0032CE  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  3939   0032D0  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  3940   0032D2  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  3941   0032D4  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  3942   0032D6  6C17               	negf	___aodiv@quotient^0,c
  3943   0032D8  0E00               	movlw	0
  3944   0032DA  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  3945   0032DC  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  3946   0032DE  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  3947   0032E0  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  3948   0032E2  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  3949   0032E4  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  3950   0032E6  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  3951   0032E8                     l4815:
  3952   0032E8  C017  F005         	movff	___aodiv@quotient,?___aodiv
  3953   0032EC  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  3954   0032F0  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  3955   0032F4  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  3956   0032F8  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  3957   0032FC  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  3958   003300  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  3959   003304  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  3960   003308  0012               	return		;funcret
  3961   00330A                     __end_of___aodiv:
  3962                           	callstack 0
  3963                           
  3964 ;; *************** function _sendTxBuf *****************
  3965 ;; Defined at:
  3966 ;;		line 96 in file "serial.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;		None
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;		None
  3971 ;; Return value:  Size  Location     Type
  3972 ;;                  1    wreg      void 
  3973 ;; Registers used:
  3974 ;;		wreg, status,2, status,0, cstack
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3984 ;;Total ram usage:        0 bytes
  3985 ;; Hardware stack levels used: 1
  3986 ;; Hardware stack levels required when called: 3
  3987 ;; This function calls:
  3988 ;;		_isDataInTxBuf
  3989 ;; This function is called by:
  3990 ;;		_return_home_turns
  3991 ;; This function uses a non-reentrant model
  3992 ;;
  3993                           
  3994                           	psect	text14
  3995   004C0C                     __ptext14:
  3996                           	callstack 0
  3997   004C0C                     _sendTxBuf:
  3998                           	callstack 26
  3999   004C0C                     
  4000                           ;serial.c: 97:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;}
  4001   004C0C  EC13  F026         	call	_isDataInTxBuf	;wreg free
  4002   004C10  0900               	iorlw	0
  4003   004C12  B4D8               	btfsc	status,2,c
  4004   004C14  EF0E  F026         	goto	u3621
  4005   004C18  EF10  F026         	goto	u3620
  4006   004C1C                     u3621:
  4007   004C1C  EF12  F026         	goto	l506
  4008   004C20                     u3620:
  4009   004C20  010E               	movlb	14	; () banked
  4010   004C22  852D               	bsf	45,2,b	;volatile
  4011   004C24                     l506:
  4012   004C24  0012               	return		;funcret
  4013   004C26                     __end_of_sendTxBuf:
  4014                           	callstack 0
  4015                           
  4016 ;; *************** function _isDataInTxBuf *****************
  4017 ;; Defined at:
  4018 ;;		line 83 in file "serial.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;		None
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;		None
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  1    wreg      unsigned char 
  4025 ;; Registers used:
  4026 ;;		wreg, status,2, status,0
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4036 ;;Total ram usage:        0 bytes
  4037 ;; Hardware stack levels used: 1
  4038 ;; Hardware stack levels required when called: 2
  4039 ;; This function calls:
  4040 ;;		Nothing
  4041 ;; This function is called by:
  4042 ;;		_sendTxBuf
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           	psect	text15
  4047   004C26                     __ptext15:
  4048                           	callstack 0
  4049   004C26                     _isDataInTxBuf:
  4050                           	callstack 26
  4051   004C26                     
  4052                           ;serial.c: 84:     return (TxBufWriteCnt!=TxBufReadCnt);
  4053   004C26  5057               	movf	_TxBufReadCnt^0,w,c	;volatile
  4054   004C28  1858               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  4055   004C2A  A4D8               	btfss	status,2,c
  4056   004C2C  EF1A  F026         	goto	u3131
  4057   004C30  EF1D  F026         	goto	u3130
  4058   004C34                     u3131:
  4059   004C34  0E01               	movlw	1
  4060   004C36  EF1E  F026         	goto	u3140
  4061   004C3A                     u3130:
  4062   004C3A  0E00               	movlw	0
  4063   004C3C                     u3140:
  4064   004C3C  0012               	return		;funcret
  4065   004C3E                     __end_of_isDataInTxBuf:
  4066                           	callstack 0
  4067                           
  4068 ;; *************** function _forward *****************
  4069 ;; Defined at:
  4070 ;;		line 134 in file "dc_motor.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;  mL              2   23[COMRAM] PTR struct DC_motor
  4073 ;;		 -> main@motorLeft(9), 
  4074 ;;  mR              2   25[COMRAM] PTR struct DC_motor
  4075 ;;		 -> main@motorRight(9), 
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;		None
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  1    wreg      void 
  4080 ;; Registers used:
  4081 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4087 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4089 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4090 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4091 ;;Total ram usage:        5 bytes
  4092 ;; Hardware stack levels used: 1
  4093 ;; Hardware stack levels required when called: 4
  4094 ;; This function calls:
  4095 ;;		_setMotorPWM
  4096 ;; This function is called by:
  4097 ;;		_return_home_turns
  4098 ;;		_main
  4099 ;; This function uses a non-reentrant model
  4100 ;;
  4101                           
  4102                           	psect	text16
  4103   004036                     __ptext16:
  4104                           	callstack 0
  4105   004036                     _forward:
  4106                           	callstack 25
  4107   004036                     
  4108                           ;dc_motor.c: 134: void forward(DC_motor *mL, DC_motor *mR);dc_motor.c: 135: {;dc_motor.c
      +                          : 136:     mL->direction = 1;
  4109   004036  EE20 F001          	lfsr	2,1
  4110   00403A  5018               	movf	forward@mL^0,w,c
  4111   00403C  26D9               	addwf	fsr2l,f,c
  4112   00403E  5019               	movf	(forward@mL+1)^0,w,c
  4113   004040  22DA               	addwfc	fsr2h,f,c
  4114   004042  0E01               	movlw	1
  4115   004044  6EDF               	movwf	indf2,c
  4116                           
  4117                           ;dc_motor.c: 137:     mR->direction = 1;
  4118   004046  EE20 F001          	lfsr	2,1
  4119   00404A  501A               	movf	forward@mR^0,w,c
  4120   00404C  26D9               	addwf	fsr2l,f,c
  4121   00404E  501B               	movf	(forward@mR+1)^0,w,c
  4122   004050  22DA               	addwfc	fsr2h,f,c
  4123   004052  0E01               	movlw	1
  4124   004054  6EDF               	movwf	indf2,c
  4125                           
  4126                           ;dc_motor.c: 139:     mL->brakemode = 1;
  4127   004056  EE20 F002          	lfsr	2,2
  4128   00405A  5018               	movf	forward@mL^0,w,c
  4129   00405C  26D9               	addwf	fsr2l,f,c
  4130   00405E  5019               	movf	(forward@mL+1)^0,w,c
  4131   004060  22DA               	addwfc	fsr2h,f,c
  4132   004062  0E01               	movlw	1
  4133   004064  6EDF               	movwf	indf2,c
  4134                           
  4135                           ;dc_motor.c: 140:     mL->brakemode = 1;
  4136   004066  EE20 F002          	lfsr	2,2
  4137   00406A  5018               	movf	forward@mL^0,w,c
  4138   00406C  26D9               	addwf	fsr2l,f,c
  4139   00406E  5019               	movf	(forward@mL+1)^0,w,c
  4140   004070  22DA               	addwfc	fsr2h,f,c
  4141   004072  0E01               	movlw	1
  4142   004074  6EDF               	movwf	indf2,c
  4143                           
  4144                           ;dc_motor.c: 142:     while ((mL->power)<40 && (mR->power)<40){
  4145   004076  EF61  F020         	goto	l3833
  4146   00407A                     l3825:
  4147                           
  4148                           ;dc_motor.c: 143:         if ((mL->power) < 40){
  4149   00407A  C018  FFD9         	movff	forward@mL,fsr2l
  4150   00407E  C019  FFDA         	movff	forward@mL+1,fsr2h
  4151   004082  0E28               	movlw	40
  4152   004084  60DF               	cpfslt	indf2,c
  4153   004086  EF47  F020         	goto	u3631
  4154   00408A  EF49  F020         	goto	u3630
  4155   00408E                     u3631:
  4156   00408E  EF4F  F020         	goto	l3829
  4157   004092                     u3630:
  4158   004092                     
  4159                           ;dc_motor.c: 144:             mL->power += 5;
  4160   004092  C018  FFD9         	movff	forward@mL,fsr2l
  4161   004096  C019  FFDA         	movff	forward@mL+1,fsr2h
  4162   00409A  0E05               	movlw	5
  4163   00409C  26DF               	addwf	indf2,f,c
  4164   00409E                     l3829:
  4165                           
  4166                           ;dc_motor.c: 146:         if ((mR->power) < 40){
  4167   00409E  C01A  FFD9         	movff	forward@mR,fsr2l
  4168   0040A2  C01B  FFDA         	movff	forward@mR+1,fsr2h
  4169   0040A6  0E28               	movlw	40
  4170   0040A8  60DF               	cpfslt	indf2,c
  4171   0040AA  EF59  F020         	goto	u3641
  4172   0040AE  EF5B  F020         	goto	u3640
  4173   0040B2                     u3641:
  4174   0040B2  EF61  F020         	goto	l3833
  4175   0040B6                     u3640:
  4176   0040B6                     
  4177                           ;dc_motor.c: 147:             mR->power += 5;
  4178   0040B6  C01A  FFD9         	movff	forward@mR,fsr2l
  4179   0040BA  C01B  FFDA         	movff	forward@mR+1,fsr2h
  4180   0040BE  0E05               	movlw	5
  4181   0040C0  26DF               	addwf	indf2,f,c
  4182   0040C2                     l3833:
  4183                           
  4184                           ;dc_motor.c: 142:     while ((mL->power)<40 && (mR->power)<40){
  4185   0040C2  C018  FFD9         	movff	forward@mL,fsr2l
  4186   0040C6  C019  FFDA         	movff	forward@mL+1,fsr2h
  4187   0040CA  0E28               	movlw	40
  4188   0040CC  60DF               	cpfslt	indf2,c
  4189   0040CE  EF6B  F020         	goto	u3651
  4190   0040D2  EF6D  F020         	goto	u3650
  4191   0040D6                     u3651:
  4192   0040D6  EF79  F020         	goto	l3837
  4193   0040DA                     u3650:
  4194   0040DA  C01A  FFD9         	movff	forward@mR,fsr2l
  4195   0040DE  C01B  FFDA         	movff	forward@mR+1,fsr2h
  4196   0040E2  0E27               	movlw	39
  4197   0040E4  64DF               	cpfsgt	indf2,c
  4198   0040E6  EF77  F020         	goto	u3661
  4199   0040EA  EF79  F020         	goto	u3660
  4200   0040EE                     u3661:
  4201   0040EE  EF3D  F020         	goto	l3825
  4202   0040F2                     u3660:
  4203   0040F2                     l3837:
  4204                           
  4205                           ;dc_motor.c: 151:     setMotorPWM(mL);
  4206   0040F2  C018  F012         	movff	forward@mL,setMotorPWM@m
  4207   0040F6  C019  F013         	movff	forward@mL+1,setMotorPWM@m+1
  4208   0040FA  EC85  F019         	call	_setMotorPWM	;wreg free
  4209                           
  4210                           ;dc_motor.c: 152:     setMotorPWM(mR);
  4211   0040FE  C01A  F012         	movff	forward@mR,setMotorPWM@m
  4212   004102  C01B  F013         	movff	forward@mR+1,setMotorPWM@m+1
  4213   004106  EC85  F019         	call	_setMotorPWM	;wreg free
  4214   00410A  0012               	return		;funcret
  4215   00410C                     __end_of_forward:
  4216                           	callstack 0
  4217                           
  4218 ;; *************** function _TxBufferedString *****************
  4219 ;; Defined at:
  4220 ;;		line 88 in file "serial.c"
  4221 ;; Parameters:    Size  Location     Type
  4222 ;;  string          2    5[COMRAM] PTR unsigned char 
  4223 ;;		 -> return_home_turns@string1(150), 
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;		None
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  1    wreg      void 
  4228 ;; Registers used:
  4229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4235 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4238 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4239 ;;Total ram usage:        2 bytes
  4240 ;; Hardware stack levels used: 1
  4241 ;; Hardware stack levels required when called: 3
  4242 ;; This function calls:
  4243 ;;		_putCharToTxBuf
  4244 ;; This function is called by:
  4245 ;;		_return_home_turns
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249                           	psect	text17
  4250   004AA4                     __ptext17:
  4251                           	callstack 0
  4252   004AA4                     _TxBufferedString:
  4253                           	callstack 26
  4254   004AA4                     
  4255                           ;serial.c: 90:     while(*string != 0){
  4256   004AA4  EF5D  F025         	goto	l3817
  4257   004AA8                     l3813:
  4258                           
  4259                           ;serial.c: 91:   putCharToTxBuf(*string++);}
  4260   004AA8  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  4261   004AAC  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  4262   004AB0  50DF               	movf	indf2,w,c
  4263   004AB2  EC80  F025         	call	_putCharToTxBuf
  4264   004AB6  4A06               	infsnz	TxBufferedString@string^0,f,c
  4265   004AB8  2A07               	incf	(TxBufferedString@string+1)^0,f,c
  4266   004ABA                     l3817:
  4267                           
  4268                           ;serial.c: 90:     while(*string != 0){
  4269   004ABA  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  4270   004ABE  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  4271   004AC2  50DF               	movf	indf2,w,c
  4272   004AC4  A4D8               	btfss	status,2,c
  4273   004AC6  EF67  F025         	goto	u3611
  4274   004ACA  EF69  F025         	goto	u3610
  4275   004ACE                     u3611:
  4276   004ACE  EF54  F025         	goto	l3813
  4277   004AD2                     u3610:
  4278   004AD2  0012               	return		;funcret
  4279   004AD4                     __end_of_TxBufferedString:
  4280                           	callstack 0
  4281                           
  4282 ;; *************** function _putCharToTxBuf *****************
  4283 ;; Defined at:
  4284 ;;		line 75 in file "serial.c"
  4285 ;; Parameters:    Size  Location     Type
  4286 ;;  byte            1    wreg     unsigned char 
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;  byte            1    4[COMRAM] unsigned char 
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  1    wreg      void 
  4291 ;; Registers used:
  4292 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4299 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4301 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4302 ;;Total ram usage:        1 bytes
  4303 ;; Hardware stack levels used: 1
  4304 ;; Hardware stack levels required when called: 2
  4305 ;; This function calls:
  4306 ;;		Nothing
  4307 ;; This function is called by:
  4308 ;;		_TxBufferedString
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           	psect	text18
  4313   004B00                     __ptext18:
  4314                           	callstack 0
  4315   004B00                     _putCharToTxBuf:
  4316                           	callstack 26
  4317                           
  4318                           ;incstack = 0
  4319                           ;putCharToTxBuf@byte stored from wreg
  4320   004B00  6E05               	movwf	putCharToTxBuf@byte^0,c
  4321   004B02                     
  4322                           ;serial.c: 76:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  4323   004B02  0E3B               	movlw	59
  4324   004B04  6458               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  4325   004B06  EF87  F025         	goto	u3121
  4326   004B0A  EF89  F025         	goto	u3120
  4327   004B0E                     u3121:
  4328   004B0E  EF8B  F025         	goto	l3453
  4329   004B12                     u3120:
  4330   004B12  0E00               	movlw	0
  4331   004B14  6E58               	movwf	_TxBufWriteCnt^0,c	;volatile
  4332   004B16                     l3453:
  4333                           
  4334                           ;serial.c: 77:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  4335   004B16  0E9A               	movlw	low _EUSART4TXbuf
  4336   004B18  2458               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  4337   004B1A  6ED9               	movwf	fsr2l,c
  4338   004B1C  6ADA               	clrf	fsr2h,c
  4339   004B1E  0E01               	movlw	high _EUSART4TXbuf
  4340   004B20  22DA               	addwfc	fsr2h,f,c
  4341   004B22  C005  FFDF         	movff	putCharToTxBuf@byte,indf2
  4342   004B26  2A58               	incf	_TxBufWriteCnt^0,f,c	;volatile
  4343   004B28  0012               	return		;funcret
  4344   004B2A                     __end_of_putCharToTxBuf:
  4345                           	callstack 0
  4346                           
  4347 ;; *************** function _initUSART4 *****************
  4348 ;; Defined at:
  4349 ;;		line 5 in file "serial.c"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;		None
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;		None
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  1    wreg      void 
  4356 ;; Registers used:
  4357 ;;		wreg, status,2
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4367 ;;Total ram usage:        0 bytes
  4368 ;; Hardware stack levels used: 1
  4369 ;; Hardware stack levels required when called: 2
  4370 ;; This function calls:
  4371 ;;		Nothing
  4372 ;; This function is called by:
  4373 ;;		_main
  4374 ;; This function uses a non-reentrant model
  4375 ;;
  4376                           
  4377                           	psect	text19
  4378   004BCC                     __ptext19:
  4379                           	callstack 0
  4380   004BCC                     _initUSART4:
  4381                           	callstack 28
  4382   004BCC                     
  4383                           ;serial.c: 9:     RC0PPS = 0x12;
  4384   004BCC  0E12               	movlw	18
  4385   004BCE  010E               	movlb	14	; () banked
  4386   004BD0  6F62               	movwf	98,b	;volatile
  4387                           
  4388                           ;serial.c: 10:     RX4PPS = 0x11;
  4389   004BD2  0E11               	movlw	17
  4390   004BD4  6F15               	movwf	21,b	;volatile
  4391   004BD6                     
  4392                           ; BSR set to: 14
  4393                           ;serial.c: 11:     TRISCbits.TRISC1=1;
  4394   004BD6  8283               	bsf	131,1,c	;volatile
  4395   004BD8                     
  4396                           ; BSR set to: 14
  4397                           ;serial.c: 13:     BAUD4CONbits.BRG16 = 0;
  4398   004BD8  97E9               	bcf	233,3,b	;volatile
  4399   004BDA                     
  4400                           ; BSR set to: 14
  4401                           ;serial.c: 14:     TX4STAbits.BRGH = 0;
  4402   004BDA  95E8               	bcf	232,2,b	;volatile
  4403                           
  4404                           ;serial.c: 15:     SP4BRGL = 51;
  4405   004BDC  0E33               	movlw	51
  4406   004BDE  6FE5               	movwf	229,b	;volatile
  4407                           
  4408                           ;serial.c: 16:     SP4BRGH = 0;
  4409   004BE0  0E00               	movlw	0
  4410   004BE2  6FE6               	movwf	230,b	;volatile
  4411   004BE4                     
  4412                           ; BSR set to: 14
  4413                           ;serial.c: 18:     RC4STAbits.CREN = 1;
  4414   004BE4  89E7               	bsf	231,4,b	;volatile
  4415   004BE6                     
  4416                           ; BSR set to: 14
  4417                           ;serial.c: 19:     TX4STAbits.TXEN = 1;
  4418   004BE6  8BE8               	bsf	232,5,b	;volatile
  4419   004BE8                     
  4420                           ; BSR set to: 14
  4421                           ;serial.c: 20:     RC4STAbits.SPEN = 1;
  4422   004BE8  8FE7               	bsf	231,7,b	;volatile
  4423   004BEA                     
  4424                           ; BSR set to: 14
  4425   004BEA  0012               	return		;funcret
  4426   004BEC                     __end_of_initUSART4:
  4427                           	callstack 0
  4428                           
  4429 ;; *************** function _initDCmotorsPWM *****************
  4430 ;; Defined at:
  4431 ;;		line 12 in file "dc_motor.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;  PWMperiod       2    4[COMRAM] int 
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;		None
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  1    wreg      void 
  4438 ;; Registers used:
  4439 ;;		wreg, status,2
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4445 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4448 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4449 ;;Total ram usage:        2 bytes
  4450 ;; Hardware stack levels used: 1
  4451 ;; Hardware stack levels required when called: 2
  4452 ;; This function calls:
  4453 ;;		Nothing
  4454 ;; This function is called by:
  4455 ;;		_main
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459                           	psect	text20
  4460   004558                     __ptext20:
  4461                           	callstack 0
  4462   004558                     _initDCmotorsPWM:
  4463                           	callstack 28
  4464   004558                     
  4465                           ;dc_motor.c: 16:     LATEbits.LATE2 = 0;
  4466   004558  947D               	bcf	125,2,c	;volatile
  4467                           
  4468                           ;dc_motor.c: 17:     LATEbits.LATE4 = 0;
  4469   00455A  987D               	bcf	125,4,c	;volatile
  4470                           
  4471                           ;dc_motor.c: 18:     LATCbits.LATC7 = 0;
  4472   00455C  9E7B               	bcf	123,7,c	;volatile
  4473                           
  4474                           ;dc_motor.c: 19:     LATGbits.LATG6 = 0;
  4475   00455E  9C7F               	bcf	127,6,c	;volatile
  4476                           
  4477                           ;dc_motor.c: 22:     TRISEbits.TRISE2 = 0 ;
  4478   004560  9485               	bcf	133,2,c	;volatile
  4479                           
  4480                           ;dc_motor.c: 23:     TRISEbits.TRISE4 = 0 ;
  4481   004562  9885               	bcf	133,4,c	;volatile
  4482                           
  4483                           ;dc_motor.c: 24:     TRISCbits.TRISC7 = 0 ;
  4484   004564  9E83               	bcf	131,7,c	;volatile
  4485                           
  4486                           ;dc_motor.c: 25:     TRISGbits.TRISG6 = 0 ;
  4487   004566  9C87               	bcf	135,6,c	;volatile
  4488   004568                     
  4489                           ;dc_motor.c: 28:     RE2PPS=0x05;
  4490   004568  0E05               	movlw	5
  4491   00456A  010E               	movlb	14	; () banked
  4492   00456C  6F74               	movwf	116,b	;volatile
  4493                           
  4494                           ;dc_motor.c: 29:     RE4PPS=0x06;
  4495   00456E  0E06               	movlw	6
  4496   004570  6F76               	movwf	118,b	;volatile
  4497                           
  4498                           ;dc_motor.c: 30:     RC7PPS=0x07;
  4499   004572  0E07               	movlw	7
  4500   004574  6F69               	movwf	105,b	;volatile
  4501                           
  4502                           ;dc_motor.c: 31:     RG6PPS=0x08;
  4503   004576  0E08               	movlw	8
  4504   004578  6F88               	movwf	136,b	;volatile
  4505                           
  4506                           ;dc_motor.c: 34:     T2CONbits.CKPS=0b011;
  4507   00457A  50BD               	movf	189,w,c	;volatile
  4508   00457C  0B8F               	andlw	-113
  4509   00457E  0930               	iorlw	48
  4510   004580  6EBD               	movwf	189,c	;volatile
  4511                           
  4512                           ;dc_motor.c: 35:     T2HLTbits.MODE=0b00000;
  4513   004582  0EE0               	movlw	-32
  4514   004584  16BE               	andwf	190,f,c	;volatile
  4515                           
  4516                           ;dc_motor.c: 36:     T2CLKCONbits.CS=0b0001;
  4517   004586  50BF               	movf	191,w,c	;volatile
  4518   004588  0BF0               	andlw	-16
  4519   00458A  0901               	iorlw	1
  4520   00458C  6EBF               	movwf	191,c	;volatile
  4521                           
  4522                           ;dc_motor.c: 40:     T2PR=199;
  4523   00458E  0EC7               	movlw	199
  4524   004590  6EBC               	movwf	188,c	;volatile
  4525   004592                     
  4526                           ; BSR set to: 14
  4527                           ;dc_motor.c: 41:     T2CONbits.ON=1;
  4528   004592  8EBD               	bsf	189,7,c	;volatile
  4529                           
  4530                           ;dc_motor.c: 45:     CCPR1H=0;
  4531   004594  0E00               	movlw	0
  4532   004596  6EAA               	movwf	170,c	;volatile
  4533                           
  4534                           ;dc_motor.c: 46:     CCPR2H=0;
  4535   004598  0E00               	movlw	0
  4536   00459A  6EA6               	movwf	166,c	;volatile
  4537                           
  4538                           ;dc_motor.c: 47:     CCPR3H=0;
  4539   00459C  0E00               	movlw	0
  4540   00459E  010F               	movlb	15	; () banked
  4541   0045A0  6F25               	movwf	37,b	;volatile
  4542                           
  4543                           ;dc_motor.c: 48:     CCPR4H=0;
  4544   0045A2  0E00               	movlw	0
  4545   0045A4  6F21               	movwf	33,b	;volatile
  4546                           
  4547                           ;dc_motor.c: 51:     CCPTMRS0bits.C1TSEL=0;
  4548   0045A6  0EFC               	movlw	-4
  4549   0045A8  16AD               	andwf	173,f,c	;volatile
  4550                           
  4551                           ;dc_motor.c: 52:     CCPTMRS0bits.C2TSEL=0;
  4552   0045AA  0EF3               	movlw	-13
  4553   0045AC  16AD               	andwf	173,f,c	;volatile
  4554                           
  4555                           ;dc_motor.c: 53:     CCPTMRS0bits.C3TSEL=0;
  4556   0045AE  0ECF               	movlw	-49
  4557   0045B0  16AD               	andwf	173,f,c	;volatile
  4558                           
  4559                           ;dc_motor.c: 54:     CCPTMRS0bits.C4TSEL=0;
  4560   0045B2  0E3F               	movlw	-193
  4561   0045B4  16AD               	andwf	173,f,c	;volatile
  4562   0045B6                     
  4563                           ; BSR set to: 15
  4564                           ;dc_motor.c: 57:     CCP1CONbits.FMT=1;
  4565   0045B6  88AB               	bsf	171,4,c	;volatile
  4566                           
  4567                           ;dc_motor.c: 58:     CCP1CONbits.CCP1MODE=0b1100;
  4568   0045B8  50AB               	movf	171,w,c	;volatile
  4569   0045BA  0BF0               	andlw	-16
  4570   0045BC  090C               	iorlw	12
  4571   0045BE  6EAB               	movwf	171,c	;volatile
  4572   0045C0                     
  4573                           ; BSR set to: 15
  4574                           ;dc_motor.c: 59:     CCP1CONbits.EN=1;
  4575   0045C0  8EAB               	bsf	171,7,c	;volatile
  4576   0045C2                     
  4577                           ; BSR set to: 15
  4578                           ;dc_motor.c: 61:     CCP2CONbits.FMT=1;
  4579   0045C2  88A7               	bsf	167,4,c	;volatile
  4580                           
  4581                           ;dc_motor.c: 62:     CCP2CONbits.CCP2MODE=0b1100;
  4582   0045C4  50A7               	movf	167,w,c	;volatile
  4583   0045C6  0BF0               	andlw	-16
  4584   0045C8  090C               	iorlw	12
  4585   0045CA  6EA7               	movwf	167,c	;volatile
  4586   0045CC                     
  4587                           ; BSR set to: 15
  4588                           ;dc_motor.c: 63:     CCP2CONbits.EN=1;
  4589   0045CC  8EA7               	bsf	167,7,c	;volatile
  4590   0045CE                     
  4591                           ; BSR set to: 15
  4592                           ;dc_motor.c: 65:     CCP3CONbits.FMT=1;
  4593   0045CE  8926               	bsf	38,4,b	;volatile
  4594                           
  4595                           ;dc_motor.c: 66:     CCP3CONbits.CCP3MODE=0b1100;
  4596   0045D0  5126               	movf	38,w,b	;volatile
  4597   0045D2  0BF0               	andlw	-16
  4598   0045D4  090C               	iorlw	12
  4599   0045D6  6F26               	movwf	38,b	;volatile
  4600   0045D8                     
  4601                           ; BSR set to: 15
  4602                           ;dc_motor.c: 67:     CCP3CONbits.EN=1;
  4603   0045D8  8F26               	bsf	38,7,b	;volatile
  4604   0045DA                     
  4605                           ; BSR set to: 15
  4606                           ;dc_motor.c: 69:     CCP4CONbits.FMT=1;
  4607   0045DA  8922               	bsf	34,4,b	;volatile
  4608                           
  4609                           ;dc_motor.c: 70:     CCP4CONbits.CCP4MODE=0b1100;
  4610   0045DC  5122               	movf	34,w,b	;volatile
  4611   0045DE  0BF0               	andlw	-16
  4612   0045E0  090C               	iorlw	12
  4613   0045E2  6F22               	movwf	34,b	;volatile
  4614   0045E4                     
  4615                           ; BSR set to: 15
  4616                           ;dc_motor.c: 71:     CCP4CONbits.EN=1;
  4617   0045E4  8F22               	bsf	34,7,b	;volatile
  4618   0045E6                     
  4619                           ; BSR set to: 15
  4620   0045E6  0012               	return		;funcret
  4621   0045E8                     __end_of_initDCmotorsPWM:
  4622                           	callstack 0
  4623                           
  4624 ;; *************** function _color_click_init *****************
  4625 ;; Defined at:
  4626 ;;		line 8 in file "color.c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;		None
  4629 ;; Auto vars:     Size  Location     Type
  4630 ;;		None
  4631 ;; Return value:  Size  Location     Type
  4632 ;;                  1    wreg      void 
  4633 ;; Registers used:
  4634 ;;		wreg, status,2, status,0, cstack
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4642 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4643 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4644 ;;Total ram usage:        1 bytes
  4645 ;; Hardware stack levels used: 1
  4646 ;; Hardware stack levels required when called: 5
  4647 ;; This function calls:
  4648 ;;		_I2C_2_Master_Init
  4649 ;;		_color_writetoaddr
  4650 ;; This function is called by:
  4651 ;;		_main
  4652 ;; This function uses a non-reentrant model
  4653 ;;
  4654                           
  4655                           	psect	text21
  4656   004A70                     __ptext21:
  4657                           	callstack 0
  4658   004A70                     _color_click_init:
  4659                           	callstack 25
  4660   004A70                     
  4661                           ;color.c: 11:     I2C_2_Master_Init();
  4662   004A70  EC95  F025         	call	_I2C_2_Master_Init	;wreg free
  4663   004A74                     
  4664                           ;color.c: 14:   color_writetoaddr(0x00, 0x01);
  4665   004A74  0E01               	movlw	1
  4666   004A76  6E07               	movwf	color_writetoaddr@value^0,c
  4667   004A78  0E00               	movlw	0
  4668   004A7A  ECF6  F025         	call	_color_writetoaddr
  4669   004A7E                     
  4670                           ;color.c: 15:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4671   004A7E  0E3F               	movlw	63
  4672   004A80  6E09               	movwf	??_color_click_init^0,c
  4673   004A82  0E55               	movlw	85
  4674   004A84                     u6107:
  4675   004A84  2EE8               	decfsz	wreg,f,c
  4676   004A86  D7FE               	bra	u6107
  4677   004A88  2E09               	decfsz	??_color_click_init^0,f,c
  4678   004A8A  D7FC               	bra	u6107
  4679   004A8C  F000               	nop	
  4680   004A8E                     
  4681                           ;color.c: 18:  color_writetoaddr(0x00, 0x03);
  4682   004A8E  0E03               	movlw	3
  4683   004A90  6E07               	movwf	color_writetoaddr@value^0,c
  4684   004A92  0E00               	movlw	0
  4685   004A94  ECF6  F025         	call	_color_writetoaddr
  4686   004A98                     
  4687                           ;color.c: 21:  color_writetoaddr(0x01, 0xD5);
  4688   004A98  0ED5               	movlw	213
  4689   004A9A  6E07               	movwf	color_writetoaddr@value^0,c
  4690   004A9C  0E01               	movlw	1
  4691   004A9E  ECF6  F025         	call	_color_writetoaddr
  4692   004AA2  0012               	return		;funcret
  4693   004AA4                     __end_of_color_click_init:
  4694                           	callstack 0
  4695                           
  4696 ;; *************** function _color_writetoaddr *****************
  4697 ;; Defined at:
  4698 ;;		line 25 in file "color.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  address         1    wreg     unsigned char 
  4701 ;;  value           1    6[COMRAM] unsigned char 
  4702 ;; Auto vars:     Size  Location     Type
  4703 ;;  address         1    7[COMRAM] unsigned char 
  4704 ;; Return value:  Size  Location     Type
  4705 ;;                  1    wreg      void 
  4706 ;; Registers used:
  4707 ;;		wreg, status,2, status,0, cstack
  4708 ;; Tracked objects:
  4709 ;;		On entry : 0/0
  4710 ;;		On exit  : 0/0
  4711 ;;		Unchanged: 0/0
  4712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4713 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4714 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4716 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4717 ;;Total ram usage:        2 bytes
  4718 ;; Hardware stack levels used: 1
  4719 ;; Hardware stack levels required when called: 4
  4720 ;; This function calls:
  4721 ;;		_I2C_2_Master_Start
  4722 ;;		_I2C_2_Master_Stop
  4723 ;;		_I2C_2_Master_Write
  4724 ;; This function is called by:
  4725 ;;		_color_click_init
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           	psect	text22
  4730   004BEC                     __ptext22:
  4731                           	callstack 0
  4732   004BEC                     _color_writetoaddr:
  4733                           	callstack 25
  4734                           
  4735                           ;incstack = 0
  4736                           ;color_writetoaddr@address stored from wreg
  4737   004BEC  6E08               	movwf	color_writetoaddr@address^0,c
  4738   004BEE                     
  4739                           ;color.c: 26:     I2C_2_Master_Start();
  4740   004BEE  EC36  F026         	call	_I2C_2_Master_Start	;wreg free
  4741                           
  4742                           ;color.c: 27:     I2C_2_Master_Write(0x52 | 0x00);
  4743   004BF2  0E52               	movlw	82
  4744   004BF4  EC2B  F026         	call	_I2C_2_Master_Write
  4745                           
  4746                           ;color.c: 28:     I2C_2_Master_Write(0x80 | address);
  4747   004BF8  5008               	movf	color_writetoaddr@address^0,w,c
  4748   004BFA  0980               	iorlw	128
  4749   004BFC  EC2B  F026         	call	_I2C_2_Master_Write
  4750                           
  4751                           ;color.c: 29:     I2C_2_Master_Write(value);
  4752   004C00  5007               	movf	color_writetoaddr@value^0,w,c
  4753   004C02  EC2B  F026         	call	_I2C_2_Master_Write
  4754                           
  4755                           ;color.c: 30:     I2C_2_Master_Stop();
  4756   004C06  EC31  F026         	call	_I2C_2_Master_Stop	;wreg free
  4757   004C0A  0012               	return		;funcret
  4758   004C0C                     __end_of_color_writetoaddr:
  4759                           	callstack 0
  4760                           
  4761 ;; *************** function _I2C_2_Master_Init *****************
  4762 ;; Defined at:
  4763 ;;		line 4 in file "i2c.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;		None
  4766 ;; Auto vars:     Size  Location     Type
  4767 ;;		None
  4768 ;; Return value:  Size  Location     Type
  4769 ;;                  1    wreg      void 
  4770 ;; Registers used:
  4771 ;;		wreg, status,2
  4772 ;; Tracked objects:
  4773 ;;		On entry : 0/0
  4774 ;;		On exit  : 0/0
  4775 ;;		Unchanged: 0/0
  4776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4781 ;;Total ram usage:        0 bytes
  4782 ;; Hardware stack levels used: 1
  4783 ;; Hardware stack levels required when called: 2
  4784 ;; This function calls:
  4785 ;;		Nothing
  4786 ;; This function is called by:
  4787 ;;		_color_click_init
  4788 ;; This function uses a non-reentrant model
  4789 ;;
  4790                           
  4791                           	psect	text23
  4792   004B2A                     __ptext23:
  4793                           	callstack 0
  4794   004B2A                     _I2C_2_Master_Init:
  4795                           	callstack 27
  4796   004B2A                     
  4797                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4798   004B2A  010E               	movlb	14	; () banked
  4799   004B2C  51D9               	movf	217,w,b	;volatile
  4800   004B2E  0BF0               	andlw	-16
  4801   004B30  0908               	iorlw	8
  4802   004B32  6FD9               	movwf	217,b	;volatile
  4803   004B34                     
  4804                           ; BSR set to: 14
  4805                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4806   004B34  8BD9               	bsf	217,5,b	;volatile
  4807                           
  4808                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4809   004B36  0E9F               	movlw	159
  4810   004B38  6FD6               	movwf	214,b	;volatile
  4811   004B3A                     
  4812                           ; BSR set to: 14
  4813                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4814   004B3A  8A84               	bsf	132,5,c	;volatile
  4815   004B3C                     
  4816                           ; BSR set to: 14
  4817                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4818   004B3C  8C84               	bsf	132,6,c	;volatile
  4819   004B3E                     
  4820                           ; BSR set to: 14
  4821                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4822   004B3E  9BA7               	bcf	167,5,b	;volatile
  4823   004B40                     
  4824                           ; BSR set to: 14
  4825                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4826   004B40  9DA7               	bcf	167,6,b	;volatile
  4827                           
  4828                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  4829   004B42  0E1D               	movlw	29
  4830   004B44  6F1D               	movwf	29,b	;volatile
  4831                           
  4832                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4833   004B46  0E1E               	movlw	30
  4834   004B48  6F1C               	movwf	28,b	;volatile
  4835                           
  4836                           ;i2c.c: 18:   RD5PPS=0x1C;
  4837   004B4A  0E1C               	movlw	28
  4838   004B4C  6F6F               	movwf	111,b	;volatile
  4839                           
  4840                           ;i2c.c: 19:   RD6PPS=0x1B;
  4841   004B4E  0E1B               	movlw	27
  4842   004B50  6F70               	movwf	112,b	;volatile
  4843   004B52                     
  4844                           ; BSR set to: 14
  4845   004B52  0012               	return		;funcret
  4846   004B54                     __end_of_I2C_2_Master_Init:
  4847                           	callstack 0
  4848                           
  4849 ;; *************** function _colorDetect *****************
  4850 ;; Defined at:
  4851 ;;		line 130 in file "color.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;  clearRef        4    0[BANK0 ] void 
  4854 ;;  ambientRGBVa    2    4[BANK0 ] PTR struct RGB
  4855 ;;		 -> main@ambientRGBVal(8), 
  4856 ;;  whiteRGBVal     2    6[BANK0 ] PTR struct RGB
  4857 ;;		 -> main@whiteRGBVal(8), 
  4858 ;;  mL              2    8[BANK0 ] PTR struct DC_motor
  4859 ;;		 -> main@motorLeft(9), 
  4860 ;;  mR              2   10[BANK0 ] PTR struct DC_motor
  4861 ;;		 -> main@motorRight(9), 
  4862 ;; Auto vars:     Size  Location     Type
  4863 ;;  RGBVal          8   32[BANK0 ] struct RGB
  4864 ;;  bluePrint       4   48[BANK0 ] float 
  4865 ;;  greenPrint      4   44[BANK0 ] float 
  4866 ;;  redPrint        4   40[BANK0 ] float 
  4867 ;;  whiteB          4   20[BANK0 ] float 
  4868 ;;  whiteG          4   16[BANK0 ] float 
  4869 ;;  whiteR          4   12[BANK0 ] float 
  4870 ;;  whiteC          4    0        float 
  4871 ;;  colour_ref      2   30[BANK0 ] unsigned int 
  4872 ;;  ambientB        2   28[BANK0 ] unsigned int 
  4873 ;;  ambientG        2   26[BANK0 ] unsigned int 
  4874 ;;  ambientR        2   24[BANK0 ] unsigned int 
  4875 ;; Return value:  Size  Location     Type
  4876 ;;                  2    0[BANK0 ] unsigned int 
  4877 ;; Registers used:
  4878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4879 ;; Tracked objects:
  4880 ;;		On entry : 0/0
  4881 ;;		On exit  : 0/0
  4882 ;;		Unchanged: 0/0
  4883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4884 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4885 ;;      Locals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4886 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4887 ;;      Totals:         2      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4888 ;;Total ram usage:       54 bytes
  4889 ;; Hardware stack levels used: 1
  4890 ;; Hardware stack levels required when called: 7
  4891 ;; This function calls:
  4892 ;;		___fldiv
  4893 ;;		___flge
  4894 ;;		___flmul
  4895 ;;		___flsub
  4896 ;;		___xxtofl
  4897 ;;		_getColor
  4898 ;;		_reverseSquareLeft
  4899 ;;		_reverseSquareRight
  4900 ;;		_turnLeft_135
  4901 ;;		_turnLeft_90
  4902 ;;		_turnRight_135
  4903 ;;		_turnRight_90
  4904 ;;		_turn_180
  4905 ;; This function is called by:
  4906 ;;		_main
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           	psect	text24
  4911   000E18                     __ptext24:
  4912                           	callstack 0
  4913   000E18                     _colorDetect:
  4914                           	callstack 23
  4915   000E18                     
  4916                           ;color.c: 132:         RGB RGBVal;;color.c: 133:         getColor(&RGBVal);
  4917   000E18  0E80               	movlw	low colorDetect@RGBVal
  4918   000E1A  6E10               	movwf	getColor@v^0,c
  4919   000E1C  0E00               	movlw	high colorDetect@RGBVal
  4920   000E1E  6E11               	movwf	(getColor@v+1)^0,c
  4921   000E20  EC6B  F023         	call	_getColor	;wreg free
  4922   000E24                     
  4923                           ;color.c: 135:         unsigned int ambientR = ambientRGBVal->R;
  4924   000E24  C064  FFD9         	movff	colorDetect@ambientRGBVal,fsr2l
  4925   000E28  C065  FFDA         	movff	colorDetect@ambientRGBVal+1,fsr2h
  4926   000E2C  CFDE F078          	movff	postinc2,colorDetect@ambientR
  4927   000E30  CFDD F079          	movff	postdec2,colorDetect@ambientR+1
  4928   000E34                     
  4929                           ;color.c: 136:         unsigned int ambientG = ambientRGBVal->G;
  4930   000E34  0100               	movlb	0	; () banked
  4931   000E36  EE20 F002          	lfsr	2,2
  4932   000E3A  5164               	movf	colorDetect@ambientRGBVal& (0+255),w,b
  4933   000E3C  26D9               	addwf	fsr2l,f,c
  4934   000E3E  5165               	movf	(colorDetect@ambientRGBVal+1)& (0+255),w,b
  4935   000E40  22DA               	addwfc	fsr2h,f,c
  4936   000E42  CFDE F07A          	movff	postinc2,colorDetect@ambientG
  4937   000E46  CFDD F07B          	movff	postdec2,colorDetect@ambientG+1
  4938   000E4A                     
  4939                           ; BSR set to: 0
  4940                           ;color.c: 137:         unsigned int ambientB = ambientRGBVal->B;
  4941   000E4A  EE20 F004          	lfsr	2,4
  4942   000E4E  5164               	movf	colorDetect@ambientRGBVal& (0+255),w,b
  4943   000E50  26D9               	addwf	fsr2l,f,c
  4944   000E52  5165               	movf	(colorDetect@ambientRGBVal+1)& (0+255),w,b
  4945   000E54  22DA               	addwfc	fsr2h,f,c
  4946   000E56  CFDE F07C          	movff	postinc2,colorDetect@ambientB
  4947   000E5A  CFDD F07D          	movff	postdec2,colorDetect@ambientB+1
  4948   000E5E                     
  4949                           ; BSR set to: 0
  4950                           ;color.c: 139:         float whiteR = whiteRGBVal->R;
  4951   000E5E  C066  FFD9         	movff	colorDetect@whiteRGBVal,fsr2l
  4952   000E62  C067  FFDA         	movff	colorDetect@whiteRGBVal+1,fsr2h
  4953   000E66  CFDE F04F          	movff	postinc2,??_colorDetect
  4954   000E6A  CFDD F050          	movff	postdec2,??_colorDetect+1
  4955   000E6E  C04F  F005         	movff	??_colorDetect,___xxtofl@val
  4956   000E72  C050  F006         	movff	??_colorDetect+1,___xxtofl@val+1
  4957   000E76  6A07               	clrf	(___xxtofl@val+2)^0,c
  4958   000E78  6A08               	clrf	(___xxtofl@val+3)^0,c
  4959   000E7A  0E00               	movlw	0
  4960   000E7C  ECE7  F017         	call	___xxtofl
  4961   000E80  C005  F06C         	movff	?___xxtofl,colorDetect@whiteR
  4962   000E84  C006  F06D         	movff	?___xxtofl+1,colorDetect@whiteR+1
  4963   000E88  C007  F06E         	movff	?___xxtofl+2,colorDetect@whiteR+2
  4964   000E8C  C008  F06F         	movff	?___xxtofl+3,colorDetect@whiteR+3
  4965   000E90                     
  4966                           ;color.c: 140:         float whiteG = whiteRGBVal->G;
  4967   000E90  0100               	movlb	0	; () banked
  4968   000E92  EE20 F002          	lfsr	2,2
  4969   000E96  5166               	movf	colorDetect@whiteRGBVal& (0+255),w,b
  4970   000E98  26D9               	addwf	fsr2l,f,c
  4971   000E9A  5167               	movf	(colorDetect@whiteRGBVal+1)& (0+255),w,b
  4972   000E9C  22DA               	addwfc	fsr2h,f,c
  4973   000E9E  CFDE F04F          	movff	postinc2,??_colorDetect
  4974   000EA2  CFDD F050          	movff	postdec2,??_colorDetect+1
  4975   000EA6  C04F  F005         	movff	??_colorDetect,___xxtofl@val
  4976   000EAA  C050  F006         	movff	??_colorDetect+1,___xxtofl@val+1
  4977   000EAE  6A07               	clrf	(___xxtofl@val+2)^0,c
  4978   000EB0  6A08               	clrf	(___xxtofl@val+3)^0,c
  4979   000EB2  0E00               	movlw	0
  4980   000EB4  ECE7  F017         	call	___xxtofl
  4981   000EB8  C005  F070         	movff	?___xxtofl,colorDetect@whiteG
  4982   000EBC  C006  F071         	movff	?___xxtofl+1,colorDetect@whiteG+1
  4983   000EC0  C007  F072         	movff	?___xxtofl+2,colorDetect@whiteG+2
  4984   000EC4  C008  F073         	movff	?___xxtofl+3,colorDetect@whiteG+3
  4985   000EC8                     
  4986                           ;color.c: 141:         float whiteB = whiteRGBVal->B;
  4987   000EC8  0100               	movlb	0	; () banked
  4988   000ECA  EE20 F004          	lfsr	2,4
  4989   000ECE  5166               	movf	colorDetect@whiteRGBVal& (0+255),w,b
  4990   000ED0  26D9               	addwf	fsr2l,f,c
  4991   000ED2  5167               	movf	(colorDetect@whiteRGBVal+1)& (0+255),w,b
  4992   000ED4  22DA               	addwfc	fsr2h,f,c
  4993   000ED6  CFDE F04F          	movff	postinc2,??_colorDetect
  4994   000EDA  CFDD F050          	movff	postdec2,??_colorDetect+1
  4995   000EDE  C04F  F005         	movff	??_colorDetect,___xxtofl@val
  4996   000EE2  C050  F006         	movff	??_colorDetect+1,___xxtofl@val+1
  4997   000EE6  6A07               	clrf	(___xxtofl@val+2)^0,c
  4998   000EE8  6A08               	clrf	(___xxtofl@val+3)^0,c
  4999   000EEA  0E00               	movlw	0
  5000   000EEC  ECE7  F017         	call	___xxtofl
  5001   000EF0  C005  F074         	movff	?___xxtofl,colorDetect@whiteB
  5002   000EF4  C006  F075         	movff	?___xxtofl+1,colorDetect@whiteB+1
  5003   000EF8  C007  F076         	movff	?___xxtofl+2,colorDetect@whiteB+2
  5004   000EFC  C008  F077         	movff	?___xxtofl+3,colorDetect@whiteB+3
  5005   000F00  0100               	movlb	0	; () banked
  5006   000F02  EE20 F006          	lfsr	2,6
  5007   000F06  5166               	movf	colorDetect@whiteRGBVal& (0+255),w,b
  5008   000F08  26D9               	addwf	fsr2l,f,c
  5009   000F0A  5167               	movf	(colorDetect@whiteRGBVal+1)& (0+255),w,b
  5010   000F0C  22DA               	addwfc	fsr2h,f,c
  5011   000F0E  CFDE F04F          	movff	postinc2,??_colorDetect
  5012   000F12  CFDD F050          	movff	postdec2,??_colorDetect+1
  5013   000F16  C04F  F005         	movff	??_colorDetect,___xxtofl@val
  5014   000F1A  C050  F006         	movff	??_colorDetect+1,___xxtofl@val+1
  5015   000F1E  6A07               	clrf	(___xxtofl@val+2)^0,c
  5016   000F20  6A08               	clrf	(___xxtofl@val+3)^0,c
  5017   000F22  0E00               	movlw	0
  5018   000F24  ECE7  F017         	call	___xxtofl
  5019   000F28                     
  5020                           ;color.c: 144:         float redPrint = (RGBVal.R-ambientR)/((whiteR-(float)ambientR)*(c
      +                          learRef));
  5021   000F28  0100               	movlb	0	; () banked
  5022   000F2A  5178               	movf	colorDetect@ambientR& (0+255),w,b
  5023   000F2C  5D80               	subwf	colorDetect@RGBVal& (0+255),w,b
  5024   000F2E  6E4F               	movwf	??_colorDetect^0,c
  5025   000F30  5179               	movf	(colorDetect@ambientR+1)& (0+255),w,b
  5026   000F32  5981               	subwfb	(colorDetect@RGBVal+1)& (0+255),w,b
  5027   000F34  6E50               	movwf	(??_colorDetect+1)^0,c
  5028   000F36  C04F  F005         	movff	??_colorDetect,___xxtofl@val
  5029   000F3A  C050  F006         	movff	??_colorDetect+1,___xxtofl@val+1
  5030   000F3E  6A07               	clrf	(___xxtofl@val+2)^0,c
  5031   000F40  6A08               	clrf	(___xxtofl@val+3)^0,c
  5032   000F42  0E00               	movlw	0
  5033   000F44  ECE7  F017         	call	___xxtofl
  5034   000F48  C005  F036         	movff	?___xxtofl,___fldiv@b
  5035   000F4C  C006  F037         	movff	?___xxtofl+1,___fldiv@b+1
  5036   000F50  C007  F038         	movff	?___xxtofl+2,___fldiv@b+2
  5037   000F54  C008  F039         	movff	?___xxtofl+3,___fldiv@b+3
  5038   000F58  C060  F021         	movff	colorDetect@clearRef,___flmul@a
  5039   000F5C  C061  F022         	movff	colorDetect@clearRef+1,___flmul@a+1
  5040   000F60  C062  F023         	movff	colorDetect@clearRef+2,___flmul@a+2
  5041   000F64  C063  F024         	movff	colorDetect@clearRef+3,___flmul@a+3
  5042   000F68  C078  F005         	movff	colorDetect@ambientR,___xxtofl@val
  5043   000F6C  C079  F006         	movff	colorDetect@ambientR+1,___xxtofl@val+1
  5044   000F70  6A07               	clrf	(___xxtofl@val+2)^0,c
  5045   000F72  6A08               	clrf	(___xxtofl@val+3)^0,c
  5046   000F74  0E00               	movlw	0
  5047   000F76  ECE7  F017         	call	___xxtofl
  5048   000F7A  C005  F019         	movff	?___xxtofl,___flsub@a
  5049   000F7E  C006  F01A         	movff	?___xxtofl+1,___flsub@a+1
  5050   000F82  C007  F01B         	movff	?___xxtofl+2,___flsub@a+2
  5051   000F86  C008  F01C         	movff	?___xxtofl+3,___flsub@a+3
  5052   000F8A  C06C  F015         	movff	colorDetect@whiteR,___flsub@b
  5053   000F8E  C06D  F016         	movff	colorDetect@whiteR+1,___flsub@b+1
  5054   000F92  C06E  F017         	movff	colorDetect@whiteR+2,___flsub@b+2
  5055   000F96  C06F  F018         	movff	colorDetect@whiteR+3,___flsub@b+3
  5056   000F9A  ECB2  F024         	call	___flsub	;wreg free
  5057   000F9E  C015  F01D         	movff	?___flsub,___flmul@b
  5058   000FA2  C016  F01E         	movff	?___flsub+1,___flmul@b+1
  5059   000FA6  C017  F01F         	movff	?___flsub+2,___flmul@b+2
  5060   000FAA  C018  F020         	movff	?___flsub+3,___flmul@b+3
  5061   000FAE  EC8F  F011         	call	___flmul	;wreg free
  5062   000FB2  C01D  F03A         	movff	?___flmul,___fldiv@a
  5063   000FB6  C01E  F03B         	movff	?___flmul+1,___fldiv@a+1
  5064   000FBA  C01F  F03C         	movff	?___flmul+2,___fldiv@a+2
  5065   000FBE  C020  F03D         	movff	?___flmul+3,___fldiv@a+3
  5066   000FC2  ECA4  F013         	call	___fldiv	;wreg free
  5067   000FC6  C036  F088         	movff	?___fldiv,colorDetect@redPrint
  5068   000FCA  C037  F089         	movff	?___fldiv+1,colorDetect@redPrint+1
  5069   000FCE  C038  F08A         	movff	?___fldiv+2,colorDetect@redPrint+2
  5070   000FD2  C039  F08B         	movff	?___fldiv+3,colorDetect@redPrint+3
  5071   000FD6                     
  5072                           ;color.c: 145:         float greenPrint = (RGBVal.G-ambientG)/((whiteG-(float)ambientG)*
      +                          (clearRef));
  5073   000FD6  0100               	movlb	0	; () banked
  5074   000FD8  517A               	movf	colorDetect@ambientG& (0+255),w,b
  5075   000FDA  5D82               	subwf	(colorDetect@RGBVal+2)& (0+255),w,b
  5076   000FDC  6E4F               	movwf	??_colorDetect^0,c
  5077   000FDE  517B               	movf	(colorDetect@ambientG+1)& (0+255),w,b
  5078   000FE0  5983               	subwfb	(colorDetect@RGBVal+3)& (0+255),w,b
  5079   000FE2  6E50               	movwf	(??_colorDetect+1)^0,c
  5080   000FE4  C04F  F005         	movff	??_colorDetect,___xxtofl@val
  5081   000FE8  C050  F006         	movff	??_colorDetect+1,___xxtofl@val+1
  5082   000FEC  6A07               	clrf	(___xxtofl@val+2)^0,c
  5083   000FEE  6A08               	clrf	(___xxtofl@val+3)^0,c
  5084   000FF0  0E00               	movlw	0
  5085   000FF2  ECE7  F017         	call	___xxtofl
  5086   000FF6  C005  F036         	movff	?___xxtofl,___fldiv@b
  5087   000FFA  C006  F037         	movff	?___xxtofl+1,___fldiv@b+1
  5088   000FFE  C007  F038         	movff	?___xxtofl+2,___fldiv@b+2
  5089   001002  C008  F039         	movff	?___xxtofl+3,___fldiv@b+3
  5090   001006  C060  F021         	movff	colorDetect@clearRef,___flmul@a
  5091   00100A  C061  F022         	movff	colorDetect@clearRef+1,___flmul@a+1
  5092   00100E  C062  F023         	movff	colorDetect@clearRef+2,___flmul@a+2
  5093   001012  C063  F024         	movff	colorDetect@clearRef+3,___flmul@a+3
  5094   001016  C07A  F005         	movff	colorDetect@ambientG,___xxtofl@val
  5095   00101A  C07B  F006         	movff	colorDetect@ambientG+1,___xxtofl@val+1
  5096   00101E  6A07               	clrf	(___xxtofl@val+2)^0,c
  5097   001020  6A08               	clrf	(___xxtofl@val+3)^0,c
  5098   001022  0E00               	movlw	0
  5099   001024  ECE7  F017         	call	___xxtofl
  5100   001028  C005  F019         	movff	?___xxtofl,___flsub@a
  5101   00102C  C006  F01A         	movff	?___xxtofl+1,___flsub@a+1
  5102   001030  C007  F01B         	movff	?___xxtofl+2,___flsub@a+2
  5103   001034  C008  F01C         	movff	?___xxtofl+3,___flsub@a+3
  5104   001038  C070  F015         	movff	colorDetect@whiteG,___flsub@b
  5105   00103C  C071  F016         	movff	colorDetect@whiteG+1,___flsub@b+1
  5106   001040  C072  F017         	movff	colorDetect@whiteG+2,___flsub@b+2
  5107   001044  C073  F018         	movff	colorDetect@whiteG+3,___flsub@b+3
  5108   001048  ECB2  F024         	call	___flsub	;wreg free
  5109   00104C  C015  F01D         	movff	?___flsub,___flmul@b
  5110   001050  C016  F01E         	movff	?___flsub+1,___flmul@b+1
  5111   001054  C017  F01F         	movff	?___flsub+2,___flmul@b+2
  5112   001058  C018  F020         	movff	?___flsub+3,___flmul@b+3
  5113   00105C  EC8F  F011         	call	___flmul	;wreg free
  5114   001060  C01D  F03A         	movff	?___flmul,___fldiv@a
  5115   001064  C01E  F03B         	movff	?___flmul+1,___fldiv@a+1
  5116   001068  C01F  F03C         	movff	?___flmul+2,___fldiv@a+2
  5117   00106C  C020  F03D         	movff	?___flmul+3,___fldiv@a+3
  5118   001070  ECA4  F013         	call	___fldiv	;wreg free
  5119   001074  C036  F08C         	movff	?___fldiv,colorDetect@greenPrint
  5120   001078  C037  F08D         	movff	?___fldiv+1,colorDetect@greenPrint+1
  5121   00107C  C038  F08E         	movff	?___fldiv+2,colorDetect@greenPrint+2
  5122   001080  C039  F08F         	movff	?___fldiv+3,colorDetect@greenPrint+3
  5123   001084                     
  5124                           ;color.c: 146:         float bluePrint = (RGBVal.B-ambientB)/((whiteB-(float)ambientB)*(
      +                          clearRef));
  5125   001084  0100               	movlb	0	; () banked
  5126   001086  517C               	movf	colorDetect@ambientB& (0+255),w,b
  5127   001088  5D84               	subwf	(colorDetect@RGBVal+4)& (0+255),w,b
  5128   00108A  6E4F               	movwf	??_colorDetect^0,c
  5129   00108C  517D               	movf	(colorDetect@ambientB+1)& (0+255),w,b
  5130   00108E  5985               	subwfb	(colorDetect@RGBVal+5)& (0+255),w,b
  5131   001090  6E50               	movwf	(??_colorDetect+1)^0,c
  5132   001092  C04F  F005         	movff	??_colorDetect,___xxtofl@val
  5133   001096  C050  F006         	movff	??_colorDetect+1,___xxtofl@val+1
  5134   00109A  6A07               	clrf	(___xxtofl@val+2)^0,c
  5135   00109C  6A08               	clrf	(___xxtofl@val+3)^0,c
  5136   00109E  0E00               	movlw	0
  5137   0010A0  ECE7  F017         	call	___xxtofl
  5138   0010A4  C005  F036         	movff	?___xxtofl,___fldiv@b
  5139   0010A8  C006  F037         	movff	?___xxtofl+1,___fldiv@b+1
  5140   0010AC  C007  F038         	movff	?___xxtofl+2,___fldiv@b+2
  5141   0010B0  C008  F039         	movff	?___xxtofl+3,___fldiv@b+3
  5142   0010B4  C060  F021         	movff	colorDetect@clearRef,___flmul@a
  5143   0010B8  C061  F022         	movff	colorDetect@clearRef+1,___flmul@a+1
  5144   0010BC  C062  F023         	movff	colorDetect@clearRef+2,___flmul@a+2
  5145   0010C0  C063  F024         	movff	colorDetect@clearRef+3,___flmul@a+3
  5146   0010C4  C07C  F005         	movff	colorDetect@ambientB,___xxtofl@val
  5147   0010C8  C07D  F006         	movff	colorDetect@ambientB+1,___xxtofl@val+1
  5148   0010CC  6A07               	clrf	(___xxtofl@val+2)^0,c
  5149   0010CE  6A08               	clrf	(___xxtofl@val+3)^0,c
  5150   0010D0  0E00               	movlw	0
  5151   0010D2  ECE7  F017         	call	___xxtofl
  5152   0010D6  C005  F019         	movff	?___xxtofl,___flsub@a
  5153   0010DA  C006  F01A         	movff	?___xxtofl+1,___flsub@a+1
  5154   0010DE  C007  F01B         	movff	?___xxtofl+2,___flsub@a+2
  5155   0010E2  C008  F01C         	movff	?___xxtofl+3,___flsub@a+3
  5156   0010E6  C074  F015         	movff	colorDetect@whiteB,___flsub@b
  5157   0010EA  C075  F016         	movff	colorDetect@whiteB+1,___flsub@b+1
  5158   0010EE  C076  F017         	movff	colorDetect@whiteB+2,___flsub@b+2
  5159   0010F2  C077  F018         	movff	colorDetect@whiteB+3,___flsub@b+3
  5160   0010F6  ECB2  F024         	call	___flsub	;wreg free
  5161   0010FA  C015  F01D         	movff	?___flsub,___flmul@b
  5162   0010FE  C016  F01E         	movff	?___flsub+1,___flmul@b+1
  5163   001102  C017  F01F         	movff	?___flsub+2,___flmul@b+2
  5164   001106  C018  F020         	movff	?___flsub+3,___flmul@b+3
  5165   00110A  EC8F  F011         	call	___flmul	;wreg free
  5166   00110E  C01D  F03A         	movff	?___flmul,___fldiv@a
  5167   001112  C01E  F03B         	movff	?___flmul+1,___fldiv@a+1
  5168   001116  C01F  F03C         	movff	?___flmul+2,___fldiv@a+2
  5169   00111A  C020  F03D         	movff	?___flmul+3,___fldiv@a+3
  5170   00111E  ECA4  F013         	call	___fldiv	;wreg free
  5171   001122  C036  F090         	movff	?___fldiv,colorDetect@bluePrint
  5172   001126  C037  F091         	movff	?___fldiv+1,colorDetect@bluePrint+1
  5173   00112A  C038  F092         	movff	?___fldiv+2,colorDetect@bluePrint+2
  5174   00112E  C039  F093         	movff	?___fldiv+3,colorDetect@bluePrint+3
  5175   001132                     
  5176                           ;color.c: 148:         unsigned int colour_ref = 11;
  5177   001132  0E00               	movlw	0
  5178   001134  0100               	movlb	0	; () banked
  5179   001136  6F7F               	movwf	(colorDetect@colour_ref+1)& (0+255),b
  5180   001138  0E0B               	movlw	11
  5181   00113A  6F7E               	movwf	colorDetect@colour_ref& (0+255),b
  5182   00113C                     
  5183                           ; BSR set to: 0
  5184                           ;color.c: 150:         if ((redPrint < 0) | (redPrint > 2)) { redPrint = 0.0;}
  5185   00113C  BF8B               	btfsc	(colorDetect@redPrint+3)& (0+255),7,b
  5186   00113E  EFA3  F008         	goto	u5431
  5187   001142  EFA5  F008         	goto	u5430
  5188   001146                     u5431:
  5189   001146  EFBE  F008         	goto	l5005
  5190   00114A                     u5430:
  5191   00114A                     
  5192                           ; BSR set to: 0
  5193   00114A  0E00               	movlw	0
  5194   00114C  6E1D               	movwf	___flge@ff1^0,c
  5195   00114E  0E00               	movlw	0
  5196   001150  6E1E               	movwf	(___flge@ff1+1)^0,c
  5197   001152  0E00               	movlw	0
  5198   001154  6E1F               	movwf	(___flge@ff1+2)^0,c
  5199   001156  0E40               	movlw	64
  5200   001158  6E20               	movwf	(___flge@ff1+3)^0,c
  5201   00115A  C088  F021         	movff	colorDetect@redPrint,___flge@ff2
  5202   00115E  C089  F022         	movff	colorDetect@redPrint+1,___flge@ff2+1
  5203   001162  C08A  F023         	movff	colorDetect@redPrint+2,___flge@ff2+2
  5204   001166  C08B  F024         	movff	colorDetect@redPrint+3,___flge@ff2+3
  5205   00116A  ECB5  F01E         	call	___flge	;wreg free
  5206   00116E  B0D8               	btfsc	status,0,c
  5207   001170  EFBC  F008         	goto	u5441
  5208   001174  EFBE  F008         	goto	u5440
  5209   001178                     u5441:
  5210   001178  EFC7  F008         	goto	l5007
  5211   00117C                     u5440:
  5212   00117C                     l5005:
  5213   00117C  0E00               	movlw	0
  5214   00117E  0100               	movlb	0	; () banked
  5215   001180  6F88               	movwf	colorDetect@redPrint& (0+255),b
  5216   001182  0E00               	movlw	0
  5217   001184  6F89               	movwf	(colorDetect@redPrint+1)& (0+255),b
  5218   001186  0E00               	movlw	0
  5219   001188  6F8A               	movwf	(colorDetect@redPrint+2)& (0+255),b
  5220   00118A  0E00               	movlw	0
  5221   00118C  6F8B               	movwf	(colorDetect@redPrint+3)& (0+255),b
  5222   00118E                     l5007:
  5223                           
  5224                           ;color.c: 151:         if ((greenPrint < 0) | (greenPrint > 2)) {greenPrint = 0.0;}
  5225   00118E  0100               	movlb	0	; () banked
  5226   001190  BF8F               	btfsc	(colorDetect@greenPrint+3)& (0+255),7,b
  5227   001192  EFCD  F008         	goto	u5451
  5228   001196  EFCF  F008         	goto	u5450
  5229   00119A                     u5451:
  5230   00119A  EFE8  F008         	goto	l5011
  5231   00119E                     u5450:
  5232   00119E                     
  5233                           ; BSR set to: 0
  5234   00119E  0E00               	movlw	0
  5235   0011A0  6E1D               	movwf	___flge@ff1^0,c
  5236   0011A2  0E00               	movlw	0
  5237   0011A4  6E1E               	movwf	(___flge@ff1+1)^0,c
  5238   0011A6  0E00               	movlw	0
  5239   0011A8  6E1F               	movwf	(___flge@ff1+2)^0,c
  5240   0011AA  0E40               	movlw	64
  5241   0011AC  6E20               	movwf	(___flge@ff1+3)^0,c
  5242   0011AE  C08C  F021         	movff	colorDetect@greenPrint,___flge@ff2
  5243   0011B2  C08D  F022         	movff	colorDetect@greenPrint+1,___flge@ff2+1
  5244   0011B6  C08E  F023         	movff	colorDetect@greenPrint+2,___flge@ff2+2
  5245   0011BA  C08F  F024         	movff	colorDetect@greenPrint+3,___flge@ff2+3
  5246   0011BE  ECB5  F01E         	call	___flge	;wreg free
  5247   0011C2  B0D8               	btfsc	status,0,c
  5248   0011C4  EFE6  F008         	goto	u5461
  5249   0011C8  EFE8  F008         	goto	u5460
  5250   0011CC                     u5461:
  5251   0011CC  EFF1  F008         	goto	l5013
  5252   0011D0                     u5460:
  5253   0011D0                     l5011:
  5254   0011D0  0E00               	movlw	0
  5255   0011D2  0100               	movlb	0	; () banked
  5256   0011D4  6F8C               	movwf	colorDetect@greenPrint& (0+255),b
  5257   0011D6  0E00               	movlw	0
  5258   0011D8  6F8D               	movwf	(colorDetect@greenPrint+1)& (0+255),b
  5259   0011DA  0E00               	movlw	0
  5260   0011DC  6F8E               	movwf	(colorDetect@greenPrint+2)& (0+255),b
  5261   0011DE  0E00               	movlw	0
  5262   0011E0  6F8F               	movwf	(colorDetect@greenPrint+3)& (0+255),b
  5263   0011E2                     l5013:
  5264                           
  5265                           ;color.c: 152:         if ((bluePrint < 0) | (bluePrint > 2)){ bluePrint = 0.0;}
  5266   0011E2  0100               	movlb	0	; () banked
  5267   0011E4  BF93               	btfsc	(colorDetect@bluePrint+3)& (0+255),7,b
  5268   0011E6  EFF7  F008         	goto	u5471
  5269   0011EA  EFF9  F008         	goto	u5470
  5270   0011EE                     u5471:
  5271   0011EE  EF12  F009         	goto	l5017
  5272   0011F2                     u5470:
  5273   0011F2                     
  5274                           ; BSR set to: 0
  5275   0011F2  0E00               	movlw	0
  5276   0011F4  6E1D               	movwf	___flge@ff1^0,c
  5277   0011F6  0E00               	movlw	0
  5278   0011F8  6E1E               	movwf	(___flge@ff1+1)^0,c
  5279   0011FA  0E00               	movlw	0
  5280   0011FC  6E1F               	movwf	(___flge@ff1+2)^0,c
  5281   0011FE  0E40               	movlw	64
  5282   001200  6E20               	movwf	(___flge@ff1+3)^0,c
  5283   001202  C090  F021         	movff	colorDetect@bluePrint,___flge@ff2
  5284   001206  C091  F022         	movff	colorDetect@bluePrint+1,___flge@ff2+1
  5285   00120A  C092  F023         	movff	colorDetect@bluePrint+2,___flge@ff2+2
  5286   00120E  C093  F024         	movff	colorDetect@bluePrint+3,___flge@ff2+3
  5287   001212  ECB5  F01E         	call	___flge	;wreg free
  5288   001216  B0D8               	btfsc	status,0,c
  5289   001218  EF10  F009         	goto	u5481
  5290   00121C  EF12  F009         	goto	u5480
  5291   001220                     u5481:
  5292   001220  EF1B  F009         	goto	l5019
  5293   001224                     u5480:
  5294   001224                     l5017:
  5295   001224  0E00               	movlw	0
  5296   001226  0100               	movlb	0	; () banked
  5297   001228  6F90               	movwf	colorDetect@bluePrint& (0+255),b
  5298   00122A  0E00               	movlw	0
  5299   00122C  6F91               	movwf	(colorDetect@bluePrint+1)& (0+255),b
  5300   00122E  0E00               	movlw	0
  5301   001230  6F92               	movwf	(colorDetect@bluePrint+2)& (0+255),b
  5302   001232  0E00               	movlw	0
  5303   001234  6F93               	movwf	(colorDetect@bluePrint+3)& (0+255),b
  5304   001236                     l5019:
  5305                           
  5306                           ;color.c: 155:         if ((redPrint > 0.9) & (greenPrint > 0.9) & (bluePrint > 0.9)){
  5307   001236  0E66               	movlw	102
  5308   001238  6E1D               	movwf	___flge@ff1^0,c
  5309   00123A  0E66               	movlw	102
  5310   00123C  6E1E               	movwf	(___flge@ff1+1)^0,c
  5311   00123E  0E66               	movlw	102
  5312   001240  6E1F               	movwf	(___flge@ff1+2)^0,c
  5313   001242  0E3F               	movlw	63
  5314   001244  6E20               	movwf	(___flge@ff1+3)^0,c
  5315   001246  C088  F021         	movff	colorDetect@redPrint,___flge@ff2
  5316   00124A  C089  F022         	movff	colorDetect@redPrint+1,___flge@ff2+1
  5317   00124E  C08A  F023         	movff	colorDetect@redPrint+2,___flge@ff2+2
  5318   001252  C08B  F024         	movff	colorDetect@redPrint+3,___flge@ff2+3
  5319   001256  ECB5  F01E         	call	___flge	;wreg free
  5320   00125A  B0D8               	btfsc	status,0,c
  5321   00125C  EF32  F009         	goto	u5491
  5322   001260  EF34  F009         	goto	u5490
  5323   001264                     u5491:
  5324   001264  EF6D  F009         	goto	l5027
  5325   001268                     u5490:
  5326   001268  0E66               	movlw	102
  5327   00126A  6E1D               	movwf	___flge@ff1^0,c
  5328   00126C  0E66               	movlw	102
  5329   00126E  6E1E               	movwf	(___flge@ff1+1)^0,c
  5330   001270  0E66               	movlw	102
  5331   001272  6E1F               	movwf	(___flge@ff1+2)^0,c
  5332   001274  0E3F               	movlw	63
  5333   001276  6E20               	movwf	(___flge@ff1+3)^0,c
  5334   001278  C08C  F021         	movff	colorDetect@greenPrint,___flge@ff2
  5335   00127C  C08D  F022         	movff	colorDetect@greenPrint+1,___flge@ff2+1
  5336   001280  C08E  F023         	movff	colorDetect@greenPrint+2,___flge@ff2+2
  5337   001284  C08F  F024         	movff	colorDetect@greenPrint+3,___flge@ff2+3
  5338   001288  ECB5  F01E         	call	___flge	;wreg free
  5339   00128C  B0D8               	btfsc	status,0,c
  5340   00128E  EF4B  F009         	goto	u5501
  5341   001292  EF4D  F009         	goto	u5500
  5342   001296                     u5501:
  5343   001296  EF6D  F009         	goto	l5027
  5344   00129A                     u5500:
  5345   00129A  0E66               	movlw	102
  5346   00129C  6E1D               	movwf	___flge@ff1^0,c
  5347   00129E  0E66               	movlw	102
  5348   0012A0  6E1E               	movwf	(___flge@ff1+1)^0,c
  5349   0012A2  0E66               	movlw	102
  5350   0012A4  6E1F               	movwf	(___flge@ff1+2)^0,c
  5351   0012A6  0E3F               	movlw	63
  5352   0012A8  6E20               	movwf	(___flge@ff1+3)^0,c
  5353   0012AA  C090  F021         	movff	colorDetect@bluePrint,___flge@ff2
  5354   0012AE  C091  F022         	movff	colorDetect@bluePrint+1,___flge@ff2+1
  5355   0012B2  C092  F023         	movff	colorDetect@bluePrint+2,___flge@ff2+2
  5356   0012B6  C093  F024         	movff	colorDetect@bluePrint+3,___flge@ff2+3
  5357   0012BA  ECB5  F01E         	call	___flge	;wreg free
  5358   0012BE  B0D8               	btfsc	status,0,c
  5359   0012C0  EF64  F009         	goto	u5511
  5360   0012C4  EF66  F009         	goto	u5510
  5361   0012C8                     u5511:
  5362   0012C8  EF6D  F009         	goto	l5027
  5363   0012CC                     u5510:
  5364   0012CC                     
  5365                           ;color.c: 156:         colour_ref = 8;
  5366   0012CC  0E00               	movlw	0
  5367   0012CE  0100               	movlb	0	; () banked
  5368   0012D0  6F7F               	movwf	(colorDetect@colour_ref+1)& (0+255),b
  5369   0012D2  0E08               	movlw	8
  5370   0012D4  6F7E               	movwf	colorDetect@colour_ref& (0+255),b
  5371                           
  5372                           ;color.c: 157:         }
  5373   0012D6  EFF1  F00C         	goto	l5129
  5374   0012DA                     l5027:
  5375   0012DA  0E00               	movlw	0
  5376   0012DC  6E1D               	movwf	___flge@ff1^0,c
  5377   0012DE  0E00               	movlw	0
  5378   0012E0  6E1E               	movwf	(___flge@ff1+1)^0,c
  5379   0012E2  0EC0               	movlw	192
  5380   0012E4  6E1F               	movwf	(___flge@ff1+2)^0,c
  5381   0012E6  0E3F               	movlw	63
  5382   0012E8  6E20               	movwf	(___flge@ff1+3)^0,c
  5383   0012EA  C088  F021         	movff	colorDetect@redPrint,___flge@ff2
  5384   0012EE  C089  F022         	movff	colorDetect@redPrint+1,___flge@ff2+1
  5385   0012F2  C08A  F023         	movff	colorDetect@redPrint+2,___flge@ff2+2
  5386   0012F6  C08B  F024         	movff	colorDetect@redPrint+3,___flge@ff2+3
  5387   0012FA  ECB5  F01E         	call	___flge	;wreg free
  5388   0012FE  B0D8               	btfsc	status,0,c
  5389   001300  EF84  F009         	goto	u5521
  5390   001304  EF86  F009         	goto	u5520
  5391   001308                     u5521:
  5392   001308  EFFB  F009         	goto	l5041
  5393   00130C                     u5520:
  5394   00130C  0ECD               	movlw	205
  5395   00130E  6E1D               	movwf	___flge@ff1^0,c
  5396   001310  0ECC               	movlw	204
  5397   001312  6E1E               	movwf	(___flge@ff1+1)^0,c
  5398   001314  0E4C               	movlw	76
  5399   001316  6E1F               	movwf	(___flge@ff1+2)^0,c
  5400   001318  0E3F               	movlw	63
  5401   00131A  6E20               	movwf	(___flge@ff1+3)^0,c
  5402   00131C  C08C  F019         	movff	colorDetect@greenPrint,___flsub@a
  5403   001320  C08D  F01A         	movff	colorDetect@greenPrint+1,___flsub@a+1
  5404   001324  C08E  F01B         	movff	colorDetect@greenPrint+2,___flsub@a+2
  5405   001328  C08F  F01C         	movff	colorDetect@greenPrint+3,___flsub@a+3
  5406   00132C  C088  F015         	movff	colorDetect@redPrint,___flsub@b
  5407   001330  C089  F016         	movff	colorDetect@redPrint+1,___flsub@b+1
  5408   001334  C08A  F017         	movff	colorDetect@redPrint+2,___flsub@b+2
  5409   001338  C08B  F018         	movff	colorDetect@redPrint+3,___flsub@b+3
  5410   00133C  ECB2  F024         	call	___flsub	;wreg free
  5411   001340  C015  F021         	movff	?___flsub,___flge@ff2
  5412   001344  C016  F022         	movff	?___flsub+1,___flge@ff2+1
  5413   001348  C017  F023         	movff	?___flsub+2,___flge@ff2+2
  5414   00134C  C018  F024         	movff	?___flsub+3,___flge@ff2+3
  5415   001350  ECB5  F01E         	call	___flge	;wreg free
  5416   001354  B0D8               	btfsc	status,0,c
  5417   001356  EFAF  F009         	goto	u5531
  5418   00135A  EFB1  F009         	goto	u5530
  5419   00135E                     u5531:
  5420   00135E  EFFB  F009         	goto	l5041
  5421   001362                     u5530:
  5422   001362  0ECD               	movlw	205
  5423   001364  6E1D               	movwf	___flge@ff1^0,c
  5424   001366  0ECC               	movlw	204
  5425   001368  6E1E               	movwf	(___flge@ff1+1)^0,c
  5426   00136A  0E4C               	movlw	76
  5427   00136C  6E1F               	movwf	(___flge@ff1+2)^0,c
  5428   00136E  0E3F               	movlw	63
  5429   001370  6E20               	movwf	(___flge@ff1+3)^0,c
  5430   001372  C090  F019         	movff	colorDetect@bluePrint,___flsub@a
  5431   001376  C091  F01A         	movff	colorDetect@bluePrint+1,___flsub@a+1
  5432   00137A  C092  F01B         	movff	colorDetect@bluePrint+2,___flsub@a+2
  5433   00137E  C093  F01C         	movff	colorDetect@bluePrint+3,___flsub@a+3
  5434   001382  C088  F015         	movff	colorDetect@redPrint,___flsub@b
  5435   001386  C089  F016         	movff	colorDetect@redPrint+1,___flsub@b+1
  5436   00138A  C08A  F017         	movff	colorDetect@redPrint+2,___flsub@b+2
  5437   00138E  C08B  F018         	movff	colorDetect@redPrint+3,___flsub@b+3
  5438   001392  ECB2  F024         	call	___flsub	;wreg free
  5439   001396  C015  F021         	movff	?___flsub,___flge@ff2
  5440   00139A  C016  F022         	movff	?___flsub+1,___flge@ff2+1
  5441   00139E  C017  F023         	movff	?___flsub+2,___flge@ff2+2
  5442   0013A2  C018  F024         	movff	?___flsub+3,___flge@ff2+3
  5443   0013A6  ECB5  F01E         	call	___flge	;wreg free
  5444   0013AA  B0D8               	btfsc	status,0,c
  5445   0013AC  EFDA  F009         	goto	u5541
  5446   0013B0  EFDC  F009         	goto	u5540
  5447   0013B4                     u5541:
  5448   0013B4  EFFB  F009         	goto	l5041
  5449   0013B8                     u5540:
  5450   0013B8                     
  5451                           ;color.c: 161:         _delay((unsigned long)((2)*(64000000/4000.0)));
  5452   0013B8  0E2A               	movlw	42
  5453   0013BA  6E4F               	movwf	??_colorDetect^0,c
  5454   0013BC  0E8E               	movlw	142
  5455   0013BE                     u6117:
  5456   0013BE  2EE8               	decfsz	wreg,f,c
  5457   0013C0  D7FE               	bra	u6117
  5458   0013C2  2E4F               	decfsz	??_colorDetect^0,f,c
  5459   0013C4  D7FC               	bra	u6117
  5460   0013C6                     
  5461                           ;color.c: 162:         turnRight_90(mL,mR);
  5462   0013C6  C068  F01E         	movff	colorDetect@mL,turnRight_90@mL
  5463   0013CA  C069  F01F         	movff	colorDetect@mL+1,turnRight_90@mL+1
  5464   0013CE  C06A  F020         	movff	colorDetect@mR,turnRight_90@mR
  5465   0013D2  C06B  F021         	movff	colorDetect@mR+1,turnRight_90@mR+1
  5466   0013D6  EC3B  F01C         	call	_turnRight_90	;wreg free
  5467   0013DA                     
  5468                           ;color.c: 163:         _delay((unsigned long)((2)*(64000000/4000.0)));
  5469   0013DA  0E2A               	movlw	42
  5470   0013DC  6E4F               	movwf	??_colorDetect^0,c
  5471   0013DE  0E8E               	movlw	142
  5472   0013E0                     u6127:
  5473   0013E0  2EE8               	decfsz	wreg,f,c
  5474   0013E2  D7FE               	bra	u6127
  5475   0013E4  2E4F               	decfsz	??_colorDetect^0,f,c
  5476   0013E6  D7FC               	bra	u6127
  5477   0013E8                     
  5478                           ;color.c: 164:         colour_ref = 1;
  5479   0013E8  0E00               	movlw	0
  5480   0013EA  0100               	movlb	0	; () banked
  5481   0013EC  6F7F               	movwf	(colorDetect@colour_ref+1)& (0+255),b
  5482   0013EE  0E01               	movlw	1
  5483   0013F0  6F7E               	movwf	colorDetect@colour_ref& (0+255),b
  5484                           
  5485                           ;color.c: 166:         }
  5486   0013F2  EFF1  F00C         	goto	l5129
  5487   0013F6                     l5041:
  5488   0013F6  0ECD               	movlw	205
  5489   0013F8  6E1D               	movwf	___flge@ff1^0,c
  5490   0013FA  0ECC               	movlw	204
  5491   0013FC  6E1E               	movwf	(___flge@ff1+1)^0,c
  5492   0013FE  0ECC               	movlw	204
  5493   001400  6E1F               	movwf	(___flge@ff1+2)^0,c
  5494   001402  0E3E               	movlw	62
  5495   001404  6E20               	movwf	(___flge@ff1+3)^0,c
  5496   001406  C088  F019         	movff	colorDetect@redPrint,___flsub@a
  5497   00140A  C089  F01A         	movff	colorDetect@redPrint+1,___flsub@a+1
  5498   00140E  C08A  F01B         	movff	colorDetect@redPrint+2,___flsub@a+2
  5499   001412  C08B  F01C         	movff	colorDetect@redPrint+3,___flsub@a+3
  5500   001416  C08C  F015         	movff	colorDetect@greenPrint,___flsub@b
  5501   00141A  C08D  F016         	movff	colorDetect@greenPrint+1,___flsub@b+1
  5502   00141E  C08E  F017         	movff	colorDetect@greenPrint+2,___flsub@b+2
  5503   001422  C08F  F018         	movff	colorDetect@greenPrint+3,___flsub@b+3
  5504   001426  ECB2  F024         	call	___flsub	;wreg free
  5505   00142A  C015  F021         	movff	?___flsub,___flge@ff2
  5506   00142E  C016  F022         	movff	?___flsub+1,___flge@ff2+1
  5507   001432  C017  F023         	movff	?___flsub+2,___flge@ff2+2
  5508   001436  C018  F024         	movff	?___flsub+3,___flge@ff2+3
  5509   00143A  ECB5  F01E         	call	___flge	;wreg free
  5510   00143E  B0D8               	btfsc	status,0,c
  5511   001440  EF24  F00A         	goto	u5551
  5512   001444  EF26  F00A         	goto	u5550
  5513   001448                     u5551:
  5514   001448  EF89  F00A         	goto	l5055
  5515   00144C                     u5550:
  5516   00144C  0E00               	movlw	0
  5517   00144E  6E1D               	movwf	___flge@ff1^0,c
  5518   001450  0E00               	movlw	0
  5519   001452  6E1E               	movwf	(___flge@ff1+1)^0,c
  5520   001454  0E80               	movlw	128
  5521   001456  6E1F               	movwf	(___flge@ff1+2)^0,c
  5522   001458  0E3F               	movlw	63
  5523   00145A  6E20               	movwf	(___flge@ff1+3)^0,c
  5524   00145C  C08C  F021         	movff	colorDetect@greenPrint,___flge@ff2
  5525   001460  C08D  F022         	movff	colorDetect@greenPrint+1,___flge@ff2+1
  5526   001464  C08E  F023         	movff	colorDetect@greenPrint+2,___flge@ff2+2
  5527   001468  C08F  F024         	movff	colorDetect@greenPrint+3,___flge@ff2+3
  5528   00146C  ECB5  F01E         	call	___flge	;wreg free
  5529   001470  B0D8               	btfsc	status,0,c
  5530   001472  EF3D  F00A         	goto	u5561
  5531   001476  EF3F  F00A         	goto	u5560
  5532   00147A                     u5561:
  5533   00147A  EF89  F00A         	goto	l5055
  5534   00147E                     u5560:
  5535   00147E  0ECD               	movlw	205
  5536   001480  6E1D               	movwf	___flge@ff1^0,c
  5537   001482  0ECC               	movlw	204
  5538   001484  6E1E               	movwf	(___flge@ff1+1)^0,c
  5539   001486  0ECC               	movlw	204
  5540   001488  6E1F               	movwf	(___flge@ff1+2)^0,c
  5541   00148A  0E3E               	movlw	62
  5542   00148C  6E20               	movwf	(___flge@ff1+3)^0,c
  5543   00148E  C090  F019         	movff	colorDetect@bluePrint,___flsub@a
  5544   001492  C091  F01A         	movff	colorDetect@bluePrint+1,___flsub@a+1
  5545   001496  C092  F01B         	movff	colorDetect@bluePrint+2,___flsub@a+2
  5546   00149A  C093  F01C         	movff	colorDetect@bluePrint+3,___flsub@a+3
  5547   00149E  C08C  F015         	movff	colorDetect@greenPrint,___flsub@b
  5548   0014A2  C08D  F016         	movff	colorDetect@greenPrint+1,___flsub@b+1
  5549   0014A6  C08E  F017         	movff	colorDetect@greenPrint+2,___flsub@b+2
  5550   0014AA  C08F  F018         	movff	colorDetect@greenPrint+3,___flsub@b+3
  5551   0014AE  ECB2  F024         	call	___flsub	;wreg free
  5552   0014B2  C015  F021         	movff	?___flsub,___flge@ff2
  5553   0014B6  C016  F022         	movff	?___flsub+1,___flge@ff2+1
  5554   0014BA  C017  F023         	movff	?___flsub+2,___flge@ff2+2
  5555   0014BE  C018  F024         	movff	?___flsub+3,___flge@ff2+3
  5556   0014C2  ECB5  F01E         	call	___flge	;wreg free
  5557   0014C6  B0D8               	btfsc	status,0,c
  5558   0014C8  EF68  F00A         	goto	u5571
  5559   0014CC  EF6A  F00A         	goto	u5570
  5560   0014D0                     u5571:
  5561   0014D0  EF89  F00A         	goto	l5055
  5562   0014D4                     u5570:
  5563   0014D4                     
  5564                           ;color.c: 170:         _delay((unsigned long)((2)*(64000000/4000.0)));
  5565   0014D4  0E2A               	movlw	42
  5566   0014D6  6E4F               	movwf	??_colorDetect^0,c
  5567   0014D8  0E8E               	movlw	142
  5568   0014DA                     u6137:
  5569   0014DA  2EE8               	decfsz	wreg,f,c
  5570   0014DC  D7FE               	bra	u6137
  5571   0014DE  2E4F               	decfsz	??_colorDetect^0,f,c
  5572   0014E0  D7FC               	bra	u6137
  5573   0014E2                     
  5574                           ;color.c: 171:         turnLeft_90(mL,mR);
  5575   0014E2  C068  F01E         	movff	colorDetect@mL,turnLeft_90@mL
  5576   0014E6  C069  F01F         	movff	colorDetect@mL+1,turnLeft_90@mL+1
  5577   0014EA  C06A  F020         	movff	colorDetect@mR,turnLeft_90@mR
  5578   0014EE  C06B  F021         	movff	colorDetect@mR+1,turnLeft_90@mR+1
  5579   0014F2  ECDA  F01C         	call	_turnLeft_90	;wreg free
  5580   0014F6                     
  5581                           ;color.c: 172:         _delay((unsigned long)((2)*(64000000/4000.0)));
  5582   0014F6  0E2A               	movlw	42
  5583   0014F8  6E4F               	movwf	??_colorDetect^0,c
  5584   0014FA  0E8E               	movlw	142
  5585   0014FC                     u6147:
  5586   0014FC  2EE8               	decfsz	wreg,f,c
  5587   0014FE  D7FE               	bra	u6147
  5588   001500  2E4F               	decfsz	??_colorDetect^0,f,c
  5589   001502  D7FC               	bra	u6147
  5590   001504                     
  5591                           ;color.c: 173:         colour_ref = 2;
  5592   001504  0E00               	movlw	0
  5593   001506  0100               	movlb	0	; () banked
  5594   001508  6F7F               	movwf	(colorDetect@colour_ref+1)& (0+255),b
  5595   00150A  0E02               	movlw	2
  5596   00150C  6F7E               	movwf	colorDetect@colour_ref& (0+255),b
  5597                           
  5598                           ;color.c: 174:         }
  5599   00150E  EFF1  F00C         	goto	l5129
  5600   001512                     l5055:
  5601   001512  0E33               	movlw	51
  5602   001514  6E1D               	movwf	___flge@ff1^0,c
  5603   001516  0E33               	movlw	51
  5604   001518  6E1E               	movwf	(___flge@ff1+1)^0,c
  5605   00151A  0E33               	movlw	51
  5606   00151C  6E1F               	movwf	(___flge@ff1+2)^0,c
  5607   00151E  0E3F               	movlw	63
  5608   001520  6E20               	movwf	(___flge@ff1+3)^0,c
  5609   001522  C088  F019         	movff	colorDetect@redPrint,___flsub@a
  5610   001526  C089  F01A         	movff	colorDetect@redPrint+1,___flsub@a+1
  5611   00152A  C08A  F01B         	movff	colorDetect@redPrint+2,___flsub@a+2
  5612   00152E  C08B  F01C         	movff	colorDetect@redPrint+3,___flsub@a+3
  5613   001532  C090  F015         	movff	colorDetect@bluePrint,___flsub@b
  5614   001536  C091  F016         	movff	colorDetect@bluePrint+1,___flsub@b+1
  5615   00153A  C092  F017         	movff	colorDetect@bluePrint+2,___flsub@b+2
  5616   00153E  C093  F018         	movff	colorDetect@bluePrint+3,___flsub@b+3
  5617   001542  ECB2  F024         	call	___flsub	;wreg free
  5618   001546  C015  F021         	movff	?___flsub,___flge@ff2
  5619   00154A  C016  F022         	movff	?___flsub+1,___flge@ff2+1
  5620   00154E  C017  F023         	movff	?___flsub+2,___flge@ff2+2
  5621   001552  C018  F024         	movff	?___flsub+3,___flge@ff2+3
  5622   001556  ECB5  F01E         	call	___flge	;wreg free
  5623   00155A  B0D8               	btfsc	status,0,c
  5624   00155C  EFB2  F00A         	goto	u5581
  5625   001560  EFB4  F00A         	goto	u5580
  5626   001564                     u5581:
  5627   001564  EF17  F00B         	goto	l5069
  5628   001568                     u5580:
  5629   001568  0E9A               	movlw	154
  5630   00156A  6E1D               	movwf	___flge@ff1^0,c
  5631   00156C  0E99               	movlw	153
  5632   00156E  6E1E               	movwf	(___flge@ff1+1)^0,c
  5633   001570  0E99               	movlw	153
  5634   001572  6E1F               	movwf	(___flge@ff1+2)^0,c
  5635   001574  0E3E               	movlw	62
  5636   001576  6E20               	movwf	(___flge@ff1+3)^0,c
  5637   001578  C08C  F019         	movff	colorDetect@greenPrint,___flsub@a
  5638   00157C  C08D  F01A         	movff	colorDetect@greenPrint+1,___flsub@a+1
  5639   001580  C08E  F01B         	movff	colorDetect@greenPrint+2,___flsub@a+2
  5640   001584  C08F  F01C         	movff	colorDetect@greenPrint+3,___flsub@a+3
  5641   001588  C090  F015         	movff	colorDetect@bluePrint,___flsub@b
  5642   00158C  C091  F016         	movff	colorDetect@bluePrint+1,___flsub@b+1
  5643   001590  C092  F017         	movff	colorDetect@bluePrint+2,___flsub@b+2
  5644   001594  C093  F018         	movff	colorDetect@bluePrint+3,___flsub@b+3
  5645   001598  ECB2  F024         	call	___flsub	;wreg free
  5646   00159C  C015  F021         	movff	?___flsub,___flge@ff2
  5647   0015A0  C016  F022         	movff	?___flsub+1,___flge@ff2+1
  5648   0015A4  C017  F023         	movff	?___flsub+2,___flge@ff2+2
  5649   0015A8  C018  F024         	movff	?___flsub+3,___flge@ff2+3
  5650   0015AC  ECB5  F01E         	call	___flge	;wreg free
  5651   0015B0  B0D8               	btfsc	status,0,c
  5652   0015B2  EFDD  F00A         	goto	u5591
  5653   0015B6  EFDF  F00A         	goto	u5590
  5654   0015BA                     u5591:
  5655   0015BA  EF17  F00B         	goto	l5069
  5656   0015BE                     u5590:
  5657   0015BE  0E33               	movlw	51
  5658   0015C0  6E1D               	movwf	___flge@ff1^0,c
  5659   0015C2  0E33               	movlw	51
  5660   0015C4  6E1E               	movwf	(___flge@ff1+1)^0,c
  5661   0015C6  0E33               	movlw	51
  5662   0015C8  6E1F               	movwf	(___flge@ff1+2)^0,c
  5663   0015CA  0E3F               	movlw	63
  5664   0015CC  6E20               	movwf	(___flge@ff1+3)^0,c
  5665   0015CE  C090  F021         	movff	colorDetect@bluePrint,___flge@ff2
  5666   0015D2  C091  F022         	movff	colorDetect@bluePrint+1,___flge@ff2+1
  5667   0015D6  C092  F023         	movff	colorDetect@bluePrint+2,___flge@ff2+2
  5668   0015DA  C093  F024         	movff	colorDetect@bluePrint+3,___flge@ff2+3
  5669   0015DE  ECB5  F01E         	call	___flge	;wreg free
  5670   0015E2  B0D8               	btfsc	status,0,c
  5671   0015E4  EFF6  F00A         	goto	u5601
  5672   0015E8  EFF8  F00A         	goto	u5600
  5673   0015EC                     u5601:
  5674   0015EC  EF17  F00B         	goto	l5069
  5675   0015F0                     u5600:
  5676   0015F0                     
  5677                           ;color.c: 178:         _delay((unsigned long)((2)*(64000000/4000.0)));
  5678   0015F0  0E2A               	movlw	42
  5679   0015F2  6E4F               	movwf	??_colorDetect^0,c
  5680   0015F4  0E8E               	movlw	142
  5681   0015F6                     u6157:
  5682   0015F6  2EE8               	decfsz	wreg,f,c
  5683   0015F8  D7FE               	bra	u6157
  5684   0015FA  2E4F               	decfsz	??_colorDetect^0,f,c
  5685   0015FC  D7FC               	bra	u6157
  5686   0015FE                     
  5687                           ;color.c: 179:         turn_180(mL,mR);
  5688   0015FE  C068  F01E         	movff	colorDetect@mL,turn_180@mL
  5689   001602  C069  F01F         	movff	colorDetect@mL+1,turn_180@mL+1
  5690   001606  C06A  F020         	movff	colorDetect@mR,turn_180@mR
  5691   00160A  C06B  F021         	movff	colorDetect@mR+1,turn_180@mR+1
  5692   00160E  EC9C  F01B         	call	_turn_180	;wreg free
  5693   001612                     
  5694                           ;color.c: 180:         _delay((unsigned long)((2)*(64000000/4000.0)));
  5695   001612  0E2A               	movlw	42
  5696   001614  6E4F               	movwf	??_colorDetect^0,c
  5697   001616  0E8E               	movlw	142
  5698   001618                     u6167:
  5699   001618  2EE8               	decfsz	wreg,f,c
  5700   00161A  D7FE               	bra	u6167
  5701   00161C  2E4F               	decfsz	??_colorDetect^0,f,c
  5702   00161E  D7FC               	bra	u6167
  5703   001620                     
  5704                           ;color.c: 181:         colour_ref = 3;
  5705   001620  0E00               	movlw	0
  5706   001622  0100               	movlb	0	; () banked
  5707   001624  6F7F               	movwf	(colorDetect@colour_ref+1)& (0+255),b
  5708   001626  0E03               	movlw	3
  5709   001628  6F7E               	movwf	colorDetect@colour_ref& (0+255),b
  5710                           
  5711                           ;color.c: 182:         }
  5712   00162A  EFF1  F00C         	goto	l5129
  5713   00162E                     l5069:
  5714   00162E  0E00               	movlw	0
  5715   001630  6E1D               	movwf	___flge@ff1^0,c
  5716   001632  0E00               	movlw	0
  5717   001634  6E1E               	movwf	(___flge@ff1+1)^0,c
  5718   001636  0E80               	movlw	128
  5719   001638  6E1F               	movwf	(___flge@ff1+2)^0,c
  5720   00163A  0E3F               	movlw	63
  5721   00163C  6E20               	movwf	(___flge@ff1+3)^0,c
  5722   00163E  C088  F021         	movff	colorDetect@redPrint,___flge@ff2
  5723   001642  C089  F022         	movff	colorDetect@redPrint+1,___flge@ff2+1
  5724   001646  C08A  F023         	movff	colorDetect@redPrint+2,___flge@ff2+2
  5725   00164A  C08B  F024         	movff	colorDetect@redPrint+3,___flge@ff2+3
  5726   00164E  ECB5  F01E         	call	___flge	;wreg free
  5727   001652  B0D8               	btfsc	status,0,c
  5728   001654  EF2E  F00B         	goto	u5611
  5729   001658  EF30  F00B         	goto	u5610
  5730   00165C                     u5611:
  5731   00165C  EF81  F00B         	goto	l5083
  5732   001660                     u5610:
  5733   001660  0ECD               	movlw	205
  5734   001662  6E1D               	movwf	___flge@ff1^0,c
  5735   001664  0ECC               	movlw	204
  5736   001666  6E1E               	movwf	(___flge@ff1+1)^0,c
  5737   001668  0E4C               	movlw	76
  5738   00166A  6E1F               	movwf	(___flge@ff1+2)^0,c
  5739   00166C  0E3F               	movlw	63
  5740   00166E  6E20               	movwf	(___flge@ff1+3)^0,c
  5741   001670  C08C  F021         	movff	colorDetect@greenPrint,___flge@ff2
  5742   001674  C08D  F022         	movff	colorDetect@greenPrint+1,___flge@ff2+1
  5743   001678  C08E  F023         	movff	colorDetect@greenPrint+2,___flge@ff2+2
  5744   00167C  C08F  F024         	movff	colorDetect@greenPrint+3,___flge@ff2+3
  5745   001680  ECB5  F01E         	call	___flge	;wreg free
  5746   001684  B0D8               	btfsc	status,0,c
  5747   001686  EF47  F00B         	goto	u5621
  5748   00168A  EF49  F00B         	goto	u5620
  5749   00168E                     u5621:
  5750   00168E  EF81  F00B         	goto	l5083
  5751   001692                     u5620:
  5752   001692  C090  F01D         	movff	colorDetect@bluePrint,___flge@ff1
  5753   001696  C091  F01E         	movff	colorDetect@bluePrint+1,___flge@ff1+1
  5754   00169A  C092  F01F         	movff	colorDetect@bluePrint+2,___flge@ff1+2
  5755   00169E  C093  F020         	movff	colorDetect@bluePrint+3,___flge@ff1+3
  5756   0016A2  0ECD               	movlw	205
  5757   0016A4  6E21               	movwf	___flge@ff2^0,c
  5758   0016A6  0ECC               	movlw	204
  5759   0016A8  6E22               	movwf	(___flge@ff2+1)^0,c
  5760   0016AA  0E4C               	movlw	76
  5761   0016AC  6E23               	movwf	(___flge@ff2+2)^0,c
  5762   0016AE  0E3F               	movlw	63
  5763   0016B0  6E24               	movwf	(___flge@ff2+3)^0,c
  5764   0016B2  ECB5  F01E         	call	___flge	;wreg free
  5765   0016B6  B0D8               	btfsc	status,0,c
  5766   0016B8  EF60  F00B         	goto	u5631
  5767   0016BC  EF62  F00B         	goto	u5630
  5768   0016C0                     u5631:
  5769   0016C0  EF81  F00B         	goto	l5083
  5770   0016C4                     u5630:
  5771   0016C4                     
  5772                           ;color.c: 187:         _delay((unsigned long)((2)*(64000000/4000.0)));
  5773   0016C4  0E2A               	movlw	42
  5774   0016C6  6E4F               	movwf	??_colorDetect^0,c
  5775   0016C8  0E8E               	movlw	142
  5776   0016CA                     u6177:
  5777   0016CA  2EE8               	decfsz	wreg,f,c
  5778   0016CC  D7FE               	bra	u6177
  5779   0016CE  2E4F               	decfsz	??_colorDetect^0,f,c
  5780   0016D0  D7FC               	bra	u6177
  5781   0016D2                     
  5782                           ;color.c: 188:         reverseSquareRight(mL,mR);
  5783   0016D2  C068  F024         	movff	colorDetect@mL,reverseSquareRight@mL
  5784   0016D6  C069  F025         	movff	colorDetect@mL+1,reverseSquareRight@mL+1
  5785   0016DA  C06A  F026         	movff	colorDetect@mR,reverseSquareRight@mR
  5786   0016DE  C06B  F027         	movff	colorDetect@mR+1,reverseSquareRight@mR+1
  5787   0016E2  EC16  F022         	call	_reverseSquareRight	;wreg free
  5788   0016E6                     
  5789                           ;color.c: 189:         _delay((unsigned long)((2)*(64000000/4000.0)));
  5790   0016E6  0E2A               	movlw	42
  5791   0016E8  6E4F               	movwf	??_colorDetect^0,c
  5792   0016EA  0E8E               	movlw	142
  5793   0016EC                     u6187:
  5794   0016EC  2EE8               	decfsz	wreg,f,c
  5795   0016EE  D7FE               	bra	u6187
  5796   0016F0  2E4F               	decfsz	??_colorDetect^0,f,c
  5797   0016F2  D7FC               	bra	u6187
  5798   0016F4                     
  5799                           ;color.c: 190:         colour_ref = 4;
  5800   0016F4  0E00               	movlw	0
  5801   0016F6  0100               	movlb	0	; () banked
  5802   0016F8  6F7F               	movwf	(colorDetect@colour_ref+1)& (0+255),b
  5803   0016FA  0E04               	movlw	4
  5804   0016FC  6F7E               	movwf	colorDetect@colour_ref& (0+255),b
  5805                           
  5806                           ;color.c: 191:         }
  5807   0016FE  EFF1  F00C         	goto	l5129
  5808   001702                     l5083:
  5809   001702  0E33               	movlw	51
  5810   001704  6E1D               	movwf	___flge@ff1^0,c
  5811   001706  0E33               	movlw	51
  5812   001708  6E1E               	movwf	(___flge@ff1+1)^0,c
  5813   00170A  0E73               	movlw	115
  5814   00170C  6E1F               	movwf	(___flge@ff1+2)^0,c
  5815   00170E  0E3F               	movlw	63
  5816   001710  6E20               	movwf	(___flge@ff1+3)^0,c
  5817   001712  C088  F021         	movff	colorDetect@redPrint,___flge@ff2
  5818   001716  C089  F022         	movff	colorDetect@redPrint+1,___flge@ff2+1
  5819   00171A  C08A  F023         	movff	colorDetect@redPrint+2,___flge@ff2+2
  5820   00171E  C08B  F024         	movff	colorDetect@redPrint+3,___flge@ff2+3
  5821   001722  ECB5  F01E         	call	___flge	;wreg free
  5822   001726  B0D8               	btfsc	status,0,c
  5823   001728  EF98  F00B         	goto	u5641
  5824   00172C  EF9A  F00B         	goto	u5640
  5825   001730                     u5641:
  5826   001730  EF1D  F00C         	goto	l5101
  5827   001734                     u5640:
  5828   001734  0ECD               	movlw	205
  5829   001736  6E1D               	movwf	___flge@ff1^0,c
  5830   001738  0ECC               	movlw	204
  5831   00173A  6E1E               	movwf	(___flge@ff1+1)^0,c
  5832   00173C  0E4C               	movlw	76
  5833   00173E  6E1F               	movwf	(___flge@ff1+2)^0,c
  5834   001740  0E3F               	movlw	63
  5835   001742  6E20               	movwf	(___flge@ff1+3)^0,c
  5836   001744  C08C  F021         	movff	colorDetect@greenPrint,___flge@ff2
  5837   001748  C08D  F022         	movff	colorDetect@greenPrint+1,___flge@ff2+1
  5838   00174C  C08E  F023         	movff	colorDetect@greenPrint+2,___flge@ff2+2
  5839   001750  C08F  F024         	movff	colorDetect@greenPrint+3,___flge@ff2+3
  5840   001754  ECB5  F01E         	call	___flge	;wreg free
  5841   001758  B0D8               	btfsc	status,0,c
  5842   00175A  EFB1  F00B         	goto	u5651
  5843   00175E  EFB3  F00B         	goto	u5650
  5844   001762                     u5651:
  5845   001762  EF1D  F00C         	goto	l5101
  5846   001766                     u5650:
  5847   001766  C08C  F01D         	movff	colorDetect@greenPrint,___flge@ff1
  5848   00176A  C08D  F01E         	movff	colorDetect@greenPrint+1,___flge@ff1+1
  5849   00176E  C08E  F01F         	movff	colorDetect@greenPrint+2,___flge@ff1+2
  5850   001772  C08F  F020         	movff	colorDetect@greenPrint+3,___flge@ff1+3
  5851   001776  0E66               	movlw	102
  5852   001778  6E21               	movwf	___flge@ff2^0,c
  5853   00177A  0E66               	movlw	102
  5854   00177C  6E22               	movwf	(___flge@ff2+1)^0,c
  5855   00177E  0E66               	movlw	102
  5856   001780  6E23               	movwf	(___flge@ff2+2)^0,c
  5857   001782  0E3F               	movlw	63
  5858   001784  6E24               	movwf	(___flge@ff2+3)^0,c
  5859   001786  ECB5  F01E         	call	___flge	;wreg free
  5860   00178A  B0D8               	btfsc	status,0,c
  5861   00178C  EFCA  F00B         	goto	u5661
  5862   001790  EFCC  F00B         	goto	u5660
  5863   001794                     u5661:
  5864   001794  EF1D  F00C         	goto	l5101
  5865   001798                     u5660:
  5866   001798  0ECD               	movlw	205
  5867   00179A  6E1D               	movwf	___flge@ff1^0,c
  5868   00179C  0ECC               	movlw	204
  5869   00179E  6E1E               	movwf	(___flge@ff1+1)^0,c
  5870   0017A0  0E4C               	movlw	76
  5871   0017A2  6E1F               	movwf	(___flge@ff1+2)^0,c
  5872   0017A4  0E3F               	movlw	63
  5873   0017A6  6E20               	movwf	(___flge@ff1+3)^0,c
  5874   0017A8  C090  F021         	movff	colorDetect@bluePrint,___flge@ff2
  5875   0017AC  C091  F022         	movff	colorDetect@bluePrint+1,___flge@ff2+1
  5876   0017B0  C092  F023         	movff	colorDetect@bluePrint+2,___flge@ff2+2
  5877   0017B4  C093  F024         	movff	colorDetect@bluePrint+3,___flge@ff2+3
  5878   0017B8  ECB5  F01E         	call	___flge	;wreg free
  5879   0017BC  B0D8               	btfsc	status,0,c
  5880   0017BE  EFE3  F00B         	goto	u5671
  5881   0017C2  EFE5  F00B         	goto	u5670
  5882   0017C6                     u5671:
  5883   0017C6  EF1D  F00C         	goto	l5101
  5884   0017CA                     u5670:
  5885   0017CA  C090  F01D         	movff	colorDetect@bluePrint,___flge@ff1
  5886   0017CE  C091  F01E         	movff	colorDetect@bluePrint+1,___flge@ff1+1
  5887   0017D2  C092  F01F         	movff	colorDetect@bluePrint+2,___flge@ff1+2
  5888   0017D6  C093  F020         	movff	colorDetect@bluePrint+3,___flge@ff1+3
  5889   0017DA  0E33               	movlw	51
  5890   0017DC  6E21               	movwf	___flge@ff2^0,c
  5891   0017DE  0E33               	movlw	51
  5892   0017E0  6E22               	movwf	(___flge@ff2+1)^0,c
  5893   0017E2  0E73               	movlw	115
  5894   0017E4  6E23               	movwf	(___flge@ff2+2)^0,c
  5895   0017E6  0E3F               	movlw	63
  5896   0017E8  6E24               	movwf	(___flge@ff2+3)^0,c
  5897   0017EA  ECB5  F01E         	call	___flge	;wreg free
  5898   0017EE  B0D8               	btfsc	status,0,c
  5899   0017F0  EFFC  F00B         	goto	u5681
  5900   0017F4  EFFE  F00B         	goto	u5680
  5901   0017F8                     u5681:
  5902   0017F8  EF1D  F00C         	goto	l5101
  5903   0017FC                     u5680:
  5904   0017FC                     
  5905                           ;color.c: 195:         _delay((unsigned long)((2)*(64000000/4000.0)));
  5906   0017FC  0E2A               	movlw	42
  5907   0017FE  6E4F               	movwf	??_colorDetect^0,c
  5908   001800  0E8E               	movlw	142
  5909   001802                     u6197:
  5910   001802  2EE8               	decfsz	wreg,f,c
  5911   001804  D7FE               	bra	u6197
  5912   001806  2E4F               	decfsz	??_colorDetect^0,f,c
  5913   001808  D7FC               	bra	u6197
  5914   00180A                     
  5915                           ;color.c: 196:         reverseSquareLeft(mL,mR);
  5916   00180A  C068  F024         	movff	colorDetect@mL,reverseSquareLeft@mL
  5917   00180E  C069  F025         	movff	colorDetect@mL+1,reverseSquareLeft@mL+1
  5918   001812  C06A  F026         	movff	colorDetect@mR,reverseSquareLeft@mR
  5919   001816  C06B  F027         	movff	colorDetect@mR+1,reverseSquareLeft@mR+1
  5920   00181A  EC61  F022         	call	_reverseSquareLeft	;wreg free
  5921   00181E                     
  5922                           ;color.c: 197:         _delay((unsigned long)((2)*(64000000/4000.0)));
  5923   00181E  0E2A               	movlw	42
  5924   001820  6E4F               	movwf	??_colorDetect^0,c
  5925   001822  0E8E               	movlw	142
  5926   001824                     u6207:
  5927   001824  2EE8               	decfsz	wreg,f,c
  5928   001826  D7FE               	bra	u6207
  5929   001828  2E4F               	decfsz	??_colorDetect^0,f,c
  5930   00182A  D7FC               	bra	u6207
  5931   00182C                     
  5932                           ;color.c: 198:         colour_ref = 5;
  5933   00182C  0E00               	movlw	0
  5934   00182E  0100               	movlb	0	; () banked
  5935   001830  6F7F               	movwf	(colorDetect@colour_ref+1)& (0+255),b
  5936   001832  0E05               	movlw	5
  5937   001834  6F7E               	movwf	colorDetect@colour_ref& (0+255),b
  5938                           
  5939                           ;color.c: 199:         }
  5940   001836  EFF1  F00C         	goto	l5129
  5941   00183A                     l5101:
  5942   00183A  0E66               	movlw	102
  5943   00183C  6E1D               	movwf	___flge@ff1^0,c
  5944   00183E  0E66               	movlw	102
  5945   001840  6E1E               	movwf	(___flge@ff1+1)^0,c
  5946   001842  0EA6               	movlw	166
  5947   001844  6E1F               	movwf	(___flge@ff1+2)^0,c
  5948   001846  0E3F               	movlw	63
  5949   001848  6E20               	movwf	(___flge@ff1+3)^0,c
  5950   00184A  C088  F021         	movff	colorDetect@redPrint,___flge@ff2
  5951   00184E  C089  F022         	movff	colorDetect@redPrint+1,___flge@ff2+1
  5952   001852  C08A  F023         	movff	colorDetect@redPrint+2,___flge@ff2+2
  5953   001856  C08B  F024         	movff	colorDetect@redPrint+3,___flge@ff2+3
  5954   00185A  ECB5  F01E         	call	___flge	;wreg free
  5955   00185E  B0D8               	btfsc	status,0,c
  5956   001860  EF34  F00C         	goto	u5691
  5957   001864  EF36  F00C         	goto	u5690
  5958   001868                     u5691:
  5959   001868  EF87  F00C         	goto	l5115
  5960   00186C                     u5690:
  5961   00186C  0E00               	movlw	0
  5962   00186E  6E1D               	movwf	___flge@ff1^0,c
  5963   001870  0E00               	movlw	0
  5964   001872  6E1E               	movwf	(___flge@ff1+1)^0,c
  5965   001874  0E00               	movlw	0
  5966   001876  6E1F               	movwf	(___flge@ff1+2)^0,c
  5967   001878  0E3F               	movlw	63
  5968   00187A  6E20               	movwf	(___flge@ff1+3)^0,c
  5969   00187C  C08C  F021         	movff	colorDetect@greenPrint,___flge@ff2
  5970   001880  C08D  F022         	movff	colorDetect@greenPrint+1,___flge@ff2+1
  5971   001884  C08E  F023         	movff	colorDetect@greenPrint+2,___flge@ff2+2
  5972   001888  C08F  F024         	movff	colorDetect@greenPrint+3,___flge@ff2+3
  5973   00188C  ECB5  F01E         	call	___flge	;wreg free
  5974   001890  B0D8               	btfsc	status,0,c
  5975   001892  EF4D  F00C         	goto	u5701
  5976   001896  EF4F  F00C         	goto	u5700
  5977   00189A                     u5701:
  5978   00189A  EF87  F00C         	goto	l5115
  5979   00189E                     u5700:
  5980   00189E  0E00               	movlw	0
  5981   0018A0  6E1D               	movwf	___flge@ff1^0,c
  5982   0018A2  0E00               	movlw	0
  5983   0018A4  6E1E               	movwf	(___flge@ff1+1)^0,c
  5984   0018A6  0E00               	movlw	0
  5985   0018A8  6E1F               	movwf	(___flge@ff1+2)^0,c
  5986   0018AA  0E3F               	movlw	63
  5987   0018AC  6E20               	movwf	(___flge@ff1+3)^0,c
  5988   0018AE  C090  F021         	movff	colorDetect@bluePrint,___flge@ff2
  5989   0018B2  C091  F022         	movff	colorDetect@bluePrint+1,___flge@ff2+1
  5990   0018B6  C092  F023         	movff	colorDetect@bluePrint+2,___flge@ff2+2
  5991   0018BA  C093  F024         	movff	colorDetect@bluePrint+3,___flge@ff2+3
  5992   0018BE  ECB5  F01E         	call	___flge	;wreg free
  5993   0018C2  B0D8               	btfsc	status,0,c
  5994   0018C4  EF66  F00C         	goto	u5711
  5995   0018C8  EF68  F00C         	goto	u5710
  5996   0018CC                     u5711:
  5997   0018CC  EF87  F00C         	goto	l5115
  5998   0018D0                     u5710:
  5999   0018D0                     
  6000                           ;color.c: 203:         _delay((unsigned long)((2)*(64000000/4000.0)));
  6001   0018D0  0E2A               	movlw	42
  6002   0018D2  6E4F               	movwf	??_colorDetect^0,c
  6003   0018D4  0E8E               	movlw	142
  6004   0018D6                     u6217:
  6005   0018D6  2EE8               	decfsz	wreg,f,c
  6006   0018D8  D7FE               	bra	u6217
  6007   0018DA  2E4F               	decfsz	??_colorDetect^0,f,c
  6008   0018DC  D7FC               	bra	u6217
  6009   0018DE                     
  6010                           ;color.c: 204:         turnRight_135(mL,mR);
  6011   0018DE  C068  F01E         	movff	colorDetect@mL,turnRight_135@mL
  6012   0018E2  C069  F01F         	movff	colorDetect@mL+1,turnRight_135@mL+1
  6013   0018E6  C06A  F020         	movff	colorDetect@mR,turnRight_135@mR
  6014   0018EA  C06B  F021         	movff	colorDetect@mR+1,turnRight_135@mR+1
  6015   0018EE  EC79  F01D         	call	_turnRight_135	;wreg free
  6016   0018F2                     
  6017                           ;color.c: 205:         _delay((unsigned long)((2)*(64000000/4000.0)));
  6018   0018F2  0E2A               	movlw	42
  6019   0018F4  6E4F               	movwf	??_colorDetect^0,c
  6020   0018F6  0E8E               	movlw	142
  6021   0018F8                     u6227:
  6022   0018F8  2EE8               	decfsz	wreg,f,c
  6023   0018FA  D7FE               	bra	u6227
  6024   0018FC  2E4F               	decfsz	??_colorDetect^0,f,c
  6025   0018FE  D7FC               	bra	u6227
  6026   001900                     
  6027                           ;color.c: 206:         colour_ref = 6;
  6028   001900  0E00               	movlw	0
  6029   001902  0100               	movlb	0	; () banked
  6030   001904  6F7F               	movwf	(colorDetect@colour_ref+1)& (0+255),b
  6031   001906  0E06               	movlw	6
  6032   001908  6F7E               	movwf	colorDetect@colour_ref& (0+255),b
  6033                           
  6034                           ;color.c: 208:         }
  6035   00190A  EFF1  F00C         	goto	l5129
  6036   00190E                     l5115:
  6037   00190E  C088  F01D         	movff	colorDetect@redPrint,___flge@ff1
  6038   001912  C089  F01E         	movff	colorDetect@redPrint+1,___flge@ff1+1
  6039   001916  C08A  F01F         	movff	colorDetect@redPrint+2,___flge@ff1+2
  6040   00191A  C08B  F020         	movff	colorDetect@redPrint+3,___flge@ff1+3
  6041   00191E  0E33               	movlw	51
  6042   001920  6E21               	movwf	___flge@ff2^0,c
  6043   001922  0E33               	movlw	51
  6044   001924  6E22               	movwf	(___flge@ff2+1)^0,c
  6045   001926  0E33               	movlw	51
  6046   001928  6E23               	movwf	(___flge@ff2+2)^0,c
  6047   00192A  0E3F               	movlw	63
  6048   00192C  6E24               	movwf	(___flge@ff2+3)^0,c
  6049   00192E  ECB5  F01E         	call	___flge	;wreg free
  6050   001932  B0D8               	btfsc	status,0,c
  6051   001934  EF9E  F00C         	goto	u5721
  6052   001938  EFA0  F00C         	goto	u5720
  6053   00193C                     u5721:
  6054   00193C  EFF1  F00C         	goto	l110
  6055   001940                     u5720:
  6056   001940  0E00               	movlw	0
  6057   001942  6E1D               	movwf	___flge@ff1^0,c
  6058   001944  0E00               	movlw	0
  6059   001946  6E1E               	movwf	(___flge@ff1+1)^0,c
  6060   001948  0E80               	movlw	128
  6061   00194A  6E1F               	movwf	(___flge@ff1+2)^0,c
  6062   00194C  0E3F               	movlw	63
  6063   00194E  6E20               	movwf	(___flge@ff1+3)^0,c
  6064   001950  C08C  F021         	movff	colorDetect@greenPrint,___flge@ff2
  6065   001954  C08D  F022         	movff	colorDetect@greenPrint+1,___flge@ff2+1
  6066   001958  C08E  F023         	movff	colorDetect@greenPrint+2,___flge@ff2+2
  6067   00195C  C08F  F024         	movff	colorDetect@greenPrint+3,___flge@ff2+3
  6068   001960  ECB5  F01E         	call	___flge	;wreg free
  6069   001964  B0D8               	btfsc	status,0,c
  6070   001966  EFB7  F00C         	goto	u5731
  6071   00196A  EFB9  F00C         	goto	u5730
  6072   00196E                     u5731:
  6073   00196E  EFF1  F00C         	goto	l110
  6074   001972                     u5730:
  6075   001972  0E00               	movlw	0
  6076   001974  6E1D               	movwf	___flge@ff1^0,c
  6077   001976  0E00               	movlw	0
  6078   001978  6E1E               	movwf	(___flge@ff1+1)^0,c
  6079   00197A  0E80               	movlw	128
  6080   00197C  6E1F               	movwf	(___flge@ff1+2)^0,c
  6081   00197E  0E3F               	movlw	63
  6082   001980  6E20               	movwf	(___flge@ff1+3)^0,c
  6083   001982  C090  F021         	movff	colorDetect@bluePrint,___flge@ff2
  6084   001986  C091  F022         	movff	colorDetect@bluePrint+1,___flge@ff2+1
  6085   00198A  C092  F023         	movff	colorDetect@bluePrint+2,___flge@ff2+2
  6086   00198E  C093  F024         	movff	colorDetect@bluePrint+3,___flge@ff2+3
  6087   001992  ECB5  F01E         	call	___flge	;wreg free
  6088   001996  B0D8               	btfsc	status,0,c
  6089   001998  EFD0  F00C         	goto	u5741
  6090   00199C  EFD2  F00C         	goto	u5740
  6091   0019A0                     u5741:
  6092   0019A0  EFF1  F00C         	goto	l110
  6093   0019A4                     u5740:
  6094   0019A4                     
  6095                           ;color.c: 212:         _delay((unsigned long)((2)*(64000000/4000.0)));
  6096   0019A4  0E2A               	movlw	42
  6097   0019A6  6E4F               	movwf	??_colorDetect^0,c
  6098   0019A8  0E8E               	movlw	142
  6099   0019AA                     u6237:
  6100   0019AA  2EE8               	decfsz	wreg,f,c
  6101   0019AC  D7FE               	bra	u6237
  6102   0019AE  2E4F               	decfsz	??_colorDetect^0,f,c
  6103   0019B0  D7FC               	bra	u6237
  6104   0019B2                     
  6105                           ;color.c: 213:         turnLeft_135(mL,mR);
  6106   0019B2  C068  F01E         	movff	colorDetect@mL,turnLeft_135@mL
  6107   0019B6  C069  F01F         	movff	colorDetect@mL+1,turnLeft_135@mL+1
  6108   0019BA  C06A  F020         	movff	colorDetect@mR,turnLeft_135@mR
  6109   0019BE  C06B  F021         	movff	colorDetect@mR+1,turnLeft_135@mR+1
  6110   0019C2  EC17  F01E         	call	_turnLeft_135	;wreg free
  6111   0019C6                     
  6112                           ;color.c: 214:         _delay((unsigned long)((2)*(64000000/4000.0)));
  6113   0019C6  0E2A               	movlw	42
  6114   0019C8  6E4F               	movwf	??_colorDetect^0,c
  6115   0019CA  0E8E               	movlw	142
  6116   0019CC                     u6247:
  6117   0019CC  2EE8               	decfsz	wreg,f,c
  6118   0019CE  D7FE               	bra	u6247
  6119   0019D0  2E4F               	decfsz	??_colorDetect^0,f,c
  6120   0019D2  D7FC               	bra	u6247
  6121   0019D4                     
  6122                           ;color.c: 215:         colour_ref = 7;
  6123   0019D4  0E00               	movlw	0
  6124   0019D6  0100               	movlb	0	; () banked
  6125   0019D8  6F7F               	movwf	(colorDetect@colour_ref+1)& (0+255),b
  6126   0019DA  0E07               	movlw	7
  6127   0019DC  6F7E               	movwf	colorDetect@colour_ref& (0+255),b
  6128   0019DE  EFF1  F00C         	goto	l5129
  6129   0019E2                     l110:
  6130   0019E2                     l5129:
  6131                           
  6132                           ;color.c: 219:         return colour_ref;
  6133   0019E2  C07E  F060         	movff	colorDetect@colour_ref,?_colorDetect
  6134   0019E6  C07F  F061         	movff	colorDetect@colour_ref+1,?_colorDetect+1
  6135   0019EA  0012               	return		;funcret
  6136   0019EC                     __end_of_colorDetect:
  6137                           	callstack 0
  6138                           
  6139 ;; *************** function _turn_180 *****************
  6140 ;; Defined at:
  6141 ;;		line 238 in file "dc_motor.c"
  6142 ;; Parameters:    Size  Location     Type
  6143 ;;  mL              2   29[COMRAM] PTR struct DC_motor
  6144 ;;		 -> main@motorLeft(9), 
  6145 ;;  mR              2   31[COMRAM] PTR struct DC_motor
  6146 ;;		 -> main@motorRight(9), 
  6147 ;; Auto vars:     Size  Location     Type
  6148 ;;		None
  6149 ;; Return value:  Size  Location     Type
  6150 ;;                  1    wreg      void 
  6151 ;; Registers used:
  6152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6153 ;; Tracked objects:
  6154 ;;		On entry : 0/0
  6155 ;;		On exit  : 0/0
  6156 ;;		Unchanged: 0/0
  6157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6158 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6160 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6161 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6162 ;;Total ram usage:        6 bytes
  6163 ;; Hardware stack levels used: 1
  6164 ;; Hardware stack levels required when called: 5
  6165 ;; This function calls:
  6166 ;;		_reverse
  6167 ;;		_setMotorPWM
  6168 ;;		_stop
  6169 ;; This function is called by:
  6170 ;;		_colorDetect
  6171 ;;		_return_home_turns
  6172 ;;		_main
  6173 ;; This function uses a non-reentrant model
  6174 ;;
  6175                           
  6176                           	psect	text25
  6177   003738                     __ptext25:
  6178                           	callstack 0
  6179   003738                     _turn_180:
  6180                           	callstack 25
  6181   003738                     
  6182                           ;dc_motor.c: 238: void turn_180(DC_motor *mL, DC_motor *mR);dc_motor.c: 239: {;dc_motor.
      +                          c: 241:     stop(mL, mR);
  6183   003738  C01E  F018         	movff	turn_180@mL,stop@mL
  6184   00373C  C01F  F019         	movff	turn_180@mL+1,stop@mL+1
  6185   003740  C020  F01A         	movff	turn_180@mR,stop@mR
  6186   003744  C021  F01B         	movff	turn_180@mR+1,stop@mR+1
  6187   003748  ECBF  F021         	call	_stop	;wreg free
  6188   00374C                     
  6189                           ;dc_motor.c: 242:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6190   00374C  0E09               	movlw	9
  6191   00374E  6E23               	movwf	(??_turn_180+1)^0,c
  6192   003750  0E1E               	movlw	30
  6193   003752  6E22               	movwf	??_turn_180^0,c
  6194   003754  0EE4               	movlw	228
  6195   003756                     u6257:
  6196   003756  2EE8               	decfsz	wreg,f,c
  6197   003758  D7FE               	bra	u6257
  6198   00375A  2E22               	decfsz	??_turn_180^0,f,c
  6199   00375C  D7FC               	bra	u6257
  6200   00375E  2E23               	decfsz	(??_turn_180+1)^0,f,c
  6201   003760  D7FA               	bra	u6257
  6202   003762  D000               	nop2	
  6203   003764                     
  6204                           ;dc_motor.c: 244:     reverse(mL, mR);
  6205   003764  C01E  F018         	movff	turn_180@mL,reverse@mL
  6206   003768  C01F  F019         	movff	turn_180@mL+1,reverse@mL+1
  6207   00376C  C020  F01A         	movff	turn_180@mR,reverse@mR
  6208   003770  C021  F01B         	movff	turn_180@mR+1,reverse@mR+1
  6209   003774  EC86  F020         	call	_reverse	;wreg free
  6210                           
  6211                           ;dc_motor.c: 245:     _delay((unsigned long)((reverse_time)*(64000000/4000.0)));
  6212   003778  0E35               	movlw	53
  6213   00377A  6E23               	movwf	(??_turn_180+1)^0,c
  6214   00377C  0EC3               	movlw	195
  6215   00377E  6E22               	movwf	??_turn_180^0,c
  6216   003780  0E59               	movlw	89
  6217   003782                     u6267:
  6218   003782  2EE8               	decfsz	wreg,f,c
  6219   003784  D7FE               	bra	u6267
  6220   003786  2E22               	decfsz	??_turn_180^0,f,c
  6221   003788  D7FC               	bra	u6267
  6222   00378A  2E23               	decfsz	(??_turn_180+1)^0,f,c
  6223   00378C  D7FA               	bra	u6267
  6224   00378E  F000               	nop	
  6225   003790                     
  6226                           ;dc_motor.c: 247:     stop(mL, mR);
  6227   003790  C01E  F018         	movff	turn_180@mL,stop@mL
  6228   003794  C01F  F019         	movff	turn_180@mL+1,stop@mL+1
  6229   003798  C020  F01A         	movff	turn_180@mR,stop@mR
  6230   00379C  C021  F01B         	movff	turn_180@mR+1,stop@mR+1
  6231   0037A0  ECBF  F021         	call	_stop	;wreg free
  6232   0037A4                     
  6233                           ;dc_motor.c: 249:     mL->direction = 1;
  6234   0037A4  EE20 F001          	lfsr	2,1
  6235   0037A8  501E               	movf	turn_180@mL^0,w,c
  6236   0037AA  26D9               	addwf	fsr2l,f,c
  6237   0037AC  501F               	movf	(turn_180@mL+1)^0,w,c
  6238   0037AE  22DA               	addwfc	fsr2h,f,c
  6239   0037B0  0E01               	movlw	1
  6240   0037B2  6EDF               	movwf	indf2,c
  6241   0037B4                     
  6242                           ;dc_motor.c: 250:     mR->direction = 0;
  6243   0037B4  EE20 F001          	lfsr	2,1
  6244   0037B8  5020               	movf	turn_180@mR^0,w,c
  6245   0037BA  26D9               	addwf	fsr2l,f,c
  6246   0037BC  5021               	movf	(turn_180@mR+1)^0,w,c
  6247   0037BE  22DA               	addwfc	fsr2h,f,c
  6248   0037C0  0E00               	movlw	0
  6249   0037C2  6EDF               	movwf	indf2,c
  6250   0037C4                     
  6251                           ;dc_motor.c: 252:     mL->brakemode = 1;
  6252   0037C4  EE20 F002          	lfsr	2,2
  6253   0037C8  501E               	movf	turn_180@mL^0,w,c
  6254   0037CA  26D9               	addwf	fsr2l,f,c
  6255   0037CC  501F               	movf	(turn_180@mL+1)^0,w,c
  6256   0037CE  22DA               	addwfc	fsr2h,f,c
  6257   0037D0  0E01               	movlw	1
  6258   0037D2  6EDF               	movwf	indf2,c
  6259   0037D4                     
  6260                           ;dc_motor.c: 253:     mL->brakemode = 1;
  6261   0037D4  EE20 F002          	lfsr	2,2
  6262   0037D8  501E               	movf	turn_180@mL^0,w,c
  6263   0037DA  26D9               	addwf	fsr2l,f,c
  6264   0037DC  501F               	movf	(turn_180@mL+1)^0,w,c
  6265   0037DE  22DA               	addwfc	fsr2h,f,c
  6266   0037E0  0E01               	movlw	1
  6267   0037E2  6EDF               	movwf	indf2,c
  6268                           
  6269                           ;dc_motor.c: 255:     while((mL->power < 80) || (mR->power < 80)){
  6270   0037E4  EF0C  F01C         	goto	l3711
  6271   0037E8                     l3705:
  6272                           
  6273                           ;dc_motor.c: 256:         mL->power += 10;
  6274   0037E8  C01E  FFD9         	movff	turn_180@mL,fsr2l
  6275   0037EC  C01F  FFDA         	movff	turn_180@mL+1,fsr2h
  6276   0037F0  0E0A               	movlw	10
  6277   0037F2  26DF               	addwf	indf2,f,c
  6278                           
  6279                           ;dc_motor.c: 257:         mR->power += 10;
  6280   0037F4  C020  FFD9         	movff	turn_180@mR,fsr2l
  6281   0037F8  C021  FFDA         	movff	turn_180@mR+1,fsr2h
  6282   0037FC  0E0A               	movlw	10
  6283   0037FE  26DF               	addwf	indf2,f,c
  6284   003800                     
  6285                           ;dc_motor.c: 258:         setMotorPWM(mL);
  6286   003800  C01E  F012         	movff	turn_180@mL,setMotorPWM@m
  6287   003804  C01F  F013         	movff	turn_180@mL+1,setMotorPWM@m+1
  6288   003808  EC85  F019         	call	_setMotorPWM	;wreg free
  6289   00380C                     
  6290                           ;dc_motor.c: 259:         setMotorPWM(mR);
  6291   00380C  C020  F012         	movff	turn_180@mR,setMotorPWM@m
  6292   003810  C021  F013         	movff	turn_180@mR+1,setMotorPWM@m+1
  6293   003814  EC85  F019         	call	_setMotorPWM	;wreg free
  6294   003818                     l3711:
  6295                           
  6296                           ;dc_motor.c: 255:     while((mL->power < 80) || (mR->power < 80)){
  6297   003818  C01E  FFD9         	movff	turn_180@mL,fsr2l
  6298   00381C  C01F  FFDA         	movff	turn_180@mL+1,fsr2h
  6299   003820  0E4F               	movlw	79
  6300   003822  64DF               	cpfsgt	indf2,c
  6301   003824  EF16  F01C         	goto	u3551
  6302   003828  EF18  F01C         	goto	u3550
  6303   00382C                     u3551:
  6304   00382C  EFF4  F01B         	goto	l3705
  6305   003830                     u3550:
  6306   003830  C020  FFD9         	movff	turn_180@mR,fsr2l
  6307   003834  C021  FFDA         	movff	turn_180@mR+1,fsr2h
  6308   003838  0E4F               	movlw	79
  6309   00383A  64DF               	cpfsgt	indf2,c
  6310   00383C  EF22  F01C         	goto	u3561
  6311   003840  EF24  F01C         	goto	u3560
  6312   003844                     u3561:
  6313   003844  EFF4  F01B         	goto	l3705
  6314   003848                     u3560:
  6315   003848                     
  6316                           ;dc_motor.c: 261:    _delay((unsigned long)((1.75*turning_time90)*(64000000/4000.0)));
  6317   003848  0E18               	movlw	24
  6318   00384A  6E23               	movwf	(??_turn_180+1)^0,c
  6319   00384C  0E70               	movlw	112
  6320   00384E  6E22               	movwf	??_turn_180^0,c
  6321   003850  0EEE               	movlw	238
  6322   003852                     u6277:
  6323   003852  2EE8               	decfsz	wreg,f,c
  6324   003854  D7FE               	bra	u6277
  6325   003856  2E22               	decfsz	??_turn_180^0,f,c
  6326   003858  D7FC               	bra	u6277
  6327   00385A  2E23               	decfsz	(??_turn_180+1)^0,f,c
  6328   00385C  D7FA               	bra	u6277
  6329   00385E  D000               	nop2	
  6330   003860                     
  6331                           ;dc_motor.c: 262:     stop(mL, mR);
  6332   003860  C01E  F018         	movff	turn_180@mL,stop@mL
  6333   003864  C01F  F019         	movff	turn_180@mL+1,stop@mL+1
  6334   003868  C020  F01A         	movff	turn_180@mR,stop@mR
  6335   00386C  C021  F01B         	movff	turn_180@mR+1,stop@mR+1
  6336   003870  ECBF  F021         	call	_stop	;wreg free
  6337   003874  0012               	return		;funcret
  6338   003876                     __end_of_turn_180:
  6339                           	callstack 0
  6340                           
  6341 ;; *************** function _turnRight_135 *****************
  6342 ;; Defined at:
  6343 ;;		line 266 in file "dc_motor.c"
  6344 ;; Parameters:    Size  Location     Type
  6345 ;;  mL              2   29[COMRAM] PTR struct DC_motor
  6346 ;;		 -> main@motorLeft(9), 
  6347 ;;  mR              2   31[COMRAM] PTR struct DC_motor
  6348 ;;		 -> main@motorRight(9), 
  6349 ;; Auto vars:     Size  Location     Type
  6350 ;;		None
  6351 ;; Return value:  Size  Location     Type
  6352 ;;                  1    wreg      void 
  6353 ;; Registers used:
  6354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6355 ;; Tracked objects:
  6356 ;;		On entry : 0/0
  6357 ;;		On exit  : 0/0
  6358 ;;		Unchanged: 0/0
  6359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6360 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6362 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6363 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6364 ;;Total ram usage:        6 bytes
  6365 ;; Hardware stack levels used: 1
  6366 ;; Hardware stack levels required when called: 5
  6367 ;; This function calls:
  6368 ;;		_reverse
  6369 ;;		_setMotorPWM
  6370 ;;		_stop
  6371 ;; This function is called by:
  6372 ;;		_colorDetect
  6373 ;;		_return_home_turns
  6374 ;; This function uses a non-reentrant model
  6375 ;;
  6376                           
  6377                           	psect	text26
  6378   003AF2                     __ptext26:
  6379                           	callstack 0
  6380   003AF2                     _turnRight_135:
  6381                           	callstack 24
  6382   003AF2                     
  6383                           ;dc_motor.c: 266: void turnRight_135(DC_motor *mL, DC_motor *mR);dc_motor.c: 267: {;dc_m
      +                          otor.c: 268:     stop(mL, mR);
  6384   003AF2  C01E  F018         	movff	turnRight_135@mL,stop@mL
  6385   003AF6  C01F  F019         	movff	turnRight_135@mL+1,stop@mL+1
  6386   003AFA  C020  F01A         	movff	turnRight_135@mR,stop@mR
  6387   003AFE  C021  F01B         	movff	turnRight_135@mR+1,stop@mR+1
  6388   003B02  ECBF  F021         	call	_stop	;wreg free
  6389   003B06                     
  6390                           ;dc_motor.c: 269:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6391   003B06  0E09               	movlw	9
  6392   003B08  6E23               	movwf	(??_turnRight_135+1)^0,c
  6393   003B0A  0E1E               	movlw	30
  6394   003B0C  6E22               	movwf	??_turnRight_135^0,c
  6395   003B0E  0EE4               	movlw	228
  6396   003B10                     u6287:
  6397   003B10  2EE8               	decfsz	wreg,f,c
  6398   003B12  D7FE               	bra	u6287
  6399   003B14  2E22               	decfsz	??_turnRight_135^0,f,c
  6400   003B16  D7FC               	bra	u6287
  6401   003B18  2E23               	decfsz	(??_turnRight_135+1)^0,f,c
  6402   003B1A  D7FA               	bra	u6287
  6403   003B1C  D000               	nop2	
  6404   003B1E                     
  6405                           ;dc_motor.c: 271:     reverse(mL, mR);
  6406   003B1E  C01E  F018         	movff	turnRight_135@mL,reverse@mL
  6407   003B22  C01F  F019         	movff	turnRight_135@mL+1,reverse@mL+1
  6408   003B26  C020  F01A         	movff	turnRight_135@mR,reverse@mR
  6409   003B2A  C021  F01B         	movff	turnRight_135@mR+1,reverse@mR+1
  6410   003B2E  EC86  F020         	call	_reverse	;wreg free
  6411                           
  6412                           ;dc_motor.c: 272:     _delay((unsigned long)((reverse_time)*(64000000/4000.0)));
  6413   003B32  0E35               	movlw	53
  6414   003B34  6E23               	movwf	(??_turnRight_135+1)^0,c
  6415   003B36  0EC3               	movlw	195
  6416   003B38  6E22               	movwf	??_turnRight_135^0,c
  6417   003B3A  0E59               	movlw	89
  6418   003B3C                     u6297:
  6419   003B3C  2EE8               	decfsz	wreg,f,c
  6420   003B3E  D7FE               	bra	u6297
  6421   003B40  2E22               	decfsz	??_turnRight_135^0,f,c
  6422   003B42  D7FC               	bra	u6297
  6423   003B44  2E23               	decfsz	(??_turnRight_135+1)^0,f,c
  6424   003B46  D7FA               	bra	u6297
  6425   003B48  F000               	nop	
  6426   003B4A                     
  6427                           ;dc_motor.c: 274:     stop(mL, mR);
  6428   003B4A  C01E  F018         	movff	turnRight_135@mL,stop@mL
  6429   003B4E  C01F  F019         	movff	turnRight_135@mL+1,stop@mL+1
  6430   003B52  C020  F01A         	movff	turnRight_135@mR,stop@mR
  6431   003B56  C021  F01B         	movff	turnRight_135@mR+1,stop@mR+1
  6432   003B5A  ECBF  F021         	call	_stop	;wreg free
  6433   003B5E                     
  6434                           ;dc_motor.c: 276:     mL->direction = 1;
  6435   003B5E  EE20 F001          	lfsr	2,1
  6436   003B62  501E               	movf	turnRight_135@mL^0,w,c
  6437   003B64  26D9               	addwf	fsr2l,f,c
  6438   003B66  501F               	movf	(turnRight_135@mL+1)^0,w,c
  6439   003B68  22DA               	addwfc	fsr2h,f,c
  6440   003B6A  0E01               	movlw	1
  6441   003B6C  6EDF               	movwf	indf2,c
  6442   003B6E                     
  6443                           ;dc_motor.c: 277:     mR->direction = 0;
  6444   003B6E  EE20 F001          	lfsr	2,1
  6445   003B72  5020               	movf	turnRight_135@mR^0,w,c
  6446   003B74  26D9               	addwf	fsr2l,f,c
  6447   003B76  5021               	movf	(turnRight_135@mR+1)^0,w,c
  6448   003B78  22DA               	addwfc	fsr2h,f,c
  6449   003B7A  0E00               	movlw	0
  6450   003B7C  6EDF               	movwf	indf2,c
  6451   003B7E                     
  6452                           ;dc_motor.c: 279:     mL->brakemode = 1;
  6453   003B7E  EE20 F002          	lfsr	2,2
  6454   003B82  501E               	movf	turnRight_135@mL^0,w,c
  6455   003B84  26D9               	addwf	fsr2l,f,c
  6456   003B86  501F               	movf	(turnRight_135@mL+1)^0,w,c
  6457   003B88  22DA               	addwfc	fsr2h,f,c
  6458   003B8A  0E01               	movlw	1
  6459   003B8C  6EDF               	movwf	indf2,c
  6460   003B8E                     
  6461                           ;dc_motor.c: 280:     mL->brakemode = 1;
  6462   003B8E  EE20 F002          	lfsr	2,2
  6463   003B92  501E               	movf	turnRight_135@mL^0,w,c
  6464   003B94  26D9               	addwf	fsr2l,f,c
  6465   003B96  501F               	movf	(turnRight_135@mL+1)^0,w,c
  6466   003B98  22DA               	addwfc	fsr2h,f,c
  6467   003B9A  0E01               	movlw	1
  6468   003B9C  6EDF               	movwf	indf2,c
  6469                           
  6470                           ;dc_motor.c: 282:     while((mL->power < 80) || (mR->power < 80)){
  6471   003B9E  EFE9  F01D         	goto	l3761
  6472   003BA2                     l3755:
  6473                           
  6474                           ;dc_motor.c: 283:         mL->power += 10;
  6475   003BA2  C01E  FFD9         	movff	turnRight_135@mL,fsr2l
  6476   003BA6  C01F  FFDA         	movff	turnRight_135@mL+1,fsr2h
  6477   003BAA  0E0A               	movlw	10
  6478   003BAC  26DF               	addwf	indf2,f,c
  6479                           
  6480                           ;dc_motor.c: 284:         mR->power += 10;
  6481   003BAE  C020  FFD9         	movff	turnRight_135@mR,fsr2l
  6482   003BB2  C021  FFDA         	movff	turnRight_135@mR+1,fsr2h
  6483   003BB6  0E0A               	movlw	10
  6484   003BB8  26DF               	addwf	indf2,f,c
  6485   003BBA                     
  6486                           ;dc_motor.c: 285:         setMotorPWM(mL);
  6487   003BBA  C01E  F012         	movff	turnRight_135@mL,setMotorPWM@m
  6488   003BBE  C01F  F013         	movff	turnRight_135@mL+1,setMotorPWM@m+1
  6489   003BC2  EC85  F019         	call	_setMotorPWM	;wreg free
  6490   003BC6                     
  6491                           ;dc_motor.c: 286:         setMotorPWM(mR);
  6492   003BC6  C020  F012         	movff	turnRight_135@mR,setMotorPWM@m
  6493   003BCA  C021  F013         	movff	turnRight_135@mR+1,setMotorPWM@m+1
  6494   003BCE  EC85  F019         	call	_setMotorPWM	;wreg free
  6495   003BD2                     l3761:
  6496                           
  6497                           ;dc_motor.c: 282:     while((mL->power < 80) || (mR->power < 80)){
  6498   003BD2  C01E  FFD9         	movff	turnRight_135@mL,fsr2l
  6499   003BD6  C01F  FFDA         	movff	turnRight_135@mL+1,fsr2h
  6500   003BDA  0E4F               	movlw	79
  6501   003BDC  64DF               	cpfsgt	indf2,c
  6502   003BDE  EFF3  F01D         	goto	u3571
  6503   003BE2  EFF5  F01D         	goto	u3570
  6504   003BE6                     u3571:
  6505   003BE6  EFD1  F01D         	goto	l3755
  6506   003BEA                     u3570:
  6507   003BEA  C020  FFD9         	movff	turnRight_135@mR,fsr2l
  6508   003BEE  C021  FFDA         	movff	turnRight_135@mR+1,fsr2h
  6509   003BF2  0E4F               	movlw	79
  6510   003BF4  64DF               	cpfsgt	indf2,c
  6511   003BF6  EFFF  F01D         	goto	u3581
  6512   003BFA  EF01  F01E         	goto	u3580
  6513   003BFE                     u3581:
  6514   003BFE  EFD1  F01D         	goto	l3755
  6515   003C02                     u3580:
  6516   003C02                     
  6517                           ;dc_motor.c: 288:    _delay((unsigned long)((1.5*turning_time90)*(64000000/4000.0)));
  6518   003C02  0E15               	movlw	21
  6519   003C04  6E23               	movwf	(??_turnRight_135+1)^0,c
  6520   003C06  0E17               	movlw	23
  6521   003C08  6E22               	movwf	??_turnRight_135^0,c
  6522   003C0A  0ECC               	movlw	204
  6523   003C0C                     u6307:
  6524   003C0C  2EE8               	decfsz	wreg,f,c
  6525   003C0E  D7FE               	bra	u6307
  6526   003C10  2E22               	decfsz	??_turnRight_135^0,f,c
  6527   003C12  D7FC               	bra	u6307
  6528   003C14  2E23               	decfsz	(??_turnRight_135+1)^0,f,c
  6529   003C16  D7FA               	bra	u6307
  6530   003C18                     
  6531                           ;dc_motor.c: 290:     stop(mL, mR);
  6532   003C18  C01E  F018         	movff	turnRight_135@mL,stop@mL
  6533   003C1C  C01F  F019         	movff	turnRight_135@mL+1,stop@mL+1
  6534   003C20  C020  F01A         	movff	turnRight_135@mR,stop@mR
  6535   003C24  C021  F01B         	movff	turnRight_135@mR+1,stop@mR+1
  6536   003C28  ECBF  F021         	call	_stop	;wreg free
  6537   003C2C  0012               	return		;funcret
  6538   003C2E                     __end_of_turnRight_135:
  6539                           	callstack 0
  6540                           
  6541 ;; *************** function _turnLeft_135 *****************
  6542 ;; Defined at:
  6543 ;;		line 295 in file "dc_motor.c"
  6544 ;; Parameters:    Size  Location     Type
  6545 ;;  mL              2   29[COMRAM] PTR struct DC_motor
  6546 ;;		 -> main@motorLeft(9), 
  6547 ;;  mR              2   31[COMRAM] PTR struct DC_motor
  6548 ;;		 -> main@motorRight(9), 
  6549 ;; Auto vars:     Size  Location     Type
  6550 ;;		None
  6551 ;; Return value:  Size  Location     Type
  6552 ;;                  1    wreg      void 
  6553 ;; Registers used:
  6554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6555 ;; Tracked objects:
  6556 ;;		On entry : 0/0
  6557 ;;		On exit  : 0/0
  6558 ;;		Unchanged: 0/0
  6559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6560 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6562 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6563 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6564 ;;Total ram usage:        6 bytes
  6565 ;; Hardware stack levels used: 1
  6566 ;; Hardware stack levels required when called: 5
  6567 ;; This function calls:
  6568 ;;		_reverse
  6569 ;;		_setMotorPWM
  6570 ;;		_stop
  6571 ;; This function is called by:
  6572 ;;		_colorDetect
  6573 ;;		_return_home_turns
  6574 ;; This function uses a non-reentrant model
  6575 ;;
  6576                           
  6577                           	psect	text27
  6578   003C2E                     __ptext27:
  6579                           	callstack 0
  6580   003C2E                     _turnLeft_135:
  6581                           	callstack 24
  6582   003C2E                     
  6583                           ;dc_motor.c: 295: void turnLeft_135(DC_motor *mL, DC_motor *mR);dc_motor.c: 296: {;dc_mo
      +                          tor.c: 298:     stop(mL, mR);
  6584   003C2E  C01E  F018         	movff	turnLeft_135@mL,stop@mL
  6585   003C32  C01F  F019         	movff	turnLeft_135@mL+1,stop@mL+1
  6586   003C36  C020  F01A         	movff	turnLeft_135@mR,stop@mR
  6587   003C3A  C021  F01B         	movff	turnLeft_135@mR+1,stop@mR+1
  6588   003C3E  ECBF  F021         	call	_stop	;wreg free
  6589   003C42                     
  6590                           ;dc_motor.c: 299:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6591   003C42  0E09               	movlw	9
  6592   003C44  6E23               	movwf	(??_turnLeft_135+1)^0,c
  6593   003C46  0E1E               	movlw	30
  6594   003C48  6E22               	movwf	??_turnLeft_135^0,c
  6595   003C4A  0EE4               	movlw	228
  6596   003C4C                     u6317:
  6597   003C4C  2EE8               	decfsz	wreg,f,c
  6598   003C4E  D7FE               	bra	u6317
  6599   003C50  2E22               	decfsz	??_turnLeft_135^0,f,c
  6600   003C52  D7FC               	bra	u6317
  6601   003C54  2E23               	decfsz	(??_turnLeft_135+1)^0,f,c
  6602   003C56  D7FA               	bra	u6317
  6603   003C58  D000               	nop2	
  6604   003C5A                     
  6605                           ;dc_motor.c: 301:     reverse(mL, mR);
  6606   003C5A  C01E  F018         	movff	turnLeft_135@mL,reverse@mL
  6607   003C5E  C01F  F019         	movff	turnLeft_135@mL+1,reverse@mL+1
  6608   003C62  C020  F01A         	movff	turnLeft_135@mR,reverse@mR
  6609   003C66  C021  F01B         	movff	turnLeft_135@mR+1,reverse@mR+1
  6610   003C6A  EC86  F020         	call	_reverse	;wreg free
  6611                           
  6612                           ;dc_motor.c: 302:     _delay((unsigned long)((reverse_time)*(64000000/4000.0)));
  6613   003C6E  0E35               	movlw	53
  6614   003C70  6E23               	movwf	(??_turnLeft_135+1)^0,c
  6615   003C72  0EC3               	movlw	195
  6616   003C74  6E22               	movwf	??_turnLeft_135^0,c
  6617   003C76  0E59               	movlw	89
  6618   003C78                     u6327:
  6619   003C78  2EE8               	decfsz	wreg,f,c
  6620   003C7A  D7FE               	bra	u6327
  6621   003C7C  2E22               	decfsz	??_turnLeft_135^0,f,c
  6622   003C7E  D7FC               	bra	u6327
  6623   003C80  2E23               	decfsz	(??_turnLeft_135+1)^0,f,c
  6624   003C82  D7FA               	bra	u6327
  6625   003C84  F000               	nop	
  6626   003C86                     
  6627                           ;dc_motor.c: 304:     stop(mL, mR);
  6628   003C86  C01E  F018         	movff	turnLeft_135@mL,stop@mL
  6629   003C8A  C01F  F019         	movff	turnLeft_135@mL+1,stop@mL+1
  6630   003C8E  C020  F01A         	movff	turnLeft_135@mR,stop@mR
  6631   003C92  C021  F01B         	movff	turnLeft_135@mR+1,stop@mR+1
  6632   003C96  ECBF  F021         	call	_stop	;wreg free
  6633   003C9A                     
  6634                           ;dc_motor.c: 306:     mL->direction = 0;
  6635   003C9A  EE20 F001          	lfsr	2,1
  6636   003C9E  501E               	movf	turnLeft_135@mL^0,w,c
  6637   003CA0  26D9               	addwf	fsr2l,f,c
  6638   003CA2  501F               	movf	(turnLeft_135@mL+1)^0,w,c
  6639   003CA4  22DA               	addwfc	fsr2h,f,c
  6640   003CA6  0E00               	movlw	0
  6641   003CA8  6EDF               	movwf	indf2,c
  6642   003CAA                     
  6643                           ;dc_motor.c: 307:     mR->direction = 1;
  6644   003CAA  EE20 F001          	lfsr	2,1
  6645   003CAE  5020               	movf	turnLeft_135@mR^0,w,c
  6646   003CB0  26D9               	addwf	fsr2l,f,c
  6647   003CB2  5021               	movf	(turnLeft_135@mR+1)^0,w,c
  6648   003CB4  22DA               	addwfc	fsr2h,f,c
  6649   003CB6  0E01               	movlw	1
  6650   003CB8  6EDF               	movwf	indf2,c
  6651   003CBA                     
  6652                           ;dc_motor.c: 309:     mL->brakemode = 1;
  6653   003CBA  EE20 F002          	lfsr	2,2
  6654   003CBE  501E               	movf	turnLeft_135@mL^0,w,c
  6655   003CC0  26D9               	addwf	fsr2l,f,c
  6656   003CC2  501F               	movf	(turnLeft_135@mL+1)^0,w,c
  6657   003CC4  22DA               	addwfc	fsr2h,f,c
  6658   003CC6  0E01               	movlw	1
  6659   003CC8  6EDF               	movwf	indf2,c
  6660   003CCA                     
  6661                           ;dc_motor.c: 310:     mL->brakemode = 1;
  6662   003CCA  EE20 F002          	lfsr	2,2
  6663   003CCE  501E               	movf	turnLeft_135@mL^0,w,c
  6664   003CD0  26D9               	addwf	fsr2l,f,c
  6665   003CD2  501F               	movf	(turnLeft_135@mL+1)^0,w,c
  6666   003CD4  22DA               	addwfc	fsr2h,f,c
  6667   003CD6  0E01               	movlw	1
  6668   003CD8  6EDF               	movwf	indf2,c
  6669                           
  6670                           ;dc_motor.c: 312:     while((mL->power < 80) || (mR->power < 80)){
  6671   003CDA  EF87  F01E         	goto	l3791
  6672   003CDE                     l3785:
  6673                           
  6674                           ;dc_motor.c: 313:         mL->power += 10;
  6675   003CDE  C01E  FFD9         	movff	turnLeft_135@mL,fsr2l
  6676   003CE2  C01F  FFDA         	movff	turnLeft_135@mL+1,fsr2h
  6677   003CE6  0E0A               	movlw	10
  6678   003CE8  26DF               	addwf	indf2,f,c
  6679                           
  6680                           ;dc_motor.c: 314:         mR->power += 10;
  6681   003CEA  C020  FFD9         	movff	turnLeft_135@mR,fsr2l
  6682   003CEE  C021  FFDA         	movff	turnLeft_135@mR+1,fsr2h
  6683   003CF2  0E0A               	movlw	10
  6684   003CF4  26DF               	addwf	indf2,f,c
  6685   003CF6                     
  6686                           ;dc_motor.c: 315:         setMotorPWM(mL);
  6687   003CF6  C01E  F012         	movff	turnLeft_135@mL,setMotorPWM@m
  6688   003CFA  C01F  F013         	movff	turnLeft_135@mL+1,setMotorPWM@m+1
  6689   003CFE  EC85  F019         	call	_setMotorPWM	;wreg free
  6690   003D02                     
  6691                           ;dc_motor.c: 316:         setMotorPWM(mR);
  6692   003D02  C020  F012         	movff	turnLeft_135@mR,setMotorPWM@m
  6693   003D06  C021  F013         	movff	turnLeft_135@mR+1,setMotorPWM@m+1
  6694   003D0A  EC85  F019         	call	_setMotorPWM	;wreg free
  6695   003D0E                     l3791:
  6696                           
  6697                           ;dc_motor.c: 312:     while((mL->power < 80) || (mR->power < 80)){
  6698   003D0E  C01E  FFD9         	movff	turnLeft_135@mL,fsr2l
  6699   003D12  C01F  FFDA         	movff	turnLeft_135@mL+1,fsr2h
  6700   003D16  0E4F               	movlw	79
  6701   003D18  64DF               	cpfsgt	indf2,c
  6702   003D1A  EF91  F01E         	goto	u3591
  6703   003D1E  EF93  F01E         	goto	u3590
  6704   003D22                     u3591:
  6705   003D22  EF6F  F01E         	goto	l3785
  6706   003D26                     u3590:
  6707   003D26  C020  FFD9         	movff	turnLeft_135@mR,fsr2l
  6708   003D2A  C021  FFDA         	movff	turnLeft_135@mR+1,fsr2h
  6709   003D2E  0E4F               	movlw	79
  6710   003D30  64DF               	cpfsgt	indf2,c
  6711   003D32  EF9D  F01E         	goto	u3601
  6712   003D36  EF9F  F01E         	goto	u3600
  6713   003D3A                     u3601:
  6714   003D3A  EF6F  F01E         	goto	l3785
  6715   003D3E                     u3600:
  6716   003D3E                     
  6717                           ;dc_motor.c: 318:    _delay((unsigned long)((1.5*turning_time90)*(64000000/4000.0)));
  6718   003D3E  0E15               	movlw	21
  6719   003D40  6E23               	movwf	(??_turnLeft_135+1)^0,c
  6720   003D42  0E17               	movlw	23
  6721   003D44  6E22               	movwf	??_turnLeft_135^0,c
  6722   003D46  0ECC               	movlw	204
  6723   003D48                     u6337:
  6724   003D48  2EE8               	decfsz	wreg,f,c
  6725   003D4A  D7FE               	bra	u6337
  6726   003D4C  2E22               	decfsz	??_turnLeft_135^0,f,c
  6727   003D4E  D7FC               	bra	u6337
  6728   003D50  2E23               	decfsz	(??_turnLeft_135+1)^0,f,c
  6729   003D52  D7FA               	bra	u6337
  6730   003D54                     
  6731                           ;dc_motor.c: 319:     stop(mL, mR);
  6732   003D54  C01E  F018         	movff	turnLeft_135@mL,stop@mL
  6733   003D58  C01F  F019         	movff	turnLeft_135@mL+1,stop@mL+1
  6734   003D5C  C020  F01A         	movff	turnLeft_135@mR,stop@mR
  6735   003D60  C021  F01B         	movff	turnLeft_135@mR+1,stop@mR+1
  6736   003D64  ECBF  F021         	call	_stop	;wreg free
  6737   003D68  0012               	return		;funcret
  6738   003D6A                     __end_of_turnLeft_135:
  6739                           	callstack 0
  6740                           
  6741 ;; *************** function _reverseSquareRight *****************
  6742 ;; Defined at:
  6743 ;;		line 323 in file "dc_motor.c"
  6744 ;; Parameters:    Size  Location     Type
  6745 ;;  mL              2   35[COMRAM] PTR struct DC_motor
  6746 ;;		 -> main@motorLeft(9), 
  6747 ;;  mR              2   37[COMRAM] PTR struct DC_motor
  6748 ;;		 -> main@motorRight(9), 
  6749 ;; Auto vars:     Size  Location     Type
  6750 ;;		None
  6751 ;; Return value:  Size  Location     Type
  6752 ;;                  1    wreg      void 
  6753 ;; Registers used:
  6754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6755 ;; Tracked objects:
  6756 ;;		On entry : 0/0
  6757 ;;		On exit  : 0/0
  6758 ;;		Unchanged: 0/0
  6759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6760 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6762 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6763 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6764 ;;Total ram usage:        6 bytes
  6765 ;; Hardware stack levels used: 1
  6766 ;; Hardware stack levels required when called: 6
  6767 ;; This function calls:
  6768 ;;		_reverse
  6769 ;;		_stop
  6770 ;;		_turnRight_90
  6771 ;; This function is called by:
  6772 ;;		_colorDetect
  6773 ;; This function uses a non-reentrant model
  6774 ;;
  6775                           
  6776                           	psect	text28
  6777   00442C                     __ptext28:
  6778                           	callstack 0
  6779   00442C                     _reverseSquareRight:
  6780                           	callstack 23
  6781   00442C                     
  6782                           ;dc_motor.c: 323: void reverseSquareRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 324: {
      +                          ;dc_motor.c: 326:     reverse(mL, mR);
  6783   00442C  C024  F018         	movff	reverseSquareRight@mL,reverse@mL
  6784   004430  C025  F019         	movff	reverseSquareRight@mL+1,reverse@mL+1
  6785   004434  C026  F01A         	movff	reverseSquareRight@mR,reverse@mR
  6786   004438  C027  F01B         	movff	reverseSquareRight@mR+1,reverse@mR+1
  6787   00443C  EC86  F020         	call	_reverse	;wreg free
  6788   004440                     
  6789                           ;dc_motor.c: 327:     _delay((unsigned long)((reverse_time)*(64000000/4000.0)));
  6790   004440  0E35               	movlw	53
  6791   004442  6E29               	movwf	(??_reverseSquareRight+1)^0,c
  6792   004444  0EC3               	movlw	195
  6793   004446  6E28               	movwf	??_reverseSquareRight^0,c
  6794   004448  0E59               	movlw	89
  6795   00444A                     u6347:
  6796   00444A  2EE8               	decfsz	wreg,f,c
  6797   00444C  D7FE               	bra	u6347
  6798   00444E  2E28               	decfsz	??_reverseSquareRight^0,f,c
  6799   004450  D7FC               	bra	u6347
  6800   004452  2E29               	decfsz	(??_reverseSquareRight+1)^0,f,c
  6801   004454  D7FA               	bra	u6347
  6802   004456  F000               	nop	
  6803   004458                     
  6804                           ;dc_motor.c: 329:     stop(mL, mR);
  6805   004458  C024  F018         	movff	reverseSquareRight@mL,stop@mL
  6806   00445C  C025  F019         	movff	reverseSquareRight@mL+1,stop@mL+1
  6807   004460  C026  F01A         	movff	reverseSquareRight@mR,stop@mR
  6808   004464  C027  F01B         	movff	reverseSquareRight@mR+1,stop@mR+1
  6809   004468  ECBF  F021         	call	_stop	;wreg free
  6810   00446C                     
  6811                           ;dc_motor.c: 331:     reverse(mL, mR);
  6812   00446C  C024  F018         	movff	reverseSquareRight@mL,reverse@mL
  6813   004470  C025  F019         	movff	reverseSquareRight@mL+1,reverse@mL+1
  6814   004474  C026  F01A         	movff	reverseSquareRight@mR,reverse@mR
  6815   004478  C027  F01B         	movff	reverseSquareRight@mR+1,reverse@mR+1
  6816   00447C  EC86  F020         	call	_reverse	;wreg free
  6817   004480                     
  6818                           ;dc_motor.c: 332:     _delay((unsigned long)((reverse_time)*(64000000/4000.0)));
  6819   004480  0E35               	movlw	53
  6820   004482  6E29               	movwf	(??_reverseSquareRight+1)^0,c
  6821   004484  0EC3               	movlw	195
  6822   004486  6E28               	movwf	??_reverseSquareRight^0,c
  6823   004488  0E59               	movlw	89
  6824   00448A                     u6357:
  6825   00448A  2EE8               	decfsz	wreg,f,c
  6826   00448C  D7FE               	bra	u6357
  6827   00448E  2E28               	decfsz	??_reverseSquareRight^0,f,c
  6828   004490  D7FC               	bra	u6357
  6829   004492  2E29               	decfsz	(??_reverseSquareRight+1)^0,f,c
  6830   004494  D7FA               	bra	u6357
  6831   004496  F000               	nop	
  6832                           
  6833                           ;dc_motor.c: 334:     turnRight_90(mL,mR);
  6834   004498  C024  F01E         	movff	reverseSquareRight@mL,turnRight_90@mL
  6835   00449C  C025  F01F         	movff	reverseSquareRight@mL+1,turnRight_90@mL+1
  6836   0044A0  C026  F020         	movff	reverseSquareRight@mR,turnRight_90@mR
  6837   0044A4  C027  F021         	movff	reverseSquareRight@mR+1,turnRight_90@mR+1
  6838   0044A8  EC3B  F01C         	call	_turnRight_90	;wreg free
  6839                           
  6840                           ;dc_motor.c: 336:     stop(mL, mR);
  6841   0044AC  C024  F018         	movff	reverseSquareRight@mL,stop@mL
  6842   0044B0  C025  F019         	movff	reverseSquareRight@mL+1,stop@mL+1
  6843   0044B4  C026  F01A         	movff	reverseSquareRight@mR,stop@mR
  6844   0044B8  C027  F01B         	movff	reverseSquareRight@mR+1,stop@mR+1
  6845   0044BC  ECBF  F021         	call	_stop	;wreg free
  6846   0044C0  0012               	return		;funcret
  6847   0044C2                     __end_of_reverseSquareRight:
  6848                           	callstack 0
  6849                           
  6850 ;; *************** function _turnRight_90 *****************
  6851 ;; Defined at:
  6852 ;;		line 210 in file "dc_motor.c"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;  mL              2   29[COMRAM] PTR struct DC_motor
  6855 ;;		 -> main@motorLeft(9), 
  6856 ;;  mR              2   31[COMRAM] PTR struct DC_motor
  6857 ;;		 -> main@motorRight(9), 
  6858 ;; Auto vars:     Size  Location     Type
  6859 ;;		None
  6860 ;; Return value:  Size  Location     Type
  6861 ;;                  1    wreg      void 
  6862 ;; Registers used:
  6863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6864 ;; Tracked objects:
  6865 ;;		On entry : 0/0
  6866 ;;		On exit  : 0/0
  6867 ;;		Unchanged: 0/0
  6868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6869 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6871 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6872 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6873 ;;Total ram usage:        6 bytes
  6874 ;; Hardware stack levels used: 1
  6875 ;; Hardware stack levels required when called: 5
  6876 ;; This function calls:
  6877 ;;		_reverse
  6878 ;;		_setMotorPWM
  6879 ;;		_stop
  6880 ;; This function is called by:
  6881 ;;		_colorDetect
  6882 ;;		_return_home_turns
  6883 ;;		_reverseSquareRight
  6884 ;; This function uses a non-reentrant model
  6885 ;;
  6886                           
  6887                           	psect	text29
  6888   003876                     __ptext29:
  6889                           	callstack 0
  6890   003876                     _turnRight_90:
  6891                           	callstack 24
  6892   003876                     
  6893                           ;dc_motor.c: 210: void turnRight_90(DC_motor *mL, DC_motor *mR);dc_motor.c: 211: {;dc_mo
      +                          tor.c: 212:     stop(mL, mR);
  6894   003876  C01E  F018         	movff	turnRight_90@mL,stop@mL
  6895   00387A  C01F  F019         	movff	turnRight_90@mL+1,stop@mL+1
  6896   00387E  C020  F01A         	movff	turnRight_90@mR,stop@mR
  6897   003882  C021  F01B         	movff	turnRight_90@mR+1,stop@mR+1
  6898   003886  ECBF  F021         	call	_stop	;wreg free
  6899   00388A                     
  6900                           ;dc_motor.c: 213:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6901   00388A  0E09               	movlw	9
  6902   00388C  6E23               	movwf	(??_turnRight_90+1)^0,c
  6903   00388E  0E1E               	movlw	30
  6904   003890  6E22               	movwf	??_turnRight_90^0,c
  6905   003892  0EE4               	movlw	228
  6906   003894                     u6367:
  6907   003894  2EE8               	decfsz	wreg,f,c
  6908   003896  D7FE               	bra	u6367
  6909   003898  2E22               	decfsz	??_turnRight_90^0,f,c
  6910   00389A  D7FC               	bra	u6367
  6911   00389C  2E23               	decfsz	(??_turnRight_90+1)^0,f,c
  6912   00389E  D7FA               	bra	u6367
  6913   0038A0  D000               	nop2	
  6914   0038A2                     
  6915                           ;dc_motor.c: 215:     reverse(mL, mR);
  6916   0038A2  C01E  F018         	movff	turnRight_90@mL,reverse@mL
  6917   0038A6  C01F  F019         	movff	turnRight_90@mL+1,reverse@mL+1
  6918   0038AA  C020  F01A         	movff	turnRight_90@mR,reverse@mR
  6919   0038AE  C021  F01B         	movff	turnRight_90@mR+1,reverse@mR+1
  6920   0038B2  EC86  F020         	call	_reverse	;wreg free
  6921                           
  6922                           ;dc_motor.c: 216:     _delay((unsigned long)((reverse_time)*(64000000/4000.0)));
  6923   0038B6  0E35               	movlw	53
  6924   0038B8  6E23               	movwf	(??_turnRight_90+1)^0,c
  6925   0038BA  0EC3               	movlw	195
  6926   0038BC  6E22               	movwf	??_turnRight_90^0,c
  6927   0038BE  0E59               	movlw	89
  6928   0038C0                     u6377:
  6929   0038C0  2EE8               	decfsz	wreg,f,c
  6930   0038C2  D7FE               	bra	u6377
  6931   0038C4  2E22               	decfsz	??_turnRight_90^0,f,c
  6932   0038C6  D7FC               	bra	u6377
  6933   0038C8  2E23               	decfsz	(??_turnRight_90+1)^0,f,c
  6934   0038CA  D7FA               	bra	u6377
  6935   0038CC  F000               	nop	
  6936   0038CE                     
  6937                           ;dc_motor.c: 218:     stop(mL, mR);
  6938   0038CE  C01E  F018         	movff	turnRight_90@mL,stop@mL
  6939   0038D2  C01F  F019         	movff	turnRight_90@mL+1,stop@mL+1
  6940   0038D6  C020  F01A         	movff	turnRight_90@mR,stop@mR
  6941   0038DA  C021  F01B         	movff	turnRight_90@mR+1,stop@mR+1
  6942   0038DE  ECBF  F021         	call	_stop	;wreg free
  6943   0038E2                     
  6944                           ;dc_motor.c: 220:     mL->direction = 1;
  6945   0038E2  EE20 F001          	lfsr	2,1
  6946   0038E6  501E               	movf	turnRight_90@mL^0,w,c
  6947   0038E8  26D9               	addwf	fsr2l,f,c
  6948   0038EA  501F               	movf	(turnRight_90@mL+1)^0,w,c
  6949   0038EC  22DA               	addwfc	fsr2h,f,c
  6950   0038EE  0E01               	movlw	1
  6951   0038F0  6EDF               	movwf	indf2,c
  6952   0038F2                     
  6953                           ;dc_motor.c: 221:     mR->direction = 0;
  6954   0038F2  EE20 F001          	lfsr	2,1
  6955   0038F6  5020               	movf	turnRight_90@mR^0,w,c
  6956   0038F8  26D9               	addwf	fsr2l,f,c
  6957   0038FA  5021               	movf	(turnRight_90@mR+1)^0,w,c
  6958   0038FC  22DA               	addwfc	fsr2h,f,c
  6959   0038FE  0E00               	movlw	0
  6960   003900  6EDF               	movwf	indf2,c
  6961   003902                     
  6962                           ;dc_motor.c: 223:     mL->brakemode = 1;
  6963   003902  EE20 F002          	lfsr	2,2
  6964   003906  501E               	movf	turnRight_90@mL^0,w,c
  6965   003908  26D9               	addwf	fsr2l,f,c
  6966   00390A  501F               	movf	(turnRight_90@mL+1)^0,w,c
  6967   00390C  22DA               	addwfc	fsr2h,f,c
  6968   00390E  0E01               	movlw	1
  6969   003910  6EDF               	movwf	indf2,c
  6970   003912                     
  6971                           ;dc_motor.c: 224:     mL->brakemode = 1;
  6972   003912  EE20 F002          	lfsr	2,2
  6973   003916  501E               	movf	turnRight_90@mL^0,w,c
  6974   003918  26D9               	addwf	fsr2l,f,c
  6975   00391A  501F               	movf	(turnRight_90@mL+1)^0,w,c
  6976   00391C  22DA               	addwfc	fsr2h,f,c
  6977   00391E  0E01               	movlw	1
  6978   003920  6EDF               	movwf	indf2,c
  6979                           
  6980                           ;dc_motor.c: 226:     while((mL->power < 80) || (mR->power < 80)){
  6981   003922  EFAB  F01C         	goto	l3411
  6982   003926                     l3405:
  6983                           
  6984                           ;dc_motor.c: 227:         mL->power += 10;
  6985   003926  C01E  FFD9         	movff	turnRight_90@mL,fsr2l
  6986   00392A  C01F  FFDA         	movff	turnRight_90@mL+1,fsr2h
  6987   00392E  0E0A               	movlw	10
  6988   003930  26DF               	addwf	indf2,f,c
  6989                           
  6990                           ;dc_motor.c: 228:         mR->power += 10;
  6991   003932  C020  FFD9         	movff	turnRight_90@mR,fsr2l
  6992   003936  C021  FFDA         	movff	turnRight_90@mR+1,fsr2h
  6993   00393A  0E0A               	movlw	10
  6994   00393C  26DF               	addwf	indf2,f,c
  6995   00393E                     
  6996                           ;dc_motor.c: 229:         setMotorPWM(mL);
  6997   00393E  C01E  F012         	movff	turnRight_90@mL,setMotorPWM@m
  6998   003942  C01F  F013         	movff	turnRight_90@mL+1,setMotorPWM@m+1
  6999   003946  EC85  F019         	call	_setMotorPWM	;wreg free
  7000   00394A                     
  7001                           ;dc_motor.c: 230:         setMotorPWM(mR);
  7002   00394A  C020  F012         	movff	turnRight_90@mR,setMotorPWM@m
  7003   00394E  C021  F013         	movff	turnRight_90@mR+1,setMotorPWM@m+1
  7004   003952  EC85  F019         	call	_setMotorPWM	;wreg free
  7005   003956                     l3411:
  7006                           
  7007                           ;dc_motor.c: 226:     while((mL->power < 80) || (mR->power < 80)){
  7008   003956  C01E  FFD9         	movff	turnRight_90@mL,fsr2l
  7009   00395A  C01F  FFDA         	movff	turnRight_90@mL+1,fsr2h
  7010   00395E  0E4F               	movlw	79
  7011   003960  64DF               	cpfsgt	indf2,c
  7012   003962  EFB5  F01C         	goto	u3081
  7013   003966  EFB7  F01C         	goto	u3080
  7014   00396A                     u3081:
  7015   00396A  EF93  F01C         	goto	l3405
  7016   00396E                     u3080:
  7017   00396E  C020  FFD9         	movff	turnRight_90@mR,fsr2l
  7018   003972  C021  FFDA         	movff	turnRight_90@mR+1,fsr2h
  7019   003976  0E4F               	movlw	79
  7020   003978  64DF               	cpfsgt	indf2,c
  7021   00397A  EFC1  F01C         	goto	u3091
  7022   00397E  EFC3  F01C         	goto	u3090
  7023   003982                     u3091:
  7024   003982  EF93  F01C         	goto	l3405
  7025   003986                     u3090:
  7026   003986                     
  7027                           ;dc_motor.c: 232:    _delay((unsigned long)((turning_time90)*(64000000/4000.0)));
  7028   003986  0E0E               	movlw	14
  7029   003988  6E23               	movwf	(??_turnRight_90+1)^0,c
  7030   00398A  0E65               	movlw	101
  7031   00398C  6E22               	movwf	??_turnRight_90^0,c
  7032   00398E  0E87               	movlw	135
  7033   003990                     u6387:
  7034   003990  2EE8               	decfsz	wreg,f,c
  7035   003992  D7FE               	bra	u6387
  7036   003994  2E22               	decfsz	??_turnRight_90^0,f,c
  7037   003996  D7FC               	bra	u6387
  7038   003998  2E23               	decfsz	(??_turnRight_90+1)^0,f,c
  7039   00399A  D7FA               	bra	u6387
  7040   00399C  F000               	nop	
  7041   00399E                     
  7042                           ;dc_motor.c: 234:     stop(mL, mR);
  7043   00399E  C01E  F018         	movff	turnRight_90@mL,stop@mL
  7044   0039A2  C01F  F019         	movff	turnRight_90@mL+1,stop@mL+1
  7045   0039A6  C020  F01A         	movff	turnRight_90@mR,stop@mR
  7046   0039AA  C021  F01B         	movff	turnRight_90@mR+1,stop@mR+1
  7047   0039AE  ECBF  F021         	call	_stop	;wreg free
  7048   0039B2  0012               	return		;funcret
  7049   0039B4                     __end_of_turnRight_90:
  7050                           	callstack 0
  7051                           
  7052 ;; *************** function _reverseSquareLeft *****************
  7053 ;; Defined at:
  7054 ;;		line 341 in file "dc_motor.c"
  7055 ;; Parameters:    Size  Location     Type
  7056 ;;  mL              2   35[COMRAM] PTR struct DC_motor
  7057 ;;		 -> main@motorLeft(9), 
  7058 ;;  mR              2   37[COMRAM] PTR struct DC_motor
  7059 ;;		 -> main@motorRight(9), 
  7060 ;; Auto vars:     Size  Location     Type
  7061 ;;		None
  7062 ;; Return value:  Size  Location     Type
  7063 ;;                  1    wreg      void 
  7064 ;; Registers used:
  7065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7066 ;; Tracked objects:
  7067 ;;		On entry : 0/0
  7068 ;;		On exit  : 0/0
  7069 ;;		Unchanged: 0/0
  7070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7071 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7073 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7074 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7075 ;;Total ram usage:        6 bytes
  7076 ;; Hardware stack levels used: 1
  7077 ;; Hardware stack levels required when called: 6
  7078 ;; This function calls:
  7079 ;;		_reverse
  7080 ;;		_stop
  7081 ;;		_turnLeft_90
  7082 ;; This function is called by:
  7083 ;;		_colorDetect
  7084 ;; This function uses a non-reentrant model
  7085 ;;
  7086                           
  7087                           	psect	text30
  7088   0044C2                     __ptext30:
  7089                           	callstack 0
  7090   0044C2                     _reverseSquareLeft:
  7091                           	callstack 23
  7092   0044C2                     
  7093                           ;dc_motor.c: 341: void reverseSquareLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 342: {;
      +                          dc_motor.c: 343:     reverse(mL, mR);
  7094   0044C2  C024  F018         	movff	reverseSquareLeft@mL,reverse@mL
  7095   0044C6  C025  F019         	movff	reverseSquareLeft@mL+1,reverse@mL+1
  7096   0044CA  C026  F01A         	movff	reverseSquareLeft@mR,reverse@mR
  7097   0044CE  C027  F01B         	movff	reverseSquareLeft@mR+1,reverse@mR+1
  7098   0044D2  EC86  F020         	call	_reverse	;wreg free
  7099   0044D6                     
  7100                           ;dc_motor.c: 344:     _delay((unsigned long)((reverse_time)*(64000000/4000.0)));
  7101   0044D6  0E35               	movlw	53
  7102   0044D8  6E29               	movwf	(??_reverseSquareLeft+1)^0,c
  7103   0044DA  0EC3               	movlw	195
  7104   0044DC  6E28               	movwf	??_reverseSquareLeft^0,c
  7105   0044DE  0E59               	movlw	89
  7106   0044E0                     u6397:
  7107   0044E0  2EE8               	decfsz	wreg,f,c
  7108   0044E2  D7FE               	bra	u6397
  7109   0044E4  2E28               	decfsz	??_reverseSquareLeft^0,f,c
  7110   0044E6  D7FC               	bra	u6397
  7111   0044E8  2E29               	decfsz	(??_reverseSquareLeft+1)^0,f,c
  7112   0044EA  D7FA               	bra	u6397
  7113   0044EC  F000               	nop	
  7114   0044EE                     
  7115                           ;dc_motor.c: 346:     stop(mL, mR);
  7116   0044EE  C024  F018         	movff	reverseSquareLeft@mL,stop@mL
  7117   0044F2  C025  F019         	movff	reverseSquareLeft@mL+1,stop@mL+1
  7118   0044F6  C026  F01A         	movff	reverseSquareLeft@mR,stop@mR
  7119   0044FA  C027  F01B         	movff	reverseSquareLeft@mR+1,stop@mR+1
  7120   0044FE  ECBF  F021         	call	_stop	;wreg free
  7121   004502                     
  7122                           ;dc_motor.c: 348:     reverse(mL, mR);
  7123   004502  C024  F018         	movff	reverseSquareLeft@mL,reverse@mL
  7124   004506  C025  F019         	movff	reverseSquareLeft@mL+1,reverse@mL+1
  7125   00450A  C026  F01A         	movff	reverseSquareLeft@mR,reverse@mR
  7126   00450E  C027  F01B         	movff	reverseSquareLeft@mR+1,reverse@mR+1
  7127   004512  EC86  F020         	call	_reverse	;wreg free
  7128   004516                     
  7129                           ;dc_motor.c: 349:     _delay((unsigned long)((reverse_time)*(64000000/4000.0)));
  7130   004516  0E35               	movlw	53
  7131   004518  6E29               	movwf	(??_reverseSquareLeft+1)^0,c
  7132   00451A  0EC3               	movlw	195
  7133   00451C  6E28               	movwf	??_reverseSquareLeft^0,c
  7134   00451E  0E59               	movlw	89
  7135   004520                     u6407:
  7136   004520  2EE8               	decfsz	wreg,f,c
  7137   004522  D7FE               	bra	u6407
  7138   004524  2E28               	decfsz	??_reverseSquareLeft^0,f,c
  7139   004526  D7FC               	bra	u6407
  7140   004528  2E29               	decfsz	(??_reverseSquareLeft+1)^0,f,c
  7141   00452A  D7FA               	bra	u6407
  7142   00452C  F000               	nop	
  7143                           
  7144                           ;dc_motor.c: 351:     turnLeft_90(mL,mR);
  7145   00452E  C024  F01E         	movff	reverseSquareLeft@mL,turnLeft_90@mL
  7146   004532  C025  F01F         	movff	reverseSquareLeft@mL+1,turnLeft_90@mL+1
  7147   004536  C026  F020         	movff	reverseSquareLeft@mR,turnLeft_90@mR
  7148   00453A  C027  F021         	movff	reverseSquareLeft@mR+1,turnLeft_90@mR+1
  7149   00453E  ECDA  F01C         	call	_turnLeft_90	;wreg free
  7150                           
  7151                           ;dc_motor.c: 353:     stop(mL, mR);
  7152   004542  C024  F018         	movff	reverseSquareLeft@mL,stop@mL
  7153   004546  C025  F019         	movff	reverseSquareLeft@mL+1,stop@mL+1
  7154   00454A  C026  F01A         	movff	reverseSquareLeft@mR,stop@mR
  7155   00454E  C027  F01B         	movff	reverseSquareLeft@mR+1,stop@mR+1
  7156   004552  ECBF  F021         	call	_stop	;wreg free
  7157   004556  0012               	return		;funcret
  7158   004558                     __end_of_reverseSquareLeft:
  7159                           	callstack 0
  7160                           
  7161 ;; *************** function _turnLeft_90 *****************
  7162 ;; Defined at:
  7163 ;;		line 181 in file "dc_motor.c"
  7164 ;; Parameters:    Size  Location     Type
  7165 ;;  mL              2   29[COMRAM] PTR struct DC_motor
  7166 ;;		 -> main@motorLeft(9), 
  7167 ;;  mR              2   31[COMRAM] PTR struct DC_motor
  7168 ;;		 -> main@motorRight(9), 
  7169 ;; Auto vars:     Size  Location     Type
  7170 ;;		None
  7171 ;; Return value:  Size  Location     Type
  7172 ;;                  1    wreg      void 
  7173 ;; Registers used:
  7174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7175 ;; Tracked objects:
  7176 ;;		On entry : 0/0
  7177 ;;		On exit  : 0/0
  7178 ;;		Unchanged: 0/0
  7179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7180 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7182 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7183 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7184 ;;Total ram usage:        6 bytes
  7185 ;; Hardware stack levels used: 1
  7186 ;; Hardware stack levels required when called: 5
  7187 ;; This function calls:
  7188 ;;		_reverse
  7189 ;;		_setMotorPWM
  7190 ;;		_stop
  7191 ;; This function is called by:
  7192 ;;		_colorDetect
  7193 ;;		_return_home_turns
  7194 ;;		_reverseSquareLeft
  7195 ;; This function uses a non-reentrant model
  7196 ;;
  7197                           
  7198                           	psect	text31
  7199   0039B4                     __ptext31:
  7200                           	callstack 0
  7201   0039B4                     _turnLeft_90:
  7202                           	callstack 24
  7203   0039B4                     
  7204                           ;dc_motor.c: 181: void turnLeft_90(DC_motor *mL, DC_motor *mR);dc_motor.c: 182: {;dc_mot
      +                          or.c: 184:     stop(mL, mR);
  7205   0039B4  C01E  F018         	movff	turnLeft_90@mL,stop@mL
  7206   0039B8  C01F  F019         	movff	turnLeft_90@mL+1,stop@mL+1
  7207   0039BC  C020  F01A         	movff	turnLeft_90@mR,stop@mR
  7208   0039C0  C021  F01B         	movff	turnLeft_90@mR+1,stop@mR+1
  7209   0039C4  ECBF  F021         	call	_stop	;wreg free
  7210   0039C8                     
  7211                           ;dc_motor.c: 185:     _delay((unsigned long)((100)*(64000000/4000.0)));
  7212   0039C8  0E09               	movlw	9
  7213   0039CA  6E23               	movwf	(??_turnLeft_90+1)^0,c
  7214   0039CC  0E1E               	movlw	30
  7215   0039CE  6E22               	movwf	??_turnLeft_90^0,c
  7216   0039D0  0EE4               	movlw	228
  7217   0039D2                     u6417:
  7218   0039D2  2EE8               	decfsz	wreg,f,c
  7219   0039D4  D7FE               	bra	u6417
  7220   0039D6  2E22               	decfsz	??_turnLeft_90^0,f,c
  7221   0039D8  D7FC               	bra	u6417
  7222   0039DA  2E23               	decfsz	(??_turnLeft_90+1)^0,f,c
  7223   0039DC  D7FA               	bra	u6417
  7224   0039DE  D000               	nop2	
  7225   0039E0                     
  7226                           ;dc_motor.c: 187:     reverse(mL, mR);
  7227   0039E0  C01E  F018         	movff	turnLeft_90@mL,reverse@mL
  7228   0039E4  C01F  F019         	movff	turnLeft_90@mL+1,reverse@mL+1
  7229   0039E8  C020  F01A         	movff	turnLeft_90@mR,reverse@mR
  7230   0039EC  C021  F01B         	movff	turnLeft_90@mR+1,reverse@mR+1
  7231   0039F0  EC86  F020         	call	_reverse	;wreg free
  7232                           
  7233                           ;dc_motor.c: 188:     _delay((unsigned long)((reverse_time)*(64000000/4000.0)));
  7234   0039F4  0E35               	movlw	53
  7235   0039F6  6E23               	movwf	(??_turnLeft_90+1)^0,c
  7236   0039F8  0EC3               	movlw	195
  7237   0039FA  6E22               	movwf	??_turnLeft_90^0,c
  7238   0039FC  0E59               	movlw	89
  7239   0039FE                     u6427:
  7240   0039FE  2EE8               	decfsz	wreg,f,c
  7241   003A00  D7FE               	bra	u6427
  7242   003A02  2E22               	decfsz	??_turnLeft_90^0,f,c
  7243   003A04  D7FC               	bra	u6427
  7244   003A06  2E23               	decfsz	(??_turnLeft_90+1)^0,f,c
  7245   003A08  D7FA               	bra	u6427
  7246   003A0A  F000               	nop	
  7247   003A0C                     
  7248                           ;dc_motor.c: 190:     stop(mL, mR);
  7249   003A0C  C01E  F018         	movff	turnLeft_90@mL,stop@mL
  7250   003A10  C01F  F019         	movff	turnLeft_90@mL+1,stop@mL+1
  7251   003A14  C020  F01A         	movff	turnLeft_90@mR,stop@mR
  7252   003A18  C021  F01B         	movff	turnLeft_90@mR+1,stop@mR+1
  7253   003A1C  ECBF  F021         	call	_stop	;wreg free
  7254   003A20                     
  7255                           ;dc_motor.c: 192:     mL->direction = 0;
  7256   003A20  EE20 F001          	lfsr	2,1
  7257   003A24  501E               	movf	turnLeft_90@mL^0,w,c
  7258   003A26  26D9               	addwf	fsr2l,f,c
  7259   003A28  501F               	movf	(turnLeft_90@mL+1)^0,w,c
  7260   003A2A  22DA               	addwfc	fsr2h,f,c
  7261   003A2C  0E00               	movlw	0
  7262   003A2E  6EDF               	movwf	indf2,c
  7263   003A30                     
  7264                           ;dc_motor.c: 193:     mR->direction = 1;
  7265   003A30  EE20 F001          	lfsr	2,1
  7266   003A34  5020               	movf	turnLeft_90@mR^0,w,c
  7267   003A36  26D9               	addwf	fsr2l,f,c
  7268   003A38  5021               	movf	(turnLeft_90@mR+1)^0,w,c
  7269   003A3A  22DA               	addwfc	fsr2h,f,c
  7270   003A3C  0E01               	movlw	1
  7271   003A3E  6EDF               	movwf	indf2,c
  7272   003A40                     
  7273                           ;dc_motor.c: 195:     mL->brakemode = 1;
  7274   003A40  EE20 F002          	lfsr	2,2
  7275   003A44  501E               	movf	turnLeft_90@mL^0,w,c
  7276   003A46  26D9               	addwf	fsr2l,f,c
  7277   003A48  501F               	movf	(turnLeft_90@mL+1)^0,w,c
  7278   003A4A  22DA               	addwfc	fsr2h,f,c
  7279   003A4C  0E01               	movlw	1
  7280   003A4E  6EDF               	movwf	indf2,c
  7281   003A50                     
  7282                           ;dc_motor.c: 196:     mL->brakemode = 1;
  7283   003A50  EE20 F002          	lfsr	2,2
  7284   003A54  501E               	movf	turnLeft_90@mL^0,w,c
  7285   003A56  26D9               	addwf	fsr2l,f,c
  7286   003A58  501F               	movf	(turnLeft_90@mL+1)^0,w,c
  7287   003A5A  22DA               	addwfc	fsr2h,f,c
  7288   003A5C  0E01               	movlw	1
  7289   003A5E  6EDF               	movwf	indf2,c
  7290                           
  7291                           ;dc_motor.c: 198:     while((mL->power < 80) || (mR->power < 80)){
  7292   003A60  EF4A  F01D         	goto	l3441
  7293   003A64                     l3435:
  7294                           
  7295                           ;dc_motor.c: 199:         mL->power += 10;
  7296   003A64  C01E  FFD9         	movff	turnLeft_90@mL,fsr2l
  7297   003A68  C01F  FFDA         	movff	turnLeft_90@mL+1,fsr2h
  7298   003A6C  0E0A               	movlw	10
  7299   003A6E  26DF               	addwf	indf2,f,c
  7300                           
  7301                           ;dc_motor.c: 200:         mR->power += 10;
  7302   003A70  C020  FFD9         	movff	turnLeft_90@mR,fsr2l
  7303   003A74  C021  FFDA         	movff	turnLeft_90@mR+1,fsr2h
  7304   003A78  0E0A               	movlw	10
  7305   003A7A  26DF               	addwf	indf2,f,c
  7306   003A7C                     
  7307                           ;dc_motor.c: 201:         setMotorPWM(mL);
  7308   003A7C  C01E  F012         	movff	turnLeft_90@mL,setMotorPWM@m
  7309   003A80  C01F  F013         	movff	turnLeft_90@mL+1,setMotorPWM@m+1
  7310   003A84  EC85  F019         	call	_setMotorPWM	;wreg free
  7311   003A88                     
  7312                           ;dc_motor.c: 202:         setMotorPWM(mR);
  7313   003A88  C020  F012         	movff	turnLeft_90@mR,setMotorPWM@m
  7314   003A8C  C021  F013         	movff	turnLeft_90@mR+1,setMotorPWM@m+1
  7315   003A90  EC85  F019         	call	_setMotorPWM	;wreg free
  7316   003A94                     l3441:
  7317                           
  7318                           ;dc_motor.c: 198:     while((mL->power < 80) || (mR->power < 80)){
  7319   003A94  C01E  FFD9         	movff	turnLeft_90@mL,fsr2l
  7320   003A98  C01F  FFDA         	movff	turnLeft_90@mL+1,fsr2h
  7321   003A9C  0E4F               	movlw	79
  7322   003A9E  64DF               	cpfsgt	indf2,c
  7323   003AA0  EF54  F01D         	goto	u3101
  7324   003AA4  EF56  F01D         	goto	u3100
  7325   003AA8                     u3101:
  7326   003AA8  EF32  F01D         	goto	l3435
  7327   003AAC                     u3100:
  7328   003AAC  C020  FFD9         	movff	turnLeft_90@mR,fsr2l
  7329   003AB0  C021  FFDA         	movff	turnLeft_90@mR+1,fsr2h
  7330   003AB4  0E4F               	movlw	79
  7331   003AB6  64DF               	cpfsgt	indf2,c
  7332   003AB8  EF60  F01D         	goto	u3111
  7333   003ABC  EF62  F01D         	goto	u3110
  7334   003AC0                     u3111:
  7335   003AC0  EF32  F01D         	goto	l3435
  7336   003AC4                     u3110:
  7337   003AC4                     
  7338                           ;dc_motor.c: 204:    _delay((unsigned long)((turning_time90)*(64000000/4000.0)));
  7339   003AC4  0E0E               	movlw	14
  7340   003AC6  6E23               	movwf	(??_turnLeft_90+1)^0,c
  7341   003AC8  0E65               	movlw	101
  7342   003ACA  6E22               	movwf	??_turnLeft_90^0,c
  7343   003ACC  0E87               	movlw	135
  7344   003ACE                     u6437:
  7345   003ACE  2EE8               	decfsz	wreg,f,c
  7346   003AD0  D7FE               	bra	u6437
  7347   003AD2  2E22               	decfsz	??_turnLeft_90^0,f,c
  7348   003AD4  D7FC               	bra	u6437
  7349   003AD6  2E23               	decfsz	(??_turnLeft_90+1)^0,f,c
  7350   003AD8  D7FA               	bra	u6437
  7351   003ADA  F000               	nop	
  7352   003ADC                     
  7353                           ;dc_motor.c: 205:     stop(mL, mR);
  7354   003ADC  C01E  F018         	movff	turnLeft_90@mL,stop@mL
  7355   003AE0  C01F  F019         	movff	turnLeft_90@mL+1,stop@mL+1
  7356   003AE4  C020  F01A         	movff	turnLeft_90@mR,stop@mR
  7357   003AE8  C021  F01B         	movff	turnLeft_90@mR+1,stop@mR+1
  7358   003AEC  ECBF  F021         	call	_stop	;wreg free
  7359   003AF0  0012               	return		;funcret
  7360   003AF2                     __end_of_turnLeft_90:
  7361                           	callstack 0
  7362                           
  7363 ;; *************** function _stop *****************
  7364 ;; Defined at:
  7365 ;;		line 117 in file "dc_motor.c"
  7366 ;; Parameters:    Size  Location     Type
  7367 ;;  mL              2   23[COMRAM] PTR struct DC_motor
  7368 ;;		 -> main@motorLeft(9), 
  7369 ;;  mR              2   25[COMRAM] PTR struct DC_motor
  7370 ;;		 -> main@motorRight(9), 
  7371 ;; Auto vars:     Size  Location     Type
  7372 ;;		None
  7373 ;; Return value:  Size  Location     Type
  7374 ;;                  1    wreg      void 
  7375 ;; Registers used:
  7376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7377 ;; Tracked objects:
  7378 ;;		On entry : 0/0
  7379 ;;		On exit  : 0/0
  7380 ;;		Unchanged: 0/0
  7381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7382 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7384 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7385 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7386 ;;Total ram usage:        6 bytes
  7387 ;; Hardware stack levels used: 1
  7388 ;; Hardware stack levels required when called: 4
  7389 ;; This function calls:
  7390 ;;		_setMotorPWM
  7391 ;; This function is called by:
  7392 ;;		_return_home_turns
  7393 ;;		_turnLeft_90
  7394 ;;		_turnRight_90
  7395 ;;		_turn_180
  7396 ;;		_turnRight_135
  7397 ;;		_turnLeft_135
  7398 ;;		_reverseSquareRight
  7399 ;;		_reverseSquareLeft
  7400 ;;		_main
  7401 ;; This function uses a non-reentrant model
  7402 ;;
  7403                           
  7404                           	psect	text32
  7405   00437E                     __ptext32:
  7406                           	callstack 0
  7407   00437E                     _stop:
  7408                           	callstack 25
  7409   00437E                     
  7410                           ;dc_motor.c: 119:     while ((mL->power)>0 && (mR->power)>0){
  7411   00437E  EFF1  F021         	goto	l3313
  7412   004382                     l3301:
  7413                           
  7414                           ;dc_motor.c: 120:         if ((mL->power) >0){
  7415   004382  C018  FFD9         	movff	stop@mL,fsr2l
  7416   004386  C019  FFDA         	movff	stop@mL+1,fsr2h
  7417   00438A  50DF               	movf	indf2,w,c
  7418   00438C  B4D8               	btfsc	status,2,c
  7419   00438E  EFCB  F021         	goto	u2971
  7420   004392  EFCD  F021         	goto	u2970
  7421   004396                     u2971:
  7422   004396  EFD3  F021         	goto	l3305
  7423   00439A                     u2970:
  7424   00439A                     
  7425                           ;dc_motor.c: 121:             mL->power -= 5;
  7426   00439A  C018  FFD9         	movff	stop@mL,fsr2l
  7427   00439E  C019  FFDA         	movff	stop@mL+1,fsr2h
  7428   0043A2  0E05               	movlw	5
  7429   0043A4  5EDF               	subwf	indf2,f,c
  7430   0043A6                     l3305:
  7431                           
  7432                           ;dc_motor.c: 123:         if ((mR->power) >0){
  7433   0043A6  C01A  FFD9         	movff	stop@mR,fsr2l
  7434   0043AA  C01B  FFDA         	movff	stop@mR+1,fsr2h
  7435   0043AE  50DF               	movf	indf2,w,c
  7436   0043B0  B4D8               	btfsc	status,2,c
  7437   0043B2  EFDD  F021         	goto	u2981
  7438   0043B6  EFDF  F021         	goto	u2980
  7439   0043BA                     u2981:
  7440   0043BA  EFE5  F021         	goto	l3309
  7441   0043BE                     u2980:
  7442   0043BE                     
  7443                           ;dc_motor.c: 124:             mR->power -= 5;
  7444   0043BE  C01A  FFD9         	movff	stop@mR,fsr2l
  7445   0043C2  C01B  FFDA         	movff	stop@mR+1,fsr2h
  7446   0043C6  0E05               	movlw	5
  7447   0043C8  5EDF               	subwf	indf2,f,c
  7448   0043CA                     l3309:
  7449                           
  7450                           ;dc_motor.c: 127:         setMotorPWM(mL);
  7451   0043CA  C018  F012         	movff	stop@mL,setMotorPWM@m
  7452   0043CE  C019  F013         	movff	stop@mL+1,setMotorPWM@m+1
  7453   0043D2  EC85  F019         	call	_setMotorPWM	;wreg free
  7454   0043D6                     
  7455                           ;dc_motor.c: 128:         setMotorPWM(mR);
  7456   0043D6  C01A  F012         	movff	stop@mR,setMotorPWM@m
  7457   0043DA  C01B  F013         	movff	stop@mR+1,setMotorPWM@m+1
  7458   0043DE  EC85  F019         	call	_setMotorPWM	;wreg free
  7459   0043E2                     l3313:
  7460                           
  7461                           ;dc_motor.c: 119:     while ((mL->power)>0 && (mR->power)>0){
  7462   0043E2  C018  FFD9         	movff	stop@mL,fsr2l
  7463   0043E6  C019  FFDA         	movff	stop@mL+1,fsr2h
  7464   0043EA  50DF               	movf	indf2,w,c
  7465   0043EC  B4D8               	btfsc	status,2,c
  7466   0043EE  EFFB  F021         	goto	u2991
  7467   0043F2  EFFD  F021         	goto	u2990
  7468   0043F6                     u2991:
  7469   0043F6  EF09  F022         	goto	l3317
  7470   0043FA                     u2990:
  7471   0043FA  C01A  FFD9         	movff	stop@mR,fsr2l
  7472   0043FE  C01B  FFDA         	movff	stop@mR+1,fsr2h
  7473   004402  50DF               	movf	indf2,w,c
  7474   004404  A4D8               	btfss	status,2,c
  7475   004406  EF07  F022         	goto	u3001
  7476   00440A  EF09  F022         	goto	u3000
  7477   00440E                     u3001:
  7478   00440E  EFC1  F021         	goto	l3301
  7479   004412                     u3000:
  7480   004412                     l3317:
  7481                           
  7482                           ;dc_motor.c: 130:     _delay((unsigned long)((100)*(64000000/4000.0)));
  7483   004412  0E09               	movlw	9
  7484   004414  6E1D               	movwf	(??_stop+1)^0,c
  7485   004416  0E1E               	movlw	30
  7486   004418  6E1C               	movwf	??_stop^0,c
  7487   00441A  0EE4               	movlw	228
  7488   00441C                     u6447:
  7489   00441C  2EE8               	decfsz	wreg,f,c
  7490   00441E  D7FE               	bra	u6447
  7491   004420  2E1C               	decfsz	??_stop^0,f,c
  7492   004422  D7FC               	bra	u6447
  7493   004424  2E1D               	decfsz	(??_stop+1)^0,f,c
  7494   004426  D7FA               	bra	u6447
  7495   004428  D000               	nop2	
  7496   00442A  0012               	return		;funcret
  7497   00442C                     __end_of_stop:
  7498                           	callstack 0
  7499                           
  7500 ;; *************** function _reverse *****************
  7501 ;; Defined at:
  7502 ;;		line 157 in file "dc_motor.c"
  7503 ;; Parameters:    Size  Location     Type
  7504 ;;  mL              2   23[COMRAM] PTR struct DC_motor
  7505 ;;		 -> main@motorLeft(9), 
  7506 ;;  mR              2   25[COMRAM] PTR struct DC_motor
  7507 ;;		 -> main@motorRight(9), 
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;		None
  7510 ;; Return value:  Size  Location     Type
  7511 ;;                  1    wreg      void 
  7512 ;; Registers used:
  7513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7514 ;; Tracked objects:
  7515 ;;		On entry : 0/0
  7516 ;;		On exit  : 0/0
  7517 ;;		Unchanged: 0/0
  7518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7519 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7521 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7522 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7523 ;;Total ram usage:        5 bytes
  7524 ;; Hardware stack levels used: 1
  7525 ;; Hardware stack levels required when called: 4
  7526 ;; This function calls:
  7527 ;;		_setMotorPWM
  7528 ;; This function is called by:
  7529 ;;		_turnLeft_90
  7530 ;;		_turnRight_90
  7531 ;;		_turn_180
  7532 ;;		_turnRight_135
  7533 ;;		_turnLeft_135
  7534 ;;		_reverseSquareRight
  7535 ;;		_reverseSquareLeft
  7536 ;; This function uses a non-reentrant model
  7537 ;;
  7538                           
  7539                           	psect	text33
  7540   00410C                     __ptext33:
  7541                           	callstack 0
  7542   00410C                     _reverse:
  7543                           	callstack 25
  7544   00410C                     
  7545                           ;dc_motor.c: 157: void reverse(DC_motor *mL, DC_motor *mR);dc_motor.c: 158: {;dc_motor.c
      +                          : 159:     mL->direction = 0;
  7546   00410C  EE20 F001          	lfsr	2,1
  7547   004110  5018               	movf	reverse@mL^0,w,c
  7548   004112  26D9               	addwf	fsr2l,f,c
  7549   004114  5019               	movf	(reverse@mL+1)^0,w,c
  7550   004116  22DA               	addwfc	fsr2h,f,c
  7551   004118  0E00               	movlw	0
  7552   00411A  6EDF               	movwf	indf2,c
  7553                           
  7554                           ;dc_motor.c: 160:     mR->direction = 0;
  7555   00411C  EE20 F001          	lfsr	2,1
  7556   004120  501A               	movf	reverse@mR^0,w,c
  7557   004122  26D9               	addwf	fsr2l,f,c
  7558   004124  501B               	movf	(reverse@mR+1)^0,w,c
  7559   004126  22DA               	addwfc	fsr2h,f,c
  7560   004128  0E00               	movlw	0
  7561   00412A  6EDF               	movwf	indf2,c
  7562                           
  7563                           ;dc_motor.c: 162:     mL->brakemode = 1;
  7564   00412C  EE20 F002          	lfsr	2,2
  7565   004130  5018               	movf	reverse@mL^0,w,c
  7566   004132  26D9               	addwf	fsr2l,f,c
  7567   004134  5019               	movf	(reverse@mL+1)^0,w,c
  7568   004136  22DA               	addwfc	fsr2h,f,c
  7569   004138  0E01               	movlw	1
  7570   00413A  6EDF               	movwf	indf2,c
  7571                           
  7572                           ;dc_motor.c: 163:     mL->brakemode = 1;
  7573   00413C  EE20 F002          	lfsr	2,2
  7574   004140  5018               	movf	reverse@mL^0,w,c
  7575   004142  26D9               	addwf	fsr2l,f,c
  7576   004144  5019               	movf	(reverse@mL+1)^0,w,c
  7577   004146  22DA               	addwfc	fsr2h,f,c
  7578   004148  0E01               	movlw	1
  7579   00414A  6EDF               	movwf	indf2,c
  7580                           
  7581                           ;dc_motor.c: 165:     while ((mL->power)<25 && (mR->power)<25){
  7582   00414C  EFCC  F020         	goto	l3329
  7583   004150                     l3321:
  7584                           
  7585                           ;dc_motor.c: 166:         if ((mL->power) < 25){
  7586   004150  C018  FFD9         	movff	reverse@mL,fsr2l
  7587   004154  C019  FFDA         	movff	reverse@mL+1,fsr2h
  7588   004158  0E19               	movlw	25
  7589   00415A  60DF               	cpfslt	indf2,c
  7590   00415C  EFB2  F020         	goto	u3011
  7591   004160  EFB4  F020         	goto	u3010
  7592   004164                     u3011:
  7593   004164  EFBA  F020         	goto	l3325
  7594   004168                     u3010:
  7595   004168                     
  7596                           ;dc_motor.c: 167:             mL->power += 5;
  7597   004168  C018  FFD9         	movff	reverse@mL,fsr2l
  7598   00416C  C019  FFDA         	movff	reverse@mL+1,fsr2h
  7599   004170  0E05               	movlw	5
  7600   004172  26DF               	addwf	indf2,f,c
  7601   004174                     l3325:
  7602                           
  7603                           ;dc_motor.c: 169:         if ((mR->power) <25){
  7604   004174  C01A  FFD9         	movff	reverse@mR,fsr2l
  7605   004178  C01B  FFDA         	movff	reverse@mR+1,fsr2h
  7606   00417C  0E19               	movlw	25
  7607   00417E  60DF               	cpfslt	indf2,c
  7608   004180  EFC4  F020         	goto	u3021
  7609   004184  EFC6  F020         	goto	u3020
  7610   004188                     u3021:
  7611   004188  EFCC  F020         	goto	l3329
  7612   00418C                     u3020:
  7613   00418C                     
  7614                           ;dc_motor.c: 170:             mR->power += 5;
  7615   00418C  C01A  FFD9         	movff	reverse@mR,fsr2l
  7616   004190  C01B  FFDA         	movff	reverse@mR+1,fsr2h
  7617   004194  0E05               	movlw	5
  7618   004196  26DF               	addwf	indf2,f,c
  7619   004198                     l3329:
  7620                           
  7621                           ;dc_motor.c: 165:     while ((mL->power)<25 && (mR->power)<25){
  7622   004198  C018  FFD9         	movff	reverse@mL,fsr2l
  7623   00419C  C019  FFDA         	movff	reverse@mL+1,fsr2h
  7624   0041A0  0E19               	movlw	25
  7625   0041A2  60DF               	cpfslt	indf2,c
  7626   0041A4  EFD6  F020         	goto	u3031
  7627   0041A8  EFD8  F020         	goto	u3030
  7628   0041AC                     u3031:
  7629   0041AC  EFE4  F020         	goto	l3333
  7630   0041B0                     u3030:
  7631   0041B0  C01A  FFD9         	movff	reverse@mR,fsr2l
  7632   0041B4  C01B  FFDA         	movff	reverse@mR+1,fsr2h
  7633   0041B8  0E18               	movlw	24
  7634   0041BA  64DF               	cpfsgt	indf2,c
  7635   0041BC  EFE2  F020         	goto	u3041
  7636   0041C0  EFE4  F020         	goto	u3040
  7637   0041C4                     u3041:
  7638   0041C4  EFA8  F020         	goto	l3321
  7639   0041C8                     u3040:
  7640   0041C8                     l3333:
  7641                           
  7642                           ;dc_motor.c: 174:     setMotorPWM(mL);
  7643   0041C8  C018  F012         	movff	reverse@mL,setMotorPWM@m
  7644   0041CC  C019  F013         	movff	reverse@mL+1,setMotorPWM@m+1
  7645   0041D0  EC85  F019         	call	_setMotorPWM	;wreg free
  7646                           
  7647                           ;dc_motor.c: 175:     setMotorPWM(mR);
  7648   0041D4  C01A  F012         	movff	reverse@mR,setMotorPWM@m
  7649   0041D8  C01B  F013         	movff	reverse@mR+1,setMotorPWM@m+1
  7650   0041DC  EC85  F019         	call	_setMotorPWM	;wreg free
  7651   0041E0  0012               	return		;funcret
  7652   0041E2                     __end_of_reverse:
  7653                           	callstack 0
  7654                           
  7655 ;; *************** function _setMotorPWM *****************
  7656 ;; Defined at:
  7657 ;;		line 94 in file "dc_motor.c"
  7658 ;; Parameters:    Size  Location     Type
  7659 ;;  m               2   17[COMRAM] PTR struct DC_motor
  7660 ;;		 -> main@motorRight(9), main@motorLeft(9), 
  7661 ;; Auto vars:     Size  Location     Type
  7662 ;;  negDuty         1   22[COMRAM] unsigned char 
  7663 ;;  posDuty         1   21[COMRAM] unsigned char 
  7664 ;; Return value:  Size  Location     Type
  7665 ;;                  1    wreg      void 
  7666 ;; Registers used:
  7667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7668 ;; Tracked objects:
  7669 ;;		On entry : 0/0
  7670 ;;		On exit  : 0/0
  7671 ;;		Unchanged: 0/0
  7672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7673 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7674 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7675 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7676 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7677 ;;Total ram usage:        6 bytes
  7678 ;; Hardware stack levels used: 1
  7679 ;; Hardware stack levels required when called: 3
  7680 ;; This function calls:
  7681 ;;		___lwdiv
  7682 ;;		___wmul
  7683 ;; This function is called by:
  7684 ;;		_stop
  7685 ;;		_forward
  7686 ;;		_reverse
  7687 ;;		_turnLeft_90
  7688 ;;		_turnRight_90
  7689 ;;		_turn_180
  7690 ;;		_turnRight_135
  7691 ;;		_turnLeft_135
  7692 ;; This function uses a non-reentrant model
  7693 ;;
  7694                           
  7695                           	psect	text34
  7696   00330A                     __ptext34:
  7697                           	callstack 0
  7698   00330A                     _setMotorPWM:
  7699                           	callstack 25
  7700   00330A                     
  7701                           ;dc_motor.c: 94: void setMotorPWM(DC_motor *m);dc_motor.c: 95: {;dc_motor.c: 96:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 98:     if(m->brakemode) {
  7702   00330A  EE20 F002          	lfsr	2,2
  7703   00330E  5012               	movf	setMotorPWM@m^0,w,c
  7704   003310  26D9               	addwf	fsr2l,f,c
  7705   003312  5013               	movf	(setMotorPWM@m+1)^0,w,c
  7706   003314  22DA               	addwfc	fsr2h,f,c
  7707   003316  50DF               	movf	indf2,w,c
  7708   003318  B4D8               	btfsc	status,2,c
  7709   00331A  EF91  F019         	goto	u2811
  7710   00331E  EF93  F019         	goto	u2810
  7711   003322                     u2811:
  7712   003322  EFC7  F019         	goto	l3203
  7713   003326                     u2810:
  7714   003326                     
  7715                           ;dc_motor.c: 99:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  7716   003326  C012  FFD9         	movff	setMotorPWM@m,fsr2l
  7717   00332A  C013  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7718   00332E  50DF               	movf	indf2,w,c
  7719   003330  6E14               	movwf	??_setMotorPWM^0,c
  7720   003332  5014               	movf	??_setMotorPWM^0,w,c
  7721   003334  6E05               	movwf	___wmul@multiplier^0,c
  7722   003336  6A06               	clrf	(___wmul@multiplier+1)^0,c
  7723   003338  EE20 F003          	lfsr	2,3
  7724   00333C  5012               	movf	setMotorPWM@m^0,w,c
  7725   00333E  26D9               	addwf	fsr2l,f,c
  7726   003340  5013               	movf	(setMotorPWM@m+1)^0,w,c
  7727   003342  22DA               	addwfc	fsr2h,f,c
  7728   003344  CFDE F007          	movff	postinc2,___wmul@multiplicand
  7729   003348  CFDD F008          	movff	postdec2,___wmul@multiplicand+1
  7730   00334C  ECD3  F025         	call	___wmul	;wreg free
  7731   003350  C005  F00B         	movff	?___wmul,___lwdiv@dividend
  7732   003354  C006  F00C         	movff	?___wmul+1,___lwdiv@dividend+1
  7733   003358  0E00               	movlw	0
  7734   00335A  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
  7735   00335C  0E64               	movlw	100
  7736   00335E  6E0D               	movwf	___lwdiv@divisor^0,c
  7737   003360  EC31  F023         	call	___lwdiv	;wreg free
  7738   003364  EE20 F003          	lfsr	2,3
  7739   003368  5012               	movf	setMotorPWM@m^0,w,c
  7740   00336A  26D9               	addwf	fsr2l,f,c
  7741   00336C  5013               	movf	(setMotorPWM@m+1)^0,w,c
  7742   00336E  22DA               	addwfc	fsr2h,f,c
  7743   003370  50DF               	movf	indf2,w,c
  7744   003372  6E15               	movwf	(??_setMotorPWM+1)^0,c
  7745   003374  500B               	movf	?___lwdiv^0,w,c
  7746   003376  5C15               	subwf	(??_setMotorPWM+1)^0,w,c
  7747   003378  6E16               	movwf	setMotorPWM@posDuty^0,c
  7748   00337A                     
  7749                           ;dc_motor.c: 100:         negDuty=m->PWMperiod;
  7750   00337A  EE20 F003          	lfsr	2,3
  7751   00337E  5012               	movf	setMotorPWM@m^0,w,c
  7752   003380  26D9               	addwf	fsr2l,f,c
  7753   003382  5013               	movf	(setMotorPWM@m+1)^0,w,c
  7754   003384  22DA               	addwfc	fsr2h,f,c
  7755   003386  50DF               	movf	indf2,w,c
  7756   003388  6E17               	movwf	setMotorPWM@negDuty^0,c
  7757                           
  7758                           ;dc_motor.c: 101:     }
  7759   00338A  EFEA  F019         	goto	l3207
  7760   00338E                     l3203:
  7761                           
  7762                           ;dc_motor.c: 103:         posDuty=0;
  7763   00338E  0E00               	movlw	0
  7764   003390  6E16               	movwf	setMotorPWM@posDuty^0,c
  7765   003392                     
  7766                           ;dc_motor.c: 104:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  7767   003392  C012  FFD9         	movff	setMotorPWM@m,fsr2l
  7768   003396  C013  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7769   00339A  50DF               	movf	indf2,w,c
  7770   00339C  6E14               	movwf	??_setMotorPWM^0,c
  7771   00339E  5014               	movf	??_setMotorPWM^0,w,c
  7772   0033A0  6E05               	movwf	___wmul@multiplier^0,c
  7773   0033A2  6A06               	clrf	(___wmul@multiplier+1)^0,c
  7774   0033A4  EE20 F003          	lfsr	2,3
  7775   0033A8  5012               	movf	setMotorPWM@m^0,w,c
  7776   0033AA  26D9               	addwf	fsr2l,f,c
  7777   0033AC  5013               	movf	(setMotorPWM@m+1)^0,w,c
  7778   0033AE  22DA               	addwfc	fsr2h,f,c
  7779   0033B0  CFDE F007          	movff	postinc2,___wmul@multiplicand
  7780   0033B4  CFDD F008          	movff	postdec2,___wmul@multiplicand+1
  7781   0033B8  ECD3  F025         	call	___wmul	;wreg free
  7782   0033BC  C005  F00B         	movff	?___wmul,___lwdiv@dividend
  7783   0033C0  C006  F00C         	movff	?___wmul+1,___lwdiv@dividend+1
  7784   0033C4  0E00               	movlw	0
  7785   0033C6  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
  7786   0033C8  0E64               	movlw	100
  7787   0033CA  6E0D               	movwf	___lwdiv@divisor^0,c
  7788   0033CC  EC31  F023         	call	___lwdiv	;wreg free
  7789   0033D0  500B               	movf	?___lwdiv^0,w,c
  7790   0033D2  6E17               	movwf	setMotorPWM@negDuty^0,c
  7791   0033D4                     l3207:
  7792                           
  7793                           ;dc_motor.c: 107:     if (m->direction) {
  7794   0033D4  EE20 F001          	lfsr	2,1
  7795   0033D8  5012               	movf	setMotorPWM@m^0,w,c
  7796   0033DA  26D9               	addwf	fsr2l,f,c
  7797   0033DC  5013               	movf	(setMotorPWM@m+1)^0,w,c
  7798   0033DE  22DA               	addwfc	fsr2h,f,c
  7799   0033E0  50DF               	movf	indf2,w,c
  7800   0033E2  B4D8               	btfsc	status,2,c
  7801   0033E4  EFF6  F019         	goto	u2821
  7802   0033E8  EFF8  F019         	goto	u2820
  7803   0033EC                     u2821:
  7804   0033EC  EF1A  F01A         	goto	l3211
  7805   0033F0                     u2820:
  7806   0033F0                     
  7807                           ;dc_motor.c: 108:         *(m->posDutyHighByte)=posDuty;
  7808   0033F0  EE20 F005          	lfsr	2,5
  7809   0033F4  5012               	movf	setMotorPWM@m^0,w,c
  7810   0033F6  26D9               	addwf	fsr2l,f,c
  7811   0033F8  5013               	movf	(setMotorPWM@m+1)^0,w,c
  7812   0033FA  22DA               	addwfc	fsr2h,f,c
  7813   0033FC  CFDE F014          	movff	postinc2,??_setMotorPWM
  7814   003400  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  7815   003404  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  7816   003408  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7817   00340C  C016  FFDF         	movff	setMotorPWM@posDuty,indf2
  7818                           
  7819                           ;dc_motor.c: 109:         *(m->negDutyHighByte)=negDuty;
  7820   003410  EE20 F007          	lfsr	2,7
  7821   003414  5012               	movf	setMotorPWM@m^0,w,c
  7822   003416  26D9               	addwf	fsr2l,f,c
  7823   003418  5013               	movf	(setMotorPWM@m+1)^0,w,c
  7824   00341A  22DA               	addwfc	fsr2h,f,c
  7825   00341C  CFDE F014          	movff	postinc2,??_setMotorPWM
  7826   003420  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  7827   003424  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  7828   003428  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7829   00342C  C017  FFDF         	movff	setMotorPWM@negDuty,indf2
  7830                           
  7831                           ;dc_motor.c: 110:     } else {
  7832   003430  EF3A  F01A         	goto	l204
  7833   003434                     l3211:
  7834                           
  7835                           ;dc_motor.c: 111:         *(m->posDutyHighByte)=negDuty;
  7836   003434  EE20 F005          	lfsr	2,5
  7837   003438  5012               	movf	setMotorPWM@m^0,w,c
  7838   00343A  26D9               	addwf	fsr2l,f,c
  7839   00343C  5013               	movf	(setMotorPWM@m+1)^0,w,c
  7840   00343E  22DA               	addwfc	fsr2h,f,c
  7841   003440  CFDE F014          	movff	postinc2,??_setMotorPWM
  7842   003444  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  7843   003448  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  7844   00344C  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7845   003450  C017  FFDF         	movff	setMotorPWM@negDuty,indf2
  7846                           
  7847                           ;dc_motor.c: 112:         *(m->negDutyHighByte)=posDuty;
  7848   003454  EE20 F007          	lfsr	2,7
  7849   003458  5012               	movf	setMotorPWM@m^0,w,c
  7850   00345A  26D9               	addwf	fsr2l,f,c
  7851   00345C  5013               	movf	(setMotorPWM@m+1)^0,w,c
  7852   00345E  22DA               	addwfc	fsr2h,f,c
  7853   003460  CFDE F014          	movff	postinc2,??_setMotorPWM
  7854   003464  CFDD F015          	movff	postdec2,??_setMotorPWM+1
  7855   003468  C014  FFD9         	movff	??_setMotorPWM,fsr2l
  7856   00346C  C015  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7857   003470  C016  FFDF         	movff	setMotorPWM@posDuty,indf2
  7858   003474                     l204:
  7859   003474  0012               	return		;funcret
  7860   003476                     __end_of_setMotorPWM:
  7861                           	callstack 0
  7862                           
  7863 ;; *************** function ___wmul *****************
  7864 ;; Defined at:
  7865 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  7866 ;; Parameters:    Size  Location     Type
  7867 ;;  multiplier      2    4[COMRAM] unsigned int 
  7868 ;;  multiplicand    2    6[COMRAM] unsigned int 
  7869 ;; Auto vars:     Size  Location     Type
  7870 ;;  product         2    8[COMRAM] unsigned int 
  7871 ;; Return value:  Size  Location     Type
  7872 ;;                  2    4[COMRAM] unsigned int 
  7873 ;; Registers used:
  7874 ;;		wreg, status,2, status,0, prodl, prodh
  7875 ;; Tracked objects:
  7876 ;;		On entry : 0/0
  7877 ;;		On exit  : 0/0
  7878 ;;		Unchanged: 0/0
  7879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7880 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7881 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7883 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7884 ;;Total ram usage:        6 bytes
  7885 ;; Hardware stack levels used: 1
  7886 ;; Hardware stack levels required when called: 2
  7887 ;; This function calls:
  7888 ;;		Nothing
  7889 ;; This function is called by:
  7890 ;;		_setMotorPWM
  7891 ;; This function uses a non-reentrant model
  7892 ;;
  7893                           
  7894                           	psect	text35
  7895   004BA6                     __ptext35:
  7896                           	callstack 0
  7897   004BA6                     ___wmul:
  7898                           	callstack 25
  7899   004BA6  5005               	movf	___wmul@multiplier^0,w,c
  7900   004BA8  0207               	mulwf	___wmul@multiplicand^0,c
  7901   004BAA  CFF3 F009          	movff	prodl,___wmul@product
  7902   004BAE  CFF4 F00A          	movff	prodh,___wmul@product+1
  7903   004BB2  5005               	movf	___wmul@multiplier^0,w,c
  7904   004BB4  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  7905   004BB6  50F3               	movf	243,w,c
  7906   004BB8  260A               	addwf	(___wmul@product+1)^0,f,c
  7907   004BBA  5006               	movf	(___wmul@multiplier+1)^0,w,c
  7908   004BBC  0207               	mulwf	___wmul@multiplicand^0,c
  7909   004BBE  50F3               	movf	243,w,c
  7910   004BC0  260A               	addwf	(___wmul@product+1)^0,f,c
  7911   004BC2  C009  F005         	movff	___wmul@product,?___wmul
  7912   004BC6  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  7913   004BCA  0012               	return		;funcret
  7914   004BCC                     __end_of___wmul:
  7915                           	callstack 0
  7916                           
  7917 ;; *************** function ___lwdiv *****************
  7918 ;; Defined at:
  7919 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  7920 ;; Parameters:    Size  Location     Type
  7921 ;;  dividend        2   10[COMRAM] unsigned int 
  7922 ;;  divisor         2   12[COMRAM] unsigned int 
  7923 ;; Auto vars:     Size  Location     Type
  7924 ;;  quotient        2   14[COMRAM] unsigned int 
  7925 ;;  counter         1   16[COMRAM] unsigned char 
  7926 ;; Return value:  Size  Location     Type
  7927 ;;                  2   10[COMRAM] unsigned int 
  7928 ;; Registers used:
  7929 ;;		wreg, status,2, status,0
  7930 ;; Tracked objects:
  7931 ;;		On entry : 0/0
  7932 ;;		On exit  : 0/0
  7933 ;;		Unchanged: 0/0
  7934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7935 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7936 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7938 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7939 ;;Total ram usage:        7 bytes
  7940 ;; Hardware stack levels used: 1
  7941 ;; Hardware stack levels required when called: 2
  7942 ;; This function calls:
  7943 ;;		Nothing
  7944 ;; This function is called by:
  7945 ;;		_setMotorPWM
  7946 ;; This function uses a non-reentrant model
  7947 ;;
  7948                           
  7949                           	psect	text36
  7950   004662                     __ptext36:
  7951                           	callstack 0
  7952   004662                     ___lwdiv:
  7953                           	callstack 25
  7954   004662  0E00               	movlw	0
  7955   004664  6E10               	movwf	(___lwdiv@quotient+1)^0,c
  7956   004666  0E00               	movlw	0
  7957   004668  6E0F               	movwf	___lwdiv@quotient^0,c
  7958   00466A  500D               	movf	___lwdiv@divisor^0,w,c
  7959   00466C  100E               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7960   00466E  B4D8               	btfsc	status,2,c
  7961   004670  EF3C  F023         	goto	u2751
  7962   004674  EF3E  F023         	goto	u2750
  7963   004678                     u2751:
  7964   004678  EF66  F023         	goto	l1030
  7965   00467C                     u2750:
  7966   00467C  0E01               	movlw	1
  7967   00467E  6E11               	movwf	___lwdiv@counter^0,c
  7968   004680  EF46  F023         	goto	l3165
  7969   004684                     l3163:
  7970   004684  90D8               	bcf	status,0,c
  7971   004686  360D               	rlcf	___lwdiv@divisor^0,f,c
  7972   004688  360E               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7973   00468A  2A11               	incf	___lwdiv@counter^0,f,c
  7974   00468C                     l3165:
  7975   00468C  AE0E               	btfss	(___lwdiv@divisor+1)^0,7,c
  7976   00468E  EF4B  F023         	goto	u2761
  7977   004692  EF4D  F023         	goto	u2760
  7978   004696                     u2761:
  7979   004696  EF42  F023         	goto	l3163
  7980   00469A                     u2760:
  7981   00469A                     l3167:
  7982   00469A  90D8               	bcf	status,0,c
  7983   00469C  360F               	rlcf	___lwdiv@quotient^0,f,c
  7984   00469E  3610               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7985   0046A0  500D               	movf	___lwdiv@divisor^0,w,c
  7986   0046A2  5C0B               	subwf	___lwdiv@dividend^0,w,c
  7987   0046A4  500E               	movf	(___lwdiv@divisor+1)^0,w,c
  7988   0046A6  580C               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7989   0046A8  A0D8               	btfss	status,0,c
  7990   0046AA  EF59  F023         	goto	u2771
  7991   0046AE  EF5B  F023         	goto	u2770
  7992   0046B2                     u2771:
  7993   0046B2  EF60  F023         	goto	l3175
  7994   0046B6                     u2770:
  7995   0046B6  500D               	movf	___lwdiv@divisor^0,w,c
  7996   0046B8  5E0B               	subwf	___lwdiv@dividend^0,f,c
  7997   0046BA  500E               	movf	(___lwdiv@divisor+1)^0,w,c
  7998   0046BC  5A0C               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7999   0046BE  800F               	bsf	___lwdiv@quotient^0,0,c
  8000   0046C0                     l3175:
  8001   0046C0  90D8               	bcf	status,0,c
  8002   0046C2  320E               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8003   0046C4  320D               	rrcf	___lwdiv@divisor^0,f,c
  8004   0046C6  2E11               	decfsz	___lwdiv@counter^0,f,c
  8005   0046C8  EF4D  F023         	goto	l3167
  8006   0046CC                     l1030:
  8007   0046CC  C00F  F00B         	movff	___lwdiv@quotient,?___lwdiv
  8008   0046D0  C010  F00C         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8009   0046D4  0012               	return		;funcret
  8010   0046D6                     __end_of___lwdiv:
  8011                           	callstack 0
  8012                           
  8013 ;; *************** function ___xxtofl *****************
  8014 ;; Defined at:
  8015 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  8016 ;; Parameters:    Size  Location     Type
  8017 ;;  sign            1    wreg     unsigned char 
  8018 ;;  val             4    4[COMRAM] long 
  8019 ;; Auto vars:     Size  Location     Type
  8020 ;;  sign            1   12[COMRAM] unsigned char 
  8021 ;;  arg             4   14[COMRAM] unsigned long 
  8022 ;;  exp             1   13[COMRAM] unsigned char 
  8023 ;; Return value:  Size  Location     Type
  8024 ;;                  4    4[COMRAM] unsigned char 
  8025 ;; Registers used:
  8026 ;;		wreg, status,2, status,0
  8027 ;; Tracked objects:
  8028 ;;		On entry : 0/0
  8029 ;;		On exit  : 0/0
  8030 ;;		Unchanged: 0/0
  8031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8032 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8033 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8034 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8035 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8036 ;;Total ram usage:       14 bytes
  8037 ;; Hardware stack levels used: 1
  8038 ;; Hardware stack levels required when called: 2
  8039 ;; This function calls:
  8040 ;;		Nothing
  8041 ;; This function is called by:
  8042 ;;		_colorDetect
  8043 ;;		_turnLeft_90
  8044 ;;		_turnRight_90
  8045 ;;		_turn_180
  8046 ;;		_turnRight_135
  8047 ;;		_turnLeft_135
  8048 ;;		_reverseSquareRight
  8049 ;;		_reverseSquareLeft
  8050 ;;		_main
  8051 ;; This function uses a non-reentrant model
  8052 ;;
  8053                           
  8054                           	psect	text37
  8055   002FCE                     __ptext37:
  8056                           	callstack 0
  8057   002FCE                     ___xxtofl:
  8058                           	callstack 27
  8059                           
  8060                           ;incstack = 0
  8061                           ;___xxtofl@sign stored from wreg
  8062   002FCE  6E0D               	movwf	___xxtofl@sign^0,c
  8063   002FD0  500D               	movf	___xxtofl@sign^0,w,c
  8064   002FD2  B4D8               	btfsc	status,2,c
  8065   002FD4  EFEE  F017         	goto	u4141
  8066   002FD8  EFF0  F017         	goto	u4140
  8067   002FDC                     u4141:
  8068   002FDC  EF12  F018         	goto	l1194
  8069   002FE0                     u4140:
  8070   002FE0  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  8071   002FE2  EFF7  F017         	goto	u4150
  8072   002FE6  EFF5  F017         	goto	u4151
  8073   002FEA                     u4151:
  8074   002FEA  EF12  F018         	goto	l1194
  8075   002FEE                     u4150:
  8076   002FEE  C005  F009         	movff	___xxtofl@val,??___xxtofl
  8077   002FF2  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  8078   002FF6  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  8079   002FFA  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  8080   002FFE  1E09               	comf	??___xxtofl^0,f,c
  8081   003000  1E0A               	comf	(??___xxtofl+1)^0,f,c
  8082   003002  1E0B               	comf	(??___xxtofl+2)^0,f,c
  8083   003004  1E0C               	comf	(??___xxtofl+3)^0,f,c
  8084   003006  2A09               	incf	??___xxtofl^0,f,c
  8085   003008  0E00               	movlw	0
  8086   00300A  220A               	addwfc	(??___xxtofl+1)^0,f,c
  8087   00300C  220B               	addwfc	(??___xxtofl+2)^0,f,c
  8088   00300E  220C               	addwfc	(??___xxtofl+3)^0,f,c
  8089   003010  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  8090   003014  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  8091   003018  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  8092   00301C  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  8093   003020  EF1A  F018         	goto	l4141
  8094   003024                     l1194:
  8095   003024  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  8096   003028  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8097   00302C  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8098   003030  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8099   003034                     l4141:
  8100   003034  5005               	movf	___xxtofl@val^0,w,c
  8101   003036  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  8102   003038  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  8103   00303A  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  8104   00303C  A4D8               	btfss	status,2,c
  8105   00303E  EF23  F018         	goto	u4161
  8106   003042  EF25  F018         	goto	u4160
  8107   003046                     u4161:
  8108   003046  EF2F  F018         	goto	l4147
  8109   00304A                     u4160:
  8110   00304A  0E00               	movlw	0
  8111   00304C  6E05               	movwf	?___xxtofl^0,c
  8112   00304E  0E00               	movlw	0
  8113   003050  6E06               	movwf	(?___xxtofl+1)^0,c
  8114   003052  0E00               	movlw	0
  8115   003054  6E07               	movwf	(?___xxtofl+2)^0,c
  8116   003056  0E00               	movlw	0
  8117   003058  6E08               	movwf	(?___xxtofl+3)^0,c
  8118   00305A  EFC0  F018         	goto	l1197
  8119   00305E                     l4147:
  8120   00305E  0E96               	movlw	150
  8121   003060  6E0E               	movwf	___xxtofl@exp^0,c
  8122   003062  EF39  F018         	goto	l4151
  8123   003066                     l4149:
  8124   003066  2A0E               	incf	___xxtofl@exp^0,f,c
  8125   003068  90D8               	bcf	status,0,c
  8126   00306A  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  8127   00306C  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  8128   00306E  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  8129   003070  320F               	rrcf	___xxtofl@arg^0,f,c
  8130   003072                     l4151:
  8131   003072  0E00               	movlw	0
  8132   003074  140F               	andwf	___xxtofl@arg^0,w,c
  8133   003076  6E09               	movwf	??___xxtofl^0,c
  8134   003078  0E00               	movlw	0
  8135   00307A  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  8136   00307C  6E0A               	movwf	(??___xxtofl+1)^0,c
  8137   00307E  0E00               	movlw	0
  8138   003080  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  8139   003082  6E0B               	movwf	(??___xxtofl+2)^0,c
  8140   003084  0EFE               	movlw	254
  8141   003086  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  8142   003088  6E0C               	movwf	(??___xxtofl+3)^0,c
  8143   00308A  5009               	movf	??___xxtofl^0,w,c
  8144   00308C  100A               	iorwf	(??___xxtofl+1)^0,w,c
  8145   00308E  100B               	iorwf	(??___xxtofl+2)^0,w,c
  8146   003090  100C               	iorwf	(??___xxtofl+3)^0,w,c
  8147   003092  A4D8               	btfss	status,2,c
  8148   003094  EF4E  F018         	goto	u4171
  8149   003098  EF50  F018         	goto	u4170
  8150   00309C                     u4171:
  8151   00309C  EF33  F018         	goto	l4149
  8152   0030A0                     u4170:
  8153   0030A0  EF5E  F018         	goto	l1201
  8154   0030A4                     l4153:
  8155   0030A4  2A0E               	incf	___xxtofl@exp^0,f,c
  8156   0030A6  0E01               	movlw	1
  8157   0030A8  260F               	addwf	___xxtofl@arg^0,f,c
  8158   0030AA  0E00               	movlw	0
  8159   0030AC  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  8160   0030AE  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  8161   0030B0  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  8162   0030B2  90D8               	bcf	status,0,c
  8163   0030B4  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  8164   0030B6  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  8165   0030B8  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  8166   0030BA  320F               	rrcf	___xxtofl@arg^0,f,c
  8167   0030BC                     l1201:
  8168   0030BC  0E00               	movlw	0
  8169   0030BE  140F               	andwf	___xxtofl@arg^0,w,c
  8170   0030C0  6E09               	movwf	??___xxtofl^0,c
  8171   0030C2  0E00               	movlw	0
  8172   0030C4  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  8173   0030C6  6E0A               	movwf	(??___xxtofl+1)^0,c
  8174   0030C8  0E00               	movlw	0
  8175   0030CA  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  8176   0030CC  6E0B               	movwf	(??___xxtofl+2)^0,c
  8177   0030CE  0EFF               	movlw	255
  8178   0030D0  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  8179   0030D2  6E0C               	movwf	(??___xxtofl+3)^0,c
  8180   0030D4  5009               	movf	??___xxtofl^0,w,c
  8181   0030D6  100A               	iorwf	(??___xxtofl+1)^0,w,c
  8182   0030D8  100B               	iorwf	(??___xxtofl+2)^0,w,c
  8183   0030DA  100C               	iorwf	(??___xxtofl+3)^0,w,c
  8184   0030DC  A4D8               	btfss	status,2,c
  8185   0030DE  EF73  F018         	goto	u4181
  8186   0030E2  EF75  F018         	goto	u4180
  8187   0030E6                     u4181:
  8188   0030E6  EF52  F018         	goto	l4153
  8189   0030EA                     u4180:
  8190   0030EA  EF7D  F018         	goto	l4161
  8191   0030EE                     l4159:
  8192   0030EE  060E               	decf	___xxtofl@exp^0,f,c
  8193   0030F0  90D8               	bcf	status,0,c
  8194   0030F2  360F               	rlcf	___xxtofl@arg^0,f,c
  8195   0030F4  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  8196   0030F6  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  8197   0030F8  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  8198   0030FA                     l4161:
  8199   0030FA  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  8200   0030FC  EF82  F018         	goto	u4191
  8201   003100  EF84  F018         	goto	u4190
  8202   003104                     u4191:
  8203   003104  EF8C  F018         	goto	l1208
  8204   003108                     u4190:
  8205   003108  0E02               	movlw	2
  8206   00310A  600E               	cpfslt	___xxtofl@exp^0,c
  8207   00310C  EF8A  F018         	goto	u4201
  8208   003110  EF8C  F018         	goto	u4200
  8209   003114                     u4201:
  8210   003114  EF77  F018         	goto	l4159
  8211   003118                     u4200:
  8212   003118                     l1208:
  8213   003118  B00E               	btfsc	___xxtofl@exp^0,0,c
  8214   00311A  EF91  F018         	goto	u4211
  8215   00311E  EF93  F018         	goto	u4210
  8216   003122                     u4211:
  8217   003122  EF94  F018         	goto	l4167
  8218   003126                     u4210:
  8219   003126  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  8220   003128                     l4167:
  8221   003128  90D8               	bcf	status,0,c
  8222   00312A  320E               	rrcf	___xxtofl@exp^0,f,c
  8223   00312C  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  8224   003130  6A0A               	clrf	(??___xxtofl+1)^0,c
  8225   003132  6A0B               	clrf	(??___xxtofl+2)^0,c
  8226   003134  6A0C               	clrf	(??___xxtofl+3)^0,c
  8227   003136  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  8228   00313A  6A0B               	clrf	(??___xxtofl+2)^0,c
  8229   00313C  6A0A               	clrf	(??___xxtofl+1)^0,c
  8230   00313E  6A09               	clrf	??___xxtofl^0,c
  8231   003140  5009               	movf	??___xxtofl^0,w,c
  8232   003142  120F               	iorwf	___xxtofl@arg^0,f,c
  8233   003144  500A               	movf	(??___xxtofl+1)^0,w,c
  8234   003146  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  8235   003148  500B               	movf	(??___xxtofl+2)^0,w,c
  8236   00314A  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  8237   00314C  500C               	movf	(??___xxtofl+3)^0,w,c
  8238   00314E  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  8239   003150  500D               	movf	___xxtofl@sign^0,w,c
  8240   003152  B4D8               	btfsc	status,2,c
  8241   003154  EFAE  F018         	goto	u4221
  8242   003158  EFB0  F018         	goto	u4220
  8243   00315C                     u4221:
  8244   00315C  EFB8  F018         	goto	l4177
  8245   003160                     u4220:
  8246   003160  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  8247   003162  EFB7  F018         	goto	u4230
  8248   003166  EFB5  F018         	goto	u4231
  8249   00316A                     u4231:
  8250   00316A  EFB8  F018         	goto	l4177
  8251   00316E                     u4230:
  8252   00316E  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  8253   003170                     l4177:
  8254   003170  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  8255   003174  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  8256   003178  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  8257   00317C  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  8258   003180                     l1197:
  8259   003180  0012               	return		;funcret
  8260   003182                     __end_of___xxtofl:
  8261                           	callstack 0
  8262                           
  8263 ;; *************** function ___flsub *****************
  8264 ;; Defined at:
  8265 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;  b               4   20[COMRAM] unsigned char 
  8268 ;;  a               4   24[COMRAM] unsigned char 
  8269 ;; Auto vars:     Size  Location     Type
  8270 ;;		None
  8271 ;; Return value:  Size  Location     Type
  8272 ;;                  4   20[COMRAM] unsigned char 
  8273 ;; Registers used:
  8274 ;;		wreg, status,2, status,0, cstack
  8275 ;; Tracked objects:
  8276 ;;		On entry : 0/0
  8277 ;;		On exit  : 0/0
  8278 ;;		Unchanged: 0/0
  8279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8280 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8283 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8284 ;;Total ram usage:        8 bytes
  8285 ;; Hardware stack levels used: 1
  8286 ;; Hardware stack levels required when called: 3
  8287 ;; This function calls:
  8288 ;;		___fladd
  8289 ;; This function is called by:
  8290 ;;		_colorDetect
  8291 ;; This function uses a non-reentrant model
  8292 ;;
  8293                           
  8294                           	psect	text38
  8295   004964                     __ptext38:
  8296                           	callstack 0
  8297   004964                     ___flsub:
  8298                           	callstack 26
  8299   004964  0E00               	movlw	0
  8300   004966  1A19               	xorwf	___flsub@a^0,f,c
  8301   004968  0E00               	movlw	0
  8302   00496A  1A1A               	xorwf	(___flsub@a+1)^0,f,c
  8303   00496C  0E00               	movlw	0
  8304   00496E  1A1B               	xorwf	(___flsub@a+2)^0,f,c
  8305   004970  0E80               	movlw	128
  8306   004972  1A1C               	xorwf	(___flsub@a+3)^0,f,c
  8307   004974  C015  F005         	movff	___flsub@b,___fladd@b
  8308   004978  C016  F006         	movff	___flsub@b+1,___fladd@b+1
  8309   00497C  C017  F007         	movff	___flsub@b+2,___fladd@b+2
  8310   004980  C018  F008         	movff	___flsub@b+3,___fladd@b+3
  8311   004984  C019  F009         	movff	___flsub@a,___fladd@a
  8312   004988  C01A  F00A         	movff	___flsub@a+1,___fladd@a+1
  8313   00498C  C01B  F00B         	movff	___flsub@a+2,___fladd@a+2
  8314   004990  C01C  F00C         	movff	___flsub@a+3,___fladd@a+3
  8315   004994  ECF6  F00C         	call	___fladd	;wreg free
  8316   004998  C005  F015         	movff	?___fladd,?___flsub
  8317   00499C  C006  F016         	movff	?___fladd+1,?___flsub+1
  8318   0049A0  C007  F017         	movff	?___fladd+2,?___flsub+2
  8319   0049A4  C008  F018         	movff	?___fladd+3,?___flsub+3
  8320   0049A8  0012               	return		;funcret
  8321   0049AA                     __end_of___flsub:
  8322                           	callstack 0
  8323                           
  8324 ;; *************** function ___fladd *****************
  8325 ;; Defined at:
  8326 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  8327 ;; Parameters:    Size  Location     Type
  8328 ;;  b               4    4[COMRAM] unsigned char 
  8329 ;;  a               4    8[COMRAM] unsigned char 
  8330 ;; Auto vars:     Size  Location     Type
  8331 ;;  grs             1   19[COMRAM] unsigned char 
  8332 ;;  bexp            1   18[COMRAM] unsigned char 
  8333 ;;  aexp            1   17[COMRAM] unsigned char 
  8334 ;;  signs           1   16[COMRAM] unsigned char 
  8335 ;; Return value:  Size  Location     Type
  8336 ;;                  4    4[COMRAM] unsigned char 
  8337 ;; Registers used:
  8338 ;;		wreg, status,2, status,0
  8339 ;; Tracked objects:
  8340 ;;		On entry : 0/0
  8341 ;;		On exit  : 0/0
  8342 ;;		Unchanged: 0/0
  8343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8344 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8345 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8346 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8347 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8348 ;;Total ram usage:       16 bytes
  8349 ;; Hardware stack levels used: 1
  8350 ;; Hardware stack levels required when called: 2
  8351 ;; This function calls:
  8352 ;;		Nothing
  8353 ;; This function is called by:
  8354 ;;		___flsub
  8355 ;; This function uses a non-reentrant model
  8356 ;;
  8357                           
  8358                           	psect	text39
  8359   0019EC                     __ptext39:
  8360                           	callstack 0
  8361   0019EC                     ___fladd:
  8362                           	callstack 26
  8363   0019EC  5008               	movf	(___fladd@b+3)^0,w,c
  8364   0019EE  0B80               	andlw	128
  8365   0019F0  6E11               	movwf	___fladd@signs^0,c
  8366   0019F2  5008               	movf	(___fladd@b+3)^0,w,c
  8367   0019F4  2408               	addwf	(___fladd@b+3)^0,w,c
  8368   0019F6  6E13               	movwf	___fladd@bexp^0,c
  8369   0019F8  AE07               	btfss	(___fladd@b+2)^0,7,c
  8370   0019FA  EF01  F00D         	goto	u3151
  8371   0019FE  EF03  F00D         	goto	u3150
  8372   001A02                     u3151:
  8373   001A02  EF04  F00D         	goto	l3467
  8374   001A06                     u3150:
  8375   001A06  8013               	bsf	___fladd@bexp^0,0,c
  8376   001A08                     l3467:
  8377   001A08  5013               	movf	___fladd@bexp^0,w,c
  8378   001A0A  B4D8               	btfsc	status,2,c
  8379   001A0C  EF0A  F00D         	goto	u3161
  8380   001A10  EF0C  F00D         	goto	u3160
  8381   001A14                     u3161:
  8382   001A14  EF21  F00D         	goto	l3477
  8383   001A18                     u3160:
  8384   001A18  2813               	incf	___fladd@bexp^0,w,c
  8385   001A1A  A4D8               	btfss	status,2,c
  8386   001A1C  EF12  F00D         	goto	u3171
  8387   001A20  EF14  F00D         	goto	u3170
  8388   001A24                     u3171:
  8389   001A24  EF1C  F00D         	goto	l3473
  8390   001A28                     u3170:
  8391   001A28  0E00               	movlw	0
  8392   001A2A  6E05               	movwf	___fladd@b^0,c
  8393   001A2C  0E00               	movlw	0
  8394   001A2E  6E06               	movwf	(___fladd@b+1)^0,c
  8395   001A30  0E00               	movlw	0
  8396   001A32  6E07               	movwf	(___fladd@b+2)^0,c
  8397   001A34  0E00               	movlw	0
  8398   001A36  6E08               	movwf	(___fladd@b+3)^0,c
  8399   001A38                     l3473:
  8400   001A38  8E07               	bsf	(___fladd@b+2)^0,7,c
  8401   001A3A  0E00               	movlw	0
  8402   001A3C  6E08               	movwf	(___fladd@b+3)^0,c
  8403   001A3E  EF29  F00D         	goto	l3479
  8404   001A42                     l3477:
  8405   001A42  0E00               	movlw	0
  8406   001A44  6E05               	movwf	___fladd@b^0,c
  8407   001A46  0E00               	movlw	0
  8408   001A48  6E06               	movwf	(___fladd@b+1)^0,c
  8409   001A4A  0E00               	movlw	0
  8410   001A4C  6E07               	movwf	(___fladd@b+2)^0,c
  8411   001A4E  0E00               	movlw	0
  8412   001A50  6E08               	movwf	(___fladd@b+3)^0,c
  8413   001A52                     l3479:
  8414   001A52  500C               	movf	(___fladd@a+3)^0,w,c
  8415   001A54  0B80               	andlw	128
  8416   001A56  6E12               	movwf	___fladd@aexp^0,c
  8417   001A58  5011               	movf	___fladd@signs^0,w,c
  8418   001A5A  1812               	xorwf	___fladd@aexp^0,w,c
  8419   001A5C  B4D8               	btfsc	status,2,c
  8420   001A5E  EF33  F00D         	goto	u3181
  8421   001A62  EF35  F00D         	goto	u3180
  8422   001A66                     u3181:
  8423   001A66  EF36  F00D         	goto	l3485
  8424   001A6A                     u3180:
  8425   001A6A  8C11               	bsf	___fladd@signs^0,6,c
  8426   001A6C                     l3485:
  8427   001A6C  500C               	movf	(___fladd@a+3)^0,w,c
  8428   001A6E  240C               	addwf	(___fladd@a+3)^0,w,c
  8429   001A70  6E12               	movwf	___fladd@aexp^0,c
  8430   001A72  AE0B               	btfss	(___fladd@a+2)^0,7,c
  8431   001A74  EF3E  F00D         	goto	u3191
  8432   001A78  EF40  F00D         	goto	u3190
  8433   001A7C                     u3191:
  8434   001A7C  EF41  F00D         	goto	l3491
  8435   001A80                     u3190:
  8436   001A80  8012               	bsf	___fladd@aexp^0,0,c
  8437   001A82                     l3491:
  8438   001A82  5012               	movf	___fladd@aexp^0,w,c
  8439   001A84  B4D8               	btfsc	status,2,c
  8440   001A86  EF47  F00D         	goto	u3201
  8441   001A8A  EF49  F00D         	goto	u3200
  8442   001A8E                     u3201:
  8443   001A8E  EF5E  F00D         	goto	l3501
  8444   001A92                     u3200:
  8445   001A92  2812               	incf	___fladd@aexp^0,w,c
  8446   001A94  A4D8               	btfss	status,2,c
  8447   001A96  EF4F  F00D         	goto	u3211
  8448   001A9A  EF51  F00D         	goto	u3210
  8449   001A9E                     u3211:
  8450   001A9E  EF59  F00D         	goto	l3497
  8451   001AA2                     u3210:
  8452   001AA2  0E00               	movlw	0
  8453   001AA4  6E09               	movwf	___fladd@a^0,c
  8454   001AA6  0E00               	movlw	0
  8455   001AA8  6E0A               	movwf	(___fladd@a+1)^0,c
  8456   001AAA  0E00               	movlw	0
  8457   001AAC  6E0B               	movwf	(___fladd@a+2)^0,c
  8458   001AAE  0E00               	movlw	0
  8459   001AB0  6E0C               	movwf	(___fladd@a+3)^0,c
  8460   001AB2                     l3497:
  8461   001AB2  8E0B               	bsf	(___fladd@a+2)^0,7,c
  8462   001AB4  0E00               	movlw	0
  8463   001AB6  6E0C               	movwf	(___fladd@a+3)^0,c
  8464   001AB8  EF66  F00D         	goto	l3503
  8465   001ABC                     l3501:
  8466   001ABC  0E00               	movlw	0
  8467   001ABE  6E09               	movwf	___fladd@a^0,c
  8468   001AC0  0E00               	movlw	0
  8469   001AC2  6E0A               	movwf	(___fladd@a+1)^0,c
  8470   001AC4  0E00               	movlw	0
  8471   001AC6  6E0B               	movwf	(___fladd@a+2)^0,c
  8472   001AC8  0E00               	movlw	0
  8473   001ACA  6E0C               	movwf	(___fladd@a+3)^0,c
  8474   001ACC                     l3503:
  8475   001ACC  5013               	movf	___fladd@bexp^0,w,c
  8476   001ACE  5C12               	subwf	___fladd@aexp^0,w,c
  8477   001AD0  B0D8               	btfsc	status,0,c
  8478   001AD2  EF6D  F00D         	goto	u3221
  8479   001AD6  EF6F  F00D         	goto	u3220
  8480   001ADA                     u3221:
  8481   001ADA  EF96  F00D         	goto	l3539
  8482   001ADE                     u3220:
  8483   001ADE  AC11               	btfss	___fladd@signs^0,6,c
  8484   001AE0  EF74  F00D         	goto	u3231
  8485   001AE4  EF76  F00D         	goto	u3230
  8486   001AE8                     u3231:
  8487   001AE8  EF78  F00D         	goto	l3509
  8488   001AEC                     u3230:
  8489   001AEC  0E80               	movlw	128
  8490   001AEE  1A11               	xorwf	___fladd@signs^0,f,c
  8491   001AF0                     l3509:
  8492   001AF0  C013  F014         	movff	___fladd@bexp,___fladd@grs
  8493   001AF4  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  8494   001AF8  C014  F012         	movff	___fladd@grs,___fladd@aexp
  8495   001AFC  C005  F014         	movff	___fladd@b,___fladd@grs
  8496   001B00  C009  F005         	movff	___fladd@a,___fladd@b
  8497   001B04  C014  F009         	movff	___fladd@grs,___fladd@a
  8498   001B08  C006  F014         	movff	___fladd@b+1,___fladd@grs
  8499   001B0C  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  8500   001B10  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  8501   001B14  C007  F014         	movff	___fladd@b+2,___fladd@grs
  8502   001B18  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  8503   001B1C  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  8504   001B20  C008  F014         	movff	___fladd@b+3,___fladd@grs
  8505   001B24  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  8506   001B28  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  8507   001B2C                     l3539:
  8508   001B2C  0E00               	movlw	0
  8509   001B2E  6E14               	movwf	___fladd@grs^0,c
  8510   001B30  5013               	movf	___fladd@bexp^0,w,c
  8511   001B32  C012  F00D         	movff	___fladd@aexp,??___fladd
  8512   001B36  6A0E               	clrf	(??___fladd+1)^0,c
  8513   001B38  5E0D               	subwf	??___fladd^0,f,c
  8514   001B3A  0E00               	movlw	0
  8515   001B3C  5A0E               	subwfb	(??___fladd+1)^0,f,c
  8516   001B3E  BE0E               	btfsc	(??___fladd+1)^0,7,c
  8517   001B40  EFAB  F00D         	goto	u3241
  8518   001B44  500E               	movf	(??___fladd+1)^0,w,c
  8519   001B46  E109               	bnz	u3240
  8520   001B48  0E1A               	movlw	26
  8521   001B4A  5C0D               	subwf	??___fladd^0,w,c
  8522   001B4C  A0D8               	btfss	status,0,c
  8523   001B4E  EFAB  F00D         	goto	u3241
  8524   001B52  EFAD  F00D         	goto	u3240
  8525   001B56                     u3241:
  8526   001B56  EFE4  F00D         	goto	l1068
  8527   001B5A                     u3240:
  8528   001B5A  5005               	movf	___fladd@b^0,w,c
  8529   001B5C  1006               	iorwf	(___fladd@b+1)^0,w,c
  8530   001B5E  1007               	iorwf	(___fladd@b+2)^0,w,c
  8531   001B60  1008               	iorwf	(___fladd@b+3)^0,w,c
  8532   001B62  A4D8               	btfss	status,2,c
  8533   001B64  EFB6  F00D         	goto	u3251
  8534   001B68  EFB9  F00D         	goto	u3250
  8535   001B6C                     u3251:
  8536   001B6C  0E01               	movlw	1
  8537   001B6E  EFBA  F00D         	goto	u3260
  8538   001B72                     u3250:
  8539   001B72  0E00               	movlw	0
  8540   001B74                     u3260:
  8541   001B74  6E14               	movwf	___fladd@grs^0,c
  8542   001B76  0E00               	movlw	0
  8543   001B78  6E05               	movwf	___fladd@b^0,c
  8544   001B7A  0E00               	movlw	0
  8545   001B7C  6E06               	movwf	(___fladd@b+1)^0,c
  8546   001B7E  0E00               	movlw	0
  8547   001B80  6E07               	movwf	(___fladd@b+2)^0,c
  8548   001B82  0E00               	movlw	0
  8549   001B84  6E08               	movwf	(___fladd@b+3)^0,c
  8550   001B86  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  8551   001B8A  EFED  F00D         	goto	l1067
  8552   001B8E                     l1069:
  8553   001B8E  A014               	btfss	___fladd@grs^0,0,c
  8554   001B90  EFCC  F00D         	goto	u3271
  8555   001B94  EFCE  F00D         	goto	u3270
  8556   001B98                     u3271:
  8557   001B98  EFD4  F00D         	goto	l3551
  8558   001B9C                     u3270:
  8559   001B9C  90D8               	bcf	status,0,c
  8560   001B9E  3014               	rrcf	___fladd@grs^0,w,c
  8561   001BA0  0901               	iorlw	1
  8562   001BA2  6E14               	movwf	___fladd@grs^0,c
  8563   001BA4  EFD6  F00D         	goto	l3553
  8564   001BA8                     l3551:
  8565   001BA8  90D8               	bcf	status,0,c
  8566   001BAA  3214               	rrcf	___fladd@grs^0,f,c
  8567   001BAC                     l3553:
  8568   001BAC  A005               	btfss	___fladd@b^0,0,c
  8569   001BAE  EFDB  F00D         	goto	u3281
  8570   001BB2  EFDD  F00D         	goto	u3280
  8571   001BB6                     u3281:
  8572   001BB6  EFDE  F00D         	goto	l3557
  8573   001BBA                     u3280:
  8574   001BBA  8E14               	bsf	___fladd@grs^0,7,c
  8575   001BBC                     l3557:
  8576   001BBC  3408               	rlcf	(___fladd@b+3)^0,w,c
  8577   001BBE  3208               	rrcf	(___fladd@b+3)^0,f,c
  8578   001BC0  3207               	rrcf	(___fladd@b+2)^0,f,c
  8579   001BC2  3206               	rrcf	(___fladd@b+1)^0,f,c
  8580   001BC4  3205               	rrcf	___fladd@b^0,f,c
  8581   001BC6  2A13               	incf	___fladd@bexp^0,f,c
  8582   001BC8                     l1068:
  8583   001BC8  5012               	movf	___fladd@aexp^0,w,c
  8584   001BCA  5C13               	subwf	___fladd@bexp^0,w,c
  8585   001BCC  A0D8               	btfss	status,0,c
  8586   001BCE  EFEB  F00D         	goto	u3291
  8587   001BD2  EFED  F00D         	goto	u3290
  8588   001BD6                     u3291:
  8589   001BD6  EFC7  F00D         	goto	l1069
  8590   001BDA                     u3290:
  8591   001BDA                     l1067:
  8592   001BDA  BC11               	btfsc	___fladd@signs^0,6,c
  8593   001BDC  EFF2  F00D         	goto	u3301
  8594   001BE0  EFF4  F00D         	goto	u3300
  8595   001BE4                     u3301:
  8596   001BE4  EF34  F00E         	goto	l3585
  8597   001BE8                     u3300:
  8598   001BE8  5013               	movf	___fladd@bexp^0,w,c
  8599   001BEA  A4D8               	btfss	status,2,c
  8600   001BEC  EFFA  F00D         	goto	u3311
  8601   001BF0  EFFC  F00D         	goto	u3310
  8602   001BF4                     u3311:
  8603   001BF4  EF06  F00E         	goto	l3567
  8604   001BF8                     u3310:
  8605   001BF8  0E00               	movlw	0
  8606   001BFA  6E05               	movwf	?___fladd^0,c
  8607   001BFC  0E00               	movlw	0
  8608   001BFE  6E06               	movwf	(?___fladd+1)^0,c
  8609   001C00  0E00               	movlw	0
  8610   001C02  6E07               	movwf	(?___fladd+2)^0,c
  8611   001C04  0E00               	movlw	0
  8612   001C06  6E08               	movwf	(?___fladd+3)^0,c
  8613   001C08  EF55  F00F         	goto	l1076
  8614   001C0C                     l3567:
  8615   001C0C  5009               	movf	___fladd@a^0,w,c
  8616   001C0E  2605               	addwf	___fladd@b^0,f,c
  8617   001C10  500A               	movf	(___fladd@a+1)^0,w,c
  8618   001C12  2206               	addwfc	(___fladd@b+1)^0,f,c
  8619   001C14  500B               	movf	(___fladd@a+2)^0,w,c
  8620   001C16  2207               	addwfc	(___fladd@b+2)^0,f,c
  8621   001C18  500C               	movf	(___fladd@a+3)^0,w,c
  8622   001C1A  2208               	addwfc	(___fladd@b+3)^0,f,c
  8623   001C1C  A008               	btfss	(___fladd@b+3)^0,0,c
  8624   001C1E  EF13  F00E         	goto	u3321
  8625   001C22  EF15  F00E         	goto	u3320
  8626   001C26                     u3321:
  8627   001C26  EFC1  F00E         	goto	l3621
  8628   001C2A                     u3320:
  8629   001C2A  A014               	btfss	___fladd@grs^0,0,c
  8630   001C2C  EF1A  F00E         	goto	u3331
  8631   001C30  EF1C  F00E         	goto	u3330
  8632   001C34                     u3331:
  8633   001C34  EF22  F00E         	goto	l3575
  8634   001C38                     u3330:
  8635   001C38  90D8               	bcf	status,0,c
  8636   001C3A  3014               	rrcf	___fladd@grs^0,w,c
  8637   001C3C  0901               	iorlw	1
  8638   001C3E  6E14               	movwf	___fladd@grs^0,c
  8639   001C40  EF24  F00E         	goto	l3577
  8640   001C44                     l3575:
  8641   001C44  90D8               	bcf	status,0,c
  8642   001C46  3214               	rrcf	___fladd@grs^0,f,c
  8643   001C48                     l3577:
  8644   001C48  A005               	btfss	___fladd@b^0,0,c
  8645   001C4A  EF29  F00E         	goto	u3341
  8646   001C4E  EF2B  F00E         	goto	u3340
  8647   001C52                     u3341:
  8648   001C52  EF2C  F00E         	goto	l3581
  8649   001C56                     u3340:
  8650   001C56  8E14               	bsf	___fladd@grs^0,7,c
  8651   001C58                     l3581:
  8652   001C58  3408               	rlcf	(___fladd@b+3)^0,w,c
  8653   001C5A  3208               	rrcf	(___fladd@b+3)^0,f,c
  8654   001C5C  3207               	rrcf	(___fladd@b+2)^0,f,c
  8655   001C5E  3206               	rrcf	(___fladd@b+1)^0,f,c
  8656   001C60  3205               	rrcf	___fladd@b^0,f,c
  8657   001C62  2A13               	incf	___fladd@bexp^0,f,c
  8658   001C64  EFC1  F00E         	goto	l3621
  8659   001C68                     l3585:
  8660   001C68  5009               	movf	___fladd@a^0,w,c
  8661   001C6A  5C05               	subwf	___fladd@b^0,w,c
  8662   001C6C  500A               	movf	(___fladd@a+1)^0,w,c
  8663   001C6E  5806               	subwfb	(___fladd@b+1)^0,w,c
  8664   001C70  500B               	movf	(___fladd@a+2)^0,w,c
  8665   001C72  5807               	subwfb	(___fladd@b+2)^0,w,c
  8666   001C74  5008               	movf	(___fladd@b+3)^0,w,c
  8667   001C76  0A80               	xorlw	128
  8668   001C78  6E0D               	movwf	??___fladd^0,c
  8669   001C7A  500C               	movf	(___fladd@a+3)^0,w,c
  8670   001C7C  0A80               	xorlw	128
  8671   001C7E  580D               	subwfb	??___fladd^0,w,c
  8672   001C80  B0D8               	btfsc	status,0,c
  8673   001C82  EF45  F00E         	goto	u3351
  8674   001C86  EF47  F00E         	goto	u3350
  8675   001C8A                     u3351:
  8676   001C8A  EF72  F00E         	goto	l3595
  8677   001C8E                     u3350:
  8678   001C8E  5005               	movf	___fladd@b^0,w,c
  8679   001C90  5C09               	subwf	___fladd@a^0,w,c
  8680   001C92  6E0D               	movwf	??___fladd^0,c
  8681   001C94  5006               	movf	(___fladd@b+1)^0,w,c
  8682   001C96  580A               	subwfb	(___fladd@a+1)^0,w,c
  8683   001C98  6E0E               	movwf	(??___fladd+1)^0,c
  8684   001C9A  5007               	movf	(___fladd@b+2)^0,w,c
  8685   001C9C  580B               	subwfb	(___fladd@a+2)^0,w,c
  8686   001C9E  6E0F               	movwf	(??___fladd+2)^0,c
  8687   001CA0  5008               	movf	(___fladd@b+3)^0,w,c
  8688   001CA2  580C               	subwfb	(___fladd@a+3)^0,w,c
  8689   001CA4  6E10               	movwf	(??___fladd+3)^0,c
  8690   001CA6  0EFF               	movlw	255
  8691   001CA8  240D               	addwf	??___fladd^0,w,c
  8692   001CAA  6E05               	movwf	___fladd@b^0,c
  8693   001CAC  0EFF               	movlw	255
  8694   001CAE  200E               	addwfc	(??___fladd+1)^0,w,c
  8695   001CB0  6E06               	movwf	(___fladd@b+1)^0,c
  8696   001CB2  0EFF               	movlw	255
  8697   001CB4  200F               	addwfc	(??___fladd+2)^0,w,c
  8698   001CB6  6E07               	movwf	(___fladd@b+2)^0,c
  8699   001CB8  0EFF               	movlw	255
  8700   001CBA  2010               	addwfc	(??___fladd+3)^0,w,c
  8701   001CBC  6E08               	movwf	(___fladd@b+3)^0,c
  8702   001CBE  0E80               	movlw	128
  8703   001CC0  1A11               	xorwf	___fladd@signs^0,f,c
  8704   001CC2  6C14               	negf	___fladd@grs^0,c
  8705   001CC4  5014               	movf	___fladd@grs^0,w,c
  8706   001CC6  A4D8               	btfss	status,2,c
  8707   001CC8  EF68  F00E         	goto	u3361
  8708   001CCC  EF6A  F00E         	goto	u3360
  8709   001CD0                     u3361:
  8710   001CD0  EF7A  F00E         	goto	l1084
  8711   001CD4                     u3360:
  8712   001CD4  0E01               	movlw	1
  8713   001CD6  2605               	addwf	___fladd@b^0,f,c
  8714   001CD8  0E00               	movlw	0
  8715   001CDA  2206               	addwfc	(___fladd@b+1)^0,f,c
  8716   001CDC  2207               	addwfc	(___fladd@b+2)^0,f,c
  8717   001CDE  2208               	addwfc	(___fladd@b+3)^0,f,c
  8718   001CE0  EF7A  F00E         	goto	l1084
  8719   001CE4                     l3595:
  8720   001CE4  5009               	movf	___fladd@a^0,w,c
  8721   001CE6  5E05               	subwf	___fladd@b^0,f,c
  8722   001CE8  500A               	movf	(___fladd@a+1)^0,w,c
  8723   001CEA  5A06               	subwfb	(___fladd@b+1)^0,f,c
  8724   001CEC  500B               	movf	(___fladd@a+2)^0,w,c
  8725   001CEE  5A07               	subwfb	(___fladd@b+2)^0,f,c
  8726   001CF0  500C               	movf	(___fladd@a+3)^0,w,c
  8727   001CF2  5A08               	subwfb	(___fladd@b+3)^0,f,c
  8728   001CF4                     l1084:
  8729   001CF4  5005               	movf	___fladd@b^0,w,c
  8730   001CF6  1006               	iorwf	(___fladd@b+1)^0,w,c
  8731   001CF8  1007               	iorwf	(___fladd@b+2)^0,w,c
  8732   001CFA  1008               	iorwf	(___fladd@b+3)^0,w,c
  8733   001CFC  A4D8               	btfss	status,2,c
  8734   001CFE  EF83  F00E         	goto	u3371
  8735   001D02  EF85  F00E         	goto	u3370
  8736   001D06                     u3371:
  8737   001D06  EFBA  F00E         	goto	l3619
  8738   001D0A                     u3370:
  8739   001D0A  5014               	movf	___fladd@grs^0,w,c
  8740   001D0C  A4D8               	btfss	status,2,c
  8741   001D0E  EF8B  F00E         	goto	u3381
  8742   001D12  EF8D  F00E         	goto	u3380
  8743   001D16                     u3381:
  8744   001D16  EFBA  F00E         	goto	l3619
  8745   001D1A                     u3380:
  8746   001D1A  0E00               	movlw	0
  8747   001D1C  6E05               	movwf	?___fladd^0,c
  8748   001D1E  0E00               	movlw	0
  8749   001D20  6E06               	movwf	(?___fladd+1)^0,c
  8750   001D22  0E00               	movlw	0
  8751   001D24  6E07               	movwf	(?___fladd+2)^0,c
  8752   001D26  0E00               	movlw	0
  8753   001D28  6E08               	movwf	(?___fladd+3)^0,c
  8754   001D2A  EF55  F00F         	goto	l1076
  8755   001D2E                     l3603:
  8756   001D2E  90D8               	bcf	status,0,c
  8757   001D30  3605               	rlcf	___fladd@b^0,f,c
  8758   001D32  3606               	rlcf	(___fladd@b+1)^0,f,c
  8759   001D34  3607               	rlcf	(___fladd@b+2)^0,f,c
  8760   001D36  3608               	rlcf	(___fladd@b+3)^0,f,c
  8761   001D38  AE14               	btfss	___fladd@grs^0,7,c
  8762   001D3A  EFA1  F00E         	goto	u3391
  8763   001D3E  EFA3  F00E         	goto	u3390
  8764   001D42                     u3391:
  8765   001D42  EFA4  F00E         	goto	l3609
  8766   001D46                     u3390:
  8767   001D46  8005               	bsf	___fladd@b^0,0,c
  8768   001D48                     l3609:
  8769   001D48  A014               	btfss	___fladd@grs^0,0,c
  8770   001D4A  EFA9  F00E         	goto	u3401
  8771   001D4E  EFAB  F00E         	goto	u3400
  8772   001D52                     u3401:
  8773   001D52  EFAF  F00E         	goto	l3613
  8774   001D56                     u3400:
  8775   001D56  80D8               	bsf	status,0,c
  8776   001D58  3614               	rlcf	___fladd@grs^0,f,c
  8777   001D5A  EFB1  F00E         	goto	l3615
  8778   001D5E                     l3613:
  8779   001D5E  90D8               	bcf	status,0,c
  8780   001D60  3614               	rlcf	___fladd@grs^0,f,c
  8781   001D62                     l3615:
  8782   001D62  5013               	movf	___fladd@bexp^0,w,c
  8783   001D64  B4D8               	btfsc	status,2,c
  8784   001D66  EFB7  F00E         	goto	u3411
  8785   001D6A  EFB9  F00E         	goto	u3410
  8786   001D6E                     u3411:
  8787   001D6E  EFBA  F00E         	goto	l3619
  8788   001D72                     u3410:
  8789   001D72  0613               	decf	___fladd@bexp^0,f,c
  8790   001D74                     l3619:
  8791   001D74  AE07               	btfss	(___fladd@b+2)^0,7,c
  8792   001D76  EFBF  F00E         	goto	u3421
  8793   001D7A  EFC1  F00E         	goto	u3420
  8794   001D7E                     u3421:
  8795   001D7E  EF97  F00E         	goto	l3603
  8796   001D82                     u3420:
  8797   001D82                     l3621:
  8798   001D82  0E00               	movlw	0
  8799   001D84  6E12               	movwf	___fladd@aexp^0,c
  8800   001D86  AE14               	btfss	___fladd@grs^0,7,c
  8801   001D88  EFC8  F00E         	goto	u3431
  8802   001D8C  EFCA  F00E         	goto	u3430
  8803   001D90                     u3431:
  8804   001D90  EFE2  F00E         	goto	l1093
  8805   001D94                     u3430:
  8806   001D94  C014  F00D         	movff	___fladd@grs,??___fladd
  8807   001D98  0E7F               	movlw	127
  8808   001D9A  160D               	andwf	??___fladd^0,f,c
  8809   001D9C  B4D8               	btfsc	status,2,c
  8810   001D9E  EFD3  F00E         	goto	u3441
  8811   001DA2  EFD5  F00E         	goto	u3440
  8812   001DA6                     u3441:
  8813   001DA6  EFD9  F00E         	goto	l1094
  8814   001DAA                     u3440:
  8815   001DAA                     l3627:
  8816   001DAA  0E01               	movlw	1
  8817   001DAC  6E12               	movwf	___fladd@aexp^0,c
  8818   001DAE  EFE2  F00E         	goto	l1093
  8819   001DB2                     l1094:
  8820   001DB2  A005               	btfss	___fladd@b^0,0,c
  8821   001DB4  EFDE  F00E         	goto	u3451
  8822   001DB8  EFE0  F00E         	goto	u3450
  8823   001DBC                     u3451:
  8824   001DBC  EFE2  F00E         	goto	l1093
  8825   001DC0                     u3450:
  8826   001DC0  EFD5  F00E         	goto	l3627
  8827   001DC4                     l1093:
  8828   001DC4  5012               	movf	___fladd@aexp^0,w,c
  8829   001DC6  B4D8               	btfsc	status,2,c
  8830   001DC8  EFE8  F00E         	goto	u3461
  8831   001DCC  EFEA  F00E         	goto	u3460
  8832   001DD0                     u3461:
  8833   001DD0  EF15  F00F         	goto	l3639
  8834   001DD4                     u3460:
  8835   001DD4  0E01               	movlw	1
  8836   001DD6  2605               	addwf	___fladd@b^0,f,c
  8837   001DD8  0E00               	movlw	0
  8838   001DDA  2206               	addwfc	(___fladd@b+1)^0,f,c
  8839   001DDC  2207               	addwfc	(___fladd@b+2)^0,f,c
  8840   001DDE  2208               	addwfc	(___fladd@b+3)^0,f,c
  8841   001DE0  A008               	btfss	(___fladd@b+3)^0,0,c
  8842   001DE2  EFF5  F00E         	goto	u3471
  8843   001DE6  EFF7  F00E         	goto	u3470
  8844   001DEA                     u3471:
  8845   001DEA  EF15  F00F         	goto	l3639
  8846   001DEE                     u3470:
  8847   001DEE  C005  F00D         	movff	___fladd@b,??___fladd
  8848   001DF2  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  8849   001DF6  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  8850   001DFA  C008  F010         	movff	___fladd@b+3,??___fladd+3
  8851   001DFE  3410               	rlcf	(??___fladd+3)^0,w,c
  8852   001E00  3210               	rrcf	(??___fladd+3)^0,f,c
  8853   001E02  320F               	rrcf	(??___fladd+2)^0,f,c
  8854   001E04  320E               	rrcf	(??___fladd+1)^0,f,c
  8855   001E06  320D               	rrcf	??___fladd^0,f,c
  8856   001E08  C00D  F005         	movff	??___fladd,___fladd@b
  8857   001E0C  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  8858   001E10  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  8859   001E14  C010  F008         	movff	??___fladd+3,___fladd@b+3
  8860   001E18  2813               	incf	___fladd@bexp^0,w,c
  8861   001E1A  B4D8               	btfsc	status,2,c
  8862   001E1C  EF12  F00F         	goto	u3481
  8863   001E20  EF14  F00F         	goto	u3480
  8864   001E24                     u3481:
  8865   001E24  EF15  F00F         	goto	l3639
  8866   001E28                     u3480:
  8867   001E28  2A13               	incf	___fladd@bexp^0,f,c
  8868   001E2A                     l3639:
  8869   001E2A  2813               	incf	___fladd@bexp^0,w,c
  8870   001E2C  B4D8               	btfsc	status,2,c
  8871   001E2E  EF1B  F00F         	goto	u3491
  8872   001E32  EF1D  F00F         	goto	u3490
  8873   001E36                     u3491:
  8874   001E36  EF25  F00F         	goto	l3643
  8875   001E3A                     u3490:
  8876   001E3A  5013               	movf	___fladd@bexp^0,w,c
  8877   001E3C  A4D8               	btfss	status,2,c
  8878   001E3E  EF23  F00F         	goto	u3501
  8879   001E42  EF25  F00F         	goto	u3500
  8880   001E46                     u3501:
  8881   001E46  EF37  F00F         	goto	l3647
  8882   001E4A                     u3500:
  8883   001E4A                     l3643:
  8884   001E4A  0E00               	movlw	0
  8885   001E4C  6E05               	movwf	___fladd@b^0,c
  8886   001E4E  0E00               	movlw	0
  8887   001E50  6E06               	movwf	(___fladd@b+1)^0,c
  8888   001E52  0E00               	movlw	0
  8889   001E54  6E07               	movwf	(___fladd@b+2)^0,c
  8890   001E56  0E00               	movlw	0
  8891   001E58  6E08               	movwf	(___fladd@b+3)^0,c
  8892   001E5A  5013               	movf	___fladd@bexp^0,w,c
  8893   001E5C  A4D8               	btfss	status,2,c
  8894   001E5E  EF33  F00F         	goto	u3511
  8895   001E62  EF35  F00F         	goto	u3510
  8896   001E66                     u3511:
  8897   001E66  EF37  F00F         	goto	l3647
  8898   001E6A                     u3510:
  8899   001E6A  0E00               	movlw	0
  8900   001E6C  6E11               	movwf	___fladd@signs^0,c
  8901   001E6E                     l3647:
  8902   001E6E  A013               	btfss	___fladd@bexp^0,0,c
  8903   001E70  EF3C  F00F         	goto	u3521
  8904   001E74  EF3E  F00F         	goto	u3520
  8905   001E78                     u3521:
  8906   001E78  EF41  F00F         	goto	l3651
  8907   001E7C                     u3520:
  8908   001E7C  8E07               	bsf	(___fladd@b+2)^0,7,c
  8909   001E7E  EF42  F00F         	goto	l3653
  8910   001E82                     l3651:
  8911   001E82  9E07               	bcf	(___fladd@b+2)^0,7,c
  8912   001E84                     l3653:
  8913   001E84  90D8               	bcf	status,0,c
  8914   001E86  3013               	rrcf	___fladd@bexp^0,w,c
  8915   001E88  6E08               	movwf	(___fladd@b+3)^0,c
  8916   001E8A  AE11               	btfss	___fladd@signs^0,7,c
  8917   001E8C  EF4A  F00F         	goto	u3531
  8918   001E90  EF4C  F00F         	goto	u3530
  8919   001E94                     u3531:
  8920   001E94  EF4D  F00F         	goto	l3659
  8921   001E98                     u3530:
  8922   001E98  8E08               	bsf	(___fladd@b+3)^0,7,c
  8923   001E9A                     l3659:
  8924   001E9A  C005  F005         	movff	___fladd@b,?___fladd
  8925   001E9E  C006  F006         	movff	___fladd@b+1,?___fladd+1
  8926   001EA2  C007  F007         	movff	___fladd@b+2,?___fladd+2
  8927   001EA6  C008  F008         	movff	___fladd@b+3,?___fladd+3
  8928   001EAA                     l1076:
  8929   001EAA  0012               	return		;funcret
  8930   001EAC                     __end_of___fladd:
  8931                           	callstack 0
  8932                           
  8933 ;; *************** function ___flmul *****************
  8934 ;; Defined at:
  8935 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  8936 ;; Parameters:    Size  Location     Type
  8937 ;;  b               4   28[COMRAM] unsigned char 
  8938 ;;  a               4   32[COMRAM] unsigned char 
  8939 ;; Auto vars:     Size  Location     Type
  8940 ;;  prod            4   47[COMRAM] struct .
  8941 ;;  grs             4   41[COMRAM] unsigned long 
  8942 ;;  temp            2   51[COMRAM] struct .
  8943 ;;  bexp            1   46[COMRAM] unsigned char 
  8944 ;;  aexp            1   45[COMRAM] unsigned char 
  8945 ;;  sign            1   40[COMRAM] unsigned char 
  8946 ;; Return value:  Size  Location     Type
  8947 ;;                  4   28[COMRAM] unsigned char 
  8948 ;; Registers used:
  8949 ;;		wreg, status,2, status,0, prodl, prodh
  8950 ;; Tracked objects:
  8951 ;;		On entry : 0/0
  8952 ;;		On exit  : 0/0
  8953 ;;		Unchanged: 0/0
  8954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8955 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8956 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8957 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8958 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8959 ;;Total ram usage:       25 bytes
  8960 ;; Hardware stack levels used: 1
  8961 ;; Hardware stack levels required when called: 2
  8962 ;; This function calls:
  8963 ;;		Nothing
  8964 ;; This function is called by:
  8965 ;;		_colorDetect
  8966 ;;		_turnLeft_90
  8967 ;;		_turnRight_90
  8968 ;;		_turn_180
  8969 ;;		_turnRight_135
  8970 ;;		_turnLeft_135
  8971 ;;		_reverseSquareRight
  8972 ;;		_reverseSquareLeft
  8973 ;; This function uses a non-reentrant model
  8974 ;;
  8975                           
  8976                           	psect	text40
  8977   00231E                     __ptext40:
  8978                           	callstack 0
  8979   00231E                     ___flmul:
  8980                           	callstack 27
  8981   00231E  5020               	movf	(___flmul@b+3)^0,w,c
  8982   002320  0B80               	andlw	128
  8983   002322  6E29               	movwf	___flmul@sign^0,c
  8984   002324  5020               	movf	(___flmul@b+3)^0,w,c
  8985   002326  2420               	addwf	(___flmul@b+3)^0,w,c
  8986   002328  6E2F               	movwf	___flmul@bexp^0,c
  8987   00232A  AE1F               	btfss	(___flmul@b+2)^0,7,c
  8988   00232C  EF9A  F011         	goto	u3901
  8989   002330  EF9C  F011         	goto	u3900
  8990   002334                     u3901:
  8991   002334  EF9D  F011         	goto	l3983
  8992   002338                     u3900:
  8993   002338  802F               	bsf	___flmul@bexp^0,0,c
  8994   00233A                     l3983:
  8995   00233A  502F               	movf	___flmul@bexp^0,w,c
  8996   00233C  B4D8               	btfsc	status,2,c
  8997   00233E  EFA3  F011         	goto	u3911
  8998   002342  EFA5  F011         	goto	u3910
  8999   002346                     u3911:
  9000   002346  EFB8  F011         	goto	l3991
  9001   00234A                     u3910:
  9002   00234A  282F               	incf	___flmul@bexp^0,w,c
  9003   00234C  A4D8               	btfss	status,2,c
  9004   00234E  EFAB  F011         	goto	u3921
  9005   002352  EFAD  F011         	goto	u3920
  9006   002356                     u3921:
  9007   002356  EFB5  F011         	goto	l3989
  9008   00235A                     u3920:
  9009   00235A  0E00               	movlw	0
  9010   00235C  6E1D               	movwf	___flmul@b^0,c
  9011   00235E  0E00               	movlw	0
  9012   002360  6E1E               	movwf	(___flmul@b+1)^0,c
  9013   002362  0E00               	movlw	0
  9014   002364  6E1F               	movwf	(___flmul@b+2)^0,c
  9015   002366  0E00               	movlw	0
  9016   002368  6E20               	movwf	(___flmul@b+3)^0,c
  9017   00236A                     l3989:
  9018   00236A  8E1F               	bsf	(___flmul@b+2)^0,7,c
  9019   00236C  EFC0  F011         	goto	l3993
  9020   002370                     l3991:
  9021   002370  0E00               	movlw	0
  9022   002372  6E1D               	movwf	___flmul@b^0,c
  9023   002374  0E00               	movlw	0
  9024   002376  6E1E               	movwf	(___flmul@b+1)^0,c
  9025   002378  0E00               	movlw	0
  9026   00237A  6E1F               	movwf	(___flmul@b+2)^0,c
  9027   00237C  0E00               	movlw	0
  9028   00237E  6E20               	movwf	(___flmul@b+3)^0,c
  9029   002380                     l3993:
  9030   002380  5024               	movf	(___flmul@a+3)^0,w,c
  9031   002382  0B80               	andlw	128
  9032   002384  1A29               	xorwf	___flmul@sign^0,f,c
  9033   002386  5024               	movf	(___flmul@a+3)^0,w,c
  9034   002388  2424               	addwf	(___flmul@a+3)^0,w,c
  9035   00238A  6E2E               	movwf	___flmul@aexp^0,c
  9036   00238C  AE23               	btfss	(___flmul@a+2)^0,7,c
  9037   00238E  EFCB  F011         	goto	u3931
  9038   002392  EFCD  F011         	goto	u3930
  9039   002396                     u3931:
  9040   002396  EFCE  F011         	goto	l4001
  9041   00239A                     u3930:
  9042   00239A  802E               	bsf	___flmul@aexp^0,0,c
  9043   00239C                     l4001:
  9044   00239C  502E               	movf	___flmul@aexp^0,w,c
  9045   00239E  B4D8               	btfsc	status,2,c
  9046   0023A0  EFD4  F011         	goto	u3941
  9047   0023A4  EFD6  F011         	goto	u3940
  9048   0023A8                     u3941:
  9049   0023A8  EFE9  F011         	goto	l4009
  9050   0023AC                     u3940:
  9051   0023AC  282E               	incf	___flmul@aexp^0,w,c
  9052   0023AE  A4D8               	btfss	status,2,c
  9053   0023B0  EFDC  F011         	goto	u3951
  9054   0023B4  EFDE  F011         	goto	u3950
  9055   0023B8                     u3951:
  9056   0023B8  EFE6  F011         	goto	l4007
  9057   0023BC                     u3950:
  9058   0023BC  0E00               	movlw	0
  9059   0023BE  6E21               	movwf	___flmul@a^0,c
  9060   0023C0  0E00               	movlw	0
  9061   0023C2  6E22               	movwf	(___flmul@a+1)^0,c
  9062   0023C4  0E00               	movlw	0
  9063   0023C6  6E23               	movwf	(___flmul@a+2)^0,c
  9064   0023C8  0E00               	movlw	0
  9065   0023CA  6E24               	movwf	(___flmul@a+3)^0,c
  9066   0023CC                     l4007:
  9067   0023CC  8E23               	bsf	(___flmul@a+2)^0,7,c
  9068   0023CE  EFF1  F011         	goto	l1153
  9069   0023D2                     l4009:
  9070   0023D2  0E00               	movlw	0
  9071   0023D4  6E21               	movwf	___flmul@a^0,c
  9072   0023D6  0E00               	movlw	0
  9073   0023D8  6E22               	movwf	(___flmul@a+1)^0,c
  9074   0023DA  0E00               	movlw	0
  9075   0023DC  6E23               	movwf	(___flmul@a+2)^0,c
  9076   0023DE  0E00               	movlw	0
  9077   0023E0  6E24               	movwf	(___flmul@a+3)^0,c
  9078   0023E2                     l1153:
  9079   0023E2  502E               	movf	___flmul@aexp^0,w,c
  9080   0023E4  B4D8               	btfsc	status,2,c
  9081   0023E6  EFF7  F011         	goto	u3961
  9082   0023EA  EFF9  F011         	goto	u3960
  9083   0023EE                     u3961:
  9084   0023EE  EF01  F012         	goto	l4013
  9085   0023F2                     u3960:
  9086   0023F2  502F               	movf	___flmul@bexp^0,w,c
  9087   0023F4  A4D8               	btfss	status,2,c
  9088   0023F6  EFFF  F011         	goto	u3971
  9089   0023FA  EF01  F012         	goto	u3970
  9090   0023FE                     u3971:
  9091   0023FE  EF0B  F012         	goto	l4017
  9092   002402                     u3970:
  9093   002402                     l4013:
  9094   002402  0E00               	movlw	0
  9095   002404  6E1D               	movwf	?___flmul^0,c
  9096   002406  0E00               	movlw	0
  9097   002408  6E1E               	movwf	(?___flmul+1)^0,c
  9098   00240A  0E00               	movlw	0
  9099   00240C  6E1F               	movwf	(?___flmul+2)^0,c
  9100   00240E  0E00               	movlw	0
  9101   002410  6E20               	movwf	(?___flmul+3)^0,c
  9102   002412  EFA3  F013         	goto	l1157
  9103   002416                     l4017:
  9104   002416  5023               	movf	(___flmul@a+2)^0,w,c
  9105   002418  021D               	mulwf	___flmul@b^0,c
  9106   00241A  CFF3 F034          	movff	prodl,___flmul@temp
  9107   00241E  CFF4 F035          	movff	prodh,___flmul@temp+1
  9108   002422  5034               	movf	___flmul@temp^0,w,c
  9109   002424  6E2A               	movwf	___flmul@grs^0,c
  9110   002426  6A2B               	clrf	(___flmul@grs+1)^0,c
  9111   002428  6A2C               	clrf	(___flmul@grs+2)^0,c
  9112   00242A  6A2D               	clrf	(___flmul@grs+3)^0,c
  9113   00242C  5035               	movf	(___flmul@temp+1)^0,w,c
  9114   00242E  6E30               	movwf	___flmul@prod^0,c
  9115   002430  6A31               	clrf	(___flmul@prod+1)^0,c
  9116   002432  6A32               	clrf	(___flmul@prod+2)^0,c
  9117   002434  6A33               	clrf	(___flmul@prod+3)^0,c
  9118   002436  5022               	movf	(___flmul@a+1)^0,w,c
  9119   002438  021E               	mulwf	(___flmul@b+1)^0,c
  9120   00243A  CFF3 F034          	movff	prodl,___flmul@temp
  9121   00243E  CFF4 F035          	movff	prodh,___flmul@temp+1
  9122   002442  5034               	movf	___flmul@temp^0,w,c
  9123   002444  262A               	addwf	___flmul@grs^0,f,c
  9124   002446  0E00               	movlw	0
  9125   002448  222B               	addwfc	(___flmul@grs+1)^0,f,c
  9126   00244A  222C               	addwfc	(___flmul@grs+2)^0,f,c
  9127   00244C  222D               	addwfc	(___flmul@grs+3)^0,f,c
  9128   00244E  5035               	movf	(___flmul@temp+1)^0,w,c
  9129   002450  2630               	addwf	___flmul@prod^0,f,c
  9130   002452  0E00               	movlw	0
  9131   002454  2231               	addwfc	(___flmul@prod+1)^0,f,c
  9132   002456  2232               	addwfc	(___flmul@prod+2)^0,f,c
  9133   002458  2233               	addwfc	(___flmul@prod+3)^0,f,c
  9134   00245A  5021               	movf	___flmul@a^0,w,c
  9135   00245C  021F               	mulwf	(___flmul@b+2)^0,c
  9136   00245E  CFF3 F034          	movff	prodl,___flmul@temp
  9137   002462  CFF4 F035          	movff	prodh,___flmul@temp+1
  9138   002466  5034               	movf	___flmul@temp^0,w,c
  9139   002468  262A               	addwf	___flmul@grs^0,f,c
  9140   00246A  0E00               	movlw	0
  9141   00246C  222B               	addwfc	(___flmul@grs+1)^0,f,c
  9142   00246E  222C               	addwfc	(___flmul@grs+2)^0,f,c
  9143   002470  222D               	addwfc	(___flmul@grs+3)^0,f,c
  9144   002472  5035               	movf	(___flmul@temp+1)^0,w,c
  9145   002474  2630               	addwf	___flmul@prod^0,f,c
  9146   002476  0E00               	movlw	0
  9147   002478  2231               	addwfc	(___flmul@prod+1)^0,f,c
  9148   00247A  2232               	addwfc	(___flmul@prod+2)^0,f,c
  9149   00247C  2233               	addwfc	(___flmul@prod+3)^0,f,c
  9150   00247E  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  9151   002482  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  9152   002486  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  9153   00248A  6A2A               	clrf	___flmul@grs^0,c
  9154   00248C  5021               	movf	___flmul@a^0,w,c
  9155   00248E  021E               	mulwf	(___flmul@b+1)^0,c
  9156   002490  CFF3 F034          	movff	prodl,___flmul@temp
  9157   002494  CFF4 F035          	movff	prodh,___flmul@temp+1
  9158   002498  5034               	movf	___flmul@temp^0,w,c
  9159   00249A  262A               	addwf	___flmul@grs^0,f,c
  9160   00249C  5035               	movf	(___flmul@temp+1)^0,w,c
  9161   00249E  222B               	addwfc	(___flmul@grs+1)^0,f,c
  9162   0024A0  0E00               	movlw	0
  9163   0024A2  222C               	addwfc	(___flmul@grs+2)^0,f,c
  9164   0024A4  0E00               	movlw	0
  9165   0024A6  222D               	addwfc	(___flmul@grs+3)^0,f,c
  9166   0024A8  5022               	movf	(___flmul@a+1)^0,w,c
  9167   0024AA  021D               	mulwf	___flmul@b^0,c
  9168   0024AC  CFF3 F034          	movff	prodl,___flmul@temp
  9169   0024B0  CFF4 F035          	movff	prodh,___flmul@temp+1
  9170   0024B4  5034               	movf	___flmul@temp^0,w,c
  9171   0024B6  262A               	addwf	___flmul@grs^0,f,c
  9172   0024B8  5035               	movf	(___flmul@temp+1)^0,w,c
  9173   0024BA  222B               	addwfc	(___flmul@grs+1)^0,f,c
  9174   0024BC  0E00               	movlw	0
  9175   0024BE  222C               	addwfc	(___flmul@grs+2)^0,f,c
  9176   0024C0  0E00               	movlw	0
  9177   0024C2  222D               	addwfc	(___flmul@grs+3)^0,f,c
  9178   0024C4  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  9179   0024C8  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  9180   0024CC  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  9181   0024D0  6A2A               	clrf	___flmul@grs^0,c
  9182   0024D2  5021               	movf	___flmul@a^0,w,c
  9183   0024D4  021D               	mulwf	___flmul@b^0,c
  9184   0024D6  CFF3 F034          	movff	prodl,___flmul@temp
  9185   0024DA  CFF4 F035          	movff	prodh,___flmul@temp+1
  9186   0024DE  5034               	movf	___flmul@temp^0,w,c
  9187   0024E0  262A               	addwf	___flmul@grs^0,f,c
  9188   0024E2  5035               	movf	(___flmul@temp+1)^0,w,c
  9189   0024E4  222B               	addwfc	(___flmul@grs+1)^0,f,c
  9190   0024E6  0E00               	movlw	0
  9191   0024E8  222C               	addwfc	(___flmul@grs+2)^0,f,c
  9192   0024EA  0E00               	movlw	0
  9193   0024EC  222D               	addwfc	(___flmul@grs+3)^0,f,c
  9194   0024EE  5023               	movf	(___flmul@a+2)^0,w,c
  9195   0024F0  021E               	mulwf	(___flmul@b+1)^0,c
  9196   0024F2  CFF3 F034          	movff	prodl,___flmul@temp
  9197   0024F6  CFF4 F035          	movff	prodh,___flmul@temp+1
  9198   0024FA  5034               	movf	___flmul@temp^0,w,c
  9199   0024FC  2630               	addwf	___flmul@prod^0,f,c
  9200   0024FE  5035               	movf	(___flmul@temp+1)^0,w,c
  9201   002500  2231               	addwfc	(___flmul@prod+1)^0,f,c
  9202   002502  0E00               	movlw	0
  9203   002504  2232               	addwfc	(___flmul@prod+2)^0,f,c
  9204   002506  0E00               	movlw	0
  9205   002508  2233               	addwfc	(___flmul@prod+3)^0,f,c
  9206   00250A  5022               	movf	(___flmul@a+1)^0,w,c
  9207   00250C  021F               	mulwf	(___flmul@b+2)^0,c
  9208   00250E  CFF3 F034          	movff	prodl,___flmul@temp
  9209   002512  CFF4 F035          	movff	prodh,___flmul@temp+1
  9210   002516  5034               	movf	___flmul@temp^0,w,c
  9211   002518  2630               	addwf	___flmul@prod^0,f,c
  9212   00251A  5035               	movf	(___flmul@temp+1)^0,w,c
  9213   00251C  2231               	addwfc	(___flmul@prod+1)^0,f,c
  9214   00251E  0E00               	movlw	0
  9215   002520  2232               	addwfc	(___flmul@prod+2)^0,f,c
  9216   002522  0E00               	movlw	0
  9217   002524  2233               	addwfc	(___flmul@prod+3)^0,f,c
  9218   002526  5023               	movf	(___flmul@a+2)^0,w,c
  9219   002528  021F               	mulwf	(___flmul@b+2)^0,c
  9220   00252A  CFF3 F034          	movff	prodl,___flmul@temp
  9221   00252E  CFF4 F035          	movff	prodh,___flmul@temp+1
  9222   002532  5034               	movf	___flmul@temp^0,w,c
  9223   002534  6E25               	movwf	??___flmul^0,c
  9224   002536  5035               	movf	(___flmul@temp+1)^0,w,c
  9225   002538  6E26               	movwf	(??___flmul+1)^0,c
  9226   00253A  6A27               	clrf	(??___flmul+2)^0,c
  9227   00253C  6A28               	clrf	(??___flmul+3)^0,c
  9228   00253E  C027  F028         	movff	??___flmul+2,??___flmul+3
  9229   002542  C026  F027         	movff	??___flmul+1,??___flmul+2
  9230   002546  C025  F026         	movff	??___flmul,??___flmul+1
  9231   00254A  6A25               	clrf	??___flmul^0,c
  9232   00254C  5025               	movf	??___flmul^0,w,c
  9233   00254E  2630               	addwf	___flmul@prod^0,f,c
  9234   002550  5026               	movf	(??___flmul+1)^0,w,c
  9235   002552  2231               	addwfc	(___flmul@prod+1)^0,f,c
  9236   002554  5027               	movf	(??___flmul+2)^0,w,c
  9237   002556  2232               	addwfc	(___flmul@prod+2)^0,f,c
  9238   002558  5028               	movf	(??___flmul+3)^0,w,c
  9239   00255A  2233               	addwfc	(___flmul@prod+3)^0,f,c
  9240   00255C  C02A  F025         	movff	___flmul@grs,??___flmul
  9241   002560  C02B  F026         	movff	___flmul@grs+1,??___flmul+1
  9242   002564  C02C  F027         	movff	___flmul@grs+2,??___flmul+2
  9243   002568  C02D  F028         	movff	___flmul@grs+3,??___flmul+3
  9244   00256C  0E19               	movlw	25
  9245   00256E  EFBE  F012         	goto	u3980
  9246   002572                     u3985:
  9247   002572  90D8               	bcf	status,0,c
  9248   002574  3228               	rrcf	(??___flmul+3)^0,f,c
  9249   002576  3227               	rrcf	(??___flmul+2)^0,f,c
  9250   002578  3226               	rrcf	(??___flmul+1)^0,f,c
  9251   00257A  3225               	rrcf	??___flmul^0,f,c
  9252   00257C                     u3980:
  9253   00257C  2EE8               	decfsz	wreg,f,c
  9254   00257E  EFB9  F012         	goto	u3985
  9255   002582  5025               	movf	??___flmul^0,w,c
  9256   002584  2630               	addwf	___flmul@prod^0,f,c
  9257   002586  5026               	movf	(??___flmul+1)^0,w,c
  9258   002588  2231               	addwfc	(___flmul@prod+1)^0,f,c
  9259   00258A  5027               	movf	(??___flmul+2)^0,w,c
  9260   00258C  2232               	addwfc	(___flmul@prod+2)^0,f,c
  9261   00258E  5028               	movf	(??___flmul+3)^0,w,c
  9262   002590  2233               	addwfc	(___flmul@prod+3)^0,f,c
  9263   002592  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  9264   002596  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  9265   00259A  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  9266   00259E  6A2A               	clrf	___flmul@grs^0,c
  9267   0025A0  502E               	movf	___flmul@aexp^0,w,c
  9268   0025A2  C02F  F025         	movff	___flmul@bexp,??___flmul
  9269   0025A6  6A26               	clrf	(??___flmul+1)^0,c
  9270   0025A8  2625               	addwf	??___flmul^0,f,c
  9271   0025AA  0E00               	movlw	0
  9272   0025AC  2226               	addwfc	(??___flmul+1)^0,f,c
  9273   0025AE  0E82               	movlw	130
  9274   0025B0  2425               	addwf	??___flmul^0,w,c
  9275   0025B2  6E34               	movwf	___flmul@temp^0,c
  9276   0025B4  0EFF               	movlw	255
  9277   0025B6  2026               	addwfc	(??___flmul+1)^0,w,c
  9278   0025B8  6E35               	movwf	(___flmul@temp+1)^0,c
  9279   0025BA  EFF4  F012         	goto	l4065
  9280   0025BE                     l4059:
  9281   0025BE  90D8               	bcf	status,0,c
  9282   0025C0  3630               	rlcf	___flmul@prod^0,f,c
  9283   0025C2  3631               	rlcf	(___flmul@prod+1)^0,f,c
  9284   0025C4  3632               	rlcf	(___flmul@prod+2)^0,f,c
  9285   0025C6  3633               	rlcf	(___flmul@prod+3)^0,f,c
  9286   0025C8  AE2D               	btfss	(___flmul@grs+3)^0,7,c
  9287   0025CA  EFE9  F012         	goto	u3991
  9288   0025CE  EFEB  F012         	goto	u3990
  9289   0025D2                     u3991:
  9290   0025D2  EFEC  F012         	goto	l1160
  9291   0025D6                     u3990:
  9292   0025D6  8030               	bsf	___flmul@prod^0,0,c
  9293   0025D8                     l1160:
  9294   0025D8  90D8               	bcf	status,0,c
  9295   0025DA  362A               	rlcf	___flmul@grs^0,f,c
  9296   0025DC  362B               	rlcf	(___flmul@grs+1)^0,f,c
  9297   0025DE  362C               	rlcf	(___flmul@grs+2)^0,f,c
  9298   0025E0  362D               	rlcf	(___flmul@grs+3)^0,f,c
  9299   0025E2  0634               	decf	___flmul@temp^0,f,c
  9300   0025E4  A0D8               	btfss	status,0,c
  9301   0025E6  0635               	decf	(___flmul@temp+1)^0,f,c
  9302   0025E8                     l4065:
  9303   0025E8  AE32               	btfss	(___flmul@prod+2)^0,7,c
  9304   0025EA  EFF9  F012         	goto	u4001
  9305   0025EE  EFFB  F012         	goto	u4000
  9306   0025F2                     u4001:
  9307   0025F2  EFDF  F012         	goto	l4059
  9308   0025F6                     u4000:
  9309   0025F6  0E00               	movlw	0
  9310   0025F8  6E2E               	movwf	___flmul@aexp^0,c
  9311   0025FA  AE2D               	btfss	(___flmul@grs+3)^0,7,c
  9312   0025FC  EF02  F013         	goto	u4011
  9313   002600  EF04  F013         	goto	u4010
  9314   002604                     u4011:
  9315   002604  EF28  F013         	goto	l1162
  9316   002608                     u4010:
  9317   002608  0EFF               	movlw	255
  9318   00260A  142A               	andwf	___flmul@grs^0,w,c
  9319   00260C  6E25               	movwf	??___flmul^0,c
  9320   00260E  0EFF               	movlw	255
  9321   002610  142B               	andwf	(___flmul@grs+1)^0,w,c
  9322   002612  6E26               	movwf	(??___flmul+1)^0,c
  9323   002614  0EFF               	movlw	255
  9324   002616  142C               	andwf	(___flmul@grs+2)^0,w,c
  9325   002618  6E27               	movwf	(??___flmul+2)^0,c
  9326   00261A  0E7F               	movlw	127
  9327   00261C  142D               	andwf	(___flmul@grs+3)^0,w,c
  9328   00261E  6E28               	movwf	(??___flmul+3)^0,c
  9329   002620  5025               	movf	??___flmul^0,w,c
  9330   002622  1026               	iorwf	(??___flmul+1)^0,w,c
  9331   002624  1027               	iorwf	(??___flmul+2)^0,w,c
  9332   002626  1028               	iorwf	(??___flmul+3)^0,w,c
  9333   002628  B4D8               	btfsc	status,2,c
  9334   00262A  EF19  F013         	goto	u4021
  9335   00262E  EF1B  F013         	goto	u4020
  9336   002632                     u4021:
  9337   002632  EF1F  F013         	goto	l1163
  9338   002636                     u4020:
  9339   002636                     l4073:
  9340   002636  0E01               	movlw	1
  9341   002638  6E2E               	movwf	___flmul@aexp^0,c
  9342   00263A  EF28  F013         	goto	l1162
  9343   00263E                     l1163:
  9344   00263E  A030               	btfss	___flmul@prod^0,0,c
  9345   002640  EF24  F013         	goto	u4031
  9346   002644  EF26  F013         	goto	u4030
  9347   002648                     u4031:
  9348   002648  EF28  F013         	goto	l1162
  9349   00264C                     u4030:
  9350   00264C  EF1B  F013         	goto	l4073
  9351   002650                     l1162:
  9352   002650  502E               	movf	___flmul@aexp^0,w,c
  9353   002652  B4D8               	btfsc	status,2,c
  9354   002654  EF2E  F013         	goto	u4041
  9355   002658  EF30  F013         	goto	u4040
  9356   00265C                     u4041:
  9357   00265C  EF54  F013         	goto	l4085
  9358   002660                     u4040:
  9359   002660  0E01               	movlw	1
  9360   002662  2630               	addwf	___flmul@prod^0,f,c
  9361   002664  0E00               	movlw	0
  9362   002666  2231               	addwfc	(___flmul@prod+1)^0,f,c
  9363   002668  2232               	addwfc	(___flmul@prod+2)^0,f,c
  9364   00266A  2233               	addwfc	(___flmul@prod+3)^0,f,c
  9365   00266C  A033               	btfss	(___flmul@prod+3)^0,0,c
  9366   00266E  EF3B  F013         	goto	u4051
  9367   002672  EF3D  F013         	goto	u4050
  9368   002676                     u4051:
  9369   002676  EF54  F013         	goto	l4085
  9370   00267A                     u4050:
  9371   00267A  C030  F025         	movff	___flmul@prod,??___flmul
  9372   00267E  C031  F026         	movff	___flmul@prod+1,??___flmul+1
  9373   002682  C032  F027         	movff	___flmul@prod+2,??___flmul+2
  9374   002686  C033  F028         	movff	___flmul@prod+3,??___flmul+3
  9375   00268A  3428               	rlcf	(??___flmul+3)^0,w,c
  9376   00268C  3228               	rrcf	(??___flmul+3)^0,f,c
  9377   00268E  3227               	rrcf	(??___flmul+2)^0,f,c
  9378   002690  3226               	rrcf	(??___flmul+1)^0,f,c
  9379   002692  3225               	rrcf	??___flmul^0,f,c
  9380   002694  C025  F030         	movff	??___flmul,___flmul@prod
  9381   002698  C026  F031         	movff	??___flmul+1,___flmul@prod+1
  9382   00269C  C027  F032         	movff	??___flmul+2,___flmul@prod+2
  9383   0026A0  C028  F033         	movff	??___flmul+3,___flmul@prod+3
  9384   0026A4  4A34               	infsnz	___flmul@temp^0,f,c
  9385   0026A6  2A35               	incf	(___flmul@temp+1)^0,f,c
  9386   0026A8                     l4085:
  9387   0026A8  BE35               	btfsc	(___flmul@temp+1)^0,7,c
  9388   0026AA  EF5F  F013         	goto	u4061
  9389   0026AE  5035               	movf	(___flmul@temp+1)^0,w,c
  9390   0026B0  E108               	bnz	u4060
  9391   0026B2  2834               	incf	___flmul@temp^0,w,c
  9392   0026B4  A0D8               	btfss	status,0,c
  9393   0026B6  EF5F  F013         	goto	u4061
  9394   0026BA  EF61  F013         	goto	u4060
  9395   0026BE                     u4061:
  9396   0026BE  EF6B  F013         	goto	l4089
  9397   0026C2                     u4060:
  9398   0026C2  0E00               	movlw	0
  9399   0026C4  6E30               	movwf	___flmul@prod^0,c
  9400   0026C6  0E00               	movlw	0
  9401   0026C8  6E31               	movwf	(___flmul@prod+1)^0,c
  9402   0026CA  0E80               	movlw	128
  9403   0026CC  6E32               	movwf	(___flmul@prod+2)^0,c
  9404   0026CE  0E7F               	movlw	127
  9405   0026D0  6E33               	movwf	(___flmul@prod+3)^0,c
  9406   0026D2  EF99  F013         	goto	l4101
  9407   0026D6                     l4089:
  9408   0026D6  BE35               	btfsc	(___flmul@temp+1)^0,7,c
  9409   0026D8  EF78  F013         	goto	u4070
  9410   0026DC  5035               	movf	(___flmul@temp+1)^0,w,c
  9411   0026DE  E106               	bnz	u4071
  9412   0026E0  0434               	decf	___flmul@temp^0,w,c
  9413   0026E2  B0D8               	btfsc	status,0,c
  9414   0026E4  EF76  F013         	goto	u4071
  9415   0026E8  EF78  F013         	goto	u4070
  9416   0026EC                     u4071:
  9417   0026EC  EF84  F013         	goto	l1170
  9418   0026F0                     u4070:
  9419   0026F0  0E00               	movlw	0
  9420   0026F2  6E30               	movwf	___flmul@prod^0,c
  9421   0026F4  0E00               	movlw	0
  9422   0026F6  6E31               	movwf	(___flmul@prod+1)^0,c
  9423   0026F8  0E00               	movlw	0
  9424   0026FA  6E32               	movwf	(___flmul@prod+2)^0,c
  9425   0026FC  0E00               	movlw	0
  9426   0026FE  6E33               	movwf	(___flmul@prod+3)^0,c
  9427   002700  0E00               	movlw	0
  9428   002702  6E29               	movwf	___flmul@sign^0,c
  9429   002704  EF99  F013         	goto	l4101
  9430   002708                     l1170:
  9431   002708  C034  F02F         	movff	___flmul@temp,___flmul@bexp
  9432   00270C  0EFF               	movlw	255
  9433   00270E  1630               	andwf	___flmul@prod^0,f,c
  9434   002710  0EFF               	movlw	255
  9435   002712  1631               	andwf	(___flmul@prod+1)^0,f,c
  9436   002714  0E7F               	movlw	127
  9437   002716  1632               	andwf	(___flmul@prod+2)^0,f,c
  9438   002718  0E00               	movlw	0
  9439   00271A  1633               	andwf	(___flmul@prod+3)^0,f,c
  9440   00271C  A02F               	btfss	___flmul@bexp^0,0,c
  9441   00271E  EF93  F013         	goto	u4081
  9442   002722  EF95  F013         	goto	u4080
  9443   002726                     u4081:
  9444   002726  EF96  F013         	goto	l4099
  9445   00272A                     u4080:
  9446   00272A  8E32               	bsf	(___flmul@prod+2)^0,7,c
  9447   00272C                     l4099:
  9448   00272C  90D8               	bcf	status,0,c
  9449   00272E  302F               	rrcf	___flmul@bexp^0,w,c
  9450   002730  6E33               	movwf	(___flmul@prod+3)^0,c
  9451   002732                     l4101:
  9452   002732  5029               	movf	___flmul@sign^0,w,c
  9453   002734  1233               	iorwf	(___flmul@prod+3)^0,f,c
  9454   002736  C030  F01D         	movff	___flmul@prod,?___flmul
  9455   00273A  C031  F01E         	movff	___flmul@prod+1,?___flmul+1
  9456   00273E  C032  F01F         	movff	___flmul@prod+2,?___flmul+2
  9457   002742  C033  F020         	movff	___flmul@prod+3,?___flmul+3
  9458   002746                     l1157:
  9459   002746  0012               	return		;funcret
  9460   002748                     __end_of___flmul:
  9461                           	callstack 0
  9462                           
  9463 ;; *************** function ___flge *****************
  9464 ;; Defined at:
  9465 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  9466 ;; Parameters:    Size  Location     Type
  9467 ;;  ff1             4   28[COMRAM] unsigned char 
  9468 ;;  ff2             4   32[COMRAM] unsigned char 
  9469 ;; Auto vars:     Size  Location     Type
  9470 ;;		None
  9471 ;; Return value:  Size  Location     Type
  9472 ;;		None               void
  9473 ;; Registers used:
  9474 ;;		wreg, status,2, status,0
  9475 ;; Tracked objects:
  9476 ;;		On entry : 0/0
  9477 ;;		On exit  : 0/0
  9478 ;;		Unchanged: 0/0
  9479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9480 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9482 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9483 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9484 ;;Total ram usage:       12 bytes
  9485 ;; Hardware stack levels used: 1
  9486 ;; Hardware stack levels required when called: 2
  9487 ;; This function calls:
  9488 ;;		Nothing
  9489 ;; This function is called by:
  9490 ;;		_colorDetect
  9491 ;;		_main
  9492 ;; This function uses a non-reentrant model
  9493 ;;
  9494                           
  9495                           	psect	text41
  9496   003D6A                     __ptext41:
  9497                           	callstack 0
  9498   003D6A                     ___flge:
  9499                           	callstack 27
  9500   003D6A  0E00               	movlw	0
  9501   003D6C  141D               	andwf	___flge@ff1^0,w,c
  9502   003D6E  6E25               	movwf	??___flge^0,c
  9503   003D70  0E00               	movlw	0
  9504   003D72  141E               	andwf	(___flge@ff1+1)^0,w,c
  9505   003D74  6E26               	movwf	(??___flge+1)^0,c
  9506   003D76  0E80               	movlw	128
  9507   003D78  141F               	andwf	(___flge@ff1+2)^0,w,c
  9508   003D7A  6E27               	movwf	(??___flge+2)^0,c
  9509   003D7C  0E7F               	movlw	127
  9510   003D7E  1420               	andwf	(___flge@ff1+3)^0,w,c
  9511   003D80  6E28               	movwf	(??___flge+3)^0,c
  9512   003D82  5025               	movf	??___flge^0,w,c
  9513   003D84  1026               	iorwf	(??___flge+1)^0,w,c
  9514   003D86  1027               	iorwf	(??___flge+2)^0,w,c
  9515   003D88  1028               	iorwf	(??___flge+3)^0,w,c
  9516   003D8A  A4D8               	btfss	status,2,c
  9517   003D8C  EFCA  F01E         	goto	u4091
  9518   003D90  EFCC  F01E         	goto	u4090
  9519   003D94                     u4091:
  9520   003D94  EFD4  F01E         	goto	l4117
  9521   003D98                     u4090:
  9522   003D98  0E00               	movlw	0
  9523   003D9A  6E1D               	movwf	___flge@ff1^0,c
  9524   003D9C  0E00               	movlw	0
  9525   003D9E  6E1E               	movwf	(___flge@ff1+1)^0,c
  9526   003DA0  0E00               	movlw	0
  9527   003DA2  6E1F               	movwf	(___flge@ff1+2)^0,c
  9528   003DA4  0E00               	movlw	0
  9529   003DA6  6E20               	movwf	(___flge@ff1+3)^0,c
  9530   003DA8                     l4117:
  9531   003DA8  0E00               	movlw	0
  9532   003DAA  1421               	andwf	___flge@ff2^0,w,c
  9533   003DAC  6E25               	movwf	??___flge^0,c
  9534   003DAE  0E00               	movlw	0
  9535   003DB0  1422               	andwf	(___flge@ff2+1)^0,w,c
  9536   003DB2  6E26               	movwf	(??___flge+1)^0,c
  9537   003DB4  0E80               	movlw	128
  9538   003DB6  1423               	andwf	(___flge@ff2+2)^0,w,c
  9539   003DB8  6E27               	movwf	(??___flge+2)^0,c
  9540   003DBA  0E7F               	movlw	127
  9541   003DBC  1424               	andwf	(___flge@ff2+3)^0,w,c
  9542   003DBE  6E28               	movwf	(??___flge+3)^0,c
  9543   003DC0  5025               	movf	??___flge^0,w,c
  9544   003DC2  1026               	iorwf	(??___flge+1)^0,w,c
  9545   003DC4  1027               	iorwf	(??___flge+2)^0,w,c
  9546   003DC6  1028               	iorwf	(??___flge+3)^0,w,c
  9547   003DC8  A4D8               	btfss	status,2,c
  9548   003DCA  EFE9  F01E         	goto	u4101
  9549   003DCE  EFEB  F01E         	goto	u4100
  9550   003DD2                     u4101:
  9551   003DD2  EFF3  F01E         	goto	l4121
  9552   003DD6                     u4100:
  9553   003DD6  0E00               	movlw	0
  9554   003DD8  6E21               	movwf	___flge@ff2^0,c
  9555   003DDA  0E00               	movlw	0
  9556   003DDC  6E22               	movwf	(___flge@ff2+1)^0,c
  9557   003DDE  0E00               	movlw	0
  9558   003DE0  6E23               	movwf	(___flge@ff2+2)^0,c
  9559   003DE2  0E00               	movlw	0
  9560   003DE4  6E24               	movwf	(___flge@ff2+3)^0,c
  9561   003DE6                     l4121:
  9562   003DE6  AE20               	btfss	(___flge@ff1+3)^0,7,c
  9563   003DE8  EFF8  F01E         	goto	u4111
  9564   003DEC  EFFA  F01E         	goto	u4110
  9565   003DF0                     u4111:
  9566   003DF0  EF03  F01F         	goto	l4125
  9567   003DF4                     u4110:
  9568   003DF4  6C1D               	negf	___flge@ff1^0,c
  9569   003DF6  1E1E               	comf	(___flge@ff1+1)^0,f,c
  9570   003DF8  B0D8               	btfsc	status,0,c
  9571   003DFA  2A1E               	incf	(___flge@ff1+1)^0,f,c
  9572   003DFC  1E1F               	comf	(___flge@ff1+2)^0,f,c
  9573   003DFE  B0D8               	btfsc	status,0,c
  9574   003E00  2A1F               	incf	(___flge@ff1+2)^0,f,c
  9575   003E02  0E80               	movlw	128
  9576   003E04  5620               	subfwb	(___flge@ff1+3)^0,f,c
  9577   003E06                     l4125:
  9578   003E06  AE24               	btfss	(___flge@ff2+3)^0,7,c
  9579   003E08  EF08  F01F         	goto	u4121
  9580   003E0C  EF0A  F01F         	goto	u4120
  9581   003E10                     u4121:
  9582   003E10  EF13  F01F         	goto	l804
  9583   003E14                     u4120:
  9584   003E14  6C21               	negf	___flge@ff2^0,c
  9585   003E16  1E22               	comf	(___flge@ff2+1)^0,f,c
  9586   003E18  B0D8               	btfsc	status,0,c
  9587   003E1A  2A22               	incf	(___flge@ff2+1)^0,f,c
  9588   003E1C  1E23               	comf	(___flge@ff2+2)^0,f,c
  9589   003E1E  B0D8               	btfsc	status,0,c
  9590   003E20  2A23               	incf	(___flge@ff2+2)^0,f,c
  9591   003E22  0E80               	movlw	128
  9592   003E24  5624               	subfwb	(___flge@ff2+3)^0,f,c
  9593   003E26                     l804:
  9594   003E26  0E00               	movlw	0
  9595   003E28  1A1D               	xorwf	___flge@ff1^0,f,c
  9596   003E2A  0E00               	movlw	0
  9597   003E2C  1A1E               	xorwf	(___flge@ff1+1)^0,f,c
  9598   003E2E  0E00               	movlw	0
  9599   003E30  1A1F               	xorwf	(___flge@ff1+2)^0,f,c
  9600   003E32  0E80               	movlw	128
  9601   003E34  1A20               	xorwf	(___flge@ff1+3)^0,f,c
  9602   003E36  0E00               	movlw	0
  9603   003E38  1A21               	xorwf	___flge@ff2^0,f,c
  9604   003E3A  0E00               	movlw	0
  9605   003E3C  1A22               	xorwf	(___flge@ff2+1)^0,f,c
  9606   003E3E  0E00               	movlw	0
  9607   003E40  1A23               	xorwf	(___flge@ff2+2)^0,f,c
  9608   003E42  0E80               	movlw	128
  9609   003E44  1A24               	xorwf	(___flge@ff2+3)^0,f,c
  9610   003E46  5021               	movf	___flge@ff2^0,w,c
  9611   003E48  5C1D               	subwf	___flge@ff1^0,w,c
  9612   003E4A  5022               	movf	(___flge@ff2+1)^0,w,c
  9613   003E4C  581E               	subwfb	(___flge@ff1+1)^0,w,c
  9614   003E4E  5023               	movf	(___flge@ff2+2)^0,w,c
  9615   003E50  581F               	subwfb	(___flge@ff1+2)^0,w,c
  9616   003E52  5024               	movf	(___flge@ff2+3)^0,w,c
  9617   003E54  5820               	subwfb	(___flge@ff1+3)^0,w,c
  9618   003E56  B0D8               	btfsc	status,0,c
  9619   003E58  EF30  F01F         	goto	u4131
  9620   003E5C  EF32  F01F         	goto	u4130
  9621   003E60                     u4131:
  9622   003E60  EF35  F01F         	goto	l4131
  9623   003E64                     u4130:
  9624   003E64  90D8               	bcf	status,0,c
  9625   003E66  EF36  F01F         	goto	l809
  9626   003E6A                     l4131:
  9627   003E6A  80D8               	bsf	status,0,c
  9628   003E6C                     l809:
  9629   003E6C  0012               	return		;funcret
  9630   003E6E                     __end_of___flge:
  9631                           	callstack 0
  9632                           
  9633 ;; *************** function ___fldiv *****************
  9634 ;; Defined at:
  9635 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  9636 ;; Parameters:    Size  Location     Type
  9637 ;;  b               4   53[COMRAM] unsigned char 
  9638 ;;  a               4   57[COMRAM] unsigned char 
  9639 ;; Auto vars:     Size  Location     Type
  9640 ;;  grs             4   72[COMRAM] unsigned long 
  9641 ;;  rem             4   65[COMRAM] unsigned long 
  9642 ;;  new_exp         2   70[COMRAM] short 
  9643 ;;  aexp            1   77[COMRAM] unsigned char 
  9644 ;;  bexp            1   76[COMRAM] unsigned char 
  9645 ;;  sign            1   69[COMRAM] unsigned char 
  9646 ;; Return value:  Size  Location     Type
  9647 ;;                  4   53[COMRAM] unsigned char 
  9648 ;; Registers used:
  9649 ;;		wreg, status,2, status,0
  9650 ;; Tracked objects:
  9651 ;;		On entry : 0/0
  9652 ;;		On exit  : 0/0
  9653 ;;		Unchanged: 0/0
  9654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9655 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9656 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9657 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9658 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9659 ;;Total ram usage:       25 bytes
  9660 ;; Hardware stack levels used: 1
  9661 ;; Hardware stack levels required when called: 2
  9662 ;; This function calls:
  9663 ;;		Nothing
  9664 ;; This function is called by:
  9665 ;;		_colorDetect
  9666 ;;		_main
  9667 ;; This function uses a non-reentrant model
  9668 ;;
  9669                           
  9670                           	psect	text42
  9671   002748                     __ptext42:
  9672                           	callstack 0
  9673   002748                     ___fldiv:
  9674                           	callstack 27
  9675   002748  5039               	movf	(___fldiv@b+3)^0,w,c
  9676   00274A  0B80               	andlw	128
  9677   00274C  6E46               	movwf	___fldiv@sign^0,c
  9678   00274E  5039               	movf	(___fldiv@b+3)^0,w,c
  9679   002750  2439               	addwf	(___fldiv@b+3)^0,w,c
  9680   002752  6E4D               	movwf	___fldiv@bexp^0,c
  9681   002754  AE38               	btfss	(___fldiv@b+2)^0,7,c
  9682   002756  EFAF  F013         	goto	u3671
  9683   00275A  EFB1  F013         	goto	u3670
  9684   00275E                     u3671:
  9685   00275E  EFB2  F013         	goto	l3845
  9686   002762                     u3670:
  9687   002762  804D               	bsf	___fldiv@bexp^0,0,c
  9688   002764                     l3845:
  9689   002764  504D               	movf	___fldiv@bexp^0,w,c
  9690   002766  B4D8               	btfsc	status,2,c
  9691   002768  EFB8  F013         	goto	u3681
  9692   00276C  EFBA  F013         	goto	u3680
  9693   002770                     u3681:
  9694   002770  EFCF  F013         	goto	l3855
  9695   002774                     u3680:
  9696   002774  284D               	incf	___fldiv@bexp^0,w,c
  9697   002776  A4D8               	btfss	status,2,c
  9698   002778  EFC0  F013         	goto	u3691
  9699   00277C  EFC2  F013         	goto	u3690
  9700   002780                     u3691:
  9701   002780  EFCA  F013         	goto	l3851
  9702   002784                     u3690:
  9703   002784  0E00               	movlw	0
  9704   002786  6E36               	movwf	___fldiv@b^0,c
  9705   002788  0E00               	movlw	0
  9706   00278A  6E37               	movwf	(___fldiv@b+1)^0,c
  9707   00278C  0E00               	movlw	0
  9708   00278E  6E38               	movwf	(___fldiv@b+2)^0,c
  9709   002790  0E00               	movlw	0
  9710   002792  6E39               	movwf	(___fldiv@b+3)^0,c
  9711   002794                     l3851:
  9712   002794  8E38               	bsf	(___fldiv@b+2)^0,7,c
  9713   002796  0E00               	movlw	0
  9714   002798  6E39               	movwf	(___fldiv@b+3)^0,c
  9715   00279A  EFD7  F013         	goto	l3857
  9716   00279E                     l3855:
  9717   00279E  0E00               	movlw	0
  9718   0027A0  6E36               	movwf	___fldiv@b^0,c
  9719   0027A2  0E00               	movlw	0
  9720   0027A4  6E37               	movwf	(___fldiv@b+1)^0,c
  9721   0027A6  0E00               	movlw	0
  9722   0027A8  6E38               	movwf	(___fldiv@b+2)^0,c
  9723   0027AA  0E00               	movlw	0
  9724   0027AC  6E39               	movwf	(___fldiv@b+3)^0,c
  9725   0027AE                     l3857:
  9726   0027AE  503D               	movf	(___fldiv@a+3)^0,w,c
  9727   0027B0  0B80               	andlw	128
  9728   0027B2  1A46               	xorwf	___fldiv@sign^0,f,c
  9729   0027B4  503D               	movf	(___fldiv@a+3)^0,w,c
  9730   0027B6  243D               	addwf	(___fldiv@a+3)^0,w,c
  9731   0027B8  6E4E               	movwf	___fldiv@aexp^0,c
  9732   0027BA  AE3C               	btfss	(___fldiv@a+2)^0,7,c
  9733   0027BC  EFE2  F013         	goto	u3701
  9734   0027C0  EFE4  F013         	goto	u3700
  9735   0027C4                     u3701:
  9736   0027C4  EFE5  F013         	goto	l3865
  9737   0027C8                     u3700:
  9738   0027C8  804E               	bsf	___fldiv@aexp^0,0,c
  9739   0027CA                     l3865:
  9740   0027CA  504E               	movf	___fldiv@aexp^0,w,c
  9741   0027CC  B4D8               	btfsc	status,2,c
  9742   0027CE  EFEB  F013         	goto	u3711
  9743   0027D2  EFED  F013         	goto	u3710
  9744   0027D6                     u3711:
  9745   0027D6  EF02  F014         	goto	l3875
  9746   0027DA                     u3710:
  9747   0027DA  284E               	incf	___fldiv@aexp^0,w,c
  9748   0027DC  A4D8               	btfss	status,2,c
  9749   0027DE  EFF3  F013         	goto	u3721
  9750   0027E2  EFF5  F013         	goto	u3720
  9751   0027E6                     u3721:
  9752   0027E6  EFFD  F013         	goto	l3871
  9753   0027EA                     u3720:
  9754   0027EA  0E00               	movlw	0
  9755   0027EC  6E3A               	movwf	___fldiv@a^0,c
  9756   0027EE  0E00               	movlw	0
  9757   0027F0  6E3B               	movwf	(___fldiv@a+1)^0,c
  9758   0027F2  0E00               	movlw	0
  9759   0027F4  6E3C               	movwf	(___fldiv@a+2)^0,c
  9760   0027F6  0E00               	movlw	0
  9761   0027F8  6E3D               	movwf	(___fldiv@a+3)^0,c
  9762   0027FA                     l3871:
  9763   0027FA  8E3C               	bsf	(___fldiv@a+2)^0,7,c
  9764   0027FC  0E00               	movlw	0
  9765   0027FE  6E3D               	movwf	(___fldiv@a+3)^0,c
  9766   002800  EF0A  F014         	goto	l3877
  9767   002804                     l3875:
  9768   002804  0E00               	movlw	0
  9769   002806  6E3A               	movwf	___fldiv@a^0,c
  9770   002808  0E00               	movlw	0
  9771   00280A  6E3B               	movwf	(___fldiv@a+1)^0,c
  9772   00280C  0E00               	movlw	0
  9773   00280E  6E3C               	movwf	(___fldiv@a+2)^0,c
  9774   002810  0E00               	movlw	0
  9775   002812  6E3D               	movwf	(___fldiv@a+3)^0,c
  9776   002814                     l3877:
  9777   002814  503A               	movf	___fldiv@a^0,w,c
  9778   002816  103B               	iorwf	(___fldiv@a+1)^0,w,c
  9779   002818  103C               	iorwf	(___fldiv@a+2)^0,w,c
  9780   00281A  103D               	iorwf	(___fldiv@a+3)^0,w,c
  9781   00281C  A4D8               	btfss	status,2,c
  9782   00281E  EF13  F014         	goto	u3731
  9783   002822  EF15  F014         	goto	u3730
  9784   002826                     u3731:
  9785   002826  EF2D  F014         	goto	l3889
  9786   00282A                     u3730:
  9787   00282A  0E00               	movlw	0
  9788   00282C  6E36               	movwf	___fldiv@b^0,c
  9789   00282E  0E00               	movlw	0
  9790   002830  6E37               	movwf	(___fldiv@b+1)^0,c
  9791   002832  0E00               	movlw	0
  9792   002834  6E38               	movwf	(___fldiv@b+2)^0,c
  9793   002836  0E00               	movlw	0
  9794   002838  6E39               	movwf	(___fldiv@b+3)^0,c
  9795   00283A  0E80               	movlw	128
  9796   00283C  1238               	iorwf	(___fldiv@b+2)^0,f,c
  9797   00283E  0E7F               	movlw	127
  9798   002840  1239               	iorwf	(___fldiv@b+3)^0,f,c
  9799   002842                     l3883:
  9800   002842  5046               	movf	___fldiv@sign^0,w,c
  9801   002844  1239               	iorwf	(___fldiv@b+3)^0,f,c
  9802   002846  C036  F036         	movff	___fldiv@b,?___fldiv
  9803   00284A  C037  F037         	movff	___fldiv@b+1,?___fldiv+1
  9804   00284E  C038  F038         	movff	___fldiv@b+2,?___fldiv+2
  9805   002852  C039  F039         	movff	___fldiv@b+3,?___fldiv+3
  9806   002856  EF70  F015         	goto	l1121
  9807   00285A                     l3889:
  9808   00285A  504D               	movf	___fldiv@bexp^0,w,c
  9809   00285C  A4D8               	btfss	status,2,c
  9810   00285E  EF33  F014         	goto	u3741
  9811   002862  EF35  F014         	goto	u3740
  9812   002866                     u3741:
  9813   002866  EF3F  F014         	goto	l3897
  9814   00286A                     u3740:
  9815   00286A  0E00               	movlw	0
  9816   00286C  6E36               	movwf	?___fldiv^0,c
  9817   00286E  0E00               	movlw	0
  9818   002870  6E37               	movwf	(?___fldiv+1)^0,c
  9819   002872  0E00               	movlw	0
  9820   002874  6E38               	movwf	(?___fldiv+2)^0,c
  9821   002876  0E00               	movlw	0
  9822   002878  6E39               	movwf	(?___fldiv+3)^0,c
  9823   00287A  EF70  F015         	goto	l1121
  9824   00287E                     l3897:
  9825   00287E  504E               	movf	___fldiv@aexp^0,w,c
  9826   002880  C04D  F03E         	movff	___fldiv@bexp,??___fldiv
  9827   002884  6A3F               	clrf	(??___fldiv+1)^0,c
  9828   002886  5E3E               	subwf	??___fldiv^0,f,c
  9829   002888  0E00               	movlw	0
  9830   00288A  5A3F               	subwfb	(??___fldiv+1)^0,f,c
  9831   00288C  0E7F               	movlw	127
  9832   00288E  243E               	addwf	??___fldiv^0,w,c
  9833   002890  6E47               	movwf	___fldiv@new_exp^0,c
  9834   002892  0E00               	movlw	0
  9835   002894  203F               	addwfc	(??___fldiv+1)^0,w,c
  9836   002896  6E48               	movwf	(___fldiv@new_exp+1)^0,c
  9837   002898  C036  F042         	movff	___fldiv@b,___fldiv@rem
  9838   00289C  C037  F043         	movff	___fldiv@b+1,___fldiv@rem+1
  9839   0028A0  C038  F044         	movff	___fldiv@b+2,___fldiv@rem+2
  9840   0028A4  C039  F045         	movff	___fldiv@b+3,___fldiv@rem+3
  9841   0028A8  0E00               	movlw	0
  9842   0028AA  6E36               	movwf	___fldiv@b^0,c
  9843   0028AC  0E00               	movlw	0
  9844   0028AE  6E37               	movwf	(___fldiv@b+1)^0,c
  9845   0028B0  0E00               	movlw	0
  9846   0028B2  6E38               	movwf	(___fldiv@b+2)^0,c
  9847   0028B4  0E00               	movlw	0
  9848   0028B6  6E39               	movwf	(___fldiv@b+3)^0,c
  9849   0028B8  0E00               	movlw	0
  9850   0028BA  6E49               	movwf	___fldiv@grs^0,c
  9851   0028BC  0E00               	movlw	0
  9852   0028BE  6E4A               	movwf	(___fldiv@grs+1)^0,c
  9853   0028C0  0E00               	movlw	0
  9854   0028C2  6E4B               	movwf	(___fldiv@grs+2)^0,c
  9855   0028C4  0E00               	movlw	0
  9856   0028C6  6E4C               	movwf	(___fldiv@grs+3)^0,c
  9857   0028C8  0E00               	movlw	0
  9858   0028CA  6E4E               	movwf	___fldiv@aexp^0,c
  9859   0028CC  EFA0  F014         	goto	l1123
  9860   0028D0                     l3907:
  9861   0028D0  504E               	movf	___fldiv@aexp^0,w,c
  9862   0028D2  B4D8               	btfsc	status,2,c
  9863   0028D4  EF6E  F014         	goto	u3751
  9864   0028D8  EF70  F014         	goto	u3750
  9865   0028DC                     u3751:
  9866   0028DC  EF87  F014         	goto	l3915
  9867   0028E0                     u3750:
  9868   0028E0  90D8               	bcf	status,0,c
  9869   0028E2  3642               	rlcf	___fldiv@rem^0,f,c
  9870   0028E4  3643               	rlcf	(___fldiv@rem+1)^0,f,c
  9871   0028E6  3644               	rlcf	(___fldiv@rem+2)^0,f,c
  9872   0028E8  3645               	rlcf	(___fldiv@rem+3)^0,f,c
  9873   0028EA  90D8               	bcf	status,0,c
  9874   0028EC  3636               	rlcf	___fldiv@b^0,f,c
  9875   0028EE  3637               	rlcf	(___fldiv@b+1)^0,f,c
  9876   0028F0  3638               	rlcf	(___fldiv@b+2)^0,f,c
  9877   0028F2  3639               	rlcf	(___fldiv@b+3)^0,f,c
  9878   0028F4  AE4C               	btfss	(___fldiv@grs+3)^0,7,c
  9879   0028F6  EF7F  F014         	goto	u3761
  9880   0028FA  EF81  F014         	goto	u3760
  9881   0028FE                     u3761:
  9882   0028FE  EF82  F014         	goto	l1126
  9883   002902                     u3760:
  9884   002902  8036               	bsf	___fldiv@b^0,0,c
  9885   002904                     l1126:
  9886   002904  90D8               	bcf	status,0,c
  9887   002906  3649               	rlcf	___fldiv@grs^0,f,c
  9888   002908  364A               	rlcf	(___fldiv@grs+1)^0,f,c
  9889   00290A  364B               	rlcf	(___fldiv@grs+2)^0,f,c
  9890   00290C  364C               	rlcf	(___fldiv@grs+3)^0,f,c
  9891   00290E                     l3915:
  9892   00290E  503A               	movf	___fldiv@a^0,w,c
  9893   002910  5C42               	subwf	___fldiv@rem^0,w,c
  9894   002912  503B               	movf	(___fldiv@a+1)^0,w,c
  9895   002914  5843               	subwfb	(___fldiv@rem+1)^0,w,c
  9896   002916  503C               	movf	(___fldiv@a+2)^0,w,c
  9897   002918  5844               	subwfb	(___fldiv@rem+2)^0,w,c
  9898   00291A  503D               	movf	(___fldiv@a+3)^0,w,c
  9899   00291C  5845               	subwfb	(___fldiv@rem+3)^0,w,c
  9900   00291E  A0D8               	btfss	status,0,c
  9901   002920  EF94  F014         	goto	u3771
  9902   002924  EF96  F014         	goto	u3770
  9903   002928                     u3771:
  9904   002928  EF9F  F014         	goto	l3921
  9905   00292C                     u3770:
  9906   00292C  8C4C               	bsf	(___fldiv@grs+3)^0,6,c
  9907   00292E  503A               	movf	___fldiv@a^0,w,c
  9908   002930  5E42               	subwf	___fldiv@rem^0,f,c
  9909   002932  503B               	movf	(___fldiv@a+1)^0,w,c
  9910   002934  5A43               	subwfb	(___fldiv@rem+1)^0,f,c
  9911   002936  503C               	movf	(___fldiv@a+2)^0,w,c
  9912   002938  5A44               	subwfb	(___fldiv@rem+2)^0,f,c
  9913   00293A  503D               	movf	(___fldiv@a+3)^0,w,c
  9914   00293C  5A45               	subwfb	(___fldiv@rem+3)^0,f,c
  9915   00293E                     l3921:
  9916   00293E  2A4E               	incf	___fldiv@aexp^0,f,c
  9917   002940                     l1123:
  9918   002940  0E19               	movlw	25
  9919   002942  644E               	cpfsgt	___fldiv@aexp^0,c
  9920   002944  EFA6  F014         	goto	u3781
  9921   002948  EFA8  F014         	goto	u3780
  9922   00294C                     u3781:
  9923   00294C  EF68  F014         	goto	l3907
  9924   002950                     u3780:
  9925   002950  5042               	movf	___fldiv@rem^0,w,c
  9926   002952  1043               	iorwf	(___fldiv@rem+1)^0,w,c
  9927   002954  1044               	iorwf	(___fldiv@rem+2)^0,w,c
  9928   002956  1045               	iorwf	(___fldiv@rem+3)^0,w,c
  9929   002958  B4D8               	btfsc	status,2,c
  9930   00295A  EFB1  F014         	goto	u3791
  9931   00295E  EFB3  F014         	goto	u3790
  9932   002962                     u3791:
  9933   002962  EFCB  F014         	goto	l3933
  9934   002966                     u3790:
  9935   002966  8049               	bsf	___fldiv@grs^0,0,c
  9936   002968  EFCB  F014         	goto	l3933
  9937   00296C                     l3927:
  9938   00296C  90D8               	bcf	status,0,c
  9939   00296E  3636               	rlcf	___fldiv@b^0,f,c
  9940   002970  3637               	rlcf	(___fldiv@b+1)^0,f,c
  9941   002972  3638               	rlcf	(___fldiv@b+2)^0,f,c
  9942   002974  3639               	rlcf	(___fldiv@b+3)^0,f,c
  9943   002976  AE4C               	btfss	(___fldiv@grs+3)^0,7,c
  9944   002978  EFC0  F014         	goto	u3801
  9945   00297C  EFC2  F014         	goto	u3800
  9946   002980                     u3801:
  9947   002980  EFC3  F014         	goto	l1132
  9948   002984                     u3800:
  9949   002984  8036               	bsf	___fldiv@b^0,0,c
  9950   002986                     l1132:
  9951   002986  90D8               	bcf	status,0,c
  9952   002988  3649               	rlcf	___fldiv@grs^0,f,c
  9953   00298A  364A               	rlcf	(___fldiv@grs+1)^0,f,c
  9954   00298C  364B               	rlcf	(___fldiv@grs+2)^0,f,c
  9955   00298E  364C               	rlcf	(___fldiv@grs+3)^0,f,c
  9956   002990  0647               	decf	___fldiv@new_exp^0,f,c
  9957   002992  A0D8               	btfss	status,0,c
  9958   002994  0648               	decf	(___fldiv@new_exp+1)^0,f,c
  9959   002996                     l3933:
  9960   002996  AE38               	btfss	(___fldiv@b+2)^0,7,c
  9961   002998  EFD0  F014         	goto	u3811
  9962   00299C  EFD2  F014         	goto	u3810
  9963   0029A0                     u3811:
  9964   0029A0  EFB6  F014         	goto	l3927
  9965   0029A4                     u3810:
  9966   0029A4  0E00               	movlw	0
  9967   0029A6  6E4E               	movwf	___fldiv@aexp^0,c
  9968   0029A8  AE4C               	btfss	(___fldiv@grs+3)^0,7,c
  9969   0029AA  EFD9  F014         	goto	u3821
  9970   0029AE  EFDB  F014         	goto	u3820
  9971   0029B2                     u3821:
  9972   0029B2  EFFF  F014         	goto	l1134
  9973   0029B6                     u3820:
  9974   0029B6  0EFF               	movlw	255
  9975   0029B8  1449               	andwf	___fldiv@grs^0,w,c
  9976   0029BA  6E3E               	movwf	??___fldiv^0,c
  9977   0029BC  0EFF               	movlw	255
  9978   0029BE  144A               	andwf	(___fldiv@grs+1)^0,w,c
  9979   0029C0  6E3F               	movwf	(??___fldiv+1)^0,c
  9980   0029C2  0EFF               	movlw	255
  9981   0029C4  144B               	andwf	(___fldiv@grs+2)^0,w,c
  9982   0029C6  6E40               	movwf	(??___fldiv+2)^0,c
  9983   0029C8  0E7F               	movlw	127
  9984   0029CA  144C               	andwf	(___fldiv@grs+3)^0,w,c
  9985   0029CC  6E41               	movwf	(??___fldiv+3)^0,c
  9986   0029CE  503E               	movf	??___fldiv^0,w,c
  9987   0029D0  103F               	iorwf	(??___fldiv+1)^0,w,c
  9988   0029D2  1040               	iorwf	(??___fldiv+2)^0,w,c
  9989   0029D4  1041               	iorwf	(??___fldiv+3)^0,w,c
  9990   0029D6  B4D8               	btfsc	status,2,c
  9991   0029D8  EFF0  F014         	goto	u3831
  9992   0029DC  EFF2  F014         	goto	u3830
  9993   0029E0                     u3831:
  9994   0029E0  EFF6  F014         	goto	l1135
  9995   0029E4                     u3830:
  9996   0029E4                     l3941:
  9997   0029E4  0E01               	movlw	1
  9998   0029E6  6E4E               	movwf	___fldiv@aexp^0,c
  9999   0029E8  EFFF  F014         	goto	l1134
 10000   0029EC                     l1135:
 10001   0029EC  A036               	btfss	___fldiv@b^0,0,c
 10002   0029EE  EFFB  F014         	goto	u3841
 10003   0029F2  EFFD  F014         	goto	u3840
 10004   0029F6                     u3841:
 10005   0029F6  EFFF  F014         	goto	l1134
 10006   0029FA                     u3840:
 10007   0029FA  EFF2  F014         	goto	l3941
 10008   0029FE                     l1134:
 10009   0029FE  504E               	movf	___fldiv@aexp^0,w,c
 10010   002A00  B4D8               	btfsc	status,2,c
 10011   002A02  EF05  F015         	goto	u3851
 10012   002A06  EF07  F015         	goto	u3850
 10013   002A0A                     u3851:
 10014   002A0A  EF2B  F015         	goto	l3953
 10015   002A0E                     u3850:
 10016   002A0E  0E01               	movlw	1
 10017   002A10  2636               	addwf	___fldiv@b^0,f,c
 10018   002A12  0E00               	movlw	0
 10019   002A14  2237               	addwfc	(___fldiv@b+1)^0,f,c
 10020   002A16  2238               	addwfc	(___fldiv@b+2)^0,f,c
 10021   002A18  2239               	addwfc	(___fldiv@b+3)^0,f,c
 10022   002A1A  A039               	btfss	(___fldiv@b+3)^0,0,c
 10023   002A1C  EF12  F015         	goto	u3861
 10024   002A20  EF14  F015         	goto	u3860
 10025   002A24                     u3861:
 10026   002A24  EF2B  F015         	goto	l3953
 10027   002A28                     u3860:
 10028   002A28  C036  F03E         	movff	___fldiv@b,??___fldiv
 10029   002A2C  C037  F03F         	movff	___fldiv@b+1,??___fldiv+1
 10030   002A30  C038  F040         	movff	___fldiv@b+2,??___fldiv+2
 10031   002A34  C039  F041         	movff	___fldiv@b+3,??___fldiv+3
 10032   002A38  3441               	rlcf	(??___fldiv+3)^0,w,c
 10033   002A3A  3241               	rrcf	(??___fldiv+3)^0,f,c
 10034   002A3C  3240               	rrcf	(??___fldiv+2)^0,f,c
 10035   002A3E  323F               	rrcf	(??___fldiv+1)^0,f,c
 10036   002A40  323E               	rrcf	??___fldiv^0,f,c
 10037   002A42  C03E  F036         	movff	??___fldiv,___fldiv@b
 10038   002A46  C03F  F037         	movff	??___fldiv+1,___fldiv@b+1
 10039   002A4A  C040  F038         	movff	??___fldiv+2,___fldiv@b+2
 10040   002A4E  C041  F039         	movff	??___fldiv+3,___fldiv@b+3
 10041   002A52  4A47               	infsnz	___fldiv@new_exp^0,f,c
 10042   002A54  2A48               	incf	(___fldiv@new_exp+1)^0,f,c
 10043   002A56                     l3953:
 10044   002A56  BE48               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10045   002A58  EF36  F015         	goto	u3871
 10046   002A5C  5048               	movf	(___fldiv@new_exp+1)^0,w,c
 10047   002A5E  E108               	bnz	u3870
 10048   002A60  2847               	incf	___fldiv@new_exp^0,w,c
 10049   002A62  A0D8               	btfss	status,0,c
 10050   002A64  EF36  F015         	goto	u3871
 10051   002A68  EF38  F015         	goto	u3870
 10052   002A6C                     u3871:
 10053   002A6C  EF43  F015         	goto	l3957
 10054   002A70                     u3870:
 10055   002A70  0E00               	movlw	0
 10056   002A72  6E48               	movwf	(___fldiv@new_exp+1)^0,c
 10057   002A74  6847               	setf	___fldiv@new_exp^0,c
 10058   002A76  0E00               	movlw	0
 10059   002A78  6E36               	movwf	___fldiv@b^0,c
 10060   002A7A  0E00               	movlw	0
 10061   002A7C  6E37               	movwf	(___fldiv@b+1)^0,c
 10062   002A7E  0E00               	movlw	0
 10063   002A80  6E38               	movwf	(___fldiv@b+2)^0,c
 10064   002A82  0E00               	movlw	0
 10065   002A84  6E39               	movwf	(___fldiv@b+3)^0,c
 10066   002A86                     l3957:
 10067   002A86  BE48               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10068   002A88  EF50  F015         	goto	u3880
 10069   002A8C  5048               	movf	(___fldiv@new_exp+1)^0,w,c
 10070   002A8E  E106               	bnz	u3881
 10071   002A90  0447               	decf	___fldiv@new_exp^0,w,c
 10072   002A92  B0D8               	btfsc	status,0,c
 10073   002A94  EF4E  F015         	goto	u3881
 10074   002A98  EF50  F015         	goto	u3880
 10075   002A9C                     u3881:
 10076   002A9C  EF5E  F015         	goto	l3961
 10077   002AA0                     u3880:
 10078   002AA0  0E00               	movlw	0
 10079   002AA2  6E48               	movwf	(___fldiv@new_exp+1)^0,c
 10080   002AA4  0E00               	movlw	0
 10081   002AA6  6E47               	movwf	___fldiv@new_exp^0,c
 10082   002AA8  0E00               	movlw	0
 10083   002AAA  6E36               	movwf	___fldiv@b^0,c
 10084   002AAC  0E00               	movlw	0
 10085   002AAE  6E37               	movwf	(___fldiv@b+1)^0,c
 10086   002AB0  0E00               	movlw	0
 10087   002AB2  6E38               	movwf	(___fldiv@b+2)^0,c
 10088   002AB4  0E00               	movlw	0
 10089   002AB6  6E39               	movwf	(___fldiv@b+3)^0,c
 10090   002AB8  0E00               	movlw	0
 10091   002ABA  6E46               	movwf	___fldiv@sign^0,c
 10092   002ABC                     l3961:
 10093   002ABC  C047  F04D         	movff	___fldiv@new_exp,___fldiv@bexp
 10094   002AC0  A04D               	btfss	___fldiv@bexp^0,0,c
 10095   002AC2  EF65  F015         	goto	u3891
 10096   002AC6  EF67  F015         	goto	u3890
 10097   002ACA                     u3891:
 10098   002ACA  EF6A  F015         	goto	l3967
 10099   002ACE                     u3890:
 10100   002ACE  8E38               	bsf	(___fldiv@b+2)^0,7,c
 10101   002AD0  EF6B  F015         	goto	l3969
 10102   002AD4                     l3967:
 10103   002AD4  9E38               	bcf	(___fldiv@b+2)^0,7,c
 10104   002AD6                     l3969:
 10105   002AD6  90D8               	bcf	status,0,c
 10106   002AD8  304D               	rrcf	___fldiv@bexp^0,w,c
 10107   002ADA  6E39               	movwf	(___fldiv@b+3)^0,c
 10108   002ADC  EF21  F014         	goto	l3883
 10109   002AE0                     l1121:
 10110   002AE0  0012               	return		;funcret
 10111   002AE2                     __end_of___fldiv:
 10112                           	callstack 0
 10113                           
 10114 ;; *************** function _ambientCal *****************
 10115 ;; Defined at:
 10116 ;;		line 99 in file "color.c"
 10117 ;; Parameters:    Size  Location     Type
 10118 ;;  v               2   17[COMRAM] PTR struct RGB
 10119 ;;		 -> main@ambientRGBVal(8), 
 10120 ;; Auto vars:     Size  Location     Type
 10121 ;;  i               2   21[COMRAM] int 
 10122 ;; Return value:  Size  Location     Type
 10123 ;;                  1    wreg      void 
 10124 ;; Registers used:
 10125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10126 ;; Tracked objects:
 10127 ;;		On entry : 0/0
 10128 ;;		On exit  : 0/0
 10129 ;;		Unchanged: 0/0
 10130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10131 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10132 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10133 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10134 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10135 ;;Total ram usage:        6 bytes
 10136 ;; Hardware stack levels used: 1
 10137 ;; Hardware stack levels required when called: 6
 10138 ;; This function calls:
 10139 ;;		_getColor
 10140 ;; This function is called by:
 10141 ;;		_main
 10142 ;; This function uses a non-reentrant model
 10143 ;;
 10144                           
 10145                           	psect	text43
 10146   003F52                     __ptext43:
 10147                           	callstack 0
 10148   003F52                     _ambientCal:
 10149                           	callstack 24
 10150   003F52                     
 10151                           ;color.c: 102:     for(int i = 0;i<20;i++){
 10152   003F52  0E00               	movlw	0
 10153   003F54  6E17               	movwf	(ambientCal@i+1)^0,c
 10154   003F56  0E00               	movlw	0
 10155   003F58  6E16               	movwf	ambientCal@i^0,c
 10156   003F5A                     l4197:
 10157                           
 10158                           ;color.c: 103:             LATDbits.LATD7 = !LATDbits.LATD7;
 10159   003F5A  AE7C               	btfss	124,7,c	;volatile
 10160   003F5C  EFB2  F01F         	goto	u4241
 10161   003F60  EFB6  F01F         	goto	u4240
 10162   003F64                     u4241:
 10163   003F64  6A14               	clrf	??_ambientCal^0,c
 10164   003F66  2A14               	incf	??_ambientCal^0,f,c
 10165   003F68  EFB7  F01F         	goto	u4258
 10166   003F6C                     u4240:
 10167   003F6C  6A14               	clrf	??_ambientCal^0,c
 10168   003F6E                     u4258:
 10169   003F6E  3214               	rrcf	??_ambientCal^0,f,c
 10170   003F70  3214               	rrcf	??_ambientCal^0,f,c
 10171   003F72  507C               	movf	124,w,c	;volatile
 10172   003F74  1814               	xorwf	??_ambientCal^0,w,c
 10173   003F76  0B7F               	andlw	-129
 10174   003F78  1814               	xorwf	??_ambientCal^0,w,c
 10175   003F7A  6E7C               	movwf	124,c	;volatile
 10176   003F7C                     
 10177                           ;color.c: 104:             _delay((unsigned long)((100)*(64000000/4000.0)));
 10178   003F7C  0E09               	movlw	9
 10179   003F7E  6E15               	movwf	(??_ambientCal+1)^0,c
 10180   003F80  0E1E               	movlw	30
 10181   003F82  6E14               	movwf	??_ambientCal^0,c
 10182   003F84  0EE4               	movlw	228
 10183   003F86                     u6457:
 10184   003F86  2EE8               	decfsz	wreg,f,c
 10185   003F88  D7FE               	bra	u6457
 10186   003F8A  2E14               	decfsz	??_ambientCal^0,f,c
 10187   003F8C  D7FC               	bra	u6457
 10188   003F8E  2E15               	decfsz	(??_ambientCal+1)^0,f,c
 10189   003F90  D7FA               	bra	u6457
 10190   003F92  D000               	nop2	
 10191                           
 10192                           ;color.c: 105:             }
 10193   003F94  4A16               	infsnz	ambientCal@i^0,f,c
 10194   003F96  2A17               	incf	(ambientCal@i+1)^0,f,c
 10195   003F98  BE17               	btfsc	(ambientCal@i+1)^0,7,c
 10196   003F9A  EFD8  F01F         	goto	u4261
 10197   003F9E  5017               	movf	(ambientCal@i+1)^0,w,c
 10198   003FA0  E109               	bnz	u4260
 10199   003FA2  0E14               	movlw	20
 10200   003FA4  5C16               	subwf	ambientCal@i^0,w,c
 10201   003FA6  A0D8               	btfss	status,0,c
 10202   003FA8  EFD8  F01F         	goto	u4261
 10203   003FAC  EFDA  F01F         	goto	u4260
 10204   003FB0                     u4261:
 10205   003FB0  EFAD  F01F         	goto	l4197
 10206   003FB4                     u4260:
 10207   003FB4                     
 10208                           ;color.c: 106:             LATDbits.LATD7 = !LATDbits.LATD7;
 10209   003FB4  AE7C               	btfss	124,7,c	;volatile
 10210   003FB6  EFDF  F01F         	goto	u4271
 10211   003FBA  EFE3  F01F         	goto	u4270
 10212   003FBE                     u4271:
 10213   003FBE  6A14               	clrf	??_ambientCal^0,c
 10214   003FC0  2A14               	incf	??_ambientCal^0,f,c
 10215   003FC2  EFE4  F01F         	goto	u4288
 10216   003FC6                     u4270:
 10217   003FC6  6A14               	clrf	??_ambientCal^0,c
 10218   003FC8                     u4288:
 10219   003FC8  3214               	rrcf	??_ambientCal^0,f,c
 10220   003FCA  3214               	rrcf	??_ambientCal^0,f,c
 10221   003FCC  507C               	movf	124,w,c	;volatile
 10222   003FCE  1814               	xorwf	??_ambientCal^0,w,c
 10223   003FD0  0B7F               	andlw	-129
 10224   003FD2  1814               	xorwf	??_ambientCal^0,w,c
 10225   003FD4  6E7C               	movwf	124,c	;volatile
 10226   003FD6                     
 10227                           ;color.c: 107:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10228   003FD6  0E29               	movlw	41
 10229   003FD8  6E15               	movwf	(??_ambientCal+1)^0,c
 10230   003FDA  0E96               	movlw	150
 10231   003FDC  6E14               	movwf	??_ambientCal^0,c
 10232   003FDE  0E7F               	movlw	127
 10233   003FE0                     u6467:
 10234   003FE0  2EE8               	decfsz	wreg,f,c
 10235   003FE2  D7FE               	bra	u6467
 10236   003FE4  2E14               	decfsz	??_ambientCal^0,f,c
 10237   003FE6  D7FC               	bra	u6467
 10238   003FE8  2E15               	decfsz	(??_ambientCal+1)^0,f,c
 10239   003FEA  D7FA               	bra	u6467
 10240   003FEC  F000               	nop	
 10241   003FEE                     
 10242                           ;color.c: 108:             getColor(v);
 10243   003FEE  C012  F010         	movff	ambientCal@v,getColor@v
 10244   003FF2  C013  F011         	movff	ambientCal@v+1,getColor@v+1
 10245   003FF6  EC6B  F023         	call	_getColor	;wreg free
 10246   003FFA                     
 10247                           ;color.c: 109:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10248   003FFA  0E29               	movlw	41
 10249   003FFC  6E15               	movwf	(??_ambientCal+1)^0,c
 10250   003FFE  0E96               	movlw	150
 10251   004000  6E14               	movwf	??_ambientCal^0,c
 10252   004002  0E7F               	movlw	127
 10253   004004                     u6477:
 10254   004004  2EE8               	decfsz	wreg,f,c
 10255   004006  D7FE               	bra	u6477
 10256   004008  2E14               	decfsz	??_ambientCal^0,f,c
 10257   00400A  D7FC               	bra	u6477
 10258   00400C  2E15               	decfsz	(??_ambientCal+1)^0,f,c
 10259   00400E  D7FA               	bra	u6477
 10260   004010  F000               	nop	
 10261   004012                     
 10262                           ;color.c: 110:             LATDbits.LATD7 = !LATDbits.LATD7;
 10263   004012  AE7C               	btfss	124,7,c	;volatile
 10264   004014  EF0E  F020         	goto	u4291
 10265   004018  EF12  F020         	goto	u4290
 10266   00401C                     u4291:
 10267   00401C  6A14               	clrf	??_ambientCal^0,c
 10268   00401E  2A14               	incf	??_ambientCal^0,f,c
 10269   004020  EF13  F020         	goto	u4308
 10270   004024                     u4290:
 10271   004024  6A14               	clrf	??_ambientCal^0,c
 10272   004026                     u4308:
 10273   004026  3214               	rrcf	??_ambientCal^0,f,c
 10274   004028  3214               	rrcf	??_ambientCal^0,f,c
 10275   00402A  507C               	movf	124,w,c	;volatile
 10276   00402C  1814               	xorwf	??_ambientCal^0,w,c
 10277   00402E  0B7F               	andlw	-129
 10278   004030  1814               	xorwf	??_ambientCal^0,w,c
 10279   004032  6E7C               	movwf	124,c	;volatile
 10280   004034  0012               	return		;funcret
 10281   004036                     __end_of_ambientCal:
 10282                           	callstack 0
 10283                           
 10284 ;; *************** function _getColor *****************
 10285 ;; Defined at:
 10286 ;;		line 91 in file "color.c"
 10287 ;; Parameters:    Size  Location     Type
 10288 ;;  v               2   15[COMRAM] PTR struct RGB
 10289 ;;		 -> main@whiteRGBVal(8), main@RGBVal(8), main@ambientRGBVal(8), colorDetect@RGBVal(8), 
 10290 ;; Auto vars:     Size  Location     Type
 10291 ;;		None
 10292 ;; Return value:  Size  Location     Type
 10293 ;;                  1    wreg      void 
 10294 ;; Registers used:
 10295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10296 ;; Tracked objects:
 10297 ;;		On entry : 0/0
 10298 ;;		On exit  : 0/0
 10299 ;;		Unchanged: 0/0
 10300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10301 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10304 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10305 ;;Total ram usage:        2 bytes
 10306 ;; Hardware stack levels used: 1
 10307 ;; Hardware stack levels required when called: 5
 10308 ;; This function calls:
 10309 ;;		_color_read_Blue
 10310 ;;		_color_read_Clear
 10311 ;;		_color_read_Green
 10312 ;;		_color_read_Red
 10313 ;; This function is called by:
 10314 ;;		_ambientCal
 10315 ;;		_whiteCal
 10316 ;;		_colorDetect
 10317 ;;		_main
 10318 ;; This function uses a non-reentrant model
 10319 ;;
 10320                           
 10321                           	psect	text44
 10322   0046D6                     __ptext44:
 10323                           	callstack 0
 10324   0046D6                     _getColor:
 10325                           	callstack 24
 10326   0046D6                     
 10327                           ;color.c: 92:     v->R = color_read_Red();
 10328   0046D6  ECED  F023         	call	_color_read_Red	;wreg free
 10329   0046DA  C010  FFD9         	movff	getColor@v,fsr2l
 10330   0046DE  C011  FFDA         	movff	getColor@v+1,fsr2h
 10331   0046E2  C009  FFDE         	movff	?_color_read_Red,postinc2
 10332   0046E6  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
 10333                           
 10334                           ;color.c: 93:     v->G = color_read_Green();
 10335   0046EA  EC15  F024         	call	_color_read_Green	;wreg free
 10336   0046EE  EE20 F002          	lfsr	2,2
 10337   0046F2  5010               	movf	getColor@v^0,w,c
 10338   0046F4  26D9               	addwf	fsr2l,f,c
 10339   0046F6  5011               	movf	(getColor@v+1)^0,w,c
 10340   0046F8  22DA               	addwfc	fsr2h,f,c
 10341   0046FA  C009  FFDE         	movff	?_color_read_Green,postinc2
 10342   0046FE  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
 10343                           
 10344                           ;color.c: 94:     v->B = color_read_Blue();
 10345   004702  EC65  F024         	call	_color_read_Blue	;wreg free
 10346   004706  EE20 F004          	lfsr	2,4
 10347   00470A  5010               	movf	getColor@v^0,w,c
 10348   00470C  26D9               	addwf	fsr2l,f,c
 10349   00470E  5011               	movf	(getColor@v+1)^0,w,c
 10350   004710  22DA               	addwfc	fsr2h,f,c
 10351   004712  C009  FFDE         	movff	?_color_read_Blue,postinc2
 10352   004716  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
 10353                           
 10354                           ;color.c: 95:     v->C = color_read_Clear();
 10355   00471A  EC3D  F024         	call	_color_read_Clear	;wreg free
 10356   00471E  EE20 F006          	lfsr	2,6
 10357   004722  5010               	movf	getColor@v^0,w,c
 10358   004724  26D9               	addwf	fsr2l,f,c
 10359   004726  5011               	movf	(getColor@v+1)^0,w,c
 10360   004728  22DA               	addwfc	fsr2h,f,c
 10361   00472A  C009  FFDE         	movff	?_color_read_Clear,postinc2
 10362   00472E  C00A  FFDD         	movff	?_color_read_Clear+1,postdec2
 10363   004732  0012               	return		;funcret
 10364   004734                     __end_of_getColor:
 10365                           	callstack 0
 10366                           
 10367 ;; *************** function _color_read_Red *****************
 10368 ;; Defined at:
 10369 ;;		line 33 in file "color.c"
 10370 ;; Parameters:    Size  Location     Type
 10371 ;;		None
 10372 ;; Auto vars:     Size  Location     Type
 10373 ;;  tmp             2   13[COMRAM] unsigned int 
 10374 ;; Return value:  Size  Location     Type
 10375 ;;                  2    8[COMRAM] unsigned int 
 10376 ;; Registers used:
 10377 ;;		wreg, status,2, status,0, cstack
 10378 ;; Tracked objects:
 10379 ;;		On entry : 0/0
 10380 ;;		On exit  : 0/0
 10381 ;;		Unchanged: 0/0
 10382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10383 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10384 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10385 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10386 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10387 ;;Total ram usage:        7 bytes
 10388 ;; Hardware stack levels used: 1
 10389 ;; Hardware stack levels required when called: 4
 10390 ;; This function calls:
 10391 ;;		_I2C_2_Master_Read
 10392 ;;		_I2C_2_Master_RepStart
 10393 ;;		_I2C_2_Master_Start
 10394 ;;		_I2C_2_Master_Stop
 10395 ;;		_I2C_2_Master_Write
 10396 ;; This function is called by:
 10397 ;;		_getColor
 10398 ;; This function uses a non-reentrant model
 10399 ;;
 10400                           
 10401                           	psect	text45
 10402   0047DA                     __ptext45:
 10403                           	callstack 0
 10404   0047DA                     _color_read_Red:
 10405                           	callstack 24
 10406   0047DA                     
 10407                           ;color.c: 35:  unsigned int tmp;;color.c: 36:  I2C_2_Master_Start();
 10408   0047DA  EC36  F026         	call	_I2C_2_Master_Start	;wreg free
 10409                           
 10410                           ;color.c: 37:  I2C_2_Master_Write(0x52 | 0x00);
 10411   0047DE  0E52               	movlw	82
 10412   0047E0  EC2B  F026         	call	_I2C_2_Master_Write
 10413                           
 10414                           ;color.c: 38:  I2C_2_Master_Write(0xA0 | 0x16);
 10415   0047E4  0EB6               	movlw	182
 10416   0047E6  EC2B  F026         	call	_I2C_2_Master_Write
 10417                           
 10418                           ;color.c: 39:  I2C_2_Master_RepStart();
 10419   0047EA  EC3B  F026         	call	_I2C_2_Master_RepStart	;wreg free
 10420                           
 10421                           ;color.c: 40:  I2C_2_Master_Write(0x52 | 0x01);
 10422   0047EE  0E53               	movlw	83
 10423   0047F0  EC2B  F026         	call	_I2C_2_Master_Write
 10424                           
 10425                           ;color.c: 41:  tmp=I2C_2_Master_Read(1);
 10426   0047F4  0E01               	movlw	1
 10427   0047F6  ECF7  F024         	call	_I2C_2_Master_Read
 10428   0047FA  6E0B               	movwf	??_color_read_Red^0,c
 10429   0047FC  500B               	movf	??_color_read_Red^0,w,c
 10430   0047FE  6E0E               	movwf	color_read_Red@tmp^0,c
 10431   004800  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
 10432                           
 10433                           ;color.c: 42:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 10434   004802  0E00               	movlw	0
 10435   004804  ECF7  F024         	call	_I2C_2_Master_Read
 10436   004808  6E0B               	movwf	??_color_read_Red^0,c
 10437   00480A  500B               	movf	??_color_read_Red^0,w,c
 10438   00480C  6E0D               	movwf	(??_color_read_Red+2)^0,c
 10439   00480E  6A0C               	clrf	(??_color_read_Red+1)^0,c
 10440   004810  500E               	movf	color_read_Red@tmp^0,w,c
 10441   004812  100C               	iorwf	(??_color_read_Red+1)^0,w,c
 10442   004814  6E0E               	movwf	color_read_Red@tmp^0,c
 10443   004816  500F               	movf	(color_read_Red@tmp+1)^0,w,c
 10444   004818  100D               	iorwf	(??_color_read_Red+2)^0,w,c
 10445   00481A  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
 10446                           
 10447                           ;color.c: 43:  I2C_2_Master_Stop();
 10448   00481C  EC31  F026         	call	_I2C_2_Master_Stop	;wreg free
 10449   004820                     
 10450                           ;color.c: 44:  return tmp;
 10451   004820  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
 10452   004824  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
 10453   004828  0012               	return		;funcret
 10454   00482A                     __end_of_color_read_Red:
 10455                           	callstack 0
 10456                           
 10457 ;; *************** function _color_read_Green *****************
 10458 ;; Defined at:
 10459 ;;		line 47 in file "color.c"
 10460 ;; Parameters:    Size  Location     Type
 10461 ;;		None
 10462 ;; Auto vars:     Size  Location     Type
 10463 ;;  tmp             2   13[COMRAM] unsigned int 
 10464 ;; Return value:  Size  Location     Type
 10465 ;;                  2    8[COMRAM] unsigned int 
 10466 ;; Registers used:
 10467 ;;		wreg, status,2, status,0, cstack
 10468 ;; Tracked objects:
 10469 ;;		On entry : 0/0
 10470 ;;		On exit  : 0/0
 10471 ;;		Unchanged: 0/0
 10472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10473 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10474 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10475 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10476 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10477 ;;Total ram usage:        7 bytes
 10478 ;; Hardware stack levels used: 1
 10479 ;; Hardware stack levels required when called: 4
 10480 ;; This function calls:
 10481 ;;		_I2C_2_Master_Read
 10482 ;;		_I2C_2_Master_RepStart
 10483 ;;		_I2C_2_Master_Start
 10484 ;;		_I2C_2_Master_Stop
 10485 ;;		_I2C_2_Master_Write
 10486 ;; This function is called by:
 10487 ;;		_getColor
 10488 ;; This function uses a non-reentrant model
 10489 ;;
 10490                           
 10491                           	psect	text46
 10492   00482A                     __ptext46:
 10493                           	callstack 0
 10494   00482A                     _color_read_Green:
 10495                           	callstack 24
 10496   00482A                     
 10497                           ;color.c: 49:  unsigned int tmp;;color.c: 50:  I2C_2_Master_Start();
 10498   00482A  EC36  F026         	call	_I2C_2_Master_Start	;wreg free
 10499                           
 10500                           ;color.c: 51:  I2C_2_Master_Write(0x52 | 0x00);
 10501   00482E  0E52               	movlw	82
 10502   004830  EC2B  F026         	call	_I2C_2_Master_Write
 10503                           
 10504                           ;color.c: 52:  I2C_2_Master_Write(0xA0 | 0x18);
 10505   004834  0EB8               	movlw	184
 10506   004836  EC2B  F026         	call	_I2C_2_Master_Write
 10507                           
 10508                           ;color.c: 53:  I2C_2_Master_RepStart();
 10509   00483A  EC3B  F026         	call	_I2C_2_Master_RepStart	;wreg free
 10510                           
 10511                           ;color.c: 54:  I2C_2_Master_Write(0x52 | 0x01);
 10512   00483E  0E53               	movlw	83
 10513   004840  EC2B  F026         	call	_I2C_2_Master_Write
 10514                           
 10515                           ;color.c: 55:  tmp=I2C_2_Master_Read(1);
 10516   004844  0E01               	movlw	1
 10517   004846  ECF7  F024         	call	_I2C_2_Master_Read
 10518   00484A  6E0B               	movwf	??_color_read_Green^0,c
 10519   00484C  500B               	movf	??_color_read_Green^0,w,c
 10520   00484E  6E0E               	movwf	color_read_Green@tmp^0,c
 10521   004850  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
 10522                           
 10523                           ;color.c: 56:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 10524   004852  0E00               	movlw	0
 10525   004854  ECF7  F024         	call	_I2C_2_Master_Read
 10526   004858  6E0B               	movwf	??_color_read_Green^0,c
 10527   00485A  500B               	movf	??_color_read_Green^0,w,c
 10528   00485C  6E0D               	movwf	(??_color_read_Green+2)^0,c
 10529   00485E  6A0C               	clrf	(??_color_read_Green+1)^0,c
 10530   004860  500E               	movf	color_read_Green@tmp^0,w,c
 10531   004862  100C               	iorwf	(??_color_read_Green+1)^0,w,c
 10532   004864  6E0E               	movwf	color_read_Green@tmp^0,c
 10533   004866  500F               	movf	(color_read_Green@tmp+1)^0,w,c
 10534   004868  100D               	iorwf	(??_color_read_Green+2)^0,w,c
 10535   00486A  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
 10536                           
 10537                           ;color.c: 57:  I2C_2_Master_Stop();
 10538   00486C  EC31  F026         	call	_I2C_2_Master_Stop	;wreg free
 10539   004870                     
 10540                           ;color.c: 58:  return tmp;
 10541   004870  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
 10542   004874  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
 10543   004878  0012               	return		;funcret
 10544   00487A                     __end_of_color_read_Green:
 10545                           	callstack 0
 10546                           
 10547 ;; *************** function _color_read_Clear *****************
 10548 ;; Defined at:
 10549 ;;		line 76 in file "color.c"
 10550 ;; Parameters:    Size  Location     Type
 10551 ;;		None
 10552 ;; Auto vars:     Size  Location     Type
 10553 ;;  tmp             2   13[COMRAM] unsigned int 
 10554 ;; Return value:  Size  Location     Type
 10555 ;;                  2    8[COMRAM] unsigned int 
 10556 ;; Registers used:
 10557 ;;		wreg, status,2, status,0, cstack
 10558 ;; Tracked objects:
 10559 ;;		On entry : 0/0
 10560 ;;		On exit  : 0/0
 10561 ;;		Unchanged: 0/0
 10562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10563 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10564 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10565 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10566 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10567 ;;Total ram usage:        7 bytes
 10568 ;; Hardware stack levels used: 1
 10569 ;; Hardware stack levels required when called: 4
 10570 ;; This function calls:
 10571 ;;		_I2C_2_Master_Read
 10572 ;;		_I2C_2_Master_RepStart
 10573 ;;		_I2C_2_Master_Start
 10574 ;;		_I2C_2_Master_Stop
 10575 ;;		_I2C_2_Master_Write
 10576 ;; This function is called by:
 10577 ;;		_getColor
 10578 ;; This function uses a non-reentrant model
 10579 ;;
 10580                           
 10581                           	psect	text47
 10582   00487A                     __ptext47:
 10583                           	callstack 0
 10584   00487A                     _color_read_Clear:
 10585                           	callstack 24
 10586   00487A                     
 10587                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
 10588   00487A  EC36  F026         	call	_I2C_2_Master_Start	;wreg free
 10589                           
 10590                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
 10591   00487E  0E52               	movlw	82
 10592   004880  EC2B  F026         	call	_I2C_2_Master_Write
 10593                           
 10594                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x14);
 10595   004884  0EB4               	movlw	180
 10596   004886  EC2B  F026         	call	_I2C_2_Master_Write
 10597                           
 10598                           ;color.c: 82:  I2C_2_Master_RepStart();
 10599   00488A  EC3B  F026         	call	_I2C_2_Master_RepStart	;wreg free
 10600                           
 10601                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
 10602   00488E  0E53               	movlw	83
 10603   004890  EC2B  F026         	call	_I2C_2_Master_Write
 10604                           
 10605                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
 10606   004894  0E01               	movlw	1
 10607   004896  ECF7  F024         	call	_I2C_2_Master_Read
 10608   00489A  6E0B               	movwf	??_color_read_Clear^0,c
 10609   00489C  500B               	movf	??_color_read_Clear^0,w,c
 10610   00489E  6E0E               	movwf	color_read_Clear@tmp^0,c
 10611   0048A0  6A0F               	clrf	(color_read_Clear@tmp+1)^0,c
 10612                           
 10613                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 10614   0048A2  0E00               	movlw	0
 10615   0048A4  ECF7  F024         	call	_I2C_2_Master_Read
 10616   0048A8  6E0B               	movwf	??_color_read_Clear^0,c
 10617   0048AA  500B               	movf	??_color_read_Clear^0,w,c
 10618   0048AC  6E0D               	movwf	(??_color_read_Clear+2)^0,c
 10619   0048AE  6A0C               	clrf	(??_color_read_Clear+1)^0,c
 10620   0048B0  500E               	movf	color_read_Clear@tmp^0,w,c
 10621   0048B2  100C               	iorwf	(??_color_read_Clear+1)^0,w,c
 10622   0048B4  6E0E               	movwf	color_read_Clear@tmp^0,c
 10623   0048B6  500F               	movf	(color_read_Clear@tmp+1)^0,w,c
 10624   0048B8  100D               	iorwf	(??_color_read_Clear+2)^0,w,c
 10625   0048BA  6E0F               	movwf	(color_read_Clear@tmp+1)^0,c
 10626                           
 10627                           ;color.c: 86:  I2C_2_Master_Stop();
 10628   0048BC  EC31  F026         	call	_I2C_2_Master_Stop	;wreg free
 10629   0048C0                     
 10630                           ;color.c: 87:  return tmp;
 10631   0048C0  C00E  F009         	movff	color_read_Clear@tmp,?_color_read_Clear
 10632   0048C4  C00F  F00A         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
 10633   0048C8  0012               	return		;funcret
 10634   0048CA                     __end_of_color_read_Clear:
 10635                           	callstack 0
 10636                           
 10637 ;; *************** function _color_read_Blue *****************
 10638 ;; Defined at:
 10639 ;;		line 62 in file "color.c"
 10640 ;; Parameters:    Size  Location     Type
 10641 ;;		None
 10642 ;; Auto vars:     Size  Location     Type
 10643 ;;  tmp             2   13[COMRAM] unsigned int 
 10644 ;; Return value:  Size  Location     Type
 10645 ;;                  2    8[COMRAM] unsigned int 
 10646 ;; Registers used:
 10647 ;;		wreg, status,2, status,0, cstack
 10648 ;; Tracked objects:
 10649 ;;		On entry : 0/0
 10650 ;;		On exit  : 0/0
 10651 ;;		Unchanged: 0/0
 10652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10653 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10654 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10655 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10656 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10657 ;;Total ram usage:        7 bytes
 10658 ;; Hardware stack levels used: 1
 10659 ;; Hardware stack levels required when called: 4
 10660 ;; This function calls:
 10661 ;;		_I2C_2_Master_Read
 10662 ;;		_I2C_2_Master_RepStart
 10663 ;;		_I2C_2_Master_Start
 10664 ;;		_I2C_2_Master_Stop
 10665 ;;		_I2C_2_Master_Write
 10666 ;; This function is called by:
 10667 ;;		_getColor
 10668 ;; This function uses a non-reentrant model
 10669 ;;
 10670                           
 10671                           	psect	text48
 10672   0048CA                     __ptext48:
 10673                           	callstack 0
 10674   0048CA                     _color_read_Blue:
 10675                           	callstack 24
 10676   0048CA                     
 10677                           ;color.c: 64:  unsigned int tmp;;color.c: 65:  I2C_2_Master_Start();
 10678   0048CA  EC36  F026         	call	_I2C_2_Master_Start	;wreg free
 10679                           
 10680                           ;color.c: 66:  I2C_2_Master_Write(0x52 | 0x00);
 10681   0048CE  0E52               	movlw	82
 10682   0048D0  EC2B  F026         	call	_I2C_2_Master_Write
 10683                           
 10684                           ;color.c: 67:  I2C_2_Master_Write(0xA0 | 0x1A);
 10685   0048D4  0EBA               	movlw	186
 10686   0048D6  EC2B  F026         	call	_I2C_2_Master_Write
 10687                           
 10688                           ;color.c: 68:  I2C_2_Master_RepStart();
 10689   0048DA  EC3B  F026         	call	_I2C_2_Master_RepStart	;wreg free
 10690                           
 10691                           ;color.c: 69:  I2C_2_Master_Write(0x52 | 0x01);
 10692   0048DE  0E53               	movlw	83
 10693   0048E0  EC2B  F026         	call	_I2C_2_Master_Write
 10694                           
 10695                           ;color.c: 70:  tmp=I2C_2_Master_Read(1);
 10696   0048E4  0E01               	movlw	1
 10697   0048E6  ECF7  F024         	call	_I2C_2_Master_Read
 10698   0048EA  6E0B               	movwf	??_color_read_Blue^0,c
 10699   0048EC  500B               	movf	??_color_read_Blue^0,w,c
 10700   0048EE  6E0E               	movwf	color_read_Blue@tmp^0,c
 10701   0048F0  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
 10702                           
 10703                           ;color.c: 71:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 10704   0048F2  0E00               	movlw	0
 10705   0048F4  ECF7  F024         	call	_I2C_2_Master_Read
 10706   0048F8  6E0B               	movwf	??_color_read_Blue^0,c
 10707   0048FA  500B               	movf	??_color_read_Blue^0,w,c
 10708   0048FC  6E0D               	movwf	(??_color_read_Blue+2)^0,c
 10709   0048FE  6A0C               	clrf	(??_color_read_Blue+1)^0,c
 10710   004900  500E               	movf	color_read_Blue@tmp^0,w,c
 10711   004902  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
 10712   004904  6E0E               	movwf	color_read_Blue@tmp^0,c
 10713   004906  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
 10714   004908  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
 10715   00490A  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
 10716                           
 10717                           ;color.c: 72:  I2C_2_Master_Stop();
 10718   00490C  EC31  F026         	call	_I2C_2_Master_Stop	;wreg free
 10719   004910                     
 10720                           ;color.c: 73:  return tmp;
 10721   004910  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
 10722   004914  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
 10723   004918  0012               	return		;funcret
 10724   00491A                     __end_of_color_read_Blue:
 10725                           	callstack 0
 10726                           
 10727 ;; *************** function _I2C_2_Master_Write *****************
 10728 ;; Defined at:
 10729 ;;		line 45 in file "i2c.c"
 10730 ;; Parameters:    Size  Location     Type
 10731 ;;  data_byte       1    wreg     unsigned char 
 10732 ;; Auto vars:     Size  Location     Type
 10733 ;;  data_byte       1    5[COMRAM] unsigned char 
 10734 ;; Return value:  Size  Location     Type
 10735 ;;                  1    wreg      void 
 10736 ;; Registers used:
 10737 ;;		wreg, status,2, status,0, cstack
 10738 ;; Tracked objects:
 10739 ;;		On entry : 0/0
 10740 ;;		On exit  : 0/0
 10741 ;;		Unchanged: 0/0
 10742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10744 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10746 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10747 ;;Total ram usage:        1 bytes
 10748 ;; Hardware stack levels used: 1
 10749 ;; Hardware stack levels required when called: 3
 10750 ;; This function calls:
 10751 ;;		_I2C_2_Master_Idle
 10752 ;; This function is called by:
 10753 ;;		_color_writetoaddr
 10754 ;;		_color_read_Red
 10755 ;;		_color_read_Green
 10756 ;;		_color_read_Blue
 10757 ;;		_color_read_Clear
 10758 ;; This function uses a non-reentrant model
 10759 ;;
 10760                           
 10761                           	psect	text49
 10762   004C56                     __ptext49:
 10763                           	callstack 0
 10764   004C56                     _I2C_2_Master_Write:
 10765                           	callstack 24
 10766                           
 10767                           ;incstack = 0
 10768                           ;I2C_2_Master_Write@data_byte stored from wreg
 10769   004C56  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
 10770   004C58                     
 10771                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 10772   004C58  ECBF  F025         	call	_I2C_2_Master_Idle	;wreg free
 10773   004C5C                     
 10774                           ;i2c.c: 48:   SSP2BUF = data_byte;
 10775   004C5C  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 10776   004C60  0012               	return		;funcret
 10777   004C62                     __end_of_I2C_2_Master_Write:
 10778                           	callstack 0
 10779                           
 10780 ;; *************** function _I2C_2_Master_Stop *****************
 10781 ;; Defined at:
 10782 ;;		line 39 in file "i2c.c"
 10783 ;; Parameters:    Size  Location     Type
 10784 ;;		None
 10785 ;; Auto vars:     Size  Location     Type
 10786 ;;		None
 10787 ;; Return value:  Size  Location     Type
 10788 ;;                  1    wreg      void 
 10789 ;; Registers used:
 10790 ;;		wreg, status,2, status,0, cstack
 10791 ;; Tracked objects:
 10792 ;;		On entry : 0/0
 10793 ;;		On exit  : 0/0
 10794 ;;		Unchanged: 0/0
 10795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10800 ;;Total ram usage:        0 bytes
 10801 ;; Hardware stack levels used: 1
 10802 ;; Hardware stack levels required when called: 3
 10803 ;; This function calls:
 10804 ;;		_I2C_2_Master_Idle
 10805 ;; This function is called by:
 10806 ;;		_color_writetoaddr
 10807 ;;		_color_read_Red
 10808 ;;		_color_read_Green
 10809 ;;		_color_read_Blue
 10810 ;;		_color_read_Clear
 10811 ;; This function uses a non-reentrant model
 10812 ;;
 10813                           
 10814                           	psect	text50
 10815   004C62                     __ptext50:
 10816                           	callstack 0
 10817   004C62                     _I2C_2_Master_Stop:
 10818                           	callstack 24
 10819   004C62                     
 10820                           ;i2c.c: 41:   I2C_2_Master_Idle();
 10821   004C62  ECBF  F025         	call	_I2C_2_Master_Idle	;wreg free
 10822   004C66                     
 10823                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 10824   004C66  010E               	movlb	14	; () banked
 10825   004C68  85DA               	bsf	218,2,b	;volatile
 10826   004C6A                     
 10827                           ; BSR set to: 14
 10828   004C6A  0012               	return		;funcret
 10829   004C6C                     __end_of_I2C_2_Master_Stop:
 10830                           	callstack 0
 10831                           
 10832 ;; *************** function _I2C_2_Master_Start *****************
 10833 ;; Defined at:
 10834 ;;		line 27 in file "i2c.c"
 10835 ;; Parameters:    Size  Location     Type
 10836 ;;		None
 10837 ;; Auto vars:     Size  Location     Type
 10838 ;;		None
 10839 ;; Return value:  Size  Location     Type
 10840 ;;                  1    wreg      void 
 10841 ;; Registers used:
 10842 ;;		wreg, status,2, status,0, cstack
 10843 ;; Tracked objects:
 10844 ;;		On entry : 0/0
 10845 ;;		On exit  : 0/0
 10846 ;;		Unchanged: 0/0
 10847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10852 ;;Total ram usage:        0 bytes
 10853 ;; Hardware stack levels used: 1
 10854 ;; Hardware stack levels required when called: 3
 10855 ;; This function calls:
 10856 ;;		_I2C_2_Master_Idle
 10857 ;; This function is called by:
 10858 ;;		_color_writetoaddr
 10859 ;;		_color_read_Red
 10860 ;;		_color_read_Green
 10861 ;;		_color_read_Blue
 10862 ;;		_color_read_Clear
 10863 ;; This function uses a non-reentrant model
 10864 ;;
 10865                           
 10866                           	psect	text51
 10867   004C6C                     __ptext51:
 10868                           	callstack 0
 10869   004C6C                     _I2C_2_Master_Start:
 10870                           	callstack 24
 10871   004C6C                     
 10872                           ;i2c.c: 29:   I2C_2_Master_Idle();
 10873   004C6C  ECBF  F025         	call	_I2C_2_Master_Idle	;wreg free
 10874   004C70                     
 10875                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 10876   004C70  010E               	movlb	14	; () banked
 10877   004C72  81DA               	bsf	218,0,b	;volatile
 10878   004C74                     
 10879                           ; BSR set to: 14
 10880   004C74  0012               	return		;funcret
 10881   004C76                     __end_of_I2C_2_Master_Start:
 10882                           	callstack 0
 10883                           
 10884 ;; *************** function _I2C_2_Master_RepStart *****************
 10885 ;; Defined at:
 10886 ;;		line 33 in file "i2c.c"
 10887 ;; Parameters:    Size  Location     Type
 10888 ;;		None
 10889 ;; Auto vars:     Size  Location     Type
 10890 ;;		None
 10891 ;; Return value:  Size  Location     Type
 10892 ;;                  1    wreg      void 
 10893 ;; Registers used:
 10894 ;;		wreg, status,2, status,0, cstack
 10895 ;; Tracked objects:
 10896 ;;		On entry : 0/0
 10897 ;;		On exit  : 0/0
 10898 ;;		Unchanged: 0/0
 10899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10904 ;;Total ram usage:        0 bytes
 10905 ;; Hardware stack levels used: 1
 10906 ;; Hardware stack levels required when called: 3
 10907 ;; This function calls:
 10908 ;;		_I2C_2_Master_Idle
 10909 ;; This function is called by:
 10910 ;;		_color_read_Red
 10911 ;;		_color_read_Green
 10912 ;;		_color_read_Blue
 10913 ;;		_color_read_Clear
 10914 ;; This function uses a non-reentrant model
 10915 ;;
 10916                           
 10917                           	psect	text52
 10918   004C76                     __ptext52:
 10919                           	callstack 0
 10920   004C76                     _I2C_2_Master_RepStart:
 10921                           	callstack 24
 10922   004C76                     
 10923                           ;i2c.c: 35:   I2C_2_Master_Idle();
 10924   004C76  ECBF  F025         	call	_I2C_2_Master_Idle	;wreg free
 10925   004C7A                     
 10926                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
 10927   004C7A  010E               	movlb	14	; () banked
 10928   004C7C  83DA               	bsf	218,1,b	;volatile
 10929   004C7E                     
 10930                           ; BSR set to: 14
 10931   004C7E  0012               	return		;funcret
 10932   004C80                     __end_of_I2C_2_Master_RepStart:
 10933                           	callstack 0
 10934                           
 10935 ;; *************** function _I2C_2_Master_Read *****************
 10936 ;; Defined at:
 10937 ;;		line 51 in file "i2c.c"
 10938 ;; Parameters:    Size  Location     Type
 10939 ;;  ack             1    wreg     unsigned char 
 10940 ;; Auto vars:     Size  Location     Type
 10941 ;;  ack             1    6[COMRAM] unsigned char 
 10942 ;;  tmp             1    7[COMRAM] unsigned char 
 10943 ;; Return value:  Size  Location     Type
 10944 ;;                  1    wreg      unsigned char 
 10945 ;; Registers used:
 10946 ;;		wreg, status,2, status,0, cstack
 10947 ;; Tracked objects:
 10948 ;;		On entry : 0/0
 10949 ;;		On exit  : 0/0
 10950 ;;		Unchanged: 0/0
 10951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10953 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10954 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10955 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10956 ;;Total ram usage:        3 bytes
 10957 ;; Hardware stack levels used: 1
 10958 ;; Hardware stack levels required when called: 3
 10959 ;; This function calls:
 10960 ;;		_I2C_2_Master_Idle
 10961 ;; This function is called by:
 10962 ;;		_color_read_Red
 10963 ;;		_color_read_Green
 10964 ;;		_color_read_Blue
 10965 ;;		_color_read_Clear
 10966 ;; This function uses a non-reentrant model
 10967 ;;
 10968                           
 10969                           	psect	text53
 10970   0049EE                     __ptext53:
 10971                           	callstack 0
 10972   0049EE                     _I2C_2_Master_Read:
 10973                           	callstack 24
 10974                           
 10975                           ; BSR set to: 14
 10976                           ;incstack = 0
 10977                           ;I2C_2_Master_Read@ack stored from wreg
 10978   0049EE  6E07               	movwf	I2C_2_Master_Read@ack^0,c
 10979   0049F0                     
 10980                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
 10981   0049F0  ECBF  F025         	call	_I2C_2_Master_Idle	;wreg free
 10982   0049F4                     
 10983                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
 10984   0049F4  010E               	movlb	14	; () banked
 10985   0049F6  87DA               	bsf	218,3,b	;volatile
 10986                           
 10987                           ;i2c.c: 56:   I2C_2_Master_Idle();
 10988   0049F8  ECBF  F025         	call	_I2C_2_Master_Idle	;wreg free
 10989   0049FC                     
 10990                           ;i2c.c: 57:   tmp = SSP2BUF;
 10991   0049FC  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 10992                           
 10993                           ;i2c.c: 58:   I2C_2_Master_Idle();
 10994   004A00  ECBF  F025         	call	_I2C_2_Master_Idle	;wreg free
 10995   004A04                     
 10996                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
 10997   004A04  5007               	movf	I2C_2_Master_Read@ack^0,w,c
 10998   004A06  B4D8               	btfsc	status,2,c
 10999   004A08  EF08  F025         	goto	u2951
 11000   004A0C  EF0C  F025         	goto	u2950
 11001   004A10                     u2951:
 11002   004A10  6A06               	clrf	??_I2C_2_Master_Read^0,c
 11003   004A12  2A06               	incf	??_I2C_2_Master_Read^0,f,c
 11004   004A14  EF0D  F025         	goto	u2968
 11005   004A18                     u2950:
 11006   004A18  6A06               	clrf	??_I2C_2_Master_Read^0,c
 11007   004A1A                     u2968:
 11008   004A1A  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
 11009   004A1C  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
 11010   004A1E  010E               	movlb	14	; () banked
 11011   004A20  51DA               	movf	218,w,b	;volatile
 11012   004A22  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
 11013   004A24  0BDF               	andlw	-33
 11014   004A26  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
 11015   004A28  6FDA               	movwf	218,b	;volatile
 11016   004A2A                     
 11017                           ; BSR set to: 14
 11018                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
 11019   004A2A  89DA               	bsf	218,4,b	;volatile
 11020   004A2C                     
 11021                           ; BSR set to: 14
 11022                           ;i2c.c: 61:   return tmp;
 11023   004A2C  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
 11024   004A2E                     
 11025                           ; BSR set to: 14
 11026   004A2E  0012               	return		;funcret
 11027   004A30                     __end_of_I2C_2_Master_Read:
 11028                           	callstack 0
 11029                           
 11030 ;; *************** function _I2C_2_Master_Idle *****************
 11031 ;; Defined at:
 11032 ;;		line 22 in file "i2c.c"
 11033 ;; Parameters:    Size  Location     Type
 11034 ;;		None
 11035 ;; Auto vars:     Size  Location     Type
 11036 ;;		None
 11037 ;; Return value:  Size  Location     Type
 11038 ;;                  1    wreg      void 
 11039 ;; Registers used:
 11040 ;;		wreg, status,2, status,0
 11041 ;; Tracked objects:
 11042 ;;		On entry : 0/0
 11043 ;;		On exit  : 0/0
 11044 ;;		Unchanged: 0/0
 11045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11048 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11049 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11050 ;;Total ram usage:        1 bytes
 11051 ;; Hardware stack levels used: 1
 11052 ;; Hardware stack levels required when called: 2
 11053 ;; This function calls:
 11054 ;;		Nothing
 11055 ;; This function is called by:
 11056 ;;		_I2C_2_Master_Start
 11057 ;;		_I2C_2_Master_RepStart
 11058 ;;		_I2C_2_Master_Stop
 11059 ;;		_I2C_2_Master_Write
 11060 ;;		_I2C_2_Master_Read
 11061 ;; This function uses a non-reentrant model
 11062 ;;
 11063                           
 11064                           	psect	text54
 11065   004B7E                     __ptext54:
 11066                           	callstack 0
 11067   004B7E                     _I2C_2_Master_Idle:
 11068                           	callstack 24
 11069   004B7E                     l300:
 11070   004B7E  010E               	movlb	14	; () banked
 11071   004B80  B5D8               	btfsc	216,2,b	;volatile
 11072   004B82  EFC5  F025         	goto	u2831
 11073   004B86  EFC7  F025         	goto	u2830
 11074   004B8A                     u2831:
 11075   004B8A  EFBF  F025         	goto	l300
 11076   004B8E                     u2830:
 11077   004B8E                     
 11078                           ; BSR set to: 14
 11079   004B8E  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
 11080   004B92  0E1F               	movlw	31
 11081   004B94  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
 11082   004B96  A4D8               	btfss	status,2,c
 11083   004B98  EFD0  F025         	goto	u2841
 11084   004B9C  EFD2  F025         	goto	u2840
 11085   004BA0                     u2841:
 11086   004BA0  EFBF  F025         	goto	l300
 11087   004BA4                     u2840:
 11088   004BA4                     
 11089                           ; BSR set to: 14
 11090   004BA4  0012               	return		;funcret
 11091   004BA6                     __end_of_I2C_2_Master_Idle:
 11092                           	callstack 0
 11093                           
 11094 ;; *************** function _DCmotorsInit *****************
 11095 ;; Defined at:
 11096 ;;		line 75 in file "dc_motor.c"
 11097 ;; Parameters:    Size  Location     Type
 11098 ;;  mL              2    4[COMRAM] PTR struct DC_motor
 11099 ;;		 -> main@motorLeft(9), 
 11100 ;;  mR              2    6[COMRAM] PTR struct DC_motor
 11101 ;;		 -> main@motorRight(9), 
 11102 ;; Auto vars:     Size  Location     Type
 11103 ;;		None
 11104 ;; Return value:  Size  Location     Type
 11105 ;;                  1    wreg      void 
 11106 ;; Registers used:
 11107 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11108 ;; Tracked objects:
 11109 ;;		On entry : 0/0
 11110 ;;		On exit  : 0/0
 11111 ;;		Unchanged: 0/0
 11112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11113 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11116 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11117 ;;Total ram usage:        4 bytes
 11118 ;; Hardware stack levels used: 1
 11119 ;; Hardware stack levels required when called: 2
 11120 ;; This function calls:
 11121 ;;		Nothing
 11122 ;; This function is called by:
 11123 ;;		_main
 11124 ;; This function uses a non-reentrant model
 11125 ;;
 11126                           
 11127                           	psect	text55
 11128   0041E2                     __ptext55:
 11129                           	callstack 0
 11130   0041E2                     _DCmotorsInit:
 11131                           	callstack 28
 11132   0041E2                     
 11133                           ;dc_motor.c: 77:     mL->power = 0;
 11134   0041E2  C005  FFD9         	movff	DCmotorsInit@mL,fsr2l
 11135   0041E6  C006  FFDA         	movff	DCmotorsInit@mL+1,fsr2h
 11136   0041EA  0E00               	movlw	0
 11137   0041EC  6EDF               	movwf	indf2,c
 11138   0041EE                     
 11139                           ;dc_motor.c: 78:     mL->direction = 1;
 11140   0041EE  EE20 F001          	lfsr	2,1
 11141   0041F2  5005               	movf	DCmotorsInit@mL^0,w,c
 11142   0041F4  26D9               	addwf	fsr2l,f,c
 11143   0041F6  5006               	movf	(DCmotorsInit@mL+1)^0,w,c
 11144   0041F8  22DA               	addwfc	fsr2h,f,c
 11145   0041FA  0E01               	movlw	1
 11146   0041FC  6EDF               	movwf	indf2,c
 11147   0041FE                     
 11148                           ;dc_motor.c: 79:     mL->brakemode = 1;
 11149   0041FE  EE20 F002          	lfsr	2,2
 11150   004202  5005               	movf	DCmotorsInit@mL^0,w,c
 11151   004204  26D9               	addwf	fsr2l,f,c
 11152   004206  5006               	movf	(DCmotorsInit@mL+1)^0,w,c
 11153   004208  22DA               	addwfc	fsr2h,f,c
 11154   00420A  0E01               	movlw	1
 11155   00420C  6EDF               	movwf	indf2,c
 11156   00420E                     
 11157                           ;dc_motor.c: 80:     mL->posDutyHighByte = (unsigned char *)(&CCPR1H);
 11158   00420E  EE20 F005          	lfsr	2,5
 11159   004212  5005               	movf	DCmotorsInit@mL^0,w,c
 11160   004214  26D9               	addwf	fsr2l,f,c
 11161   004216  5006               	movf	(DCmotorsInit@mL+1)^0,w,c
 11162   004218  22DA               	addwfc	fsr2h,f,c
 11163   00421A  0EAA               	movlw	170
 11164   00421C  6EDE               	movwf	postinc2,c
 11165   00421E  0E0F               	movlw	15
 11166   004220  6EDD               	movwf	postdec2,c
 11167   004222                     
 11168                           ;dc_motor.c: 81:     mL->negDutyHighByte = (unsigned char *)(&CCPR2H);
 11169   004222  EE20 F007          	lfsr	2,7
 11170   004226  5005               	movf	DCmotorsInit@mL^0,w,c
 11171   004228  26D9               	addwf	fsr2l,f,c
 11172   00422A  5006               	movf	(DCmotorsInit@mL+1)^0,w,c
 11173   00422C  22DA               	addwfc	fsr2h,f,c
 11174   00422E  0EA6               	movlw	166
 11175   004230  6EDE               	movwf	postinc2,c
 11176   004232  0E0F               	movlw	15
 11177   004234  6EDD               	movwf	postdec2,c
 11178   004236                     
 11179                           ;dc_motor.c: 82:     mL->PWMperiod = 199 ;
 11180   004236  EE20 F003          	lfsr	2,3
 11181   00423A  5005               	movf	DCmotorsInit@mL^0,w,c
 11182   00423C  26D9               	addwf	fsr2l,f,c
 11183   00423E  5006               	movf	(DCmotorsInit@mL+1)^0,w,c
 11184   004240  22DA               	addwfc	fsr2h,f,c
 11185   004242  0EC7               	movlw	199
 11186   004244  6EDE               	movwf	postinc2,c
 11187   004246  0E00               	movlw	0
 11188   004248  6EDD               	movwf	postdec2,c
 11189   00424A                     
 11190                           ;dc_motor.c: 84:     mR->power = 0;
 11191   00424A  C007  FFD9         	movff	DCmotorsInit@mR,fsr2l
 11192   00424E  C008  FFDA         	movff	DCmotorsInit@mR+1,fsr2h
 11193   004252  0E00               	movlw	0
 11194   004254  6EDF               	movwf	indf2,c
 11195                           
 11196                           ;dc_motor.c: 85:     mR->direction = 1;
 11197   004256  EE20 F001          	lfsr	2,1
 11198   00425A  5007               	movf	DCmotorsInit@mR^0,w,c
 11199   00425C  26D9               	addwf	fsr2l,f,c
 11200   00425E  5008               	movf	(DCmotorsInit@mR+1)^0,w,c
 11201   004260  22DA               	addwfc	fsr2h,f,c
 11202   004262  0E01               	movlw	1
 11203   004264  6EDF               	movwf	indf2,c
 11204                           
 11205                           ;dc_motor.c: 86:     mR->brakemode = 1;
 11206   004266  EE20 F002          	lfsr	2,2
 11207   00426A  5007               	movf	DCmotorsInit@mR^0,w,c
 11208   00426C  26D9               	addwf	fsr2l,f,c
 11209   00426E  5008               	movf	(DCmotorsInit@mR+1)^0,w,c
 11210   004270  22DA               	addwfc	fsr2h,f,c
 11211   004272  0E01               	movlw	1
 11212   004274  6EDF               	movwf	indf2,c
 11213                           
 11214                           ;dc_motor.c: 87:     mR->posDutyHighByte = (unsigned char *)(&CCPR3H);
 11215   004276  EE20 F005          	lfsr	2,5
 11216   00427A  5007               	movf	DCmotorsInit@mR^0,w,c
 11217   00427C  26D9               	addwf	fsr2l,f,c
 11218   00427E  5008               	movf	(DCmotorsInit@mR+1)^0,w,c
 11219   004280  22DA               	addwfc	fsr2h,f,c
 11220   004282  0E25               	movlw	37
 11221   004284  6EDE               	movwf	postinc2,c
 11222   004286  0E0F               	movlw	15
 11223   004288  6EDD               	movwf	postdec2,c
 11224                           
 11225                           ;dc_motor.c: 88:     mR->negDutyHighByte = (unsigned char *)(&CCPR4H);
 11226   00428A  EE20 F007          	lfsr	2,7
 11227   00428E  5007               	movf	DCmotorsInit@mR^0,w,c
 11228   004290  26D9               	addwf	fsr2l,f,c
 11229   004292  5008               	movf	(DCmotorsInit@mR+1)^0,w,c
 11230   004294  22DA               	addwfc	fsr2h,f,c
 11231   004296  0E21               	movlw	33
 11232   004298  6EDE               	movwf	postinc2,c
 11233   00429A  0E0F               	movlw	15
 11234   00429C  6EDD               	movwf	postdec2,c
 11235                           
 11236                           ;dc_motor.c: 89:     mR->PWMperiod = 199 ;
 11237   00429E  EE20 F003          	lfsr	2,3
 11238   0042A2  5007               	movf	DCmotorsInit@mR^0,w,c
 11239   0042A4  26D9               	addwf	fsr2l,f,c
 11240   0042A6  5008               	movf	(DCmotorsInit@mR+1)^0,w,c
 11241   0042A8  22DA               	addwfc	fsr2h,f,c
 11242   0042AA  0EC7               	movlw	199
 11243   0042AC  6EDE               	movwf	postinc2,c
 11244   0042AE  0E00               	movlw	0
 11245   0042B0  6EDD               	movwf	postdec2,c
 11246   0042B2  0012               	return		;funcret
 11247   0042B4                     __end_of_DCmotorsInit:
 11248                           	callstack 0
 11249                           
 11250 ;; *************** function _HighISR *****************
 11251 ;; Defined at:
 11252 ;;		line 122 in file "serial.c"
 11253 ;; Parameters:    Size  Location     Type
 11254 ;;		None
 11255 ;; Auto vars:     Size  Location     Type
 11256 ;;		None
 11257 ;; Return value:  Size  Location     Type
 11258 ;;                  1    wreg      void 
 11259 ;; Registers used:
 11260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11261 ;; Tracked objects:
 11262 ;;		On entry : 0/0
 11263 ;;		On exit  : 0/0
 11264 ;;		Unchanged: 0/0
 11265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11268 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11269 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11270 ;;Total ram usage:        2 bytes
 11271 ;; Hardware stack levels used: 1
 11272 ;; Hardware stack levels required when called: 1
 11273 ;; This function calls:
 11274 ;;		_getCharFromTxBuf
 11275 ;;		_putCharToRxBuf
 11276 ;;		i2_isDataInTxBuf
 11277 ;; This function is called by:
 11278 ;;		Interrupt level 2
 11279 ;; This function uses a non-reentrant model
 11280 ;;
 11281                           
 11282                           	psect	intcode
 11283   000008                     __pintcode:
 11284                           	callstack 0
 11285   000008                     _HighISR:
 11286                           	callstack 20
 11287                           
 11288                           ;incstack = 0
 11289   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11290   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
 11291   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
 11292   000012                     
 11293                           ;serial.c: 124:     if(PIR4bits.RC4IF == 1){
 11294   000012  010E               	movlb	14	; () banked
 11295   000014  A737               	btfss	55,3,b	;volatile
 11296   000016  EF0F  F000         	goto	i2u498_41
 11297   00001A  EF11  F000         	goto	i2u498_40
 11298   00001E                     i2u498_41:
 11299   00001E  EF14  F000         	goto	i2l4683
 11300   000022                     i2u498_40:
 11301   000022                     
 11302                           ; BSR set to: 14
 11303                           ;serial.c: 125:         putCharToRxBuf(RC4REG);
 11304   000022  51E3               	movf	227,w,b	;volatile
 11305   000024  ECAA  F025         	call	_putCharToRxBuf
 11306   000028                     i2l4683:
 11307                           
 11308                           ;serial.c: 128:     if(PIR4bits.TX4IF == 1){
 11309   000028  010E               	movlb	14	; () banked
 11310   00002A  A537               	btfss	55,2,b	;volatile
 11311   00002C  EF1A  F000         	goto	i2u499_41
 11312   000030  EF1C  F000         	goto	i2u499_40
 11313   000034                     i2u499_41:
 11314   000034  EF2E  F000         	goto	i2l518
 11315   000038                     i2u499_40:
 11316   000038                     
 11317                           ; BSR set to: 14
 11318                           ;serial.c: 129:         if(isDataInTxBuf()){
 11319   000038  EC1F  F026         	call	i2_isDataInTxBuf	;wreg free
 11320   00003C  0900               	iorlw	0
 11321   00003E  B4D8               	btfsc	status,2,c
 11322   000040  EF24  F000         	goto	i2u500_41
 11323   000044  EF26  F000         	goto	i2u500_40
 11324   000048                     i2u500_41:
 11325   000048  EF2C  F000         	goto	i2l516
 11326   00004C                     i2u500_40:
 11327   00004C                     
 11328                           ;serial.c: 130:             TX4REG = getCharFromTxBuf();
 11329   00004C  EC6A  F025         	call	_getCharFromTxBuf	;wreg free
 11330   000050  010E               	movlb	14	; () banked
 11331   000052  6FE4               	movwf	228,b	;volatile
 11332                           
 11333                           ;serial.c: 132:         }
 11334   000054  EF2E  F000         	goto	i2l518
 11335   000058                     i2l516:
 11336                           
 11337                           ;serial.c: 134:     PIE4bits.TX4IE = 0;
 11338   000058  010E               	movlb	14	; () banked
 11339   00005A  952D               	bcf	45,2,b	;volatile
 11340   00005C                     i2l518:
 11341                           
 11342                           ; BSR set to: 14
 11343   00005C  C004  FFDA         	movff	??_HighISR+1,fsr2h
 11344   000060  C003  FFD9         	movff	??_HighISR,fsr2l
 11345   000064  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11346   000066  0011               	retfie		f
 11347   000068                     __end_of_HighISR:
 11348                           	callstack 0
 11349                           
 11350 ;; *************** function i2_isDataInTxBuf *****************
 11351 ;; Defined at:
 11352 ;;		line 83 in file "serial.c"
 11353 ;; Parameters:    Size  Location     Type
 11354 ;;		None
 11355 ;; Auto vars:     Size  Location     Type
 11356 ;;		None
 11357 ;; Return value:  Size  Location     Type
 11358 ;;                  1    wreg      unsigned char 
 11359 ;; Registers used:
 11360 ;;		wreg, status,2, status,0
 11361 ;; Tracked objects:
 11362 ;;		On entry : 0/0
 11363 ;;		On exit  : 0/0
 11364 ;;		Unchanged: 0/0
 11365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11370 ;;Total ram usage:        0 bytes
 11371 ;; Hardware stack levels used: 1
 11372 ;; This function calls:
 11373 ;;		Nothing
 11374 ;; This function is called by:
 11375 ;;		_HighISR
 11376 ;; This function uses a non-reentrant model
 11377 ;;
 11378                           
 11379                           	psect	text57
 11380   004C3E                     __ptext57:
 11381                           	callstack 0
 11382   004C3E                     i2_isDataInTxBuf:
 11383                           	callstack 20
 11384   004C3E                     
 11385                           ;serial.c: 84:     return (TxBufWriteCnt!=TxBufReadCnt);
 11386   004C3E  5057               	movf	_TxBufReadCnt^0,w,c	;volatile
 11387   004C40  1858               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
 11388   004C42  A4D8               	btfss	status,2,c
 11389   004C44  EF26  F026         	goto	i2u220_41
 11390   004C48  EF29  F026         	goto	i2u220_40
 11391   004C4C                     i2u220_41:
 11392   004C4C  0E01               	movlw	1
 11393   004C4E  EF2A  F026         	goto	i2u221_40
 11394   004C52                     i2u220_40:
 11395   004C52  0E00               	movlw	0
 11396   004C54                     i2u221_40:
 11397   004C54  0012               	return		;funcret
 11398   004C56                     __end_ofi2_isDataInTxBuf:
 11399                           	callstack 0
 11400                           
 11401 ;; *************** function _putCharToRxBuf *****************
 11402 ;; Defined at:
 11403 ;;		line 54 in file "serial.c"
 11404 ;; Parameters:    Size  Location     Type
 11405 ;;  byte            1    wreg     unsigned char 
 11406 ;; Auto vars:     Size  Location     Type
 11407 ;;  byte            1    0[COMRAM] unsigned char 
 11408 ;; Return value:  Size  Location     Type
 11409 ;;                  1    wreg      void 
 11410 ;; Registers used:
 11411 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11412 ;; Tracked objects:
 11413 ;;		On entry : 0/0
 11414 ;;		On exit  : 0/0
 11415 ;;		Unchanged: 0/0
 11416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11418 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11420 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11421 ;;Total ram usage:        1 bytes
 11422 ;; Hardware stack levels used: 1
 11423 ;; This function calls:
 11424 ;;		Nothing
 11425 ;; This function is called by:
 11426 ;;		_HighISR
 11427 ;; This function uses a non-reentrant model
 11428 ;;
 11429                           
 11430                           	psect	text58
 11431   004B54                     __ptext58:
 11432                           	callstack 0
 11433   004B54                     _putCharToRxBuf:
 11434                           	callstack 20
 11435                           
 11436                           ;incstack = 0
 11437                           ;putCharToRxBuf@byte stored from wreg
 11438   004B54  6E01               	movwf	putCharToRxBuf@byte^0,c
 11439   004B56                     
 11440                           ;serial.c: 55:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
 11441   004B56  0E13               	movlw	19
 11442   004B58  645A               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
 11443   004B5A  EFB1  F025         	goto	i2u473_41
 11444   004B5E  EFB3  F025         	goto	i2u473_40
 11445   004B62                     i2u473_41:
 11446   004B62  EFB5  F025         	goto	i2l4497
 11447   004B66                     i2u473_40:
 11448   004B66  0E00               	movlw	0
 11449   004B68  6E5A               	movwf	_RxBufWriteCnt^0,c	;volatile
 11450   004B6A                     i2l4497:
 11451                           
 11452                           ;serial.c: 56:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
 11453   004B6A  0ED0               	movlw	low _EUSART4RXbuf
 11454   004B6C  245A               	addwf	_RxBufWriteCnt^0,w,c	;volatile
 11455   004B6E  6ED9               	movwf	fsr2l,c
 11456   004B70  6ADA               	clrf	fsr2h,c
 11457   004B72  0E00               	movlw	high _EUSART4RXbuf
 11458   004B74  22DA               	addwfc	fsr2h,f,c
 11459   004B76  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
 11460   004B7A  2A5A               	incf	_RxBufWriteCnt^0,f,c	;volatile
 11461   004B7C  0012               	return		;funcret
 11462   004B7E                     __end_of_putCharToRxBuf:
 11463                           	callstack 0
 11464                           
 11465 ;; *************** function _getCharFromTxBuf *****************
 11466 ;; Defined at:
 11467 ;;		line 69 in file "serial.c"
 11468 ;; Parameters:    Size  Location     Type
 11469 ;;		None
 11470 ;; Auto vars:     Size  Location     Type
 11471 ;;		None
 11472 ;; Return value:  Size  Location     Type
 11473 ;;                  1    wreg      unsigned char 
 11474 ;; Registers used:
 11475 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11476 ;; Tracked objects:
 11477 ;;		On entry : 0/0
 11478 ;;		On exit  : 0/0
 11479 ;;		Unchanged: 0/0
 11480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11483 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11484 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11485 ;;Total ram usage:        2 bytes
 11486 ;; Hardware stack levels used: 1
 11487 ;; This function calls:
 11488 ;;		Nothing
 11489 ;; This function is called by:
 11490 ;;		_HighISR
 11491 ;; This function uses a non-reentrant model
 11492 ;;
 11493                           
 11494                           	psect	text59
 11495   004AD4                     __ptext59:
 11496                           	callstack 0
 11497   004AD4                     _getCharFromTxBuf:
 11498                           	callstack 20
 11499   004AD4                     
 11500                           ;serial.c: 70:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
 11501   004AD4  0E3B               	movlw	59
 11502   004AD6  6457               	cpfsgt	_TxBufReadCnt^0,c	;volatile
 11503   004AD8  EF70  F025         	goto	i2u474_41
 11504   004ADC  EF72  F025         	goto	i2u474_40
 11505   004AE0                     i2u474_41:
 11506   004AE0  EF74  F025         	goto	i2l4505
 11507   004AE4                     i2u474_40:
 11508   004AE4  0E00               	movlw	0
 11509   004AE6  6E57               	movwf	_TxBufReadCnt^0,c	;volatile
 11510   004AE8                     i2l4505:
 11511                           
 11512                           ;serial.c: 71:     return EUSART4TXbuf[TxBufReadCnt++];
 11513   004AE8  2A57               	incf	_TxBufReadCnt^0,f,c	;volatile
 11514   004AEA  0457               	decf	_TxBufReadCnt^0,w,c	;volatile
 11515   004AEC  6E01               	movwf	??_getCharFromTxBuf^0,c
 11516   004AEE  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
 11517   004AF0  0E9A               	movlw	low _EUSART4TXbuf
 11518   004AF2  2401               	addwf	??_getCharFromTxBuf^0,w,c
 11519   004AF4  6ED9               	movwf	fsr2l,c
 11520   004AF6  0E01               	movlw	high _EUSART4TXbuf
 11521   004AF8  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
 11522   004AFA  6EDA               	movwf	fsr2h,c
 11523   004AFC  50DF               	movf	indf2,w,c
 11524   004AFE  0012               	return		;funcret
 11525   004B00                     __end_of_getCharFromTxBuf:
 11526                           	callstack 0
 11527                           
 11528                           	psect	rparam
 11529   000000                     
 11530                           	psect	temp
 11531   00005B                     btemp:
 11532                           	callstack 0
 11533   00005B                     	ds	1
 11534   000000                     int$flags	set	btemp
 11535   000000                     wtemp8	set	btemp+1
 11536   000000                     ttemp5	set	btemp+1
 11537   000000                     ttemp6	set	btemp+4
 11538   000000                     ttemp7	set	btemp+8
 11539                           
 11540                           	psect	idloc
 11541                           
 11542                           ;Config register IDLOC0 @ 0x200000
 11543                           ;	unspecified, using default values
 11544   200000                     	org	2097152
 11545   200000  0FFF               	dw	4095
 11546                           
 11547                           ;Config register IDLOC1 @ 0x200002
 11548                           ;	unspecified, using default values
 11549   200002                     	org	2097154
 11550   200002  0FFF               	dw	4095
 11551                           
 11552                           ;Config register IDLOC2 @ 0x200004
 11553                           ;	unspecified, using default values
 11554   200004                     	org	2097156
 11555   200004  0FFF               	dw	4095
 11556                           
 11557                           ;Config register IDLOC3 @ 0x200006
 11558                           ;	unspecified, using default values
 11559   200006                     	org	2097158
 11560   200006  0FFF               	dw	4095
 11561                           
 11562                           ;Config register IDLOC4 @ 0x200008
 11563                           ;	unspecified, using default values
 11564   200008                     	org	2097160
 11565   200008  0FFF               	dw	4095
 11566                           
 11567                           ;Config register IDLOC5 @ 0x20000A
 11568                           ;	unspecified, using default values
 11569   20000A                     	org	2097162
 11570   20000A  0FFF               	dw	4095
 11571                           
 11572                           ;Config register IDLOC6 @ 0x20000C
 11573                           ;	unspecified, using default values
 11574   20000C                     	org	2097164
 11575   20000C  0FFF               	dw	4095
 11576                           
 11577                           ;Config register IDLOC7 @ 0x20000E
 11578                           ;	unspecified, using default values
 11579   20000E                     	org	2097166
 11580   20000E  0FFF               	dw	4095
 11581                           
 11582                           	psect	config
 11583                           
 11584                           ;Config register CONFIG1L @ 0x300000
 11585                           ;	External Oscillator mode Selection bits
 11586                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 11587                           ;	Power-up default value for COSC bits
 11588                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 11589   300000                     	org	3145728
 11590   300000  AA                 	db	170
 11591                           
 11592                           ;Config register CONFIG1H @ 0x300001
 11593                           ;	unspecified, using default values
 11594                           ;	Clock Out Enable bit
 11595                           ;	CLKOUTEN = 0x1, unprogrammed default
 11596                           ;	Clock Switch Enable bit
 11597                           ;	CSWEN = 0x1, unprogrammed default
 11598                           ;	Fail-Safe Clock Monitor Enable bit
 11599                           ;	FCMEN = 0x1, unprogrammed default
 11600   300001                     	org	3145729
 11601   300001  FF                 	db	255
 11602                           
 11603                           ;Config register CONFIG2L @ 0x300002
 11604                           ;	unspecified, using default values
 11605                           ;	Master Clear Enable bit
 11606                           ;	MCLRE = 0x1, unprogrammed default
 11607                           ;	Power-up Timer Enable bit
 11608                           ;	PWRTE = 0x1, unprogrammed default
 11609                           ;	Low-power BOR enable bit
 11610                           ;	LPBOREN = 0x1, unprogrammed default
 11611                           ;	Brown-out Reset Enable bits
 11612                           ;	BOREN = 0x3, unprogrammed default
 11613   300002                     	org	3145730
 11614   300002  FF                 	db	255
 11615                           
 11616                           ;Config register CONFIG2H @ 0x300003
 11617                           ;	unspecified, using default values
 11618                           ;	Brown Out Reset Voltage selection bits
 11619                           ;	BORV = 0x3, unprogrammed default
 11620                           ;	ZCD Disable bit
 11621                           ;	ZCD = 0x1, unprogrammed default
 11622                           ;	PPSLOCK bit One-Way Set Enable bit
 11623                           ;	PPS1WAY = 0x1, unprogrammed default
 11624                           ;	Stack Full/Underflow Reset Enable bit
 11625                           ;	STVREN = 0x1, unprogrammed default
 11626                           ;	Debugger Enable bit
 11627                           ;	DEBUG = 0x1, unprogrammed default
 11628                           ;	Extended Instruction Set Enable bit
 11629                           ;	XINST = 0x1, unprogrammed default
 11630   300003                     	org	3145731
 11631   300003  FF                 	db	255
 11632                           
 11633                           ;Config register CONFIG3L @ 0x300004
 11634                           ;	WDT Period Select bits
 11635                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 11636                           ;	WDT operating mode
 11637                           ;	WDTE = OFF, WDT Disabled
 11638   300004                     	org	3145732
 11639   300004  9F                 	db	159
 11640                           
 11641                           ;Config register CONFIG3H @ 0x300005
 11642                           ;	unspecified, using default values
 11643                           ;	WDT Window Select bits
 11644                           ;	WDTCWS = 0x7, unprogrammed default
 11645                           ;	WDT input clock selector
 11646                           ;	WDTCCS = 0x7, unprogrammed default
 11647   300005                     	org	3145733
 11648   300005  FF                 	db	255
 11649                           
 11650                           ;Config register CONFIG4L @ 0x300006
 11651                           ;	unspecified, using default values
 11652                           ;	Write Protection Block 0
 11653                           ;	WRT0 = 0x1, unprogrammed default
 11654                           ;	Write Protection Block 1
 11655                           ;	WRT1 = 0x1, unprogrammed default
 11656                           ;	Write Protection Block 2
 11657                           ;	WRT2 = 0x1, unprogrammed default
 11658                           ;	Write Protection Block 3
 11659                           ;	WRT3 = 0x1, unprogrammed default
 11660                           ;	Write Protection Block 3
 11661                           ;	WRT4 = 0x1, unprogrammed default
 11662                           ;	Write Protection Block 3
 11663                           ;	WRT5 = 0x1, unprogrammed default
 11664                           ;	Write Protection Block 3
 11665                           ;	WRT6 = 0x1, unprogrammed default
 11666                           ;	Write Protection Block 3
 11667                           ;	WRT7 = 0x1, unprogrammed default
 11668   300006                     	org	3145734
 11669   300006  FF                 	db	255
 11670                           
 11671                           ;Config register CONFIG4H @ 0x300007
 11672                           ;	unspecified, using default values
 11673                           ;	Configuration Register Write Protection bit
 11674                           ;	WRTC = 0x1, unprogrammed default
 11675                           ;	Boot Block Write Protection bit
 11676                           ;	WRTB = 0x1, unprogrammed default
 11677                           ;	Data EEPROM Write Protection bit
 11678                           ;	WRTD = 0x1, unprogrammed default
 11679                           ;	Scanner Enable bit
 11680                           ;	SCANE = 0x1, unprogrammed default
 11681                           ;	Low Voltage Programming Enable bit
 11682                           ;	LVP = 0x1, unprogrammed default
 11683   300007                     	org	3145735
 11684   300007  FF                 	db	255
 11685                           
 11686                           ;Config register CONFIG5L @ 0x300008
 11687                           ;	unspecified, using default values
 11688                           ;	UserNVM Program Memory Code Protection bit
 11689                           ;	CP = 0x1, unprogrammed default
 11690                           ;	DataNVM Memory Code Protection bit
 11691                           ;	CPD = 0x1, unprogrammed default
 11692   300008                     	org	3145736
 11693   300008  FF                 	db	255
 11694                           
 11695                           ;Config register CONFIG5H @ 0x300009
 11696                           ;	unspecified, using default values
 11697   300009                     	org	3145737
 11698   300009  FF                 	db	255
 11699                           
 11700                           ;Config register CONFIG6L @ 0x30000A
 11701                           ;	unspecified, using default values
 11702                           ;	Table Read Protection Block 0
 11703                           ;	EBTR0 = 0x1, unprogrammed default
 11704                           ;	Table Read Protection Block 1
 11705                           ;	EBTR1 = 0x1, unprogrammed default
 11706                           ;	Table Read Protection Block 2
 11707                           ;	EBTR2 = 0x1, unprogrammed default
 11708                           ;	Table Read Protection Block 3
 11709                           ;	EBTR3 = 0x1, unprogrammed default
 11710                           ;	Table Read Protection Block 4
 11711                           ;	EBTR4 = 0x1, unprogrammed default
 11712                           ;	Table Read Protection Block 5
 11713                           ;	EBTR5 = 0x1, unprogrammed default
 11714                           ;	Table Read Protection Block 6
 11715                           ;	EBTR6 = 0x1, unprogrammed default
 11716                           ;	Table Read Protection Block 7
 11717                           ;	EBTR7 = 0x1, unprogrammed default
 11718   30000A                     	org	3145738
 11719   30000A  FF                 	db	255
 11720                           
 11721                           ;Config register CONFIG6H @ 0x30000B
 11722                           ;	unspecified, using default values
 11723                           ;	Boot Block Table Read Protection bit
 11724                           ;	EBTRB = 0x1, unprogrammed default
 11725   30000B                     	org	3145739
 11726   30000B  FF                 	db	255
 11727                           tosu	equ	0xFFF
 11728                           tosh	equ	0xFFE
 11729                           tosl	equ	0xFFD
 11730                           stkptr	equ	0xFFC
 11731                           pclatu	equ	0xFFB
 11732                           pclath	equ	0xFFA
 11733                           pcl	equ	0xFF9
 11734                           tblptru	equ	0xFF8
 11735                           tblptrh	equ	0xFF7
 11736                           tblptrl	equ	0xFF6
 11737                           tablat	equ	0xFF5
 11738                           prodh	equ	0xFF4
 11739                           prodl	equ	0xFF3
 11740                           indf0	equ	0xFEF
 11741                           postinc0	equ	0xFEE
 11742                           postdec0	equ	0xFED
 11743                           preinc0	equ	0xFEC
 11744                           plusw0	equ	0xFEB
 11745                           fsr0h	equ	0xFEA
 11746                           fsr0l	equ	0xFE9
 11747                           wreg	equ	0xFE8
 11748                           indf1	equ	0xFE7
 11749                           postinc1	equ	0xFE6
 11750                           postdec1	equ	0xFE5
 11751                           preinc1	equ	0xFE4
 11752                           plusw1	equ	0xFE3
 11753                           fsr1h	equ	0xFE2
 11754                           fsr1l	equ	0xFE1
 11755                           bsr	equ	0xFE0
 11756                           indf2	equ	0xFDF
 11757                           postinc2	equ	0xFDE
 11758                           postdec2	equ	0xFDD
 11759                           preinc2	equ	0xFDC
 11760                           plusw2	equ	0xFDB
 11761                           fsr2h	equ	0xFDA
 11762                           fsr2l	equ	0xFD9
 11763                           status	equ	0xFD8

Data Sizes:
    Strings     22
    Constant    0
    Data        4
    BSS         125
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160    112     145
    BANK1           256    154     246
    BANK2           256    200     200
    BANK3           256    200     200
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_1(CODE[22]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 22
		 -> STR_1(CODE[22]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 22
		 -> STR_1(CODE[22]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2636$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_1(CODE[22]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 150
		 -> return_home_turns@string1(BANK1[150]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2583$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2583$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 150
		 -> return_home_turns@string1(BANK1[150]), 

    motorRight.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhhhlllll[1]), CCPR2H(BITBIGSFRhhhhllll[1]), 

    motorRight.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhhhlllll[1]), CCPR1H(BITBIGSFRhhhhllll[1]), 

    motorLeft.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhhhlllll[1]), CCPR2H(BITBIGSFRhhhhllll[1]), 

    motorLeft.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhhhlllll[1]), CCPR1H(BITBIGSFRhhhhllll[1]), 

    reverseSquareLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorRight(BANK0[9]), 

    reverseSquareLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorLeft(BANK0[9]), 

    reverseSquareRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorRight(BANK0[9]), 

    reverseSquareRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorLeft(BANK0[9]), 

    turnLeft_135@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhhhlllll[1]), CCPR2H(BITBIGSFRhhhhllll[1]), 

    turnLeft_135@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhhhlllll[1]), CCPR1H(BITBIGSFRhhhhllll[1]), 

    turnLeft_135@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhhhlllll[1]), CCPR2H(BITBIGSFRhhhhllll[1]), 

    turnLeft_135@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhhhlllll[1]), CCPR1H(BITBIGSFRhhhhllll[1]), 

    turnLeft_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorRight(BANK0[9]), 

    turnLeft_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorLeft(BANK0[9]), 

    turnRight_135@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhhhlllll[1]), CCPR2H(BITBIGSFRhhhhllll[1]), 

    turnRight_135@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhhhlllll[1]), CCPR1H(BITBIGSFRhhhhllll[1]), 

    turnRight_135@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhhhlllll[1]), CCPR2H(BITBIGSFRhhhhllll[1]), 

    turnRight_135@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhhhlllll[1]), CCPR1H(BITBIGSFRhhhhllll[1]), 

    turnRight_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorRight(BANK0[9]), 

    turnRight_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorLeft(BANK0[9]), 

    turn_180@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhhhlllll[1]), CCPR2H(BITBIGSFRhhhhllll[1]), 

    turn_180@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhhhlllll[1]), CCPR1H(BITBIGSFRhhhhllll[1]), 

    turn_180@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhhhlllll[1]), CCPR2H(BITBIGSFRhhhhllll[1]), 

    turn_180@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhhhlllll[1]), CCPR1H(BITBIGSFRhhhhllll[1]), 

    turn_180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorRight(BANK0[9]), 

    turn_180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorLeft(BANK0[9]), 

    turnRight_90@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhhhlllll[1]), CCPR2H(BITBIGSFRhhhhllll[1]), 

    turnRight_90@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhhhlllll[1]), CCPR1H(BITBIGSFRhhhhllll[1]), 

    turnRight_90@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhhhlllll[1]), CCPR2H(BITBIGSFRhhhhllll[1]), 

    turnRight_90@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhhhlllll[1]), CCPR1H(BITBIGSFRhhhhllll[1]), 

    turnRight_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorRight(BANK0[9]), 

    turnRight_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorLeft(BANK0[9]), 

    turnLeft_90@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhhhlllll[1]), CCPR2H(BITBIGSFRhhhhllll[1]), 

    turnLeft_90@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhhhlllll[1]), CCPR1H(BITBIGSFRhhhhllll[1]), 

    turnLeft_90@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhhhlllll[1]), CCPR2H(BITBIGSFRhhhhllll[1]), 

    turnLeft_90@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhhhlllll[1]), CCPR1H(BITBIGSFRhhhhllll[1]), 

    turnLeft_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorRight(BANK0[9]), 

    turnLeft_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorLeft(BANK0[9]), 

    reverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhhhlllll[1]), CCPR2H(BITBIGSFRhhhhllll[1]), 

    reverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhhhlllll[1]), CCPR1H(BITBIGSFRhhhhllll[1]), 

    reverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorRight(BANK0[9]), 

    reverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhhhlllll[1]), CCPR2H(BITBIGSFRhhhhllll[1]), 

    reverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhhhlllll[1]), CCPR1H(BITBIGSFRhhhhllll[1]), 

    reverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorLeft(BANK0[9]), 

    forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhhhlllll[1]), CCPR2H(BITBIGSFRhhhhllll[1]), 

    forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhhhlllll[1]), CCPR1H(BITBIGSFRhhhhllll[1]), 

    forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorRight(BANK0[9]), 

    forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhhhlllll[1]), CCPR2H(BITBIGSFRhhhhllll[1]), 

    forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhhhlllll[1]), CCPR1H(BITBIGSFRhhhhllll[1]), 

    forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorLeft(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhhhlllll[1]), CCPR2H(BITBIGSFRhhhhllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhhhlllll[1]), CCPR1H(BITBIGSFRhhhhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorRight(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhhhlllll[1]), CCPR2H(BITBIGSFRhhhhllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhhhlllll[1]), CCPR1H(BITBIGSFRhhhhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorLeft(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhhhlllll[1]), CCPR2H(BITBIGSFRhhhhllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhhhlllll[1]), CCPR1H(BITBIGSFRhhhhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorRight(BANK0[9]), main@motorLeft(BANK0[9]), 

    DCmotorsInit@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhhhlllll[1]), CCPR2H(BITBIGSFRhhhhllll[1]), 

    DCmotorsInit@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhhhlllll[1]), CCPR1H(BITBIGSFRhhhhllll[1]), 

    DCmotorsInit@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorRight(BANK0[9]), 

    S107DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhhhlllll[1]), CCPR2H(BITBIGSFRhhhhllll[1]), 

    DCmotorsInit@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhhhlllll[1]), CCPR2H(BITBIGSFRhhhhllll[1]), 

    S107DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhhhlllll[1]), CCPR1H(BITBIGSFRhhhhllll[1]), 

    DCmotorsInit@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhhhlllll[1]), CCPR1H(BITBIGSFRhhhhllll[1]), 

    DCmotorsInit@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorLeft(BANK0[9]), 

    return_home_turns@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorRight(BANK0[9]), 

    return_home_turns@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorLeft(BANK0[9]), 

    return_home_turns@turn_history	PTR unsigned int  size(2) Largest target is 200
		 -> main@turn_history(BANK2[200]), 

    return_home_turns@counter_history	PTR unsigned int  size(2) Largest target is 200
		 -> main@counter_history(BANK3[200]), 

    colorDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorRight(BANK0[9]), 

    colorDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorLeft(BANK0[9]), 

    colorDetect@whiteRGBVal	PTR struct RGB size(2) Largest target is 8
		 -> main@whiteRGBVal(BANK0[8]), 

    colorDetect@ambientRGBVal	PTR struct RGB size(2) Largest target is 8
		 -> main@ambientRGBVal(BANK0[8]), 

    whiteCal@v	PTR struct RGB size(2) Largest target is 8
		 -> main@whiteRGBVal(BANK0[8]), 

    ambientCal@v	PTR struct RGB size(2) Largest target is 8
		 -> main@ambientRGBVal(BANK0[8]), 

    getColor@v	PTR struct RGB size(2) Largest target is 8
		 -> main@whiteRGBVal(BANK0[8]), main@RGBVal(BANK0[8]), main@ambientRGBVal(BANK0[8]), colorDetect@RGBVal(BANK0[8]), 


Critical Paths under _main in COMRAM

    _whiteCal->_getColor
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _forward->_setMotorPWM
    _TxBufferedString->_putCharToTxBuf
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _colorDetect->___fldiv
    _turn_180->_stop
    _turnRight_135->_stop
    _turnLeft_135->_stop
    _reverseSquareRight->_turnRight_90
    _turnRight_90->_stop
    _reverseSquareLeft->_turnLeft_90
    _turnLeft_90->_stop
    _stop->_setMotorPWM
    _reverse->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    ___flsub->___fladd
    ___flmul->___flsub
    ___flge->___flsub
    ___fldiv->___flmul
    _ambientCal->_getColor
    _getColor->_color_read_Blue
    _getColor->_color_read_Clear
    _getColor->_color_read_Green
    _getColor->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_colorDetect
    _return_home_turns->_sprintf
    _sprintf->_vfprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_return_home_turns

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               460   460      0  246908
                                             52 BANK0     60    60      0
                                              0 BANK2    200   200      0
                                              0 BANK3    200   200      0
                       _DCmotorsInit
                            ___fldiv
                             ___flge
                           ___xxtofl
                         _ambientCal
                        _colorDetect
                   _color_click_init
                            _forward
                           _getColor
                    _initDCmotorsPWM
                         _initUSART4
                  _return_home_turns
                               _stop
                           _turn_180
                           _whiteCal
 ---------------------------------------------------------------------------------
 (1) _whiteCal                                             6     4      2     988
                                             17 COMRAM     6     4      2
                           _getColor
 ---------------------------------------------------------------------------------
 (1) _return_home_turns                                  166   156     10   81493
                                             31 BANK0     12     2     10
                                              0 BANK1    154   154      0
                   _TxBufferedString
                            _forward
                          _sendTxBuf
                            _sprintf
                               _stop
                       _turnLeft_135
                        _turnLeft_90
                      _turnRight_135
                       _turnRight_90
                           _turn_180
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12    7316
                                              6 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6830
                                             84 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           23    17      6    6369
                                             66 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    4802
                                             31 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2533
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1177
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     857
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (3) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _forward                                              5     1      4    2853
                                             23 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _TxBufferedString                                     2     0      2     143
                                              5 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (3) _putCharToTxBuf                                       1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colorDetect                                         58    46     12  129728
                                             78 COMRAM     2     2      0
                                              0 BANK0     52    40     12
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                           _getColor
                  _reverseSquareLeft
                 _reverseSquareRight
                       _turnLeft_135
                        _turnLeft_90
                      _turnRight_135
                       _turnRight_90
                           _turn_180
 ---------------------------------------------------------------------------------
 (1) _turn_180                                             6     2      4   12710
                                             29 COMRAM     6     2      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _turnRight_135                                        6     2      4   12558
                                             29 COMRAM     6     2      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _turnLeft_135                                         6     2      4   12558
                                             29 COMRAM     6     2      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverseSquareRight                                   6     2      4   22801
                                             35 COMRAM     6     2      4
                            _reverse
                               _stop
                       _turnRight_90
 ---------------------------------------------------------------------------------
 (2) _turnRight_90                                         6     2      4   12859
                                             29 COMRAM     6     2      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverseSquareLeft                                    6     2      4   22801
                                             35 COMRAM     6     2      4
                            _reverse
                               _stop
                        _turnLeft_90
 ---------------------------------------------------------------------------------
 (2) _turnLeft_90                                          6     2      4   12859
                                             29 COMRAM     6     2      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 6     2      4    5653
                                             23 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverse                                              5     1      4    3917
                                             23 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                          6     4      2    2285
                                             17 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     355
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     358
                                             10 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    2078
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3801
                                             20 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2262
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    4360
                                             28 COMRAM    25    17      8
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    4742
                                             28 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1855
                                             53 COMRAM    25    17      8
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _ambientCal                                           6     4      2    1064
                                             17 COMRAM     6     4      2
                           _getColor
 ---------------------------------------------------------------------------------
 (2) _getColor                                             2     0      2     844
                                             15 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DCmotorsInit                                         4     0      4     416
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             2     2      0      22
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
                    i2_isDataInTxBuf
 ---------------------------------------------------------------------------------
 (11) i2_isDataInTxBuf                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DCmotorsInit
   ___fldiv
     ___flmul (ARG)
       ___flsub (ARG)
         ___fladd
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flsub (ARG)
     ___xxtofl (ARG)
   ___flge
     ___flsub (ARG)
   ___xxtofl
   _ambientCal
     _getColor
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
   _colorDetect
     ___fldiv
     ___flge
     ___flmul
     ___flsub
     ___xxtofl
     _getColor
     _reverseSquareLeft
       _reverse
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
       _turnLeft_90
         _reverse
         _setMotorPWM
         _stop
     _reverseSquareRight
       _reverse
       _stop
       _turnRight_90
         _reverse
         _setMotorPWM
         _stop
     _turnLeft_135
       _reverse
       _setMotorPWM
       _stop
     _turnLeft_90
     _turnRight_135
       _reverse
       _setMotorPWM
       _stop
     _turnRight_90
     _turn_180
       _reverse
       _setMotorPWM
       _stop
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _forward
     _setMotorPWM
   _getColor
   _initDCmotorsPWM
   _initUSART4
   _return_home_turns
     _TxBufferedString
       _putCharToTxBuf
     _forward
     _sendTxBuf
       _isDataInTxBuf
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
     _stop
     _turnLeft_135
     _turnLeft_90
     _turnRight_135
     _turnRight_90
     _turn_180
   _stop
   _turn_180
   _whiteCal
     _getColor

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf
   i2_isDataInTxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     C8      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     C8      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     9A      F6       7       96.1%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     70      91       5       90.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBIGSFRlhhhhl     52      0       0      42        0.0%
BITBIGSFRlhhhll     37      0       0      44        0.0%
BITBIGSFRlllhlh     2A      0       0      55        0.0%
BITBIGSFRlllll      26      0       0      60        0.0%
BITBIGSFRlhhhll     20      0       0      47        0.0%
BITBIGSFRlhhhll     1E      0       0      49        0.0%
BITBIGSFRhhhhhl     1B      0       0      33        0.0%
BITBIGSFRhhhhll     17      0       0      38        0.0%
BITBIGSFRhhhhhl     13      0       0      34        0.0%
BITBIGSFRlhhl       11      0       0      50        0.0%
BITBIGSFRhhhhlh      E      0       0      35        0.0%
BITBIGSFRhhhhhh      D      0       0      32        0.0%
BITBIGSFRlhhhll      C      0       0      48        0.0%
BITBIGSFRlllhll      9      0       0      57        0.0%
BITBIGSFRlllhll      9      0       0      56        0.0%
BITBIGSFRlhhhll      8      0       0      45        0.0%
BITBIGSFRllllh       6      0       0      59        0.0%
BITBIGSFRlllhh       6      0       0      54        0.0%
BITBIGSFRlllhll      5      0       0      58        0.0%
BITBIGSFRllhl        5      0       0      53        0.0%
BITBIGSFRhhhhll      5      0       0      39        0.0%
BITBIGSFRllhh        3      0       0      52        0.0%
BITBIGSFRlhhhlh      2      0       0      43        0.0%
BITBIGSFRhhhhll      2      0       0      37        0.0%
BITBIGSFRlhhhhh      1      0       0      41        0.0%
BITBIGSFRlhhhll      1      0       0      46        0.0%
BITBIGSFRhhhhlh      1      0       0      36        0.0%
BITBIGSFRlhl         1      0       0      51        0.0%
BITBIGSFRhhll        1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     371      61        0.0%
DATA                 0      0     371       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 15 09:33:08 2022

                  _color_read_Red 47DA                      ___fldiv@aexp 004E  
                    ___fldiv@bexp 004D                      ___fldiv@sign 0046  
                 _color_read_Blue 48CA                                l61 4AA2  
                              l70 4878                                l64 4C0A  
                              l73 4918                                l67 4828  
                              l76 48C8                                l84 4034  
                              l79 4732                                l89 3F50  
             ___wmul@multiplicand 0007        __end_of_reverseSquareRight 44C2  
                _color_read_Clear 487A                  _color_read_Green 482A  
                             l110 19E2                               l131 2EF4  
                             l300 4B7E                               l204 3474  
                             l116 19EA                               l214 442A  
                             l303 4BA4                               l135 2FCC  
                             l312 4C6A                               l240 3AF0  
                             l224 410A                               l306 4C74  
                             l234 41E0                               l315 4C60  
                             l252 3874                               l309 4C7E  
                             l318 4A2E                               l270 4556  
                             l246 39B2                               l502 4AD2  
                             l264 3D68                               l258 3C2C  
                             l194 45E6                               l506 4C24  
                             l267 44C0                               l197 42B2  
                             l456 4BEA                               l297 4B52  
                             l539 4BCA                               l804 3E26  
                             l493 4B28                               l653 3308  
                             l496 4C3C                               l809 3E6C  
                             l666 35D8                               _abs 4A30  
                             _pad 45E8                               wreg 000FE8  
                    ___flmul@aexp 002E                      ___flmul@bexp 002F  
                    ___flmul@sign 0029                      ___flmul@temp 0034  
                    ___flmul@prod 0030              reverseSquareRight@mL 0024  
            reverseSquareRight@mR 0026                              l1030 46CC  
                            l1121 2AE0                              l1201 30BC  
                            l1123 2940                              ?_abs 0017  
                            l1132 2986                              l1109 49A8  
                            l1037 46D4                              l1134 29FE  
                            l1126 2904                              l1302 49EC  
                            l1135 29EC                              l1160 25D8  
                            l1208 3118                              l1153 23E2  
                            l1305 4C84                              l1217 47D8  
                            l1170 2708                              l1162 2650  
                            l1250 2B76                              l1163 263E  
                            l1067 1BDA                              l1243 4660  
                            l1251 2BBC                              l1084 1CF4  
                            l1076 1EAA                              l1068 1BC8  
                            l1157 2746                              l1093 1DC4  
                            l1069 1B8E                              l1094 1DB2  
                            l1262 2D5E                              l1239 460A  
                            l1248 2B6E                              l4001 239C  
                            l3201 337A                              l1194 3024  
                            l1282 4A6E                              l4011 23F2  
                            l4003 23AC                              l3211 3434  
                            l3203 338E                              l1275 4786  
                            l3213 4B7E                              l4101 2732  
                            l4021 242C                              l4013 2402  
                            l4005 23BC                              l1197 3180  
                            l3205 3392                              l3301 4382  
                            l1269 3736                              l1294 437C  
                            l3215 4B8E                              l4103 2736  
                            l4031 247E                              l4023 2442  
                            l4007 23CC                              l3071 4BA6  
                            l3207 33D4                              l3311 43D6  
                            l3303 439A                              l1279 4A66  
                            l4201 3F98                              l4121 3DE6  
                            l4113 3D6A                              l4041 24C4  
                            l4033 248C                              l4025 244E  
                            l4017 2416                              l4009 23D2  
                            l3161 467C                              l3073 4BC2  
                            l3209 33F0                              l3321 4150  
                            l3305 43A6                              l3313 43E2  
                            l3401 3902                              l5001 113C  
                            l4211 4012                              l4203 3FB4  
                            l4131 3E6A                              l4123 3DF4  
                            l4115 3D98                              l4051 2532  
                            l4043 24DE                              l4035 2498  
                            l4027 2466                              l4019 2422  
                            l4107 4964                              l3171 46B6  
                            l3163 4684                              l3331 41B0  
                            l3323 4168                              l3315 43FA  
                            l3307 43BE                              l3411 3956  
                            l3403 3912                              l5011 11D0  
                            l5003 114A                              l4205 3FD6  
                            l4125 3E06                              l4117 3DA8  
                            l4061 25C8                              l4053 255C  
                            l4045 24EE                              l4037 24A8  
                            l4029 2472                              l3501 1ABC  
                            l4109 4974                              l4141 3034  
                            l3173 46BE                              l3165 468C  
                            l3157 4662                              l3333 41C8  
                            l3325 4174                              l3317 4412  
                            l3309 43CA                              l3421 39C8  
                            l3413 396E                              l3405 3926  
                            l5101 183A                              l5021 1268  
                            l5013 11E2                              l5005 117C  
                            l4221 3E98                              l4213 3E6E  
                            l3271 4C70                              l4207 3FEE  
                            l4127 3E14                              l4119 3DD6  
                            l4071 2608                              l4063 25D6  
                            l4055 2592                              l4047 250A  
                            l4039 24B4                              l3511 1AF4  
                            l3503 1ACC                              l4151 3072  
                            l4143 304A                              l4135 2FD0  
                            l3175 46C0                              l3167 469A  
                            l3159 466A                              l3327 418C  
                            l3319 410C                              l3431 3A40  
                            l3423 39E0                              l3415 3986  
                            l3407 393E                              l5111 18F2  
                            l5103 186C                              l5031 1362  
                            l5023 129A                              l5015 11F2  
                            l5007 118E                              l4231 3F16  
                            l4223 3EB4                              l3281 4C76  
                            l3273 4C58                              l4209 3FFA  
                            l4129 3E64                              l4081 267A  
                            l4073 2636                              l4065 25E8  
                            l4057 25A0                              l4049 2516  
                            l3521 1B08                              l3513 1AF8  
                            l3505 1ADE                              l4161 30FA  
                            l4153 30A4                              l4137 2FE0  
                            l3177 46C6                              l3169 46A0  
                            l3329 4198                              l3441 3A94  
                            l3433 3A50                              l3425 3A0C  
                            l3417 399E                              l3409 394A  
                            l5121 19A4                              l5113 1900  
                            l5105 189E                              l5033 13B8  
                            l5041 13F6                              l5025 12CC  
                            l5017 1224                              l5009 119E  
                            l4233 3F2E                              l4225 3ED0  
                            l5201 1ECA                              l3291 4A04  
                            l3283 4C7A                              l3275 4C5C  
                            l3371 482A                              l4091 26F0  
                            l4083 26A4                              l4067 25F6  
                            l4059 25BE                              l3611 1D56  
                            l3603 1D2E                              l3531 1B1C  
                            l3523 1B0C                              l3515 1AFC  
                            l3507 1AEC                              l4171 3150  
                            l4163 3108                              l4155 30A6  
                            l4147 305E                              l4139 2FEE  
                            l3443 3AAC                              l3435 3A64  
                            l3427 3A20                              l3419 39B4  
                            l5123 19B2                              l5107 18D0  
                            l5115 190E                              l5051 14F6  
                            l5043 144C                              l5035 13C6  
                            l5027 12DA                              l5019 1236  
                            l3451 4B12                              l4227 3EF2  
                            l4219 3E76                              l5211 1ED4  
                            l5203 1ECC                              l3293 4A2A  
                            l3285 49F0                              l3269 4C6C  
                            l3277 4C62                              l3373 4870  
                            l3365 47DA                              l4093 270C  
                            l4077 2660                              l4085 26A8  
                            l4069 25FA                              l3613 1D5E  
                            l3605 1D38                              l3621 1D82  
                            l3541 1B30                              l3533 1B20  
                            l3525 1B10                              l3517 1B00  
                            l3509 1AF0                              l3461 19EC  
                            l4173 3160                              l4165 3126  
                            l4157 30B2                              l4149 3066  
                            l3197 330A                              l3445 3AC4  
                            l3437 3A7C                              l3429 3A30  
                            l3701 37C4                              l5125 19C6  
                            l5117 1940                              l5109 18DE  
                            l5061 15F0                              l5053 1504  
                            l5045 147E                              l5037 13DA  
                            l5029 130C                              l4181 4A70  
                            l3453 4B16                              l5141 2D8E  
                            l5133 2D60                              l4229 3F0A  
                            l5301 214C                              l5221 1EDE  
                            l5213 1ED6                              l5205 1ECE  
                            l3295 4A2C                              l3287 49F4  
                            l3279 4C66                              l3383 487A  
                            l3367 4820                              l4191 3F52  
                            l4095 271C                              l4087 26C2  
                            l4079 266C                              l3631 1DD4  
                            l3623 1D86                              l3615 1D62  
                            l3607 1D46                              l3551 1BA8  
                            l3543 1B5A                              l3535 1B24  
                            l3527 1B14                              l3519 1B04  
                            l3471 1A28                              l3463 19F8  
                            l4175 316E                              l4167 3128  
                            l4159 30EE                              l3199 3326  
                            l3447 3ADC                              l3439 3A88  
                            l3391 388A                              l3711 3818  
                            l3703 37D4                              l5127 19D4  
                            l5119 1972                              l5071 1660  
                            l5063 15FE                              l5047 14D4  
                            l5055 1512                              l5039 13E8  
                            l4183 4A74                              l3455 4B26  
                            l5151 2E2E                              l5143 2DF0  
                            l5135 2D68                              l5311 21B8  
                            l5303 2164                              l5231 1EE8  
                            l5223 1EE0                              l5215 1ED8  
                            l5207 1ED0                              l3289 49FC  
                            l3377 48CA                              l3385 48C0  
                            l4097 272A                              l4089 26D6  
                            l3641 1E3A                              l3633 1DE0  
                            l3625 1D94                              l3617 1D72  
                            l3609 1D48                              l3561 1BE8  
                            l3553 1BAC                              l3545 1B76  
                            l3537 1B28                              l3529 1B18  
                            l3481 1A58                              l3473 1A38  
                            l3465 1A06                              l4177 3170  
                            l4169 312C                              l3393 38A2  
                            l3721 4440                              l3713 3830  
                            l3705 37E8                              l5081 16F4  
                            l5073 1692                              l5065 1612  
                            l5057 1568                              l5049 14E2  
                            l5129 19E2                              l4185 4A7E  
                            l3449 4B02                              l3457 4C26  
                            l5161 2E76                              l5153 2E46  
                            l5145 2DFC                              l5313 21CC  
                            l5321 2204                              l5305 2198  
                            l5241 1EF2                              l5233 1EEA  
                            l5225 1EE2                              l5217 1EDA  
                            l5209 1ED2                              l3379 4910  
                            l4099 272C                              l3651 1E82  
                            l3643 1E4A                              l3635 1DEE  
                            l3627 1DAA                              l3619 1D74  
                            l3571 1C2A                              l3563 1BF8  
                            l3555 1BBA                              l3547 1B86  
                            l3539 1B2C                              l3491 1A82  
                            l3483 1A6A                              l3475 1A3A  
                            l3467 1A08                              l3299 437E  
                            l3731 44D6                              l3395 38CE  
                            l3723 4458                              l3715 3848  
                            l3707 3800                              l5091 17CA  
                            l5075 16C4                              l5083 1702  
                            l5067 1620                              l5059 15BE  
                            l4187 4A8E                              l4451 45C0  
                            l4443 4558                              l3811 4AA4  
                            l5171 2F14                              l5163 2E8E  
                            l5147 2E00                              l5139 2D7C  
                            l5331 2266                              l5323 221E  
                            l5315 21CE                              l5307 219C  
                            l5251 1EFC                              l5243 1EF4  
                            l5235 1EEC                              l5227 1EE4  
                            l5219 1EDC                              l4197 3F5A  
                            l3901 28A8                              l3653 1E84  
                            l3645 1E6A                              l3637 1E28  
                            l3581 1C58                              l3573 1C38  
                            l3557 1BBC                              l3549 1B9C  
                            l3493 1A92                              l3485 1A6C  
                            l3469 1A18                              l3477 1A42  
                            l3733 44EE                              l3397 38E2  
                            l3389 3876                              l3725 446C  
                            l3741 3B06                              l3717 3860  
                            l3709 380C                              l5093 17FC  
                            l5085 1734                              l5077 16D2  
                            l5069 162E                              l4189 4A98  
                            l4461 45DA                              l4453 45C2  
                            l4445 4568                              l3813 4AA8  
                            l3821 4C20                              l5165 2EA2  
                            l5149 2E16                              l5341 22D2  
                            l5333 227A                              l5325 2238  
                            l5317 21D0                              l5309 21A4  
                            l5261 1F28                              l5253 1EFC  
                            l5245 1EF8                              l5237 1EEE  
                            l5229 1EE6                              ?_pad 0015  
                            l4471 420E                              l4199 3F7C  
                            l3911 28F4                              l3903 28B8  
                            l3655 1E8A                              l3647 1E6E  
                            l3639 1E2A                              l3591 1CC4  
                            l3583 1C62                              l3575 1C44  
                            l3567 1C0C                              l3559 1BC6  
                            l3495 1AA2                              l3487 1A72  
                            l3479 1A52                              l3735 4502  
                            l3399 38F2                              l3727 4480  
                            l3719 442C                              l3751 3B7E  
                            l3743 3B1E                              l5095 180A  
                            l5087 1766                              l5079 16E6  
                            l4463 45E4                              l4455 45CC  
                            l4447 4592                              l3815 4AB6  
                            l3831 40B6                              l3823 4036  
                            l5167 2ED6                              l5159 2E5E  
                            l5175 2F2C                              l5343 22EA  
                            l5335 229E                              l5327 223C  
                            l5319 21FE                              l5271 1F5C  
                            l5263 1F28                              l5255 1F02  
                            l5247 1EFA                              l5239 1EF0  
                            l5191 1EC0                              l4473 4222  
                            l4465 41E2                              l3921 293E  
                            l3913 2902                              l3905 28C8  
                            l3841 2754                              l3657 1E98  
                            l3649 1E7C                              l3593 1CD4  
                            l3577 1C48                              l3569 1C1C  
                            l3585 1C68                              l3497 1AB2  
                            l3489 1A80                              l3737 4516  
                            l3729 44C2                              l3761 3BD2  
                            l3753 3B8E                              l3745 3B4A  
                            l5097 181E                              l5089 1798  
                            l3681 4B3E                              l3673 4B2A  
                            l4457 45CE                              l4449 45B6  
                            l4481 4BD6                              l3817 4ABA  
                            l3825 407A                              l3833 40C2  
                            l4801 3250                              l5169 2EDC  
                            l5177 2F9E                              l5337 22A6  
                            l5329 2254                              l5273 1F60  
                            l5281 1F94                              l5265 1F34  
                            l5257 1F16                              l5249 1EFC  
                            l5193 1EC2                              l5185 1EAC  
                            l4475 4236                              l4467 41EE  
                            l3931 2984                              l3923 2950  
                            l3915 290E                              l3907 28D0  
                            l3851 2794                              l3843 2762  
                            l3659 1E9A                              l3587 1C8E  
                            l3595 1CE4                              l3579 1C56  
                            l3499 1AB4                              l3771 3C42  
                            l3763 3BEA                              l3755 3BA2  
                            l3747 3B5E                              l3739 3AF2  
                            l3691 374C                              l5099 182C  
                            l3683 4B40                              l3675 4B34  
                            l4459 45D8                              l4491 4BE8  
                            l4483 4BD8                              l3835 40DA  
                            l3827 4092                              l3819 4C0C  
                            l4803 327E                              l4811 32B8  
                            l5179 2FB6                              l5339 22BA  
                            l5291 2064                              l5283 1FDC  
                            l5275 1F78                              l5267 1F40  
                            l5259 1F20                              l5195 1EC4  
                            l5187 1EB0                              l4477 424A  
                            l4469 41FE                              l3941 29E4  
                            l3925 2966                              l3933 2996  
                            l3917 292C                              l3909 28E0  
                            l3861 27BA                              l3853 2796  
                            l3845 2764                              l3597 1D0A  
                            l3589 1CC2                              l3781 3CBA  
                            l3773 3C5A                              l3765 3C02  
                            l3757 3BBA                              l3749 3B6E  
                            l3693 3764                              l3677 4B3A  
                            l3685 4BEE                              l4485 4BDA  
                            l3837 40F2                              l3829 409E  
                            l4813 32C8                              l4805 329E  
                            l4821 347A                              l4901 2BD4  
                            l5365 2F58                              l5293 2086  
                            l5285 1FE8                              l5277 1F7A  
                            l5269 1F4E                              l5197 1EC6  
                            l5189 1EB4                              l3687 46D6  
                            l3951 2A52                              l3935 29A4  
                            l3927 296C                              l3919 292E  
                            l3871 27FA                              l3863 27C8  
                            l3847 2774                              l3855 279E  
                            l3839 2748                              l3599 1D1A  
                            l3791 3D0E                              l3783 3CCA  
                            l3775 3C86                              l3767 3C18  
                            l3759 3BC6                              l3695 3790  
                            l3679 4B3C                              l4487 4BE4  
                            l4479 4BCC                              l4815 32E8  
                            l4807 32A0                              l4831 34DA  
                            l4823 3488                              l4911 2CE0  
                            l4903 2C56                              l5295 20CC  
                            l5287 2030                              l5279 1F7C  
                            l5199 1EC8                              l3961 2ABC  
                            l3945 2A0E                              l3953 2A56  
                            l3937 29A8                              l3929 2976  
                            l3881 283A                              l3873 27FC  
                            l3865 27CA                              l3857 27AE  
                            l3849 2784                              l3793 3D26  
                            l3785 3CDE                              l3777 3C9A  
                            l3769 3C2E                              l3697 37A4  
                            l3689 3738                              l4489 4BE6  
                            l4809 32B2                              l4841 3550  
                            l4833 34F8                              l4825 34A8  
                            l4761 4300                              l4753 42B4  
                            l4921 2D3E                              l4913 2CFE  
                            l4905 2C5C                              l5297 20FE  
                            l5289 203C                              l3963 2AC0  
                            l3955 2A70                              l3947 2A1A  
                            l3939 29B6                              l3891 286A  
                            l3883 2842                              l3867 27DA  
                            l3875 2804                              l3859 27B4  
                            l3795 3D3E                              l3787 3CF6  
                            l3779 3CAA                              l3699 37B4  
                            l4851 35B8                              l4843 3570  
                            l4835 3500                              l4827 34AC  
                            l4819 3476                              l4763 4336  
                            l4755 42C6                              l4771 49C8  
                            l4915 2D18                              l4907 2C62  
                            l4931 361E                              l5299 2110  
                            l3965 2ACE                              l3957 2A86  
                            l3949 2A28                              l3893 286A  
                            l3885 2846                              l3877 2814  
                            l3869 27EA                              l3981 2338  
                            l3797 3D54                              l3789 3D02  
                            l4781 31B4                              l4845 3582  
                            l4837 3514                              l4829 34BA  
                            l4757 42D8                              l4773 49CC  
                            l4861 4616                              l4917 2D28  
                            l4909 2CC6                              l4941 36C8  
                            l4933 3622                              l4925 35DA  
                            l3967 2AD4                              l3959 2AA0  
                            l3879 282A                              l3991 2370  
                            l3983 233A                              l4791 31F6  
                            l4783 31B8                              l4775 3182  
                            l4839 3522                              l4847 3588  
                            l4871 4A4A                              l4759 42E2  
                            l4767 49AA                              l4863 462A  
                            l4855 45E8                              l4919 2D2E  
                            l4935 3632                              l4927 3602  
                            l3969 2AD6                              l3897 287E  
                            l3889 285A                              l3993 2380  
                            l3985 234A                              l3977 231E  
                            l4793 3214                              l4785 31C6  
                            l4777 3186                              l4849 3598  
                            l4769 49B6                              l4865 462E  
                            l4857 45F6                              l4881 2B46  
                            l4873 2AE2                              l4945 36F8  
                            l4937 3652                              l4929 3610  
                            l4961 477C                              l3899 2898  
                            l3995 2386                              l3987 235A  
                            l3979 232A                              l4795 321C  
                            l4787 31E6                              l4779 3194  
                            l4867 464C                              l4859 4602  
                            l4891 2BA4                              l4883 2B62  
                            l4875 2B02                              l4939 3672  
                            l4955 4734                              l4971 47AA  
                            l3997 238C                              l3989 236A  
                            l4981 0E34                              l4797 3230  
                            l4789 31EA                              l4869 4A30  
                            l4893 2BB0                              l4885 2B7E  
                            l4877 2B16                              l4949 370A  
                            l4957 4740                              l4973 47C6  
                            l4965 4788                              l3999 239A  
                            l4991 0F00                              l4983 0E4A  
                            l4799 323E                              l4895 2BB8  
                            l4887 2B8E                              l4879 2B26  
                            l4959 475C                              l4967 479A  
                            l4993 0F28                              l4985 0E5E  
                            l4977 0E18                              l4897 2BC4  
                            l4889 2B94                              l4969 47A2  
                            l4995 0FD6                              l4987 0E90  
                            l4979 0E24                              l4899 2BCE  
                            l4997 1084                              l4989 0EC8  
                            l4999 1132                              STR_1 0E01  
                            u3000 4412                              u3001 440E  
                            u3010 4168                              u3011 4164  
                            u3020 418C                              u3100 3AAC  
                            u3021 4188                              u3101 3AA8  
                            u3030 41B0                              u3110 3AC4  
                            u3031 41AC                              u3111 3AC0  
                            u4000 25F6                              u3200 1A92  
                            u3040 41C8                              u3120 4B12  
                    _BAUD4CONbits 000EE9                              u4001 25F2  
                            u3201 1A8E                              u3041 41C4  
                            u3121 4B0E                              u4010 2608  
                            u3210 1AA2                              u3130 4C3A  
                            u4011 2604                              u3211 1A9E  
                            u3131 4C34                              u4100 3DD6  
                            u4020 2636                              u3300 1BE8  
                            u3220 1ADE                              u3140 4C3C  
                            u4101 3DD2                              u4021 2632  
                            u3301 1BE4                              u3221 1ADA  
                            u4110 3DF4                              u4030 264C  
                            u3310 1BF8                              u3230 1AEC  
                            u3150 1A06                              u4111 3DF0  
                            u4031 2648                              u3311 1BF4  
                            u3231 1AE8                              u3151 1A02  
                            u4120 3E14                              u4040 2660  
                            u3400 1D56                              u3320 1C2A  
                            u3240 1B5A                              u3160 1A18  
                            u4200 3118                              u3080 396E  
                            u4121 3E10                              u4041 265C  
                            u3401 1D52                              u3321 1C26  
                            u3241 1B56                              u3161 1A14  
                            u4201 3114                              u3081 396A  
                            u4130 3E64                              u4050 267A  
                            u3410 1D72                              u3330 1C38  
                            u3250 1B72                              u3170 1A28  
                            u4210 3126                              u3090 3986  
                            _T2PR 000FBC                              u4131 3E60  
                            u4051 2676                              u3411 1D6E  
                            u3331 1C34                              u3251 1B6C  
                            u3171 1A24                              u4211 3122  
                            u3091 3982                              u4060 26C2  
                            u3500 1E4A                              u3420 1D82  
                            u3340 1C56                              u3260 1B74  
                            u3180 1A6A                              u4220 3160  
                            u4140 2FE0                              u5100 4300  
                            u4061 26BE                              u3501 1E46  
                            u3421 1D7E                              u3341 1C52  
                            u3181 1A66                              u4221 315C  
                            u4141 2FDC                              u5101 42FC  
                            u4070 26F0                              u3510 1E6A  
                            u3430 1D94                              u3350 1C8E  
                            u3270 1B9C                              u3190 1A80  
                            u4230 316E                              u4150 2FEE  
                            u5110 4336                              u4310 3E88  
                            u4071 26EC                              u3511 1E66  
                            u3431 1D90                              u3351 1C8A  
                            u3271 1B98                              u3191 1A7C  
                            u4231 316A                              u4151 2FEA  
                            u5111 4332                              u4311 3E80  
                            u4240 3F6C                              u4080 272A  
                            u3520 1E7C                              u3440 1DAA  
                            u3360 1CD4                              u3280 1BBA  
                            u4160 304A                              u3600 3D3E  
                            u5200 3488                              u5120 49EC  
                            u4241 3F64                              u4081 2726  
                            u3521 1E78                              u3441 1DA6  
                            u3361 1CD0                              u3281 1BB6  
                            u4161 3046                              u3601 3D3A  
                            u5201 3484                              u5121 49E8  
                            u4090 3D98                              u3530 1E98  
                            u3450 1DC0                              u3370 1D0A  
                            u3290 1BDA                              u4170 30A0  
                            u2810 3326                              u3610 4AD2  
                            u5130 3194                              u5210 34BA  
                            u4330 3ED0                              u4091 3D94  
                            u3531 1E94                              u3451 1DBC  
                            u3371 1D06                              u3291 1BD6  
                            u4171 309C                              u2811 3322  
                            u3611 4ACE                              u5131 3190  
                            u5211 34B6                              u4331 3ECC  
                            u4308 4026                              u4260 3FB4  
                            u3700 27C8                              u3460 1DD4  
                            u3380 1D1A                              u4180 30EA  
                            u2820 33F0                              u3620 4C20  
                            u5140 31C6                              u5220 34F8  
                            u5300 2B14                              u4340 3EE2  
                            u4261 3FB0                              u3701 27C4  
                            u3461 1DD0                              u3381 1D16  
                            u4181 30E6                              u2821 33EC  
                            u3621 4C1C                              u5141 31C2  
                            u5221 34F4                              u4341 3EDA  
                            u2830 4B8E                              u4270 3FC6  
                            u3710 27DA                              u3470 1DEE  
                            u3390 1D46                              u4190 3108  
                            u2750 467C                              u3550 3830  
                            u3630 4092                              u5230 3522  
                            u5310 2B26                              u2831 4B8A  
                            u4271 3FBE                              u3711 27D6  
                            u3471 1DEA                              u3391 1D42  
                            u4191 3104                              u2751 4678  
                            u3551 382C                              u3631 408E  
                            u5151 31F0                              u5231 351E  
                            u5311 2B22                              u6007 1F6C  
                            u2840 4BA4                              u3800 2984  
                            u3720 27EA                              u3480 1E28  
                            u2760 469A                              u3560 3848  
                            u3640 40B6                              u5160 3214  
                            u5240 3550                              u5080 42C6  
                            u5320 2B62                              u5400 3652  
                            u4360 3F40                              u4328 3E8A  
                            u2841 4BA0                              u3801 2980  
                            u3721 27E6                              u3481 1E24  
                            u2761 4696                              u3561 3844  
                            u3641 40B2                              u5161 3210  
                            u5241 354C                              u5081 42C2  
                            u5321 2B5E                              u5401 364E  
                            u4361 3F38                              u6017 2248  
                            u4290 4024                              u4258 3F6E  
                            u3810 29A4                              u3730 282A  
                            u3490 1E3A                              u2770 46B6  
                            u3570 3BEA                              u3650 40DA  
                            u5170 323E                              u5250 3598  
                            u5090 42D8                              u5330 2B8E  
                            u5410 3672                              u4291 401C  
                            u3811 29A0                              u3731 2826  
                            u3491 1E36                              u2771 46B2  
                            u3571 3BE6                              u6107 4A84  
                            u3651 40D6                              u5171 323A  
                            u5251 3594                              u5091 42D4  
                            u5331 2B8A                              u5411 366E  
                            u6027 22C6                              u3820 29B6  
                            u3740 286A                              u3900 2338  
                            u3580 3C02                              u5500 129A  
                            u3660 40F2                              u5180 327E  
                            u5260 45F6                              u5340 2BA4  
                            u5420 477C                              u3821 29B2  
                            u3741 2866                              u3901 2334  
                            u3581 3BFE                              u6117 13BE  
                            u5501 1296                              u3661 40EE  
                            u5181 327A                              u5261 45F2  
                            u5341 2BA0                              u5421 4778  
                            u6037 3EA2                              u2950 4A18  
                            u3830 29E4                              u3750 28E0  
                            u3670 2762                              u3910 234A  
                            u3590 3D26                              u5510 12CC  
                            u5430 114A                              u5190 32C8  
                            u5270 464C                              u5350 2CE0  
                            u4358 3EE4                              u2951 4A10  
                            u3831 29E0                              u3751 28DC  
                            u3671 275E                              u3911 2346  
                            u3591 3D22                              u6207 1824  
                            u6127 13E0                              u5511 12C8  
                            u5431 1146                              u5191 32C4  
                            u5271 4648                              u5351 2CDC  
                            u6047 3EFC                              u4288 3FC8  
                            u3840 29FA                              u3760 2902  
                            u3680 2774                              u3920 235A  
                            u5600 15F0                              u5520 130C  
                            u5440 117C                              u5280 4A4A  
                            u5360 2CFE                              u3841 29F6  
                            u3761 28FE                              u3681 2770  
                            u3921 2356                              u6217 18D6  
                            u5601 15EC                              u6137 14DA  
                            u5521 1308                              u5441 1178  
                            u5281 4A46                              u5361 2CFA  
                            u6057 3F20                              u3850 2A0E  
                            u3770 292C                              u3690 2784  
                            u3930 239A                              u2970 439A  
                            u5610 1660                              u5530 1362  
                            u5450 119E                              u5370 2D18  
                            u5290 2B12                              u4378 3F42  
                            u3851 2A0A                              u3771 2928  
                            u3691 2780                              u3931 2396  
                            u2971 4396                              u6307 3C0C  
                            u6227 18F8                              u5611 165C  
                            u6147 14FC                              u5531 135E  
                            u5451 119A                              u5371 2D14  
                            u5291 2B0C                              u6067 2D84  
                            u3860 2A28                              u3780 2950  
                            u3940 23AC                              u2980 43BE  
                            u5700 189E                              u5620 1692  
                            u5540 13B8                              u5460 11D0  
                            u5380 2D28                              u3861 2A24  
                            u3781 294C                              u3941 23A8  
                            u2981 43BA                              u6317 3C4C  
                            u6237 19AA                              u5701 189A  
                            u5621 168E                              u6157 15F6  
                            u5541 13B4                              u5461 11CC  
                            u5381 2D24                              u6077 2E08  
                            u3870 2A70                              u3790 2966  
                            u3950 23BC                              u2990 43FA  
                            u5710 18D0                              u5630 16C4  
                            u5550 144C                              u5470 11F2  
                            u5390 3602                              u3871 2A6C  
                            u3791 2962                              u3951 23B8  
                            u2991 43F6                              u6407 4520  
                            u6327 3C78                              u6247 19CC  
                            u5711 18CC                              u5631 16C0  
                            u6167 1618                              u5551 1448  
                            u5471 11EE                              u5391 35FE  
                            u6087 2EE8                              u2968 4A1A  
                            u3880 2AA0                              u3960 23F2  
                            u5720 1940                              u5640 1734  
                            u5560 147E                              u5480 1224  
                            u5800 1F90                              u3881 2A9C  
                            u3961 23EE                              u6417 39D2  
                            u6337 3D48                              u6257 3756  
                            u5721 193C                              u5641 1730  
                            u6177 16CA                              u5561 147A  
                            u5481 1220                              u6097 2FAA  
                            u5801 1F8A                              u3890 2ACE  
                            u3970 2402                              u5730 1972  
                            u5650 1766                              u5570 14D4  
                            u5490 1268                              u5810 1F92  
                            u3891 2ACA                              u3971 23FE  
                            u6427 39FE                              u6347 444A  
                            u6267 3782                              u5731 196E  
                            u5651 1762                              u6187 16EC  
                            u5571 14D0                              u5491 1264  
                            u3980 257C                              u5740 19A4  
                            u5660 1798                              u5580 1568  
                            u5900 2050                              u5820 1FA4  
                            u6437 3ACE                              u6357 448A  
                            u6277 3852                              u5741 19A0  
                            u6197 1802                              u5661 1794  
                            u5581 1564                              u5901 2046  
                            u5821 1F9E                              u3990 25D6  
                            u5670 17CA                              u5590 15BE  
                            u5750 2D78                              u5830 1FA6  
                            u3991 25D2                              u6447 441C  
                            u6367 3894                              u6287 3B10  
                            u5671 17C6                              u5591 15BA  
                            u5751 2D74                              u5680 17FC  
                            u5760 2F10                              u5920 20FE  
                            u5840 1FBE                              u6457 3F86  
                            u3985 2572                              u6377 38C0  
                            u6297 3B3C                              u5681 17F8  
                            u5761 2F0C                              u5921 20FA  
                            u5841 1FB6                              u5690 186C  
                            u5770 2FCC                              u5930 2110  
                            u5850 1FDC                              u6467 3FE0  
                            u6387 3990                              u5691 1868  
                            u5771 2FC8                              u5931 210C  
                            u5851 1FD8                              u5940 2164  
                            u5860 1FF8                              u5780 1F4E  
                            u6477 4004                              u6397 44E0  
                            u5941 2160                              u5861 1FF2  
                            u5781 1F4A                              u5950 21B8  
                            u5918 2054                              u5870 1FFA  
                            u5790 1F5C                              u5951 21B4  
                            u5791 1F58                              u5960 2266  
                            u5880 2012                              u5848 1FC2  
                            u5961 2262                              u5881 200A  
                            u5970 228E                              u5890 2030  
                            u5971 2284                              u5891 202C  
                            u5990 22EA                              u5991 22E6  
                            u5888 2016                              u5988 2292  
                            abs@a 0017                              _dbuf 01D6  
                            _main 1EAC                              _dtoa 2AE2  
                            _prec 00E6                              pad@i 001C  
                            pad@p 0019                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf2 000FDF  
                            fsr1l 000FE1                              pad@w 001E  
                            fsr2l 000FD9                              btemp 005B  
                            _stop 437E                              prodh 000FF4  
                            prodl 000FF3                              start 0068  
                 ___fldiv@new_exp 0047                  main@turn_history 0200  
          __end_of_color_read_Red 482A                   __end_of_HighISR 0068  
                    ___param_bank 000000                       _turnLeft_90 39B4  
                    main@clearRef 009B                             ??_abs 0019  
                           ??_pad 001B                      main@colorNum 00A1  
                 __end_of___aodiv 330A                   __end_of___fladd 1EAC  
                           ?_main 0001                             ?_dtoa 0020  
                 __end_of___aomod 35DA                   __end_of___fldiv 2AE2  
                 __end_of___flmul 2748                   __end_of___flsub 49AA  
                           ?_stop 0018                   __end_of___lwdiv 46D6  
                           i2l516 0058                             i2l518 005C  
                           i2l482 4B7C                             i2l496 4C54  
                           i2l489 4AFE                      vfpfcnvrt@fmt 0045  
                           _TMR0H 000FD4                             _TMR0L 000FD3  
      __end_of_I2C_2_Master_Start 4C76        __end_of_I2C_2_Master_Write 4C62  
                           _flags 00EC                             _fputc 42B4  
                 __end_of_forward 410C                             _fputs 49AA  
                           pad@fp 0015                             _width 00E4  
                           _putch 4C84                             dtoa@d 0022  
                           dtoa@i 0041                             dtoa@n 0038  
                           dtoa@p 0034                             dtoa@s 0040  
                           dtoa@w 0036                             tablat 000FF5  
                 __end_of_reverse 41E2                             ttemp5 005C  
                           ttemp6 005F                             ttemp7 0063  
                           status 000FD8                             wtemp8 005C  
                 __end_of_sprintf 47DA           __end_of_color_read_Blue 491A  
           _I2C_2_Master_RepStart 4C76                putCharToRxBuf@byte 0001  
                 ?_color_read_Red 0009                   __initialization 491A  
                    __end_of_main 231E                      __end_of_dtoa 2D60  
                 i2_isDataInTxBuf 4C3E                      __end_of_stop 442C  
                    _turnLeft_135 3C2E                putCharToTxBuf@byte 0005  
                   colorDetect@mL 0068                     colorDetect@mR 006A  
                          ??_main 0094                            ??_dtoa 002A  
                          ??_stop 001C                     __activetblptr 000003  
                    _turnRight_90 3876                 _return_home_turns 2D60  
           colorDetect@colour_ref 007E                      ?_setMotorPWM 0012  
              ?_return_home_turns 007F                            ?_fputc 0005  
                          ?_fputs 000E                            _CCPR1H 000FAA  
                          _CCPR2H 000FA6                            _CCPR3H 000F25  
                          _CCPR4H 000F21                            ?_putch 0001  
           colorDetect@greenPrint 008C                            _RC0PPS 000E62  
                          _RC4REG 000EE3                            _RE2PPS 000E74  
                          _RD5PPS 000E6F                            _RC7PPS 000E69  
                          _RD6PPS 000E70                            _RE4PPS 000E76  
                          i2l4501 4AD4                            i2l4503 4AE4  
                          i2l4505 4AE8                            i2l2771 4C3E  
                          _RG6PPS 000E88                            i2l4493 4B56  
                          i2l4495 4B66                            i2l4497 4B6A  
                          i2l4681 0022                            i2l4499 4B7A  
                          i2l4683 0028                            i2l4685 0038  
                          i2l4687 004C                            i2l4679 0012  
        return_home_turns@string1 0100                         ??_HighISR 0003  
        __end_of_color_click_init 4AA4                            _RX4PPS 000E15  
                          _TX4REG 000EE4               ??_return_home_turns 0089  
                __end_of___xxtofl 3182                  __end_of_getColor 4734  
                    _CCPTMRS0bits 000FAD                      vfprintf@cfmt 0055  
                          ___flge 3D6A                  _getCharFromTxBuf 4AD4  
                       ??___aodiv 0015                         ??___fladd 000D  
                       ??___aomod 0015                            ___wmul 4BA6  
                       ??___fldiv 003E                         ??___flmul 0025  
                       ??___flsub 001D                         ??___lwdiv 000F  
                          clear_0 4940                            clear_1 494C  
                          isa$std 000001                            pad@buf 0017  
                   main@motorLeft 00C7                            dtoa@fp 0020  
       __end_of_return_home_turns 2FCE                            fputc@c 0005  
               ?_TxBufferedString 0006                            fputs@c 0012  
                          fputs@i 0013                            fputs@s 000E  
                       ??_forward 001C                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                ??_TxBufferedString 0008  
                       ??_reverse 001C                  __end_of_whiteCal 3F52  
                          putch@c 0001                  __end_of_vfprintf 4788  
                          stop@mL 0018                            stop@mR 001A  
               ??_initDCmotorsPWM 0007                         ??_sprintf 0057  
                __end_of_turn_180 3876                        ___flge@ff1 001D  
                      ___flge@ff2 0021                      ___xxtofl@arg 000F  
                    ___xxtofl@exp 000E                      ___xxtofl@val 0005  
           __end_of_isDataInTxBuf 4C3E                        __accesstop 0060  
         __end_of__initialization 495A          __end_of_color_read_Clear 48CA  
        __end_of_color_read_Green 487A            ?_I2C_2_Master_RepStart 0001  
         __end_ofi2_isDataInTxBuf 4C56                     ___rparam_used 000001  
                ?_color_read_Blue 0009                 main@ambientRGBVal 00AC  
                  __pcstackCOMRAM 0001                     ?_DCmotorsInit 0005  
                    __pidataBANK0 4C80                     __end_of_fputc 437E  
                   __end_of_fputs 49EE                     __end_of_putch 4C86  
              return_home_turns@i 0196                return_home_turns@k 0198  
                         ??_fputc 0009                           ??_fputs 0012  
              _reverseSquareRight 442C                           ??_putch 0005  
                      __pbssBANK0 00D0                        __pbssBANK1 019A  
                      _ambientCal 3F52               ?_reverseSquareRight 0024  
                   _turnRight_135 3AF2                 _color_writetoaddr 4BEC  
                    _T2CLKCONbits 000FBF                    ??_DCmotorsInit 0009  
                         ?___flge 001D                      ?_turnLeft_90 001E  
              ?_color_writetoaddr 0007                           ?___wmul 0005  
             ??_color_writetoaddr 0008              ??_reverseSquareRight 0028  
                       ?___xxtofl 0005                           _SP4BRGH 000EE6  
                         _SP4BRGL 000EE5                         ?_getColor 0010  
                         _SSP2ADD 000ED6                           _SSP2BUF 000ED5  
          color_writetoaddr@value 0007                  ??_color_read_Red 000B  
                         _HighISR 0008                    ?_turnRight_135 001E  
       __end_of_color_writetoaddr 4C0C                  ?i2_isDataInTxBuf 0001  
              _I2C_2_Master_Start 4C6C                        _initUSART4 4BCC  
              _I2C_2_Master_Write 4C56                           __Hparam 0000  
                         __Lparam 0000                 color_read_Red@tmp 000E  
                         ___aodiv 3182                           ___fladd 19EC  
                         ___aomod 3476                           ___fldiv 2748  
                         ___flmul 231E                         ?_whiteCal 0012  
                         ___flsub 4964               ?_I2C_2_Master_Start 0001  
                         ___lwdiv 4662               ?_I2C_2_Master_Write 0001  
                      _off_period 00E8                         ?_vfprintf 0060  
                    __psmallconst 0E00                         ?_turn_180 001E  
                         __pcinit 491A                           __ramtop 0E00  
                         __ptext0 1EAC                           __ptext1 3E6E  
                         __ptext2 2D60                           __ptext3 4788  
                         __ptext4 4734                           __ptext5 35DA  
                         __ptext6 2AE2                           __ptext7 45E8  
                         __ptext8 49AA                           __ptext9 42B4  
               colorDetect@RGBVal 0080                         _T2CONbits 000FBD  
                         _forward 4036                        ??___xxtofl 0009  
                       _T2HLTbits 000FBE                           _reverse 410C  
                      ??_getColor 0012                     _RxBufWriteCnt 005A  
        __end_of_getCharFromTxBuf 4B00                    main@motorRight 00BE  
                         _sprintf 4788              ??_I2C_2_Master_Start 0006  
            ??_I2C_2_Master_Write 0006              end_of_initialization 495A  
               __end_of_sendTxBuf 4C26                    DCmotorsInit@mL 0005  
                  DCmotorsInit@mR 0007                       ?_ambientCal 0012  
                         fputc@fp 0007                           fputs@fp 0010  
               ?_color_click_init 0001                 colorDetect@whiteB 0074  
               colorDetect@whiteG 0070                 colorDetect@whiteR 006C  
              ??_color_click_init 0009                 __end_of_vfpfcnvrt 3738  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                  vfpfcnvrt@convarg 004B  
                      ??_whiteCal 0014                        ??_vfprintf 0055  
                      ??_turn_180 0022                   _initDCmotorsPWM 4558  
                       _PORTFbits 000F8E                setMotorPWM@negDuty 0017  
                     ___fladd@grs 0014                        main@RGBVal 00A3  
                   ___xxtofl@sign 000D                         _TRISAbits 000F81  
              setMotorPWM@posDuty 0016                         _TRISCbits 000F83  
                       _TRISDbits 000F84                         _TRISEbits 000F85  
                       _TRISFbits 000F86                         _TRISGbits 000F87  
                       _TRISHbits 000F88              __end_of_DCmotorsInit 42B4  
                     ___fldiv@grs 0049                       ___fldiv@rem 0042  
             reverseSquareLeft@mL 0024               reverseSquareLeft@mR 0026  
        color_writetoaddr@address 0008           ??_I2C_2_Master_RepStart 0006  
                 ??_turnRight_135 0022                       ___flmul@grs 002A  
                     _CCP1CONbits 000FAB                 ?_color_read_Clear 0009  
                    _EUSART4RXbuf 00D0                      _EUSART4TXbuf 019A  
                     _CCP2CONbits 000FA7                 ?_color_read_Green 0009  
                     _CCP3CONbits 000F26                  main@forwardCount 009F  
                     ?_initUSART4 0001                       _CCP4CONbits 000F22  
return_home_turns@counter_history 0081                        main@whiteC 0097  
              ??_color_read_Clear 000B                ??_color_read_Green 000B  
                   ??_colorDetect 004F                    __end_of___flge 3E6E  
                     vfpfcnvrt@ap 0047                       vfpfcnvrt@cp 0053  
                     vfpfcnvrt@fp 0043                    __end_of___wmul 4BCC  
          colorDetect@whiteRGBVal 0066               color_read_Clear@tmp 000E  
             start_initialization 491A              colorDetect@bluePrint 0090  
                     __end_of_abs 4A70                       __end_of_pad 4662  
                   _TxBufWriteCnt 0058               color_read_Green@tmp 000E  
             return_home_turns@mL 0085               return_home_turns@mR 0087  
         __end_of_initDCmotorsPWM 45E8                       vfprintf@fmt 0062  
                        ??___flge 0025               main@counter_history 0300  
                        ??___wmul 0009                    _putCharToRxBuf 4B54  
                  _putCharToTxBuf 4B00                       __pdataBANK0 00ED  
             __end_of_colorDetect 19EC                         ___fladd@a 0009  
                       ___fladd@b 0005                         ___fldiv@a 003A  
                       ___fldiv@b 0036                         ___flmul@a 0021  
                       ___flmul@b 001D                       __pbssCOMRAM 0057  
                       ___flsub@a 0019                         ___flsub@b 0015  
                   __pcstackBANK0 0060                     __pcstackBANK1 0100  
                   __pcstackBANK2 0200                     __pcstackBANK3 0300  
                ___aodiv@dividend 0005                          ?_HighISR 0001  
               _reverseSquareLeft 44C2                ?_reverseSquareLeft 0024  
                ___lwdiv@dividend 000B                         _dtoa$2664 0032  
          __end_of_putCharToRxBuf 4B7E            __end_of_putCharToTxBuf 4B2A  
                       __pintcode 0008                          ?___aodiv 0005  
                        ?___fladd 0005                          ?___aomod 0005  
                        ?___fldiv 0036                  ___aodiv@quotient 0017  
                        ?___flmul 001D                          ?___flsub 0015  
                   ?_turnLeft_135 001E                          ?___lwdiv 000B  
             ??_reverseSquareLeft 0028                   turnRight_135@mL 001E  
                 turnRight_135@mR 0020            TxBufferedString@string 0006  
                  turnLeft_135@mL 001E                    turnLeft_135@mR 0020  
            I2C_2_Master_Read@ack 0007              I2C_2_Master_Read@tmp 0008  
                     __smallconst 0E00                          ?_forward 0018  
               _I2C_2_Master_Idle 4B7E                     ?_turnRight_90 001E  
               _I2C_2_Master_Init 4B2A                 _I2C_2_Master_Read 49EE  
               _I2C_2_Master_Stop 4C62                      _RxBufReadCnt 0059  
                        ?_reverse 0018                ?_I2C_2_Master_Idle 0001  
              ?_I2C_2_Master_Init 0001                ?_I2C_2_Master_Read 0001  
                   ??_setMotorPWM 0014                ?_I2C_2_Master_Stop 0001  
                ___lwdiv@quotient 000F          initDCmotorsPWM@PWMperiod 0005  
                        ?_sprintf 0066                 ?_getCharFromTxBuf 0001  
       __end_of_reverseSquareLeft 4558                ??_getCharFromTxBuf 0001  
                    ??_ambientCal 0014               ??_I2C_2_Master_Idle 0005  
             ??_I2C_2_Master_Init 0005               ??_I2C_2_Master_Read 0006  
                  ___wmul@product 0009                          _LATAbits 000F79  
             ??_I2C_2_Master_Stop 0006                          _LATCbits 000F7B  
                   _isDataInTxBuf 4C26                          _LATDbits 000F7C  
                        _LATEbits 000F7D                          _LATFbits 000F7E  
                       _on_period 00EA                  _TxBufferedString 4AA4  
                        _LATGbits 000F7F                          _LATHbits 000F80  
                       _sendTxBuf 4C0C                          _IPR4bits 000E23  
                        _PIE4bits 000E2D                          i2u220_40 4C52  
                        i2u220_41 4C4C                          i2u221_40 4C54  
                       getColor@v 0010                          i2u500_40 004C  
                        i2u500_41 0048                          _PIR4bits 000E37  
                        i2u473_40 4B66                          i2u473_41 4B62  
                        i2u474_40 4AE4                          i2u474_41 4AE0  
                        i2u498_40 0022                          i2u498_41 001E  
                        i2u499_40 0038                          i2u499_41 0034  
                 ?_putCharToRxBuf 0001                  ?_initDCmotorsPWM 0005  
                     _colorDetect 0E18                   ?_putCharToTxBuf 0001  
                  ??_turnLeft_135 0022                      _DCmotorsInit 41E2  
                        _SSP2CON2 000EDA                          _SSP2STAT 000ED8  
                       _vfpfcnvrt 35DA         __end_of_I2C_2_Master_Idle 4BA6  
       __end_of_I2C_2_Master_Init 4B54         __end_of_I2C_2_Master_Read 4A30  
               ___wmul@multiplier 0005         __end_of_I2C_2_Master_Stop 4C6C  
                  ??_turnRight_90 0022                      setMotorPWM@m 0012  
                       main@carGo 00AB       I2C_2_Master_Write@data_byte 0006  
              __end_of_ambientCal 4036                         main@index 00BC  
               ??_color_read_Blue 000B                      _TxBufReadCnt 0057  
                       copy_data0 492E               colorDetect@ambientB 007C  
             colorDetect@ambientG 007A               colorDetect@ambientR 0078  
             colorDetect@clearRef 0060                    ?_isDataInTxBuf 0001  
   __end_of_I2C_2_Master_RepStart 4C80                color_read_Blue@tmp 000E  
             __end_of_setMotorPWM 3476                        ?_sendTxBuf 0001  
          return_home_turns@index 0083                      ??_initUSART4 0005  
                        __Hrparam 0000               colorDetect@redPrint 0088  
                      vfprintf@ap 0064                          __Lrparam 0000  
                      vfprintf@fp 0060                         forward@mL 0018  
                       forward@mR 001A     return_home_turns@turn_history 007F  
                      ?_vfpfcnvrt 0043          colorDetect@ambientRGBVal 0064  
                 ___aodiv@divisor 000D                   ___aodiv@counter 0015  
                      _ANSELDbits 000EA7                        _ANSELFbits 000EB4  
                      sprintf@fmt 0068                        turn_180@mL 001E  
                      turn_180@mR 0020                          ___xxtofl 2FCE  
                      _T0CON0bits 000FD5                        _T0CON1bits 000FD6  
                 ___lwdiv@divisor 000D                __end_of_initUSART4 4BEC  
                        _getColor 46D6                   ___lwdiv@counter 0011  
                        __ptext10 4C84                          __ptext11 4A30  
                        __ptext20 4558                          __ptext12 3476  
                        __ptext21 4A70                          __ptext13 3182  
                        __ptext30 44C2                          __ptext22 4BEC  
                        __ptext14 4C0C                          __ptext31 39B4  
                        __ptext23 4B2A                          __ptext15 4C26  
                        __ptext40 231E                          __ptext32 437E  
                        __ptext24 0E18                          __ptext16 4036  
                        __ptext41 3D6A                          __ptext33 410C  
                        __ptext25 3738                          __ptext17 4AA4  
                        __ptext50 4C62                          __ptext42 2748  
                        __ptext34 330A                          __ptext26 3AF2  
                        __ptext18 4B00                          __ptext51 4C6C  
                        __ptext43 3F52                          __ptext35 4BA6  
                        __ptext27 3C2E                          __ptext19 4BCC  
                        __ptext52 4C76                          __ptext44 46D6  
                        __ptext36 4662                          __ptext28 442C  
                        __ptext53 49EE                          __ptext45 47DA  
                        __ptext37 2FCE                          __ptext29 3876  
                        __ptext54 4B7E                          __ptext46 482A  
                        __ptext38 4964                          __ptext55 41E2  
                        __ptext47 487A                          __ptext39 19EC  
                        __ptext48 48CA                          __ptext57 4C3E  
                        __ptext49 4C56                          __ptext58 4B54  
                        __ptext59 4AD4                       ambientCal@i 0016  
                     ambientCal@v 0012                    turnRight_90@mL 001E  
                  turnRight_90@mR 0020                      _SSP2CON1bits 000ED9  
                    _SSP2CON2bits 000EDA                     turnLeft_90@mL 001E  
                   turnLeft_90@mR 0020             __end_of_turnRight_135 3C2E  
                       reverse@mL 0018                         reverse@mR 001A  
                   ??_turnLeft_90 0022                    _turning_time90 00EF  
                        isa$xinst 000000                        _RC4STAbits 000EE7  
                        int$flags 005B                          _whiteCal 3E6E  
                        _vfprintf 4734                          _turn_180 3738  
                ___aomod@dividend 0005                         whiteCal@i 0016  
                       whiteCal@v 0012                        _INTCONbits 000FF2  
               ??i2_isDataInTxBuf 0001                      _reverse_time 00ED  
                     _setMotorPWM 330A              __end_of_turnLeft_135 3D6A  
                 ??_isDataInTxBuf 0005                          intlevel2 0000  
                       sprintf@ap 0072                       ??_sendTxBuf 0005  
                 main@whiteRGBVal 00B4              __end_of_turnRight_90 39B4  
                 ___aomod@divisor 000D                       ??_vfpfcnvrt 0049  
                 ___aomod@counter 0015                  _color_click_init 4A70  
             __end_of_turnLeft_90 3AF2          __end_of_TxBufferedString 4AD4  
                        sprintf@f 0074                          sprintf@s 0066  
                      _SSP2DATPPS 000E1D                        _SSP2CLKPPS 000E1C  
                   ___fladd@signs 0011                        _TX4STAbits 000EE8  
                    ___aodiv@sign 0016                      ___fladd@aexp 0012  
                    ___fladd@bexp 0013                  ??_putCharToRxBuf 0001  
                ??_putCharToTxBuf 0005                      ___aomod@sign 0016  
                    ?_colorDetect 0060  
